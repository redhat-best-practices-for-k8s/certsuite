{
  "data": [
    {
      "_id": "631a379f2b57faf5f66fa3fb",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:eba0402d712148e5a428834e3048b0a33a8675387a264155a1f47970c7c76a79",
      "bundle_path_digest": "sha256:eba0402d712148e5a428834e3048b0a33a8675387a264155a1f47970c7c76a79",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.17",
      "creation_date": "2022-09-08T18:42:39.659000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:49:46.507000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "name": "cloud-native-postgresql-625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd-annotation"
        },
        {
          "digest": "sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "631a37a077e4229ab49881e3",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:eba0402d712148e5a428834e3048b0a33a8675387a264155a1f47970c7c76a79",
      "bundle_path_digest": "sha256:eba0402d712148e5a428834e3048b0a33a8675387a264155a1f47970c7c76a79",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-09-08T18:42:40.570000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:33:05.765000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "name": "cloud-native-postgresql-625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd-annotation"
        },
        {
          "digest": "sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "631a395bcc56faa0a49970be",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:eba0402d712148e5a428834e3048b0a33a8675387a264155a1f47970c7c76a79",
      "bundle_path_digest": "sha256:eba0402d712148e5a428834e3048b0a33a8675387a264155a1f47970c7c76a79",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable-v1.17",
      "creation_date": "2022-09-08T18:50:03.866000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:30:54.282000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "name": "cloud-native-postgresql-625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd-annotation"
        },
        {
          "digest": "sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "631a395dabc40596b8979582",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            },
            "walStorage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:eba0402d712148e5a428834e3048b0a33a8675387a264155a1f47970c7c76a79",
      "bundle_path_digest": "sha256:eba0402d712148e5a428834e3048b0a33a8675387a264155a1f47970c7c76a79",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "fast",
      "creation_date": "2022-09-08T18:50:05.702000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:38:43.267000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "name": "cloud-native-postgresql-625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd-annotation"
        },
        {
          "digest": "sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:625d127b7692639a05a6961817692c6eb1008a5b90b57023845eafd7c9cbc2bd",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.15.3 < 1.17.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "631a5773cf58b14c11978c9c",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-08T20:58:27.927000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:57:39.298000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5787cf58b14c11978ca2",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-08T20:58:47.387000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:57:44.778000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a583ff34fd628ee685bae",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-08T21:01:51.299000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:05:35.351000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5846f1c98d3072d10ba6",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-08T21:01:58.391000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:04:35.245000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5852636a6a6ed32b1dbf",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-08T21:02:10.953000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:03:02.433000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5853f1c98d3072d10baf",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-08T21:02:11.399000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:03:08.558000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5a134bef971b1a7b03c4",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-08T21:09:39.153000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:51:13.822000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5a1390cf589f5a9962da",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-08T21:09:39.851000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:55:44.193000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5acfcf58b14c11978d2a",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-08T21:12:47.623000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:35:36.901000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5ad51028e6893b3a75b6",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-08T21:12:53.120000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:07:27.803000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5c6ff1c98d3072d10ca3",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-08T21:19:43.081000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:36:38.644000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631a5c70636a6a6ed32b1ef1",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "bundle_path_digest": "sha256:d5ac56a6085190ca9ce357395a84e588b0551e6d0a8af46264c91126b1f1e230",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-08T21:19:44.914000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:37:34.359000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "openstorage-operator-9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089-annotation"
        },
        {
          "digest": "sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:9971d9ddce03e9c174dbd2acd6904c89b0bdba4a9c61ea5223569bcd2972b089",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.9.1",
      "version_original": "1.9.1"
    },
    {
      "_id": "631b01e1848914dd3f3a832d",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "bundle_path_digest": "sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-09T09:05:37.161000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Prerequisites\n\n  Install cert-manager:\n\n  ```shell\n  kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml\n  ```\n\n## GitLab Runner version\n\nThis version of **GitLab Runner Operator** ships with **GitLab Runner v15.2.1**.\n\nTo use a different version of **GitLab Runner** change the [`runnerImage` and `helperImage` properties](https://docs.gitlab.com/runner/configuration/configuring_runner_operator.html#operator-properties).\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. Create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner Operator](https://docs.gitlab.com/runner/install/operator.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:46:05.545000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "plural": "runners",
          "version": "v1beta2"
        }
      ],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-ocp@sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-helper-ocp@sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gl-openshift/gitlab-runner-operator/gitlab-runner-operator-8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409-annotation"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "631b01f884467d3a677b0a9c",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "bundle_path_digest": "sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-09T09:06:00.929000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Prerequisites\n\n  Install cert-manager:\n\n  ```shell\n  kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml\n  ```\n\n## GitLab Runner version\n\nThis version of **GitLab Runner Operator** ships with **GitLab Runner v15.2.1**.\n\nTo use a different version of **GitLab Runner** change the [`runnerImage` and `helperImage` properties](https://docs.gitlab.com/runner/configuration/configuring_runner_operator.html#operator-properties).\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. Create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner Operator](https://docs.gitlab.com/runner/install/operator.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:50:09.823000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "plural": "runners",
          "version": "v1beta2"
        }
      ],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-ocp@sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-helper-ocp@sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gl-openshift/gitlab-runner-operator/gitlab-runner-operator-8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409-annotation"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "631b028bbed05a6252d11a88",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "bundle_path_digest": "sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-09T09:08:27.833000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Prerequisites\n\n  Install cert-manager:\n\n  ```shell\n  kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml\n  ```\n\n## GitLab Runner version\n\nThis version of **GitLab Runner Operator** ships with **GitLab Runner v15.2.1**.\n\nTo use a different version of **GitLab Runner** change the [`runnerImage` and `helperImage` properties](https://docs.gitlab.com/runner/configuration/configuring_runner_operator.html#operator-properties).\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. Create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner Operator](https://docs.gitlab.com/runner/install/operator.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:18:41.231000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "plural": "runners",
          "version": "v1beta2"
        }
      ],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-ocp@sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-helper-ocp@sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gl-openshift/gitlab-runner-operator/gitlab-runner-operator-8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409-annotation"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "631b061b9435773fe1d10c1e",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "bundle_path_digest": "sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-09T09:23:39.694000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Prerequisites\n\n  Install cert-manager:\n\n  ```shell\n  kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml\n  ```\n\n## GitLab Runner version\n\nThis version of **GitLab Runner Operator** ships with **GitLab Runner v15.2.1**.\n\nTo use a different version of **GitLab Runner** change the [`runnerImage` and `helperImage` properties](https://docs.gitlab.com/runner/configuration/configuring_runner_operator.html#operator-properties).\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. Create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner Operator](https://docs.gitlab.com/runner/install/operator.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:29:04.421000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "plural": "runners",
          "version": "v1beta2"
        }
      ],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-ocp@sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-helper-ocp@sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gl-openshift/gitlab-runner-operator/gitlab-runner-operator-8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409-annotation"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "631b06398d0acdaa298044f0",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "bundle_path_digest": "sha256:249e7249c989e5b9adf2ca27a96e52255bcedb03bfb41c2433e74c724ad433c3",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-09T09:24:09.069000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Prerequisites\n\n  Install cert-manager:\n\n  ```shell\n  kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.7.1/cert-manager.yaml\n  ```\n\n## GitLab Runner version\n\nThis version of **GitLab Runner Operator** ships with **GitLab Runner v15.2.1**.\n\nTo use a different version of **GitLab Runner** change the [`runnerImage` and `helperImage` properties](https://docs.gitlab.com/runner/configuration/configuring_runner_operator.html#operator-properties).\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. Create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner Operator](https://docs.gitlab.com/runner/install/operator.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:06:02.127000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "Runner",
          "plural": "runners",
          "version": "v1beta2"
        }
      ],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-ocp@sha256:93c7be4cf43263334824dcd1030ed61bf8c06a095e245b8aeaa5444453fdd613",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "image": "registry.gitlab.com/gitlab-org/ci-cd/gitlab-runner-ubi-images/gitlab-runner-helper-ocp@sha256:cb796e3c768c8504c1b93c10b29dcf03b698c716e3f5764996dd46597dadcfc8",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "gl-openshift/gitlab-runner-operator/gitlab-runner-operator-8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409-annotation"
        },
        {
          "digest": "sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "image": "registry.gitlab.com/gitlab-org/gl-openshift/gitlab-runner-operator/gitlab-runner-operator@sha256:8737cdd14ec55d2321c9eb2bb7a1e70088af95d1d6eb17bc6c09d58225880409",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63208c8695f6149e57162d1e",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {}
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "bundle_path_digest": "sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-13T13:58:30.660000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus IQ Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deploymentStrategy.type`                   | Deployment Strategy                 |  `Recreate` |\n| `initContainers`                            | Containers to run before starting the server | `nil` |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```\n\n## Running Commands Before Initialization of the Server\n\nIf you need custom initialization, you can use standard Kubernetes\n[`initContainers`](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)\nto run any series of containers and commands you need.\n\n```yaml\ninitContainers:\n  - name: an-init-container\n    image: busybox:1.28\n    command: ['/bin/sh', '-c', 'echo \"initializing\"']\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.143.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:55:29.641000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified-7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9-annotation"
        },
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "iq"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "nexus-iq-server-b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.143.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.143.0-1",
      "version_original": "1.143.0-1"
    },
    {
      "_id": "63208d8db2235c50e9ff1720",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {}
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "bundle_path_digest": "sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-13T14:02:53.412000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus IQ Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deploymentStrategy.type`                   | Deployment Strategy                 |  `Recreate` |\n| `initContainers`                            | Containers to run before starting the server | `nil` |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```\n\n## Running Commands Before Initialization of the Server\n\nIf you need custom initialization, you can use standard Kubernetes\n[`initContainers`](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)\nto run any series of containers and commands you need.\n\n```yaml\ninitContainers:\n  - name: an-init-container\n    image: busybox:1.28\n    command: ['/bin/sh', '-c', 'echo \"initializing\"']\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.143.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:22:22.051000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified-7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9-annotation"
        },
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "iq"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "nexus-iq-server-b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.143.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.143.0-1",
      "version_original": "1.143.0-1"
    },
    {
      "_id": "63208fa002d5613a211724bc",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {}
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "bundle_path_digest": "sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-13T14:11:44.679000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus IQ Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deploymentStrategy.type`                   | Deployment Strategy                 |  `Recreate` |\n| `initContainers`                            | Containers to run before starting the server | `nil` |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```\n\n## Running Commands Before Initialization of the Server\n\nIf you need custom initialization, you can use standard Kubernetes\n[`initContainers`](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)\nto run any series of containers and commands you need.\n\n```yaml\ninitContainers:\n  - name: an-init-container\n    image: busybox:1.28\n    command: ['/bin/sh', '-c', 'echo \"initializing\"']\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.143.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:22:42.459000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified-7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9-annotation"
        },
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "iq"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "nexus-iq-server-b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.143.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.143.0-1",
      "version_original": "1.143.0-1"
    },
    {
      "_id": "63208fa384a9de327001fbc4",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {}
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "bundle_path_digest": "sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-13T14:11:47.561000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus IQ Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deploymentStrategy.type`                   | Deployment Strategy                 |  `Recreate` |\n| `initContainers`                            | Containers to run before starting the server | `nil` |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```\n\n## Running Commands Before Initialization of the Server\n\nIf you need custom initialization, you can use standard Kubernetes\n[`initContainers`](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)\nto run any series of containers and commands you need.\n\n```yaml\ninitContainers:\n  - name: an-init-container\n    image: busybox:1.28\n    command: ['/bin/sh', '-c', 'echo \"initializing\"']\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.143.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:54:41.546000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified-7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9-annotation"
        },
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "iq"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "nexus-iq-server-b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.143.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.143.0-1",
      "version_original": "1.143.0-1"
    },
    {
      "_id": "6320902ab180bb9cb665dd8a",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {}
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "bundle_path_digest": "sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-13T14:14:02.633000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus IQ Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deploymentStrategy.type`                   | Deployment Strategy                 |  `Recreate` |\n| `initContainers`                            | Containers to run before starting the server | `nil` |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```\n\n## Running Commands Before Initialization of the Server\n\nIf you need custom initialization, you can use standard Kubernetes\n[`initContainers`](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)\nto run any series of containers and commands you need.\n\n```yaml\ninitContainers:\n  - name: an-init-container\n    image: busybox:1.28\n    command: ['/bin/sh', '-c', 'echo \"initializing\"']\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.143.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:00:36.596000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified-7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9-annotation"
        },
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "iq"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "nexus-iq-server-b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.143.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.143.0-1",
      "version_original": "1.143.0-1"
    },
    {
      "_id": "63209248b180bb9cb665ddf0",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {}
            },
            "deploymentStrategy": {
              "type": "Recreate"
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "bundle_path_digest": "sha256:039f7010d712626b18defcee774c72de68b885366878273982d2b6f1ae07c894",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-13T14:23:04.636000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Controlling Automatic vs Manual Update\n\nIf you use the default configuration for the Nexus IQ Operator installation,\nplease notice that on any new operator release, the corresponding deployments are\nalso updated without user intervention, resulting in unscheduled downtime.\n\nIf you want to avoid this unscheduled downtime, we recommend installing the operator\ninto **its own namespace** with **manual approval** for updates.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deploymentStrategy.type`                   | Deployment Strategy                 |  `Recreate` |\n| `initContainers`                            | Containers to run before starting the server | `nil` |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```\n\n## Running Commands Before Initialization of the Server\n\nIf you need custom initialization, you can use standard Kubernetes\n[`initContainers`](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)\nto run any series of containers and commands you need.\n\n```yaml\ninitContainers:\n  - name: an-init-container\n    image: busybox:1.28\n    command: ['/bin/sh', '-c', 'echo \"initializing\"']\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.143.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:43:17.302000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified-7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9-annotation"
        },
        {
          "digest": "sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:7a38ff3bc23296c2d2dd4146462951a99410b21b28b94c3cfa5bfd872d0e4ec9",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "iq"
        },
        {
          "digest": "sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db",
          "name": "nexus-iq-server-b40c9d810e8bd614822a1aa287a155100592c7081f683369056207c5ea4dc1db-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.143.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.143.0-1",
      "version_original": "1.143.0-1"
    },
    {
      "_id": "6320f23102d5613a211732b1",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "bundle_path_digest": "sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-09-13T21:12:17.592000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:58:24.191000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator-4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961-annotation"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "operator"
        },
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "5.2.0",
      "version_original": "5.2.0"
    },
    {
      "_id": "6320f31702d5613a211732c6",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "bundle_path_digest": "sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-09-13T21:16:07.339000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:23:41.963000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "version": "v1beta1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator-4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961-annotation"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "operator"
        },
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "5.2.0",
      "version_original": "5.2.0"
    },
    {
      "_id": "6320f344b2235c50e9ff25df",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "bundle_path_digest": "sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-09-13T21:16:52.528000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:03:52.023000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator-4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961-annotation"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "operator"
        },
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "5.2.0",
      "version_original": "5.2.0"
    },
    {
      "_id": "6320f5815bd22605fe3041ca",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "bundle_path_digest": "sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-09-13T21:26:25.319000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:02:17.773000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator-4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961-annotation"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "operator"
        },
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.2.0",
      "version_original": "5.2.0"
    },
    {
      "_id": "6320f59e95f6149e57163c42",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "bundle_path_digest": "sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-09-13T21:26:54.695000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:55:21.106000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator-4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961-annotation"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "operator"
        },
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.2.0",
      "version_original": "5.2.0"
    },
    {
      "_id": "6320f7da263c8891608384d0",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "bundle_path_digest": "sha256:4e2ad2ecd6f85cb2d511dd458a1dc8d0289caacb6415b006876a1d6ec52dfdd9",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-09-13T21:36:26.784000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:40:10.964000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "postgres-operator-4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961-annotation"
        },
        {
          "digest": "sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:4ad944f4f01a85249aa7678521e61fe48ed150ac43f3c38f33b42f7a32eb9961",
          "name": "operator"
        },
        {
          "digest": "sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:46adfa9fec12d170da65e328b7f38c10263726dc9a389d6ebeb3043c82eea928",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:7a836441adabc447d3b545061882b0e28fd6712d2398b3943130b3a5f0f2f887",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:369488aee583bff7f7597b0493123f1c017d5caeb78960ef69c80fded2d753a2",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:5cb8851d1de23010f774e8ff757c8bab4b6fa1f63c2fb93b7ae3a01239f07134",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a1ad0e56b80f9c1bc8c34cc4dddb3876d21ab44121b6e054f0e06a19cf99d3c3",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:a599c6fe7b82412847b8f18752959303fa1a25854a98d0d4d2257b5dd7025961",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:333f49f6a2f6659752054d9848231cf15af82973f44c1e6d02c0fbcbf281f6f9",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a5e2bed850e50608b870782c4198f472e8771d106bd5915050457693422fdd3f",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:a6d3ab3e15f79e06d6d067a5ac53e5f3e146d0fad21106d83f2144f1dcc0aaa8",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:2dc35b7c4a919830ed52ea0bd5802a3734d3181f011d56b255c5411e6e83bcc4",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.2.0",
      "version_original": "5.2.0"
    },
    {
      "_id": "632121d6eeedbe5c5aeb3f78",
      "alm_examples": [
        {
          "api_version": "rtf.operators.mulesoft.com/v1",
          "kind": "RuntimeFabric",
          "metadata": {
            "name": "runtime-fabric"
          },
          "spec": {
            "agent": {
              "app": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "200Mi"
                  }
                }
              },
              "rtfd": {
                "resources": {
                  "limits": {
                    "cpu": "50m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                }
              }
            },
            "global": {
              "authorizedNamespaces": false,
              "cluster": {
                "flavor": "byok",
                "type": "openshift"
              },
              "containerLogPaths": [
                "/var/lib/docker/containers",
                "/var/log/containers",
                "/var/log/pods"
              ],
              "core": {
                "affinity": {},
                "tolerations": []
              },
              "deployment": {
                "nodeSelector": ""
              },
              "image": {
                "provider": "aws",
                "pullSecretName": "rtf-pull-secret",
                "rtfRegistry": "rtf-runtime-registry.kprod.msap.io"
              },
              "logForwarding": {
                "anypointMonitoring": false
              },
              "mule": {
                "disablePerAppSA": false
              },
              "service": {}
            },
            "proxy": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/oscargcervantes/runtime-fabric-operator@sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "bundle_path_digest": "sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-14T00:35:34.643000+00:00",
      "csv_description": "Anypoint Runtime Fabric is a container service that you install in your existing Red Hat OpenShift cluster that enables you to run Mule applications, composite APIs, and API gateways across any environment with centralized management via Anypoint Platform.\n\nCapabilities of Runtime Fabric include:\n\n* Isolation between applications by running a separate Mule runtime server per application.\n* Ability to run multiple versions of Mule runtime server on the same set of resources.\n* Scaling applications across multiple replicas.\n* Automated application fail-over.\n* Application management with Anypoint Runtime Manager.\n\nRuntime Fabric supports the following Red Hat OpenShift deployment options:\n\n* Red Hat OpenShift Service on AWS\n* Microsoft Azure Red Hat OpenShift\n* Red Hat OpenShift Dedicated\n* Red Hat OpenShift on IBM Cloud\n* Self-managed Red Hat OpenShift editions (Performance Plus, OCP, Kubernetes engine)\n\nRuntime Fabric supports Red Hat OpenShift versions 4.6 to 4.10.",
      "csv_display_name": "Runtime Fabric Operator",
      "csv_metadata_description": "Runtime Fabric Operator Application from Mulesoft",
      "csv_name": "runtime-fabric-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:00:22.090000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "runtime-fabric-operator",
      "provided_apis": [
        {
          "group": "rtf.operators.mulesoft.com",
          "kind": "RuntimeFabric",
          "plural": "runtimefabrics",
          "version": "v1"
        }
      ],
      "provider": "MuleSoft",
      "related_images": [
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator-7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f-annotation"
        },
        {
          "digest": "sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "image": "quay.io/mulesoft/kube-rbac-proxy@sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "632121f6b180bb9cb665ef2c",
      "alm_examples": [
        {
          "api_version": "rtf.operators.mulesoft.com/v1",
          "kind": "RuntimeFabric",
          "metadata": {
            "name": "runtime-fabric"
          },
          "spec": {
            "agent": {
              "app": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "200Mi"
                  }
                }
              },
              "rtfd": {
                "resources": {
                  "limits": {
                    "cpu": "50m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                }
              }
            },
            "global": {
              "authorizedNamespaces": false,
              "cluster": {
                "flavor": "byok",
                "type": "openshift"
              },
              "containerLogPaths": [
                "/var/lib/docker/containers",
                "/var/log/containers",
                "/var/log/pods"
              ],
              "core": {
                "affinity": {},
                "tolerations": []
              },
              "deployment": {
                "nodeSelector": ""
              },
              "image": {
                "provider": "aws",
                "pullSecretName": "rtf-pull-secret",
                "rtfRegistry": "rtf-runtime-registry.kprod.msap.io"
              },
              "logForwarding": {
                "anypointMonitoring": false
              },
              "mule": {
                "disablePerAppSA": false
              },
              "service": {}
            },
            "proxy": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/oscargcervantes/runtime-fabric-operator@sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "bundle_path_digest": "sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-14T00:36:06.266000+00:00",
      "csv_description": "Anypoint Runtime Fabric is a container service that you install in your existing Red Hat OpenShift cluster that enables you to run Mule applications, composite APIs, and API gateways across any environment with centralized management via Anypoint Platform.\n\nCapabilities of Runtime Fabric include:\n\n* Isolation between applications by running a separate Mule runtime server per application.\n* Ability to run multiple versions of Mule runtime server on the same set of resources.\n* Scaling applications across multiple replicas.\n* Automated application fail-over.\n* Application management with Anypoint Runtime Manager.\n\nRuntime Fabric supports the following Red Hat OpenShift deployment options:\n\n* Red Hat OpenShift Service on AWS\n* Microsoft Azure Red Hat OpenShift\n* Red Hat OpenShift Dedicated\n* Red Hat OpenShift on IBM Cloud\n* Self-managed Red Hat OpenShift editions (Performance Plus, OCP, Kubernetes engine)\n\nRuntime Fabric supports Red Hat OpenShift versions 4.6 to 4.10.",
      "csv_display_name": "Runtime Fabric Operator",
      "csv_metadata_description": "Runtime Fabric Operator Application from Mulesoft",
      "csv_name": "runtime-fabric-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:07:08.423000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "runtime-fabric-operator",
      "provided_apis": [
        {
          "group": "rtf.operators.mulesoft.com",
          "kind": "RuntimeFabric",
          "plural": "runtimefabrics",
          "version": "v1"
        }
      ],
      "provider": "MuleSoft",
      "related_images": [
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator-7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f-annotation"
        },
        {
          "digest": "sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "image": "quay.io/mulesoft/kube-rbac-proxy@sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "632121ff02d5613a21173682",
      "alm_examples": [
        {
          "api_version": "rtf.operators.mulesoft.com/v1",
          "kind": "RuntimeFabric",
          "metadata": {
            "name": "runtime-fabric"
          },
          "spec": {
            "agent": {
              "app": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "200Mi"
                  }
                }
              },
              "rtfd": {
                "resources": {
                  "limits": {
                    "cpu": "50m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                }
              }
            },
            "global": {
              "authorizedNamespaces": false,
              "cluster": {
                "flavor": "byok",
                "type": "openshift"
              },
              "containerLogPaths": [
                "/var/lib/docker/containers",
                "/var/log/containers",
                "/var/log/pods"
              ],
              "core": {
                "affinity": {},
                "tolerations": []
              },
              "deployment": {
                "nodeSelector": ""
              },
              "image": {
                "provider": "aws",
                "pullSecretName": "rtf-pull-secret",
                "rtfRegistry": "rtf-runtime-registry.kprod.msap.io"
              },
              "logForwarding": {
                "anypointMonitoring": false
              },
              "mule": {
                "disablePerAppSA": false
              },
              "service": {}
            },
            "proxy": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/oscargcervantes/runtime-fabric-operator@sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "bundle_path_digest": "sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-14T00:36:15.864000+00:00",
      "csv_description": "Anypoint Runtime Fabric is a container service that you install in your existing Red Hat OpenShift cluster that enables you to run Mule applications, composite APIs, and API gateways across any environment with centralized management via Anypoint Platform.\n\nCapabilities of Runtime Fabric include:\n\n* Isolation between applications by running a separate Mule runtime server per application.\n* Ability to run multiple versions of Mule runtime server on the same set of resources.\n* Scaling applications across multiple replicas.\n* Automated application fail-over.\n* Application management with Anypoint Runtime Manager.\n\nRuntime Fabric supports the following Red Hat OpenShift deployment options:\n\n* Red Hat OpenShift Service on AWS\n* Microsoft Azure Red Hat OpenShift\n* Red Hat OpenShift Dedicated\n* Red Hat OpenShift on IBM Cloud\n* Self-managed Red Hat OpenShift editions (Performance Plus, OCP, Kubernetes engine)\n\nRuntime Fabric supports Red Hat OpenShift versions 4.6 to 4.10.",
      "csv_display_name": "Runtime Fabric Operator",
      "csv_metadata_description": "Runtime Fabric Operator Application from Mulesoft",
      "csv_name": "runtime-fabric-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:14:49.737000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "runtime-fabric-operator",
      "provided_apis": [
        {
          "group": "rtf.operators.mulesoft.com",
          "kind": "RuntimeFabric",
          "version": "v1"
        }
      ],
      "provider": "MuleSoft",
      "related_images": [
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator-7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f-annotation"
        },
        {
          "digest": "sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "image": "quay.io/mulesoft/kube-rbac-proxy@sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "6321226ceeedbe5c5aeb3f88",
      "alm_examples": [
        {
          "api_version": "rtf.operators.mulesoft.com/v1",
          "kind": "RuntimeFabric",
          "metadata": {
            "name": "runtime-fabric"
          },
          "spec": {
            "agent": {
              "app": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "200Mi"
                  }
                }
              },
              "rtfd": {
                "resources": {
                  "limits": {
                    "cpu": "50m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                }
              }
            },
            "global": {
              "authorizedNamespaces": false,
              "cluster": {
                "flavor": "byok",
                "type": "openshift"
              },
              "containerLogPaths": [
                "/var/lib/docker/containers",
                "/var/log/containers",
                "/var/log/pods"
              ],
              "core": {
                "affinity": {},
                "tolerations": []
              },
              "deployment": {
                "nodeSelector": ""
              },
              "image": {
                "provider": "aws",
                "pullSecretName": "rtf-pull-secret",
                "rtfRegistry": "rtf-runtime-registry.kprod.msap.io"
              },
              "logForwarding": {
                "anypointMonitoring": false
              },
              "mule": {
                "disablePerAppSA": false
              },
              "service": {}
            },
            "proxy": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/oscargcervantes/runtime-fabric-operator@sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "bundle_path_digest": "sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-14T00:38:04.918000+00:00",
      "csv_description": "Anypoint Runtime Fabric is a container service that you install in your existing Red Hat OpenShift cluster that enables you to run Mule applications, composite APIs, and API gateways across any environment with centralized management via Anypoint Platform.\n\nCapabilities of Runtime Fabric include:\n\n* Isolation between applications by running a separate Mule runtime server per application.\n* Ability to run multiple versions of Mule runtime server on the same set of resources.\n* Scaling applications across multiple replicas.\n* Automated application fail-over.\n* Application management with Anypoint Runtime Manager.\n\nRuntime Fabric supports the following Red Hat OpenShift deployment options:\n\n* Red Hat OpenShift Service on AWS\n* Microsoft Azure Red Hat OpenShift\n* Red Hat OpenShift Dedicated\n* Red Hat OpenShift on IBM Cloud\n* Self-managed Red Hat OpenShift editions (Performance Plus, OCP, Kubernetes engine)\n\nRuntime Fabric supports Red Hat OpenShift versions 4.6 to 4.10.",
      "csv_display_name": "Runtime Fabric Operator",
      "csv_metadata_description": "Runtime Fabric Operator Application from Mulesoft",
      "csv_name": "runtime-fabric-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:06:01.407000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "runtime-fabric-operator",
      "provided_apis": [
        {
          "group": "rtf.operators.mulesoft.com",
          "kind": "RuntimeFabric",
          "plural": "runtimefabrics",
          "version": "v1"
        }
      ],
      "provider": "MuleSoft",
      "related_images": [
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator-7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f-annotation"
        },
        {
          "digest": "sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "image": "quay.io/mulesoft/kube-rbac-proxy@sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "632122c7b180bb9cb665ef46",
      "alm_examples": [
        {
          "api_version": "rtf.operators.mulesoft.com/v1",
          "kind": "RuntimeFabric",
          "metadata": {
            "name": "runtime-fabric"
          },
          "spec": {
            "agent": {
              "app": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "200Mi"
                  }
                }
              },
              "rtfd": {
                "resources": {
                  "limits": {
                    "cpu": "50m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                }
              }
            },
            "global": {
              "authorizedNamespaces": false,
              "cluster": {
                "flavor": "byok",
                "type": "openshift"
              },
              "containerLogPaths": [
                "/var/lib/docker/containers",
                "/var/log/containers",
                "/var/log/pods"
              ],
              "core": {
                "affinity": {},
                "tolerations": []
              },
              "deployment": {
                "nodeSelector": ""
              },
              "image": {
                "provider": "aws",
                "pullSecretName": "rtf-pull-secret",
                "rtfRegistry": "rtf-runtime-registry.kprod.msap.io"
              },
              "logForwarding": {
                "anypointMonitoring": false
              },
              "mule": {
                "disablePerAppSA": false
              },
              "service": {}
            },
            "proxy": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/oscargcervantes/runtime-fabric-operator@sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "bundle_path_digest": "sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-14T00:39:35.720000+00:00",
      "csv_description": "Anypoint Runtime Fabric is a container service that you install in your existing Red Hat OpenShift cluster that enables you to run Mule applications, composite APIs, and API gateways across any environment with centralized management via Anypoint Platform.\n\nCapabilities of Runtime Fabric include:\n\n* Isolation between applications by running a separate Mule runtime server per application.\n* Ability to run multiple versions of Mule runtime server on the same set of resources.\n* Scaling applications across multiple replicas.\n* Automated application fail-over.\n* Application management with Anypoint Runtime Manager.\n\nRuntime Fabric supports the following Red Hat OpenShift deployment options:\n\n* Red Hat OpenShift Service on AWS\n* Microsoft Azure Red Hat OpenShift\n* Red Hat OpenShift Dedicated\n* Red Hat OpenShift on IBM Cloud\n* Self-managed Red Hat OpenShift editions (Performance Plus, OCP, Kubernetes engine)\n\nRuntime Fabric supports Red Hat OpenShift versions 4.6 to 4.10.",
      "csv_display_name": "Runtime Fabric Operator",
      "csv_metadata_description": "Runtime Fabric Operator Application from Mulesoft",
      "csv_name": "runtime-fabric-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:39:28.509000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "runtime-fabric-operator",
      "provided_apis": [
        {
          "group": "rtf.operators.mulesoft.com",
          "kind": "RuntimeFabric",
          "plural": "runtimefabrics",
          "version": "v1"
        }
      ],
      "provider": "MuleSoft",
      "related_images": [
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator-7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f-annotation"
        },
        {
          "digest": "sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "image": "quay.io/mulesoft/kube-rbac-proxy@sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "632125d09b8fb197eeb32c2c",
      "alm_examples": [
        {
          "api_version": "rtf.operators.mulesoft.com/v1",
          "kind": "RuntimeFabric",
          "metadata": {
            "name": "runtime-fabric"
          },
          "spec": {
            "agent": {
              "app": {
                "resources": {
                  "limits": {
                    "cpu": "1000m",
                    "memory": "500Mi"
                  },
                  "requests": {
                    "cpu": "100m",
                    "memory": "200Mi"
                  }
                }
              },
              "rtfd": {
                "resources": {
                  "limits": {
                    "cpu": "50m",
                    "memory": "50Mi"
                  },
                  "requests": {
                    "cpu": "20m",
                    "memory": "50Mi"
                  }
                }
              }
            },
            "global": {
              "authorizedNamespaces": false,
              "cluster": {
                "flavor": "byok",
                "type": "openshift"
              },
              "containerLogPaths": [
                "/var/lib/docker/containers",
                "/var/log/containers",
                "/var/log/pods"
              ],
              "core": {
                "affinity": {},
                "tolerations": []
              },
              "deployment": {
                "nodeSelector": ""
              },
              "image": {
                "provider": "aws",
                "pullSecretName": "rtf-pull-secret",
                "rtfRegistry": "rtf-runtime-registry.kprod.msap.io"
              },
              "logForwarding": {
                "anypointMonitoring": false
              },
              "mule": {
                "disablePerAppSA": false
              },
              "service": {}
            },
            "proxy": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/oscargcervantes/runtime-fabric-operator@sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "bundle_path_digest": "sha256:06dafc64ad74815cbdc9c8426400d251fc4861c40436aecc38eadbac486c86e8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-14T00:52:32.951000+00:00",
      "csv_description": "Anypoint Runtime Fabric is a container service that you install in your existing Red Hat OpenShift cluster that enables you to run Mule applications, composite APIs, and API gateways across any environment with centralized management via Anypoint Platform.\n\nCapabilities of Runtime Fabric include:\n\n* Isolation between applications by running a separate Mule runtime server per application.\n* Ability to run multiple versions of Mule runtime server on the same set of resources.\n* Scaling applications across multiple replicas.\n* Automated application fail-over.\n* Application management with Anypoint Runtime Manager.\n\nRuntime Fabric supports the following Red Hat OpenShift deployment options:\n\n* Red Hat OpenShift Service on AWS\n* Microsoft Azure Red Hat OpenShift\n* Red Hat OpenShift Dedicated\n* Red Hat OpenShift on IBM Cloud\n* Self-managed Red Hat OpenShift editions (Performance Plus, OCP, Kubernetes engine)\n\nRuntime Fabric supports Red Hat OpenShift versions 4.6 to 4.10.",
      "csv_display_name": "Runtime Fabric Operator",
      "csv_metadata_description": "Runtime Fabric Operator Application from Mulesoft",
      "csv_name": "runtime-fabric-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:09:27.749000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "runtime-fabric-operator",
      "provided_apis": [
        {
          "group": "rtf.operators.mulesoft.com",
          "kind": "RuntimeFabric",
          "plural": "runtimefabrics",
          "version": "v1"
        }
      ],
      "provider": "MuleSoft",
      "related_images": [
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "runtime-fabric-operator-7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f-annotation"
        },
        {
          "digest": "sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "image": "quay.io/mulesoft/kube-rbac-proxy@sha256:a4f6c39b17f2ba68366c6d4e139ed18ede2ad9f3f9d5bf7477bdcbef73b43e54",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "image": "quay.io/mulesoft/runtime-fabric-operator@sha256:7cfc84f28da1a6350f2c2f9c610bc425e4717757536fd908a4d0ec7ca5ff414f",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "6321e50d316b8eb377eff317",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "bundle_path_digest": "sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T14:28:29.212000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:42:38.862000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator-93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30-annotation"
        },
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "6321e60a2dd1cd9660af35b8",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "bundle_path_digest": "sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T14:32:42.367000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:47:59.806000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator-93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30-annotation"
        },
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "6321e65cd1a8ccdba1fa82d9",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "bundle_path_digest": "sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T14:34:04.182000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:30:30.655000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator-93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30-annotation"
        },
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "6321e6a6e9b395abdfe1091d",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "bundle_path_digest": "sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T14:35:18.187000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T20:03:00.554000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator-93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30-annotation"
        },
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "6321e6faa9c6e63893adce35",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "bundle_path_digest": "sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T14:36:42.993000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:59:35.570000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator-93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30-annotation"
        },
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "6321e863a1826a2016e67b51",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "bundle_path_digest": "sha256:dbe92d47af78447f118422a785a84ff6cce4715825a5813b379396e6c8e3a339",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T14:42:43.693000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T20:04:01.653000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator-93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30-annotation"
        },
        {
          "digest": "sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:93f699d917c46773c65f922c54f796441c091baab17061a91afce35c99e7df30",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:4545f79c1d3259c177997b6254bf5555269c4d9fb8456d834cf4e7311002df64",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:d43a7acb4b788919552e99e98c53d5501a0a85ff5b3118c3880592b2b62a8160",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "63222b36a9c6e63893add810",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T19:27:50.149000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:15:57.649000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63222b3608c8288bf88d07f5",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2022-09-14T19:27:50.575000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:15:49.905000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63222c31316b8eb377effc92",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2022-09-14T19:32:01.652000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:46:59.666000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63222c32a9c6e63893add83b",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T19:32:02.315000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:47:04.540000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63222c502dd1cd9660af3f83",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2022-09-14T19:32:32.445000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:43:43.267000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63222c50316b8eb377effc9a",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T19:32:32.937000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:43:47.311000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63222eaae9b395abdfe112c7",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T19:42:34.500000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:23:00.998000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63222eaa316b8eb377effcc7",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2022-09-14T19:42:34.955000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:47:33.656000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "632230901fe6c3c921e63981",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T19:50:40.286000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:03:23.540000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63223090e9b395abdfe11310",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2022-09-14T19:50:40.975000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:10:28.502000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63223090d1a8ccdba1fa8ca6",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2022-09-14T19:50:40.857000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:32:59.657000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63223091a9c6e63893add8bb",
      "alm_examples": [
        {
          "api_version": "conjur.cyberark.com/v1",
          "kind": "ConjurFollower",
          "metadata": {
            "labels": {
              "app": "conjur-follower"
            },
            "name": "my-conjur-follower",
            "namespace": "my-follower-namespace"
          },
          "spec": {
            "images": {
              "configurator": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
              "conjur": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
              "info": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
              "nginx": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
              "postgres": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
              "syslogNg": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229"
            },
            "master": {
              "account": "my-company",
              "authenticatorID": "conjur-openshift-follower",
              "authnLogin": "host/conjur-openshift-follower",
              "caCertificateFrom": {
                "configMapKeyRef": {
                  "key": "conjur.master-cert",
                  "name": "follower"
                }
              },
              "hostname": "conjur.my-company.net"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator-bundle@sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "bundle_path_digest": "sha256:5e6247d24c93b85b8cdfe0c0629ee2f1fe95bb82e6ab7aea65d822cb5c4847da",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T19:50:41.795000+00:00",
      "csv_description": "Use this Operator for managing Conjur Followers in an OpenShift cluster.\n\nCyberArk products secure your most sensitive and high-value assets\u2014and supporting your Identity Security goals is our top priority. We offer 24/7 service for high priority issues to all customers with resources across ten countries and in all continents.\n\nCyberArk Conjur makes secrets management simple. Conjur provides a seamless open source interface to securely authenticate, control, and audit non-human access across tools, applications, containers, and cloud environments via robust secrets management.",
      "csv_display_name": "Conjur Enterprise Follower Operator",
      "csv_metadata_description": "",
      "csv_name": "conjur-follower-operator.v2.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:40:25.625000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "conjur-follower-operator",
      "provided_apis": [
        {
          "group": "conjur.cyberark.com",
          "kind": "ConjurFollower",
          "plural": "conjurfollowers",
          "version": "v1"
        }
      ],
      "provider": "CyberArk",
      "related_images": [
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-openshift-follower-operator"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng"
        },
        {
          "digest": "sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-operator@sha256:e9c2fc4c18d84655ed5b30066a1294a2ed1151eeaf9248a8dbdd0ddff4171d7f",
          "name": "conjur-follower-operator"
        },
        {
          "digest": "sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-syslog-ng@sha256:8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229",
          "name": "conjur-openshift-follower-syslog-ng-8a34b4d2c29aeb1cb78f79d2c082bb5c03ffefca9574092dbcb6796ec3e9d229-annotation"
        },
        {
          "digest": "sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-postgres@sha256:badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8",
          "name": "conjur-openshift-follower-postgres-badb31931dc7fffbfbb2b3f2dd82968452e2b28848b4fdd033f1342ebd71e2e8-annotation"
        },
        {
          "digest": "sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-nginx@sha256:4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185",
          "name": "conjur-openshift-follower-nginx-4ffb8a0acf103f7e3b1f0944ecb244475f1939db00c5d2c2ca55bef8ecaf7185-annotation"
        },
        {
          "digest": "sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-info@sha256:a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f",
          "name": "conjur-openshift-follower-info-a19f60bb5bee4709df33c853a04b75b4534209f6991b24ef3c787e81f72d378f-annotation"
        },
        {
          "digest": "sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-conjur@sha256:6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412",
          "name": "conjur-openshift-follower-conjur-6d102eea4801a4bee2f694a1a2e80ea87f26e2316343157c492eec4b82880412-annotation"
        },
        {
          "digest": "sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "image": "registry.connect.redhat.com/cyberark/conjur-openshift-follower-configurator@sha256:1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94",
          "name": "conjur-openshift-follower-configurator-1ff94e32ddb5ed9dc7a218d4a96e133f19c17e24c46d977b92c6b07a87688e94-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.1",
      "version_original": "2.2.1"
    },
    {
      "_id": "63225684703b1887dc1bfffc",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "bundle_path_digest": "sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T22:32:36.841000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:53:24.876000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "operator-ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89-annotation"
        },
        {
          "digest": "sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "image": "quay.io/minio/console@sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "name": "console"
        },
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "name": "minio-3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "4.5.0",
      "version_original": "4.5.0"
    },
    {
      "_id": "63225696316b8eb377f00272",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "bundle_path_digest": "sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T22:32:54.984000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:58:48.602000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "operator-ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89-annotation"
        },
        {
          "digest": "sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "image": "quay.io/minio/console@sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "name": "console"
        },
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "name": "minio-3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "4.5.0",
      "version_original": "4.5.0"
    },
    {
      "_id": "6322574b703b1887dc1c001c",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "bundle_path_digest": "sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T22:35:55.464000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:48:01.300000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "operator-ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89-annotation"
        },
        {
          "digest": "sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "image": "quay.io/minio/console@sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "name": "console"
        },
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "name": "minio-3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "4.5.0",
      "version_original": "4.5.0"
    },
    {
      "_id": "632258be2dd1cd9660af4623",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "bundle_path_digest": "sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T22:42:06.098000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:35:53.833000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "operator-ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89-annotation"
        },
        {
          "digest": "sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "image": "quay.io/minio/console@sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "name": "console"
        },
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "name": "minio-3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "4.5.0",
      "version_original": "4.5.0"
    },
    {
      "_id": "63225aba08c8288bf88d0efc",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "bundle_path_digest": "sha256:763985e852acba724485ba9fb47baa4b62f028817cd072ec404e41996ba217b5",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-14T22:50:34.371000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:45:26.115000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "operator-ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89-annotation"
        },
        {
          "digest": "sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "image": "quay.io/minio/console@sha256:dbc08caba43a823ef33ef2bd5b638eed7fe60a26bb8b85d1ef5b9a04603e9331",
          "name": "console"
        },
        {
          "digest": "sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "image": "quay.io/minio/operator@sha256:ff5f7e8cc02f904b1b676e9e2165c1121d9ec20ae08b425f0989c200471cbc89",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "image": "quay.io/minio/minio@sha256:3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f",
          "name": "minio-3f9b739b3903d6022f8c5309991b199d7006b802a31eef42eeec615005eb765f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "4.5.0",
      "version_original": "4.5.0"
    },
    {
      "_id": "632284eea9c6e63893ade43f",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "bundle_path_digest": "sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-15T01:50:38.472000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:12:48.435000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.0.32",
      "version_original": "0.0.32"
    },
    {
      "_id": "6322885808c8288bf88d1474",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "bundle_path_digest": "sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-15T02:05:12.295000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:49:57.124000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.32",
      "version_original": "0.0.32"
    },
    {
      "_id": "632288712dd1cd9660af4bd6",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "bundle_path_digest": "sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-15T02:05:37.134000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:55:10.410000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.32",
      "version_original": "0.0.32"
    },
    {
      "_id": "632288dca9c6e63893ade4a0",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "bundle_path_digest": "sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-15T02:07:24.265000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:08:27.608000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.32",
      "version_original": "0.0.32"
    },
    {
      "_id": "6322891d33466b720632d160",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "bundle_path_digest": "sha256:2c1d558f9e8253d1573cbb36f3a5254a6d87041b2bf1ad9a69b23b81e2bc67e2",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-15T02:08:29.910000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:43:20.518000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:5956e2fb7bd8f177e5997fb3ef57ae16ce8b793ad2c90b7d2902222bab896e2d",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.32",
      "version_original": "0.0.32"
    },
    {
      "_id": "6322f48633466b720632db61",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "bundle_path_digest": "sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-09-15T09:46:46.326000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22251",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:40:30.559000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aquasec-afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b-annotation"
        },
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "name": "gateway"
        },
        {
          "digest": "sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "name": "server"
        },
        {
          "digest": "sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "name": "scanner"
        },
        {
          "digest": "sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22251",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.5.22251",
      "version_original": "6.5.22251"
    },
    {
      "_id": "6322f529a1826a2016e69a32",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "bundle_path_digest": "sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-09-15T09:49:29.478000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22251",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:48:56.366000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aquasec-afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b-annotation"
        },
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "name": "gateway"
        },
        {
          "digest": "sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "name": "server"
        },
        {
          "digest": "sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "name": "scanner"
        },
        {
          "digest": "sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22251",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.5.22251",
      "version_original": "6.5.22251"
    },
    {
      "_id": "6322f585a9c6e63893adee8e",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "bundle_path_digest": "sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-09-15T09:51:01.599000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22251",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:43:22.887000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aquasec-afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b-annotation"
        },
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "name": "gateway"
        },
        {
          "digest": "sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "name": "server"
        },
        {
          "digest": "sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "name": "scanner"
        },
        {
          "digest": "sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22251",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.5.22251",
      "version_original": "6.5.22251"
    },
    {
      "_id": "6322f5cb316b8eb377f01238",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "bundle_path_digest": "sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-09-15T09:52:11.567000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22251",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:24:13.572000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aquasec-afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b-annotation"
        },
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "name": "gateway"
        },
        {
          "digest": "sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "name": "server"
        },
        {
          "digest": "sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "name": "scanner"
        },
        {
          "digest": "sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22251",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.5.22251",
      "version_original": "6.5.22251"
    },
    {
      "_id": "6322f72b2dd1cd9660af55d1",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "bundle_path_digest": "sha256:b955fe0164a84b0db58408fc28fe67ca23549d387df917ebeb5346cc259a30a0",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-09-15T09:58:03.514000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22251",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:48:50.385000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aquasec-afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b-annotation"
        },
        {
          "digest": "sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:afc2b89f5ee5cd6cbb1df46c93cf95834b9ca2da70dd8d5fa45e5ec0343fda4b",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:80fae039eb5505152e8018e24e1e79ef3a17bf4f714234b7d66c465e1ac89d1a",
          "name": "gateway"
        },
        {
          "digest": "sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:88875ff623607965b777c0c6ea443a4c182d53d2cf930e404c50cde53d065c3f",
          "name": "server"
        },
        {
          "digest": "sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:0eed65d8f5d8e9f6cb0121859164b077aaef1f911753527ec41d7f8aaf61f39a",
          "name": "scanner"
        },
        {
          "digest": "sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:5a8312c8f978c0ed95e951d51ddda1dcdb92e162711f1cb69e3c9134f719648e",
          "name": "enforcer"
        },
        {
          "digest": "sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:9b98a3d32bf5a9126417df4f6e466af0ef957acb645c9bf3da7c06e7ecbecfa8",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22251",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.5.22251",
      "version_original": "6.5.22251"
    },
    {
      "_id": "63235c3a1fe6c3c921e65e3b",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            },
            "version": "v2.1.6"
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermImport",
          "metadata": {
            "name": "pachydermimport-sample"
          },
          "spec": {
            "backup": "backups/pachyderm-backup-20220610.tar.gz",
            "destination": {
              "name": "pachyderm-restore",
              "namespace": "pachyderm-workloads"
            },
            "storageSecret": "s3-credentials-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "bundle_path_digest": "sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-15T17:09:14.446000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:18:21.979000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermImport",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "name": "etcd"
        },
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "postgresql"
        },
        {
          "digest": "sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "name": "init-utils"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "pachyderm-operator-ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "manager"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.1.4",
      "version_original": "0.1.4"
    },
    {
      "_id": "63235e862dd1cd9660af648d",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            },
            "version": "v2.1.6"
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermImport",
          "metadata": {
            "name": "pachydermimport-sample"
          },
          "spec": {
            "backup": "backups/pachyderm-backup-20220610.tar.gz",
            "destination": {
              "name": "pachyderm-restore",
              "namespace": "pachyderm-workloads"
            },
            "storageSecret": "s3-credentials-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "bundle_path_digest": "sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-15T17:19:02.625000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:56:10.455000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermImport",
          "plural": "pachydermimports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "name": "etcd"
        },
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "postgresql"
        },
        {
          "digest": "sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "name": "init-utils"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "pachyderm-operator-ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "manager"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.1.4",
      "version_original": "0.1.4"
    },
    {
      "_id": "63235ea72dd1cd9660af6498",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            },
            "version": "v2.1.6"
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermImport",
          "metadata": {
            "name": "pachydermimport-sample"
          },
          "spec": {
            "backup": "backups/pachyderm-backup-20220610.tar.gz",
            "destination": {
              "name": "pachyderm-restore",
              "namespace": "pachyderm-workloads"
            },
            "storageSecret": "s3-credentials-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "bundle_path_digest": "sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-15T17:19:35.075000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:01:17.242000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermImport",
          "plural": "pachydermimports",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "name": "etcd"
        },
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "postgresql"
        },
        {
          "digest": "sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "name": "init-utils"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "pachyderm-operator-ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "manager"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.1.4",
      "version_original": "0.1.4"
    },
    {
      "_id": "632360d108c8288bf88d2d7d",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            },
            "version": "v2.1.6"
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermImport",
          "metadata": {
            "name": "pachydermimport-sample"
          },
          "spec": {
            "backup": "backups/pachyderm-backup-20220610.tar.gz",
            "destination": {
              "name": "pachyderm-restore",
              "namespace": "pachyderm-workloads"
            },
            "storageSecret": "s3-credentials-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "bundle_path_digest": "sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-15T17:28:49.200000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:29:28.858000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermImport",
          "plural": "pachydermimports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "name": "etcd"
        },
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "postgresql"
        },
        {
          "digest": "sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "name": "init-utils"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "pachyderm-operator-ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "manager"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.4",
      "version_original": "0.1.4"
    },
    {
      "_id": "632362cd08c8288bf88d2db8",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            },
            "version": "v2.1.6"
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermImport",
          "metadata": {
            "name": "pachydermimport-sample"
          },
          "spec": {
            "backup": "backups/pachyderm-backup-20220610.tar.gz",
            "destination": {
              "name": "pachyderm-restore",
              "namespace": "pachyderm-workloads"
            },
            "storageSecret": "s3-credentials-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "bundle_path_digest": "sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-15T17:37:17.804000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:11:11.200000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermImport",
          "plural": "pachydermimports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "name": "etcd"
        },
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "postgresql"
        },
        {
          "digest": "sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "name": "init-utils"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "pachyderm-operator-ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "manager"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.4",
      "version_original": "0.1.4"
    },
    {
      "_id": "632363b9e9b395abdfe1383a",
      "alm_examples": [
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "Pachyderm",
          "metadata": {
            "name": "pachyderm-sample"
          },
          "spec": {
            "console": {
              "disable": true
            },
            "pachd": {
              "metrics": {
                "disable": false
              },
              "storage": {
                "amazon": {
                  "credentialSecretName": "pachyderm-aws-secret"
                },
                "backend": "AMAZON"
              }
            },
            "version": "v2.1.6"
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermExport",
          "metadata": {
            "name": "pachydermexport-sample"
          },
          "spec": {
            "backup": {
              "target": "pachyderm-sample"
            }
          }
        },
        {
          "api_version": "aiml.pachyderm.com/v1beta1",
          "kind": "PachydermImport",
          "metadata": {
            "name": "pachydermimport-sample"
          },
          "spec": {
            "backup": "backups/pachyderm-backup-20220610.tar.gz",
            "destination": {
              "name": "pachyderm-restore",
              "namespace": "pachyderm-workloads"
            },
            "storageSecret": "s3-credentials-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/pachyderm/pachyderm-bundle@sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "bundle_path_digest": "sha256:47ad4efd37ad85bccf915a6d9448d404b7ce3164d7afb4c944648eeba9f0b04b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-15T17:41:13.570000+00:00",
      "csv_description": "The Pachyderm operator aims to make deploying and managing Pachyderm instances on Openshift container platform easier.\n\nPachyderm is the data foundation for machine learning.  Pachyderm provides industry leading data versioning, pipelines and lineage that allow data science teams to automate the machine learning lifecycle and optimize their machine learning operations (MLOps). \n\n## Getting started\n\n1. Pachyderm uses an object store to store your data. Set the pachd storage backend at `pachyderm.spec.pachd.storage.backend` to `AMAZON`, `MICROSOFT`, `GOOGLE` or `MINIO` depending on your storage provider. Additionally, create a user with read/write access to the object store.\n\n2. Setup the user credentials in the section, `pachyderm.spec.pachd.storage`. Required fields depend on the backend type set in step 1 above.\n\n3. Finally, deploy the pachyderm cluster in its own namespace.\n\nFor more information on getting started, reference the documentation.\n",
      "csv_display_name": "Pachyderm",
      "csv_metadata_description": "Pachyderm provides the data layer that allows data science teams to productionize and scale their machine learning lifecycle with data driven automation, petabyte scalability and end-to-end reproducibility.",
      "csv_name": "pachyderm-operator.v0.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:21:19.248000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pachyderm-operator",
      "provided_apis": [
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermImport",
          "plural": "pachydermimports",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "Pachyderm",
          "plural": "pachyderms",
          "version": "v1beta1"
        },
        {
          "group": "aiml.pachyderm.com",
          "kind": "PachydermExport",
          "plural": "pachydermexports",
          "version": "v1beta1"
        }
      ],
      "provider": "Pachyderm, Inc.",
      "related_images": [
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "pachyderm-operator"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "image": "registry.connect.redhat.com/pachyderm/pachd@sha256:116477fefdf413ea02c6ac3d013f1f91d3f6e4b16aed2408c9890832cdb41430",
          "name": "pachd"
        },
        {
          "digest": "sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "image": "registry.connect.redhat.com/pachyderm/worker@sha256:374f83d92899707bc87b0318fda6bffa78d2e9e523b827bb3d40693a2d1bdecd",
          "name": "worker"
        },
        {
          "digest": "sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "image": "registry.connect.redhat.com/pachyderm/etcd@sha256:7f330b51874379b1d4b71d94e37e0ecfa52b86d628296136970688cf204f53b5",
          "name": "etcd"
        },
        {
          "digest": "sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "image": "registry.redhat.io/rhel8/postgresql-13@sha256:4bb562f98edc2d94299f25080dc3dd8290e5f8db2710fe8f76a5cd71442bb4c7",
          "name": "postgresql"
        },
        {
          "digest": "sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "image": "registry.connect.redhat.com/pachyderm/pgbouncer@sha256:c3b6949227df24abb8934d111a34b44e87fb16194ac34a5d0fe284cff02e9ac0",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "image": "registry.connect.redhat.com/pachyderm/init-utils@sha256:5c0258bfa0203079925648c0a7dda6d05a29b6f461854821a1eec541777ff359",
          "name": "init-utils"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup-handler"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "pachyderm-operator-ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7-annotation"
        },
        {
          "digest": "sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:5e33f9d095952866b9743cc8268fb740cce6d93439f00ce333a2de1e5974837e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "image": "registry.connect.redhat.com/pachyderm/pachyderm-operator@sha256:ecfab15a6b7bcf7cbdc71dda8ba8f408ee1e6c8f2c240779e56d0f006b439ce7",
          "name": "manager"
        },
        {
          "digest": "sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "image": "registry.connect.redhat.com/pachyderm/backup-handler@sha256:e2ef6bd8191e8ad58c765c0db8f5bb21ea7123caed0c0f58fe681a024201306d",
          "name": "backup"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.4",
      "version_original": "0.1.4"
    },
    {
      "_id": "63236fa333466b720632ec73",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:32:03.317000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:57:57.545000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "63236fa3a1826a2016e6ab09",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "bundle_path_digest": "sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:32:03.902000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.3-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-20T17:10:25.574000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.3-beta.1",
      "version_original": "8.6.3-beta.1"
    },
    {
      "_id": "63236fca1fe6c3c921e6606d",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:32:42.828000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:52:36.243000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "63236fcb33466b720632ec7c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "bundle_path_digest": "sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:32:43.306000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.3-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-20T17:09:53.752000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.3-beta.1",
      "version_original": "8.6.3-beta.1"
    },
    {
      "_id": "632370bea9c6e63893adff7c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:36:46.378000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:09:26.178000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "632370bea9c6e63893adff7e",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "bundle_path_digest": "sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:36:46.957000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.3-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-20T17:09:29.240000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.3-beta.1",
      "version_original": "8.6.3-beta.1"
    },
    {
      "_id": "6323722108c8288bf88d2f4c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "bundle_path_digest": "sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:42:41.439000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.3-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-20T17:13:33.282000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.3-beta.1",
      "version_original": "8.6.3-beta.1"
    },
    {
      "_id": "63237222a9c6e63893adffac",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:42:42.217000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:09:19.044000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "632373eea9c6e63893adffc6",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "bundle_path_digest": "sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:50:22.770000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.3-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-20T17:12:52.475000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.3-beta.1",
      "version_original": "8.6.3-beta.1"
    },
    {
      "_id": "632373f1a1826a2016e6ab6c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:50:25.356000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:23:14.108000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "632374fe33466b720632ece0",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "bundle_path_digest": "sha256:08db79cfb1410642cdff9c3c8c719dccfb5cd02eb257cb558f0396131d7ff837",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:54:54.198000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.3-beta.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-20T17:25:24.768000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:4accb71d2a86b9d292f62a50f70c022c358e5bf4fa851be5b931a29cc54ecd24",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.3-beta.1",
      "version_original": "8.6.3-beta.1"
    },
    {
      "_id": "632374fe08c8288bf88d2f77",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "bundle_path_digest": "sha256:59c0362ab55e0789db2c9e55164256ccba6fccab8127822eab1a979c93992fc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-15T18:54:54.940000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:29:13.207000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator-ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2-annotation"
        },
        {
          "digest": "sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:ed98919c05037442b32d3e892fbce1ae766571766d5cfb6e49db7926c8b704e2",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:bc828351c81b6efba7a3f6ebcf33489a09bdba3905e33e1fa9bf2af2e4ad180d",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.2",
      "version_original": "8.6.2"
    },
    {
      "_id": "632476c0a1826a2016e6c4d2",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "5.0.5"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "bundle_path_digest": "sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-16T13:14:40.549000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:53:54.364000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "enterprise-operator-b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95-annotation"
        },
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "6324776108c8288bf88d4925",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "5.0.5"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "bundle_path_digest": "sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-16T13:17:20.998000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:45:34.142000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "enterprise-operator-b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95-annotation"
        },
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "6324785408c8288bf88d492b",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "5.0.5"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "bundle_path_digest": "sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-16T13:21:24.104000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:23:16.527000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "enterprise-operator-b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95-annotation"
        },
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "63247895a9c6e63893ae18eb",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "5.0.5"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "bundle_path_digest": "sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-16T13:22:29.302000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:59:20.577000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "enterprise-operator-b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95-annotation"
        },
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "6324795233466b72063306ee",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "5.0.5"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "bundle_path_digest": "sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-16T13:25:38.857000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:45:07.954000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "enterprise-operator-b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95-annotation"
        },
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "63247a43e9b395abdfe152e6",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBMulti",
          "metadata": {
            "name": "multi-replica-set"
          },
          "spec": {
            "clusterSpecList": {
              "clusterSpecs": [
                {
                  "clusterName": "e2e.cluster1.mongokubernetes.com",
                  "members": 2
                },
                {
                  "clusterName": "e2e.cluster2.mongokubernetes.com",
                  "members": 1
                },
                {
                  "clusterName": "e2e.cluster3.mongokubernetes.com",
                  "members": 2
                }
              ]
            },
            "credentials": "my-credentials",
            "duplicateServiceObjects": false,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": false,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "5.0.5"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "bundle_path_digest": "sha256:f2127ed11f4fb714f5c35f0cc4561da00181ffb5edb098556df598d3a5a6a691",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-16T13:29:39.301000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Requirements for deploying MongoDB OpsManager\n\n* In order to deploy resources of type MongoDB OpsManager, you will need to\ncreate a secret containing the [credentials](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/plan-om-resource/#om-rsrc-prereqs)\nfor the Global Onwer user\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.17.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:48:50.315000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBMulti",
          "plural": "mongodbmulti",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "enterprise-operator-b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95-annotation"
        },
        {
          "digest": "sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:b81057565508c0b0f0c19737f1d243bb74c220d5eedf660072d96ede41e30f95",
          "name": "mongodb-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.0",
      "version_original": "1.17.0"
    },
    {
      "_id": "63283693d1a8ccdba1faffef",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-09-19T09:29:55.771000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T09:29:55.771000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "632836fe316b8eb377f06fd3",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-09-19T09:31:42.191000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T09:31:42.191000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "63283854a9c6e63893ae4c7a",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-09-19T09:37:24.323000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T09:37:24.323000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.15.2",
      "version_original": "1.15.2"
    },
    {
      "_id": "632838cdd1a8ccdba1fb017f",
      "alm_examples": [
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Backup",
          "metadata": {
            "name": "backup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Cluster",
          "metadata": {
            "name": "cluster-sample"
          },
          "spec": {
            "instances": 3,
            "logLevel": "info",
            "primaryUpdateStrategy": "unsupervised",
            "storage": {
              "size": "1Gi"
            }
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "Pooler",
          "metadata": {
            "name": "pooler-sample-rw"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "instances": 1,
            "pgbouncer": {
              "poolMode": "session"
            },
            "type": "rw"
          }
        },
        {
          "api_version": "postgresql.k8s.enterprisedb.io/v1",
          "kind": "ScheduledBackup",
          "metadata": {
            "name": "scheduledbackup-sample"
          },
          "spec": {
            "cluster": {
              "name": "cluster-sample"
            },
            "schedule": "0 0 0 * * *"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/enterprisedb/cloud-native-postgresql@sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "bundle_path_digest": "sha256:e0624abf48e3f643638e93a633a4017961b454f133830f6d369b238d58a6eb8b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "null",
      "creation_date": "2022-09-19T09:39:25.091000+00:00",
      "csv_description": "EDB Postgres for Kubernetes is an operator designed, developed, and supported by EDB that covers the full \nlifecycle of a highly available Postgres database clusters with a primary/standby architecture, using native\nstreaming replication. It is based on the open source CloudNativePG operator, and provides additional value\nsuch as compatibility with Oracle using EDB Postgres Advanced Server and additional supported platforms such\nas IBM Power and OpenShift.\n\nKey features available include:\n\n* Kubernetes API integration for high availability\n* Self-healing through failover and automated recreation of replicas\n* Capacity management with scale up/down capabilities\n* Planned switchovers for scheduled maintenance\n* Read-only and read-write Kubernetes services definitions\n* Rolling updates for Postgres minor versions and operator upgrades\n* Continuous backup and point-in-time recovery\n* Connection Pooling with PgBouncer\n* Integrated metrics exporter out of the box\n* PostgreSQL replication across multiple Kubernetes clusters\n* Red Hat certified operator for OpenShift\n\nThe operator has been renamed from Cloud Native PostgreSQL. Existing users of Cloud Native PostgreSQL will not\nexperience any change, as the underlying components and resources have not changed.\n",
      "csv_display_name": "EDB Postgres for Kubernetes",
      "csv_metadata_description": "Operator to manage Postgres high availability clusters with a primary/standby architecture.",
      "csv_name": "cloud-native-postgresql.v1.15.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T09:39:25.091000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cloud-native-postgresql",
      "provided_apis": [
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "ScheduledBackup",
          "plural": "scheduledbackups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Cluster",
          "plural": "clusters",
          "version": "v1"
        },
        {
          "group": "postgresql.k8s.enterprisedb.io",
          "kind": "Pooler",
          "plural": "poolers",
          "version": "v1"
        }
      ],
      "provider": "EnterpriseDB Corporation",
      "related_images": [
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "cloud-native-postgresql-af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc-annotation"
        },
        {
          "digest": "sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "image": "quay.io/enterprisedb/cloud-native-postgresql@sha256:af4718fd40222fb3fc68fa1952baa69e61a35085429f10e6fcd5db46d60f0bfc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.6.0 < 1.15.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.15.2",
      "version_original": "1.15.2"
    }
  ]
}

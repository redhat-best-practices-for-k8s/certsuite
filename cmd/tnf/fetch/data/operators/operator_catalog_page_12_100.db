{
  "data": [
    {
      "_id": "60c24659ba99c76846ab4ade",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "bundle_path_digest": "sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T17:05:29.951000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:41:52.373000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "operator-030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847-annotation"
        },
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "60c246cf233d5ea79c308518",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "bundle_path_digest": "sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T17:07:27.530000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:37:56.502000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "operator-030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847-annotation"
        },
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "60c24797e1f052817b72bd2d",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "bundle_path_digest": "sha256:a6556aa2775319e5518f8aed255bdec24f7cb1ed9ab93748d3e5b59c9d5ed306",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-10T17:10:47.536000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:22:36.842000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "operator-030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847-annotation"
        },
        {
          "digest": "sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "image": "quay.io/tigera/operator@sha256:030d34878eef62b94a1e7da50237d1a1630a5140205deb49c24f803d29f18847",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.15.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.3",
      "version_original": "1.15.3"
    },
    {
      "_id": "60c24de3ba99c76846ab4b4b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "bundle_path_digest": "sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T17:37:39.680000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:30:51.334000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "operator-4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d-annotation"
        },
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.17.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.17.3",
      "version_original": "1.17.3"
    },
    {
      "_id": "60c24e02adf15566a5a97d5c",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "bundle_path_digest": "sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-10T17:38:10.380000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:37:02.311000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "operator-6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8-annotation"
        },
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.3",
      "version_original": "1.13.3"
    },
    {
      "_id": "60c24e32ba99c76846ab4b52",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "bundle_path_digest": "sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T17:38:58.303000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:11:44.552000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "operator-4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d-annotation"
        },
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.17.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.3",
      "version_original": "1.17.3"
    },
    {
      "_id": "60c24e56adf15566a5a97d60",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "bundle_path_digest": "sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-10T17:39:34.329000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:27:31.822000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "operator-6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8-annotation"
        },
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.3",
      "version_original": "1.13.3"
    },
    {
      "_id": "60c24e59ba99c76846ab4b53",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "bundle_path_digest": "sha256:9ee5b5d0929502d609cc8fb5267293432f6b8963ce1187810d84979be2cb5edd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-10T17:39:37.829000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:49:26.047000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "operator-4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d-annotation"
        },
        {
          "digest": "sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "image": "quay.io/tigera/operator@sha256:4b247cdd26bf4887dcddef5bea67283d9e19ac601588e7755aff41fce96d7d1d",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.17.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.3",
      "version_original": "1.17.3"
    },
    {
      "_id": "60c3982347c96fe63ef4c4c4",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "bundle_path_digest": "sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-11T17:06:43.134000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:43:06.966000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "operator-8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96-annotation"
        },
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "60c39ed66819538376be264f",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "bundle_path_digest": "sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-11T17:35:18.033000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:58:27.632000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "operator-8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96-annotation"
        },
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "60c39f1f6819538376be2650",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "bundle_path_digest": "sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-11T17:36:31.127000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:32:26.397000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "operator-e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61-annotation"
        },
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.17.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.17.4",
      "version_original": "1.17.4"
    },
    {
      "_id": "60c39fbdcea799d7301bec42",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "bundle_path_digest": "sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-11T17:39:09.637000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:49:49.274000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "operator-e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61-annotation"
        },
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.17.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.17.4",
      "version_original": "1.17.4"
    },
    {
      "_id": "60c39fda102db8eff44130d2",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "bundle_path_digest": "sha256:59d4aaee1dbaf11f12c7ce24380ed029610799af0367b6efaedfa6ff34bfb24a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.15",
      "creation_date": "2021-06-11T17:39:38.969000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.15.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:45:22.882000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "operator-8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96-annotation"
        },
        {
          "digest": "sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "image": "quay.io/tigera/operator@sha256:8ca9439f21269f1dea86b3ef2d1e3143ed3242ad3165036677257ab92f7aae96",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.15.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.15.4",
      "version_original": "1.15.4"
    },
    {
      "_id": "60c3a012cea799d7301bec43",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "bundle_path_digest": "sha256:3cac2148e9dbefb6a8c7142c9692098f279d8d196a6254161dffbd9ad1634f2e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.17",
      "creation_date": "2021-06-11T17:40:34.634000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.17.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:02:31.291000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "operator-e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61-annotation"
        },
        {
          "digest": "sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "image": "quay.io/tigera/operator@sha256:e303783e1667fd7984df95d0d03f410d8a71fe5186c51928bf8a938b00cd4c61",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.17.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.17.4",
      "version_original": "1.17.4"
    },
    {
      "_id": "60c3d7f647c96fe63ef4c4ce",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "bundle_path_digest": "sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-11T21:39:02.309000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:31:06.306000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "operator-6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8-annotation"
        },
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.3",
      "version_original": "1.13.3"
    },
    {
      "_id": "60c3de0c102db8eff44130d5",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "bundle_path_digest": "sha256:24dcf20c56686336983ff099e526f20a8350154e6da2d117ceafb136d8a34d51",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-11T22:05:00.409000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:39:52.581000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "operator-309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935-annotation"
        },
        {
          "digest": "sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "image": "quay.io/tigera/operator@sha256:309358ba7634183b7c18506c46634202a88b3c790937ef1fbdf8ab0a7218c935",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.0",
      "version_original": "1.13.0"
    },
    {
      "_id": "60c415d4102db8eff44130dd",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "bundle_path_digest": "sha256:4a1252b44e037c8965f5f2fd98585cbdd4a0516a7f9e059c12af10ee3a5ddd83",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-12T02:03:00.369000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:55:09.549000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "operator-6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4-annotation"
        },
        {
          "digest": "sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "image": "quay.io/tigera/operator@sha256:6e7d248a30c34204e6df445f03d61b7855bd9f188181b2abf68972da97aebde4",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.2",
      "version_original": "1.13.2"
    },
    {
      "_id": "60c415db6819538376be2673",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "bundle_path_digest": "sha256:27b53a6972c5accc17d20770828d782bcf6a76432b2231fd8fd4aef41919c8de",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-12T02:03:07.403000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:39:57.763000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "operator-6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8-annotation"
        },
        {
          "digest": "sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "image": "quay.io/tigera/operator@sha256:6ab4d69c6d88c90392f3366764bc59e3ae57f5da6271ab5e8ed92540707041d8",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.3",
      "version_original": "1.13.3"
    },
    {
      "_id": "60c4173047c96fe63ef4c4d9",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "bundle_path_digest": "sha256:48cea9ecdf166e21be9d179c629c531d27f75552d126a7a421ae1b844652dcc6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-12T02:08:48.034000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:23:07.873000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "operator-098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57-annotation"
        },
        {
          "digest": "sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "image": "quay.io/tigera/operator@sha256:098d1a2d1adc475743daab6b9a936c4c1be37b93d66fa2afbcc2957c224bdf57",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.1",
      "version_original": "1.13.1"
    },
    {
      "_id": "60c4a27b47c96fe63ef4c4e7",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "bundle_path_digest": "sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-12T12:03:07.485000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:41:33.916000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100200.13",
      "version_original": "1.100200.13"
    },
    {
      "_id": "60c4a3d9cea799d7301bec5c",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "bundle_path_digest": "sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-12T12:08:57.665000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:24:08.893000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.100200.13",
      "version_original": "1.100200.13"
    },
    {
      "_id": "60c4a414cea799d7301bec5d",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "bundle_path_digest": "sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-12T12:09:56.146000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:23:51.922000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.100200.13",
      "version_original": "1.100200.13"
    },
    {
      "_id": "60c4aa55cea799d7301bec5e",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "bundle_path_digest": "sha256:98242d7e3d34eb8d812a492b8f3f1b2ca47bff8f4dbe6b6005a587d020fe0e52",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-12T12:36:37.777000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:43:57.451000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:5521d96c82370708b7bdd96143a70fded1e073ded24a7eb1082d6971890ec8d1",
          "name": "wgs"
        },
        {
          "digest": "sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:7e8894a54d55db35e281c0323030dfe5225fdda3838e33966cdadbc7b116a4fb",
          "name": "navigator"
        },
        {
          "digest": "sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:fea36a643c08f86b56e735b064e72fc8151fba921a2596a4f0b493561e182337",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100200.13",
      "version_original": "1.100200.13"
    },
    {
      "_id": "60c7f58347c96fe63ef4ca20",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "bundle_path_digest": "sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-15T00:34:11.811000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:10:15.213000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "operator-d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66-annotation"
        },
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.4",
      "version_original": "1.13.4"
    },
    {
      "_id": "60c7f66acea799d7301bf24b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "bundle_path_digest": "sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-15T00:38:02.555000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:39:23.941000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "operator-d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66-annotation"
        },
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.4",
      "version_original": "1.13.4"
    },
    {
      "_id": "60c7f7336819538376be28be",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "bundle_path_digest": "sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-15T00:41:23.612000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:03:39.949000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "operator-d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66-annotation"
        },
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.4",
      "version_original": "1.13.4"
    },
    {
      "_id": "60c803eb102db8eff441327d",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "bundle_path_digest": "sha256:f4a4dd85a542527a6c7768d6c4a68079e2414d794e736027c8362040259739dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-15T01:35:39.646000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:15:53.755000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "operator-d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66-annotation"
        },
        {
          "digest": "sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "image": "quay.io/tigera/operator@sha256:d87b1e1ed9273bbb96046090f2dccef0064cdbdea17a4bf70805515207abba66",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.4",
      "version_original": "1.13.4"
    },
    {
      "_id": "60c8437b47c96fe63ef4cef1",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "bundle_path_digest": "sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-15T06:06:51.360000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=Cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:33:32.773000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.4",
      "version_original": "1.4.4"
    },
    {
      "_id": "60c8443147c96fe63ef4cef2",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "bundle_path_digest": "sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-06-15T06:09:53.848000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=Cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:00:23.352000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.4.4",
      "version_original": "1.4.4"
    },
    {
      "_id": "60c8444fcea799d7301bf9ad",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "bundle_path_digest": "sha256:b8ac62cfe07d974c7140d1a594047bc796760c0546dfcd56e83805a434c5f871",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-06-15T06:10:23.678000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=Cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:42:37.298000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.4",
      "version_original": "1.4.4"
    },
    {
      "_id": "60c94ef81e47f18b44877e57",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "bundle_path_digest": "sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T01:08:08.822000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:42:52.410000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "operator-ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1-annotation"
        },
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.5",
      "version_original": "1.13.5"
    },
    {
      "_id": "60c94f8948e99376f66308ee",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "bundle_path_digest": "sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T01:10:33.359000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:03:54.116000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "operator-ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1-annotation"
        },
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.5",
      "version_original": "1.13.5"
    },
    {
      "_id": "60c94f9948e99376f66308ef",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "bundle_path_digest": "sha256:000bfd00ee565fa58b562c7ef97058677a1ade9e987ae60f6b20dd95804fd3d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T01:10:49.804000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:04:01.979000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "operator-ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1-annotation"
        },
        {
          "digest": "sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "image": "quay.io/tigera/operator@sha256:ad30f54322b1a02bcf95489cf7b054387e323cfa5226020c90d68fb401dcaab1",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.5",
      "version_original": "1.13.5"
    },
    {
      "_id": "60c9a9cf2ec20576b977fc25",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "bundle_path_digest": "sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T07:35:43.539000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:46:19.871000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "operator-da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87-annotation"
        },
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.6",
      "version_original": "1.13.6"
    },
    {
      "_id": "60c9a9ef1e47f18b44877e5b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "bundle_path_digest": "sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T07:36:15.021000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:59:36.830000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "operator-da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87-annotation"
        },
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.6",
      "version_original": "1.13.6"
    },
    {
      "_id": "60c9ab282ec20576b977fc26",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "bundle_path_digest": "sha256:aa9d2bf965b948b63984c559222951341ce834047cbc43a4fce597b14541ec2c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T07:41:28.863000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:32:15.194000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "operator-da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87-annotation"
        },
        {
          "digest": "sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "image": "quay.io/tigera/operator@sha256:da88dfe4852040fa7a7dc67bf7cde35341bea49e72b7d326ee390b5728ee1a87",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.6",
      "version_original": "1.13.6"
    },
    {
      "_id": "60ca1a1e73de3533cd9400c3",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.dcgm-exporter": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "affinity": {},
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead"
            },
            "gfd": {
              "affinity": {},
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "affinity": {},
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.mig-manager": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "affinity": {},
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.container-toolkit": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8"
            },
            "validator": {
              "affinity": {},
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.operator-validator": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:cfe7d0a44fd39d3b273f05167ecb156dab0b8383e6931372258007f8b077fe44",
      "bundle_path_digest": "sha256:cfe7d0a44fd39d3b273f05167ecb156dab0b8383e6931372258007f8b077fe44",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.7",
      "creation_date": "2021-06-16T15:34:54.499000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:22:27.470000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "image": "nvcr.io/nvidia/driver@sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "name": "gpu-operator-validator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "60ca1b922ec20576b977fd5a",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.dcgm-exporter": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "affinity": {},
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead"
            },
            "gfd": {
              "affinity": {},
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "affinity": {},
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.mig-manager": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "affinity": {},
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.container-toolkit": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8"
            },
            "validator": {
              "affinity": {},
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.operator-validator": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:cfe7d0a44fd39d3b273f05167ecb156dab0b8383e6931372258007f8b077fe44",
      "bundle_path_digest": "sha256:cfe7d0a44fd39d3b273f05167ecb156dab0b8383e6931372258007f8b077fe44",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.7",
      "creation_date": "2021-06-16T15:41:06.614000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:51:57.217000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "image": "nvcr.io/nvidia/driver@sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "name": "gpu-operator-validator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "60ca2f3e2ec20576b977fe2d",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "bundle_path_digest": "sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T17:05:02.108000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:43:40.940000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "operator-35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f-annotation"
        },
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.7",
      "version_original": "1.13.7"
    },
    {
      "_id": "60ca30762ec20576b977fe2e",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "bundle_path_digest": "sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T17:10:14.222000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:16:34.274000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "operator-35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f-annotation"
        },
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.7",
      "version_original": "1.13.7"
    },
    {
      "_id": "60ca368573de3533cd94019b",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "bundle_path_digest": "sha256:2f9ae23e5d031fbb99d4dd7981de0c94a084b3264833dfd5b0e270ead872d624",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-16T17:36:05.394000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:25:41.472000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "operator-35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f-annotation"
        },
        {
          "digest": "sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "image": "quay.io/tigera/operator@sha256:35c840efe79cb0acafdb86a3c0607b672675c2c0b08fe37db66758f8877d6e7f",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.7",
      "version_original": "1.13.7"
    },
    {
      "_id": "60ca670f9a087cbed9d02c74",
      "alm_examples": [
        {
          "api_version": "agent.stonebranch.com/v1alpha1",
          "kind": "Stonebranch",
          "metadata": {
            "name": "stonebranch-sample"
          },
          "spec": {
            "config": {
              "omsAutoStart": "no",
              "uagAgentClusters": "AGENT_CLUSTER_APP_5461d88d5",
              "uagAutoStart": "yes",
              "uagEnableSsl": "yes",
              "uagNetname": "OPSAUTOCONF",
              "uagOmsServers": "7878\\\\@ps2.stonebranchdev.cloud",
              "uagTransient": "yes",
              "uagUsername": "stonebranch",
              "uemAutoStart": "yes"
            },
            "createSharedPersistentVolumeClaim": {
              "enable": true,
              "storage#": "5Gi",
              "storage_class": "ibmc-file-bronze-gid"
            },
            "useExistingSharedStorage": {
              "enable": false,
              "storage_name": "my-custom-pvc"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stonebranch/stonebranch-operator-bundle@sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "bundle_path_digest": "sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-16T21:03:11.996000+00:00",
      "csv_description": "Stonebranch Universal Agent IT Automation software",
      "csv_display_name": "Universalagent Operator",
      "csv_metadata_description": "Stonebranch Universal Agent IT Automation software",
      "csv_name": "universalagent-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:07:33.280000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "stonebranch-universalagent-operator-certified",
      "provided_apis": [
        {
          "group": "agent.stonebranch.com",
          "kind": "Stonebranch",
          "plural": "stonebranches",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal-agent-aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "image": "registry.connect.redhat.com/stonebranch/stonebranch-operator@sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "name": "manager"
        },
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal_agent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ca68e1a5f4191b6335f5ca",
      "alm_examples": [
        {
          "api_version": "agent.stonebranch.com/v1alpha1",
          "kind": "Stonebranch",
          "metadata": {
            "name": "stonebranch-sample"
          },
          "spec": {
            "config": {
              "omsAutoStart": "no",
              "uagAgentClusters": "AGENT_CLUSTER_APP_5461d88d5",
              "uagAutoStart": "yes",
              "uagEnableSsl": "yes",
              "uagNetname": "OPSAUTOCONF",
              "uagOmsServers": "7878\\\\@ps2.stonebranchdev.cloud",
              "uagTransient": "yes",
              "uagUsername": "stonebranch",
              "uemAutoStart": "yes"
            },
            "createSharedPersistentVolumeClaim": {
              "enable": true,
              "storage#": "5Gi",
              "storage_class": "ibmc-file-bronze-gid"
            },
            "useExistingSharedStorage": {
              "enable": false,
              "storage_name": "my-custom-pvc"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stonebranch/stonebranch-operator-bundle@sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "bundle_path_digest": "sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-16T21:10:57.899000+00:00",
      "csv_description": "Stonebranch Universal Agent IT Automation software",
      "csv_display_name": "Universalagent Operator",
      "csv_metadata_description": "Stonebranch Universal Agent IT Automation software",
      "csv_name": "universalagent-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:36:32.958000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "stonebranch-universalagent-operator-certified",
      "provided_apis": [
        {
          "group": "agent.stonebranch.com",
          "kind": "Stonebranch",
          "plural": "stonebranches",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal-agent-aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "image": "registry.connect.redhat.com/stonebranch/stonebranch-operator@sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "name": "manager"
        },
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal_agent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ca6ebd9a087cbed9d02c79",
      "alm_examples": [
        {
          "api_version": "agent.stonebranch.com/v1alpha1",
          "kind": "Stonebranch",
          "metadata": {
            "name": "stonebranch-sample"
          },
          "spec": {
            "config": {
              "omsAutoStart": "no",
              "uagAgentClusters": "AGENT_CLUSTER_APP_5461d88d5",
              "uagAutoStart": "yes",
              "uagEnableSsl": "yes",
              "uagNetname": "OPSAUTOCONF",
              "uagOmsServers": "7878\\\\@ps2.stonebranchdev.cloud",
              "uagTransient": "yes",
              "uagUsername": "stonebranch",
              "uemAutoStart": "yes"
            },
            "createSharedPersistentVolumeClaim": {
              "enable": true,
              "storage#": "5Gi",
              "storage_class": "ibmc-file-bronze-gid"
            },
            "useExistingSharedStorage": {
              "enable": false,
              "storage_name": "my-custom-pvc"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stonebranch/stonebranch-operator-bundle@sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "bundle_path_digest": "sha256:f9b6fc609704afb3a1872e38e7015b603ac06bd62530684c4fb22289051ff7b0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-16T21:35:57.335000+00:00",
      "csv_description": "Stonebranch Universal Agent IT Automation software",
      "csv_display_name": "Universalagent Operator",
      "csv_metadata_description": "Stonebranch Universal Agent IT Automation software",
      "csv_name": "universalagent-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:34:56.914000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "stonebranch-universalagent-operator-certified",
      "provided_apis": [
        {
          "group": "agent.stonebranch.com",
          "kind": "Stonebranch",
          "plural": "stonebranches",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal-agent-aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "image": "registry.connect.redhat.com/stonebranch/stonebranch-operator@sha256:6709fd47319626e898e9fa1d778f1bd6ce977f9b2e9f67971810b4263b9fb2be",
          "name": "manager"
        },
        {
          "digest": "sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "image": "registry.connect.redhat.com/stonebranch/universal-agent@sha256:aac5620c01815d4449a184c728268dfb999c1412006a4f6ab0b1018b43d413e9",
          "name": "universal_agent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60ca9147a5f4191b6335f5ee",
      "alm_examples": [
        {
          "api_version": "hedvig.io/v1",
          "kind": "HedvigDeploy",
          "metadata": {
            "name": "testdeploy",
            "namespace": "hedvig"
          },
          "spec": {
            "cluster": {
              "name": "hedvigcl",
              "seeds": [
                "hedvigcl1.hedvig.io",
                "hedvigcl2.hedvig.io",
                "hedvigcl3.hedvig.io"
              ]
            },
            "controller": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "k8s": {
              "name": "k8scl"
            },
            "node": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "proxy": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-proxy",
              "tag": "v-4.3.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "quay.io/k8scsi/csi-provisioner",
                "tag": "v1.6.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "quay.io/k8scsi/csi-snapshotter",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "quay.io/k8scsi/csi-resizer",
                "tag": "v0.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "quay.io/k8scsi/csi-node-driver-registrar",
                "tag": "v1.0-canary"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator@sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "bundle_path_digest": "sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-17T00:03:19.963000+00:00",
      "csv_description": "The Hedvig Distributed Storage Platform is a software-defined, scale-out storage solution. It distributes data simultaneously across multiple locations \u2013 from on-premises data centers to the cloud \u2013 and scales capacity on-demand by leveraging the storage of commodity x86/ARM servers. The distributed write maximizes availability and protects data from hardware failures ranging from a single disk to an entire site, improving disaster recovery planning.\n\nHedvig provides a CSI Driver for accelerating your journey into the container ecosystem. CSI Driver enables containerized applications to maintain state by dynamically provisioning and consuming Hedvig virtual disks as persistent volumes. \n### \n\nHedvig Operator deploys the Hedvig Storage Proxy and the Hedvig CSI Driver to manage the life cycle of persistent storage in Kubernetes and Openshift.\n\n**Supported Container Orchestrators:**\n* Kubernetes 1.13 to 1.20\n* Red Hat OpenShift 4.1 to 4.7\n\n**Supported Hedvig Releases:**\n* Hedvig 4.0\n* Hedvig 4.1\n* Hedvig 4.2\n* Hedvig 4.3\n\nPlease refer to the [documentation](https://documentation.commvault.com/commvault/hedvig/others/pdf/Hedvig_Operator_User_Guide.pdf) for steps to install and use the operator.\n\n\n\n\n\n",
      "csv_display_name": "Hedvig Operator",
      "csv_metadata_description": "Hedvig Operator is the official operator to deploy and manage Hedvig components in container orchestrators such as Kubernetes and Openshift.",
      "csv_name": "hedvig-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:20:47.026000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hedvig-operator",
      "provided_apis": [
        {
          "group": "hedvig.io",
          "kind": "HedvigDeploy",
          "plural": "hedvigdeploys",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator1-49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1-annotation"
        },
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60ca92189a087cbed9d02c9a",
      "alm_examples": [
        {
          "api_version": "hedvig.io/v1",
          "kind": "HedvigDeploy",
          "metadata": {
            "name": "testdeploy",
            "namespace": "hedvig"
          },
          "spec": {
            "cluster": {
              "name": "hedvigcl",
              "seeds": [
                "hedvigcl1.hedvig.io",
                "hedvigcl2.hedvig.io",
                "hedvigcl3.hedvig.io"
              ]
            },
            "controller": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "k8s": {
              "name": "k8scl"
            },
            "node": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "proxy": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-proxy",
              "tag": "v-4.3.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "quay.io/k8scsi/csi-provisioner",
                "tag": "v1.6.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "quay.io/k8scsi/csi-snapshotter",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "quay.io/k8scsi/csi-resizer",
                "tag": "v0.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "quay.io/k8scsi/csi-node-driver-registrar",
                "tag": "v1.0-canary"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator@sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "bundle_path_digest": "sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-17T00:06:48.438000+00:00",
      "csv_description": "The Hedvig Distributed Storage Platform is a software-defined, scale-out storage solution. It distributes data simultaneously across multiple locations \u2013 from on-premises data centers to the cloud \u2013 and scales capacity on-demand by leveraging the storage of commodity x86/ARM servers. The distributed write maximizes availability and protects data from hardware failures ranging from a single disk to an entire site, improving disaster recovery planning.\n\nHedvig provides a CSI Driver for accelerating your journey into the container ecosystem. CSI Driver enables containerized applications to maintain state by dynamically provisioning and consuming Hedvig virtual disks as persistent volumes. \n### \n\nHedvig Operator deploys the Hedvig Storage Proxy and the Hedvig CSI Driver to manage the life cycle of persistent storage in Kubernetes and Openshift.\n\n**Supported Container Orchestrators:**\n* Kubernetes 1.13 to 1.20\n* Red Hat OpenShift 4.1 to 4.7\n\n**Supported Hedvig Releases:**\n* Hedvig 4.0\n* Hedvig 4.1\n* Hedvig 4.2\n* Hedvig 4.3\n\nPlease refer to the [documentation](https://documentation.commvault.com/commvault/hedvig/others/pdf/Hedvig_Operator_User_Guide.pdf) for steps to install and use the operator.\n\n\n\n\n\n",
      "csv_display_name": "Hedvig Operator",
      "csv_metadata_description": "Hedvig Operator is the official operator to deploy and manage Hedvig components in container orchestrators such as Kubernetes and Openshift.",
      "csv_name": "hedvig-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:52:16.203000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hedvig-operator",
      "provided_apis": [
        {
          "group": "hedvig.io",
          "kind": "HedvigDeploy",
          "plural": "hedvigdeploys",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator1-49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1-annotation"
        },
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60ca921da5f4191b6335f5ef",
      "alm_examples": [
        {
          "api_version": "hedvig.io/v1",
          "kind": "HedvigDeploy",
          "metadata": {
            "name": "testdeploy",
            "namespace": "hedvig"
          },
          "spec": {
            "cluster": {
              "name": "hedvigcl",
              "seeds": [
                "hedvigcl1.hedvig.io",
                "hedvigcl2.hedvig.io",
                "hedvigcl3.hedvig.io"
              ]
            },
            "controller": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "k8s": {
              "name": "k8scl"
            },
            "node": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "proxy": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-proxy",
              "tag": "v-4.3.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "quay.io/k8scsi/csi-provisioner",
                "tag": "v1.6.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "quay.io/k8scsi/csi-snapshotter",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "quay.io/k8scsi/csi-resizer",
                "tag": "v0.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "quay.io/k8scsi/csi-node-driver-registrar",
                "tag": "v1.0-canary"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator@sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "bundle_path_digest": "sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-17T00:06:53.186000+00:00",
      "csv_description": "The Hedvig Distributed Storage Platform is a software-defined, scale-out storage solution. It distributes data simultaneously across multiple locations \u2013 from on-premises data centers to the cloud \u2013 and scales capacity on-demand by leveraging the storage of commodity x86/ARM servers. The distributed write maximizes availability and protects data from hardware failures ranging from a single disk to an entire site, improving disaster recovery planning.\n\nHedvig provides a CSI Driver for accelerating your journey into the container ecosystem. CSI Driver enables containerized applications to maintain state by dynamically provisioning and consuming Hedvig virtual disks as persistent volumes. \n### \n\nHedvig Operator deploys the Hedvig Storage Proxy and the Hedvig CSI Driver to manage the life cycle of persistent storage in Kubernetes and Openshift.\n\n**Supported Container Orchestrators:**\n* Kubernetes 1.13 to 1.20\n* Red Hat OpenShift 4.1 to 4.7\n\n**Supported Hedvig Releases:**\n* Hedvig 4.0\n* Hedvig 4.1\n* Hedvig 4.2\n* Hedvig 4.3\n\nPlease refer to the [documentation](https://documentation.commvault.com/commvault/hedvig/others/pdf/Hedvig_Operator_User_Guide.pdf) for steps to install and use the operator.\n\n\n\n\n\n",
      "csv_display_name": "Hedvig Operator",
      "csv_metadata_description": "Hedvig Operator is the official operator to deploy and manage Hedvig components in container orchestrators such as Kubernetes and Openshift.",
      "csv_name": "hedvig-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:27:13.078000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hedvig-operator",
      "provided_apis": [
        {
          "group": "hedvig.io",
          "kind": "HedvigDeploy",
          "plural": "hedvigdeploys",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator1-49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1-annotation"
        },
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60ca9275bb0cfd2a15da34b3",
      "alm_examples": [
        {
          "api_version": "hedvig.io/v1",
          "kind": "HedvigDeploy",
          "metadata": {
            "name": "testdeploy",
            "namespace": "hedvig"
          },
          "spec": {
            "cluster": {
              "name": "hedvigcl",
              "seeds": [
                "hedvigcl1.hedvig.io",
                "hedvigcl2.hedvig.io",
                "hedvigcl3.hedvig.io"
              ]
            },
            "controller": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "k8s": {
              "name": "k8scl"
            },
            "node": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-csi-volume-driver",
              "tag": "v-2.0"
            },
            "proxy": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "hedvig/hedvig-proxy",
              "tag": "v-4.3.1"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "quay.io/k8scsi/csi-provisioner",
                "tag": "v1.6.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "quay.io/k8scsi/csi-snapshotter",
                "tag": "v2.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "quay.io/k8scsi/csi-resizer",
                "tag": "v0.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "quay.io/k8scsi/csi-node-driver-registrar",
                "tag": "v1.0-canary"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator@sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "bundle_path_digest": "sha256:a68668ac612e5240c61c22f05f7c5c53054058d2caa624c6a49576e61de5d193",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-17T00:08:21.155000+00:00",
      "csv_description": "The Hedvig Distributed Storage Platform is a software-defined, scale-out storage solution. It distributes data simultaneously across multiple locations \u2013 from on-premises data centers to the cloud \u2013 and scales capacity on-demand by leveraging the storage of commodity x86/ARM servers. The distributed write maximizes availability and protects data from hardware failures ranging from a single disk to an entire site, improving disaster recovery planning.\n\nHedvig provides a CSI Driver for accelerating your journey into the container ecosystem. CSI Driver enables containerized applications to maintain state by dynamically provisioning and consuming Hedvig virtual disks as persistent volumes. \n### \n\nHedvig Operator deploys the Hedvig Storage Proxy and the Hedvig CSI Driver to manage the life cycle of persistent storage in Kubernetes and Openshift.\n\n**Supported Container Orchestrators:**\n* Kubernetes 1.13 to 1.20\n* Red Hat OpenShift 4.1 to 4.7\n\n**Supported Hedvig Releases:**\n* Hedvig 4.0\n* Hedvig 4.1\n* Hedvig 4.2\n* Hedvig 4.3\n\nPlease refer to the [documentation](https://documentation.commvault.com/commvault/hedvig/others/pdf/Hedvig_Operator_User_Guide.pdf) for steps to install and use the operator.\n\n\n\n\n\n",
      "csv_display_name": "Hedvig Operator",
      "csv_metadata_description": "Hedvig Operator is the official operator to deploy and manage Hedvig components in container orchestrators such as Kubernetes and Openshift.",
      "csv_name": "hedvig-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:45:28.431000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hedvig-operator",
      "provided_apis": [
        {
          "group": "hedvig.io",
          "kind": "HedvigDeploy",
          "plural": "hedvigdeploys",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator1-49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1-annotation"
        },
        {
          "digest": "sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "image": "registry.connect.redhat.com/commvault-hedvig/hedvig-operator1@sha256:49390fb8502978b56006de7e1fc40a5e74ee0c175d95359ddcdab487110c41f1",
          "name": "hedvig-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cae683bb0cfd2a15da34d7",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "bundle_path_digest": "sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-17T06:06:59.352000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:10:44.277000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "operator-bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5-annotation"
        },
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.8",
      "version_original": "1.13.8"
    },
    {
      "_id": "60cae6d6bb0cfd2a15da34d8",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "bundle_path_digest": "sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-17T06:08:22.583000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T02:03:29.504000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "operator-bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5-annotation"
        },
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.8",
      "version_original": "1.13.8"
    },
    {
      "_id": "60cae786bb0cfd2a15da34d9",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "bundle_path_digest": "sha256:ab36fb9782da2e6c9e69a582e43afec638786b9a58acca2faf4ca7510aac2e5b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.13",
      "creation_date": "2021-06-17T06:11:18.220000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.13.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:39:00.036000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "operator-bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5-annotation"
        },
        {
          "digest": "sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "image": "quay.io/tigera/operator@sha256:bc5dcc0d7a9449ee64fa701b95315b1440a9ca6ff6ae21fab384b99754a0d7e5",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.13.8",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.13.8",
      "version_original": "1.13.8"
    },
    {
      "_id": "60cb87489a087cbed9d02d60",
      "alm_examples": [
        {
          "api_version": "xcrypt.zettaset.com/v1alpha1",
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:6a9b95934c0b8b3dfa3f71c0052a5e55091c560d8db490bb227f9c4c2219f493",
      "bundle_path_digest": "sha256:6a9b95934c0b8b3dfa3f71c0052a5e55091c560d8db490bb227f9c4c2219f493",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-17T17:32:56.104000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:48:48.087000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.14",
      "version_original": "0.0.14"
    },
    {
      "_id": "60cbd4aa9de9b6266503fa84",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {},
              "azureFileShare": {
                "enabled": false
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem"
              },
              "configmap": {
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {},
                "mastersvc": {}
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "enabled": false
              },
              "replicas": 3,
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
                "replicas": 3,
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem"
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:df5719e58365fbd71274838705de8e49fe52a30417960fef6e799e01debf6c48",
      "bundle_path_digest": "sha256:df5719e58365fbd71274838705de8e49fe52a30417960fef6e799e01debf6c48",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-17T23:03:06.010000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:49:20.900000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "name": "neuvector-operator-e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937-annotation"
        },
        {
          "digest": "sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner"
        },
        {
          "digest": "sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "name": "updater"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager-33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc-annotation"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer-7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0-annotation"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner-ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7-annotation"
        },
        {
          "digest": "sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "name": "ubi8-aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0-annotation"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller-c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.3",
      "version_original": "1.2.3"
    },
    {
      "_id": "60cbd53a5f14ddb47d3b7286",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {},
              "azureFileShare": {
                "enabled": false
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem"
              },
              "configmap": {
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {},
                "mastersvc": {}
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "enabled": false
              },
              "replicas": 3,
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
                "replicas": 3,
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem"
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:df5719e58365fbd71274838705de8e49fe52a30417960fef6e799e01debf6c48",
      "bundle_path_digest": "sha256:df5719e58365fbd71274838705de8e49fe52a30417960fef6e799e01debf6c48",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-17T23:05:30.275000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:42:54.961000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "name": "neuvector-operator-e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937-annotation"
        },
        {
          "digest": "sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:e8159bafce02033f3d285bac809dff1bfdaae091d2ab2bdc0816736b510b2937",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner"
        },
        {
          "digest": "sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "name": "updater"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager-33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc-annotation"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer-7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0-annotation"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner-ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7-annotation"
        },
        {
          "digest": "sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "image": "registry.access.redhat.com/ubi8@sha256:aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0",
          "name": "ubi8-aec01a874399c3a3c31033b35761b28aef605504ade888f98f637442cc56b5c0-annotation"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller-c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.3",
      "version_original": "1.2.3"
    },
    {
      "_id": "60cc14155f14ddb47d3b729b",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-18T03:33:41.336000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:29:20.358000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "60cc15c94924e145193315c0",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-18T03:40:57.948000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:26:11.238000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "60cc15cd42099979d645f28a",
      "alm_examples": [
        {
          "api_version": "storage.hpe.com/v1",
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-18T03:41:01.588000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:57:06.631000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "60cc5a2842099979d645f296",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "enabled": false
              }
            },
            "clusterName": "DevelopmentCluster",
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "filterType": "whitelist",
                  "java": {
                    "dynamicPropertyResolution": {
                      "agentName": "",
                      "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_pod_name},ContainerHost"
                    },
                    "enabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {}
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "enabled": true
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "enabled": false,
                    "endPoint": {
                      "metricAlias": "container_name=container,pod_name=pod"
                    },
                    "filter": {}
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              }
            },
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:99abcf874cce95c5c3980221c322569a7272ab0dfe79f267886153c071f37a2f",
      "bundle_path_digest": "sha256:99abcf874cce95c5c3980221c322569a7272ab0dfe79f267886153c071f37a2f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-18T08:32:40.256000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   # The agent and Enterprise Manager connection details.\n   agentManager:\n     url: localhost:5001\n     # Agent/EM login credentials.\n     credential:\n\n   clusterName: DevelopmentCluster\n   # type should be Kubernetes or Openshift depending on the environment\n   type: Openshift\n   monitor:\n     application:\n       # autoattach properties\n       autoattach:\n         filterType: whitelist\n         # java autoattach properties\n         java:\n           enabled: true\n           propertiesOverride:\n         # dotnet autoattach properties\n         dotnet:\n           enabled: true\n           propertiesOverride:\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport:\n         correlation:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url:\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             # Password (if any) for connecting to the Prometheus backend URL.\n             password:\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token:\n             configFiles:\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name:\n             value:\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v21.4.0-32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:35:40.318000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "name": "uma-operator-c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502-annotation"
        },
        {
          "digest": "sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:c50fef5d0ce1e8e084e4b786a40e8214f1726ed08edd8c15d9e6011312719502",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:71b8554dcf13756e5769184b6af9e2971544cc38006a408cc4446d58c305b4d7",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:71b8554dcf13756e5769184b6af9e2971544cc38006a408cc4446d58c305b4d7",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "21.4.0-32",
      "version_original": "21.4.0-32"
    },
    {
      "_id": "60cc9a0242099979d645f2b1",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "bundle_path_digest": "sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-06-18T13:05:06.692000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:56:39.038000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator-4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c-annotation"
        },
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "densify"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "container-data-collection-forwarder-35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.2 <1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cc9a0c5f14ddb47d3b72eb",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "bundle_path_digest": "sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-06-18T13:05:16.072000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:46:10.425000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator-4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c-annotation"
        },
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "densify"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "container-data-collection-forwarder-35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.2 <1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cc9a929de9b6266503fab7",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "bundle_path_digest": "sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-06-18T13:07:30.471000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:03:05.933000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator-4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c-annotation"
        },
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "densify"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "container-data-collection-forwarder-35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.2 <1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cc9b2b4924e145193315e2",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "bundle_path_digest": "sha256:b3f96cea8295b88e41a54f80161ac32e79b28f5b0218f93f1f042ff1b9af847f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-06-18T13:10:03.968000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T05:05:55.461000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator-4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c-annotation"
        },
        {
          "digest": "sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:4ffd8236a6d78241ed9e0d566b581d38e73d5c006bb2f9bb074f6764e82fde6c",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "densify"
        },
        {
          "digest": "sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360",
          "name": "container-data-collection-forwarder-35cc2ff9f338e0bffcef4b52089597be0f01916c54f64d328b85ec1e5c0a5360-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.2 <1.0.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "60cd264a5f14ddb47d3b731e",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "bundle_path_digest": "sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-18T23:03:38.667000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:01:43.964000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator-9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37-annotation"
        },
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "60cd27095f14ddb47d3b731f",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "bundle_path_digest": "sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-18T23:06:49.846000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:43:50.528000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator-9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37-annotation"
        },
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "60cd271f4924e1451933160f",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "bundle_path_digest": "sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-18T23:07:11.093000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:31:16.893000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator-9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37-annotation"
        },
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "60cd2d555f14ddb47d3b7320",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "bundle_path_digest": "sha256:a3150ff18aa21ddeb3a7e052b3bbc65616b62c1d557e910b13528c85c8b9196a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-18T23:33:41.097000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:13:08.702000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator-9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37-annotation"
        },
        {
          "digest": "sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:9919b569be913c3113df9128f471e471275b85912ad9795b743dd8421492ba37",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.6",
      "version_original": "1.2.6"
    },
    {
      "_id": "60d1bca4e8987f225c721735",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "config",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "nodeName": "",
                "physicalFunctions": [
                  {
                    "bbDevConfig": {
                      "n3000": {
                        "downlink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        },
                        "flrTimeout": 610,
                        "networkType": "FPGA_5GNR",
                        "pfMode": true,
                        "uplink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        }
                      }
                    },
                    "pciAddress": "",
                    "pfDriver": "pci-pf-stub",
                    "vfAmount": 2,
                    "vfDriver": "vfio-pci"
                  }
                ]
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:d4f50ab741cc4df402ed5feaf67e9d01d004e5c0100bde3dedafed1c85ee7aad",
      "bundle_path_digest": "sha256:d4f50ab741cc4df402ed5feaf67e9d01d004e5c0100bde3dedafed1c85ee7aad",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-22T10:34:12.388000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "OpenNESS SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "",
      "csv_name": "sriov-fec.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:50:44.037000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2bf5d908eb9e5a6ce4ae4785b7afb72aae454138540d632d61a261665d06f5f6",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:2bf5d908eb9e5a6ce4ae4785b7afb72aae454138540d632d61a261665d06f5f6",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "60d2e3a3e8987f225c721778",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "bundle_path_digest": "sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T07:32:51.749000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:49:01.808000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "name": "wgs"
        },
        {
          "digest": "sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "name": "navigator"
        },
        {
          "digest": "sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.100200.14",
      "version_original": "1.100200.14"
    },
    {
      "_id": "60d2e3b3e8987f225c721779",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "bundle_path_digest": "sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T07:33:07.787000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:24:31.618000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "name": "wgs"
        },
        {
          "digest": "sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "name": "navigator"
        },
        {
          "digest": "sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100200.14",
      "version_original": "1.100200.14"
    },
    {
      "_id": "60d2e4afe8987f225c72177e",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "bundle_path_digest": "sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T07:37:19.141000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:51:04.136000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "name": "wgs"
        },
        {
          "digest": "sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "name": "navigator"
        },
        {
          "digest": "sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.100200.14",
      "version_original": "1.100200.14"
    },
    {
      "_id": "60d2e4c5e8987f225c72177f",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "bundle_path_digest": "sha256:093d48116235a4f03dbd35f876c9d0497e0fb050514c9e07beece810f52d27fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T07:37:41.348000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100200.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:24:20.551000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "navigator-operator-8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3-annotation"
        },
        {
          "digest": "sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1863609188df3305e95653951f4ae6b115789e7d9d1d696d1b098052ae0f4896",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:8c7e5386bb267b7d6ddc339356a283caf0161d8f37722ecc0f3ba1c7c8723ce3",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:6cad4a17156249465858beba5cf7e6b6d7cc2288650d5ba0ca5718f625bc15b0",
          "name": "domain"
        },
        {
          "digest": "sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:beb7ea95e13f66896f33256b65e16eef55a7c5e5199bd5ca299a4602f67c78f4",
          "name": "cm"
        },
        {
          "digest": "sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:0c2094915caa244aa04d0ae9cb5b9c360d7767056493953675b0b7ce38cb1d45",
          "name": "wgs"
        },
        {
          "digest": "sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:57cc96e8925607f9c74d43b49867809d97d4d65586ded202219604334311a7af",
          "name": "navigator"
        },
        {
          "digest": "sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:8bc136d1b81e007eb01d8753df04e14e5bdc2fe4a502f26ba878f549cbc5b647",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100200.14",
      "version_original": "1.100200.14"
    },
    {
      "_id": "60d2f202e8987f225c721782",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Db2-zos-db",
          "metadata": {
            "name": "db2-zos-db-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-nocode@sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "bundle_path_digest": "sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T08:34:10.123000+00:00",
      "csv_description": "OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs",
      "csv_display_name": "OpenLegacy Db2 Integration Image",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs.",
      "csv_name": "db2-zos-db-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:02:20.251000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "db2-zos-db-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Db2-zos-db",
          "plural": "db2-zos-dbs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator-129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator"
        },
        {
          "digest": "sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db@sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "name": "db2_zos_db"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d2f288e8987f225c721784",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Db2-zos-db",
          "metadata": {
            "name": "db2-zos-db-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-nocode@sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "bundle_path_digest": "sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T08:36:24.533000+00:00",
      "csv_description": "OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs",
      "csv_display_name": "OpenLegacy Db2 Integration Image",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs.",
      "csv_name": "db2-zos-db-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:38:30.953000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "db2-zos-db-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Db2-zos-db",
          "plural": "db2-zos-dbs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator-129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator"
        },
        {
          "digest": "sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db@sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "name": "db2_zos_db"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d2f294ff2993d811818489",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Db2-zos-db",
          "metadata": {
            "name": "db2-zos-db-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-nocode@sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "bundle_path_digest": "sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T08:36:36.574000+00:00",
      "csv_description": "OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs",
      "csv_display_name": "OpenLegacy Db2 Integration Image",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs.",
      "csv_name": "db2-zos-db-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:11:25.064000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "db2-zos-db-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Db2-zos-db",
          "plural": "db2-zos-dbs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator-129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator"
        },
        {
          "digest": "sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db@sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "name": "db2_zos_db"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d2f339e8987f225c721785",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Db2-zos-db",
          "metadata": {
            "name": "db2-zos-db-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-nocode@sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "bundle_path_digest": "sha256:f801fcb8a5c445ffce1dadcdca2f557f58ab40538721646320cff9401523561a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T08:39:21.302000+00:00",
      "csv_description": "OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs",
      "csv_display_name": "OpenLegacy Db2 Integration Image",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to DB2 DBs.",
      "csv_name": "db2-zos-db-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:21:57.778000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "db2-zos-db-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Db2-zos-db",
          "plural": "db2-zos-dbs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator-129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db-operator@sha256:129576dd38f6cb3f4a6dd2f4ed12602e7a2d60861572705e1e6a8c5ddf616c23",
          "name": "db2-zos-db-operator"
        },
        {
          "digest": "sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "image": "registry.connect.redhat.com/openlegacy-corp/db2-zos-db@sha256:eb195fbbea2b261a55f69c074d057eb5813330e6f25d846e603e752c3d1662ed",
          "name": "db2_zos_db"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d30013e8987f225c721789",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Ibm-mq",
          "metadata": {
            "name": "ibm-mq-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-nocode@sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "bundle_path_digest": "sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T09:34:11.328000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_display_name": "OpenLegacy No-code Integration with MQ",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_name": "ibm-mq-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:56:27.266000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ibm-mq-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Ibm-mq",
          "plural": "ibm-mqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator-8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm_mq"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm-mq-49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d306bee8987f225c72178b",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Ibm-mq",
          "metadata": {
            "name": "ibm-mq-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-nocode@sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "bundle_path_digest": "sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T10:02:38.065000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_display_name": "OpenLegacy No-code Integration with MQ",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_name": "ibm-mq-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:46:45.961000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-mq-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Ibm-mq",
          "plural": "ibm-mqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator-8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm_mq"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm-mq-49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d307f1ff2993d81181848d",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Ibm-mq",
          "metadata": {
            "name": "ibm-mq-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-nocode@sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "bundle_path_digest": "sha256:b9e465dbc5c71c11b11b65bc06aec82e8cb933e0bd610ce36de20cc36028930b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-23T10:07:45.936000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_display_name": "OpenLegacy No-code Integration with MQ",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to MQ queues.",
      "csv_name": "ibm-mq-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:46:15.011000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-mq-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Ibm-mq",
          "plural": "ibm-mqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator-8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq-operator@sha256:8ddc5bf44da6f7bc5067cc5b91f3704ac6f75a6992bf9d9cad81bf25d27537fa",
          "name": "ibm-mq-operator"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm_mq"
        },
        {
          "digest": "sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "image": "registry.connect.redhat.com/openlegacy-corp/ibm-mq@sha256:49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016",
          "name": "ibm-mq-49d85fd664c54299354f08670254e4acd3f1c901a72a5a629042a57cfb8e0016-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "60d34671e8987f225c721793",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "v2.4"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:ec331fa12813b989f8f43998b754cc7a724a2c6c472a9ccb23c21b51d0bcbbfe",
      "bundle_path_digest": "sha256:ec331fa12813b989f8f43998b754cc7a724a2c6c472a9ccb23c21b51d0bcbbfe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-23T14:34:25.819000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/OpenShift/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:25:10.341000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "name": "ionir-operator-d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d-annotation"
        },
        {
          "digest": "sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "60d34786e8987f225c721794",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "v2.4"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:ec331fa12813b989f8f43998b754cc7a724a2c6c472a9ccb23c21b51d0bcbbfe",
      "bundle_path_digest": "sha256:ec331fa12813b989f8f43998b754cc7a724a2c6c472a9ccb23c21b51d0bcbbfe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-23T14:39:02.491000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/OpenShift/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:41:01.445000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "name": "ionir-operator-d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d-annotation"
        },
        {
          "digest": "sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:d1763d87e8ff07d46bcc756d21e8c7ee54cf3761d98b84bc256c243bbb8fde0d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "60d3be84c7208e1f82577fe2",
      "alm_examples": [
        {
          "api_version": "csi.hpe.com/v1",
          "kind": "XSPC",
          "metadata": {
            "name": "xspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/xspc-csi-operator-bundle@sha256:903632bab40110356f458d7e3e914c31bbff4eb3889e59bb05c1b588867a727a",
      "bundle_path_digest": "sha256:903632bab40110356f458d7e3e914c31bbff4eb3889e59bb05c1b588867a727a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-23T23:06:44.258000+00:00",
      "csv_description": "## About\n\n## Requirements\n\n### Supported Driver Version\n\n* XSPC v3.6.0\n\n### Supported Platforms\n\n* OpenShift v4.5, v4.6, v4.7\n\n### Supported Operating Systems\n\n* RHEL 7.x",
      "csv_display_name": "HPE XP Storage CSI Driver Operator for Kubernetes",
      "csv_metadata_description": "An operator for managing HPE XP Storage CSI Driver Operator for Kubernetes.",
      "csv_name": "xspc-operator.1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:27:23.176000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "xspc-operator",
      "provided_apis": [
        {
          "group": "csi.hpe.com",
          "kind": "XSPC",
          "plural": "xspcs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d",
          "name": "xspc-csi-driver-operator-66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d-annotation"
        },
        {
          "digest": "sha256:66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d",
          "image": "registry.connect.redhat.com/hpestorage/xspc-csi-driver-operator@sha256:66ff4a5990587df41e6973352ac4cf92fa3be213c815b0c01e336f0e609c521d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "60d45f7dbc87930656669ba4",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-ts",
          "metadata": {
            "name": "mf-cics-ts-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-nocode@sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "bundle_path_digest": "sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T10:33:33.307000+00:00",
      "csv_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to CICS system leveraging a basic CICS application for connectivity.",
      "csv_display_name": "OpenLegacy CICS Adapter Integration Image",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate CICS specific content.",
      "csv_name": "mf-cics-ts-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:27:22.519000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "mf-cics-ts-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-ts",
          "plural": "mf-cics-tss",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator-d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf_cics_ts"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf-cics-ts-606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d45fe3bc87930656669ba5",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-ts",
          "metadata": {
            "name": "mf-cics-ts-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-nocode@sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "bundle_path_digest": "sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T10:35:15.033000+00:00",
      "csv_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to CICS system leveraging a basic CICS application for connectivity.",
      "csv_display_name": "OpenLegacy CICS Adapter Integration Image",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate CICS specific content.",
      "csv_name": "mf-cics-ts-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:55:18.903000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mf-cics-ts-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-ts",
          "plural": "mf-cics-tss",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator-d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf_cics_ts"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf-cics-ts-606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d45fe7bc87930656669ba6",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-ts",
          "metadata": {
            "name": "mf-cics-ts-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-nocode@sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "bundle_path_digest": "sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T10:35:19.151000+00:00",
      "csv_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to CICS system leveraging a basic CICS application for connectivity.",
      "csv_display_name": "OpenLegacy CICS Adapter Integration Image",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate CICS specific content.",
      "csv_name": "mf-cics-ts-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T05:02:23.795000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "mf-cics-ts-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-ts",
          "plural": "mf-cics-tss",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator-d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf_cics_ts"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf-cics-ts-606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d46d7bbc87930656669baf",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-ts",
          "metadata": {
            "name": "mf-cics-ts-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-nocode@sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "bundle_path_digest": "sha256:cc02375c897a1163e1adf315286d008488beb8eecdc0b1804867434c9448e809",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T11:33:15.357000+00:00",
      "csv_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to CICS system leveraging a basic CICS application for connectivity.",
      "csv_display_name": "OpenLegacy CICS Adapter Integration Image",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate CICS specific content.",
      "csv_name": "mf-cics-ts-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:47:31.762000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "mf-cics-ts-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-ts",
          "plural": "mf-cics-tss",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator-d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts-operator@sha256:d32cd4ae53ce1fdba71c9e38c1bada1a2588694fd58ab0c06304bb4de35d317c",
          "name": "mf-cics-ts-operator"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf_cics_ts"
        },
        {
          "digest": "sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-ts@sha256:606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a",
          "name": "mf-cics-ts-606f08effdb13dc63fa4ef050a65988c8cc86eb978984e8c754ecb90c4c9291a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d46e82bc87930656669bb2",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-tg",
          "metadata": {
            "name": "mf-cics-tg-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-nocode@sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "bundle_path_digest": "sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T11:37:38.937000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to CICS systems with CTG installed",
      "csv_display_name": "OpenLegacy No-code Integration with CICS CTG",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate the CICS specific content. It leverages CTG for the connection services. Please us the OpenLegacy No-code Integration with CICS system operator if you don't have CTG installed.",
      "csv_name": "mf-cics-tg-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:33:32.628000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "mf-cics-tg-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-tg",
          "plural": "mf-cics-tgs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator-103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf_cics_tg"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf-cics-tg-bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d46ebec7208e1f82577ff0",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-tg",
          "metadata": {
            "name": "mf-cics-tg-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-nocode@sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "bundle_path_digest": "sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T11:38:38.828000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to CICS systems with CTG installed",
      "csv_display_name": "OpenLegacy No-code Integration with CICS CTG",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate the CICS specific content. It leverages CTG for the connection services. Please us the OpenLegacy No-code Integration with CICS system operator if you don't have CTG installed.",
      "csv_name": "mf-cics-tg-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:45:33.127000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mf-cics-tg-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-tg",
          "plural": "mf-cics-tgs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator-103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf_cics_tg"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf-cics-tg-bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d4747fc7208e1f82577ff1",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-tg",
          "metadata": {
            "name": "mf-cics-tg-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-nocode@sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "bundle_path_digest": "sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T12:03:11.507000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to CICS systems with CTG installed",
      "csv_display_name": "OpenLegacy No-code Integration with CICS CTG",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate the CICS specific content. It leverages CTG for the connection services. Please us the OpenLegacy No-code Integration with CICS system operator if you don't have CTG installed.",
      "csv_name": "mf-cics-tg-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:07:17.880000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "mf-cics-tg-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-tg",
          "plural": "mf-cics-tgs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator-103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf_cics_tg"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf-cics-tg-bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60d4751dbc87930656669bb3",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "Mf-cics-tg",
          "metadata": {
            "name": "mf-cics-tg-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-nocode@sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "bundle_path_digest": "sha256:bf84c776f995025ffac87b50971ff401cf92badf987d5c34a19915fa5e124b87",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-24T12:05:49.411000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to CICS systems with CTG installed",
      "csv_display_name": "OpenLegacy No-code Integration with CICS CTG",
      "csv_metadata_description": "OpenLegacy connects to core systems, automatically generates digital services. This container includes the assets necessary to deploy to OpenShift once you generate the CICS specific content. It leverages CTG for the connection services. Please us the OpenLegacy No-code Integration with CICS system operator if you don't have CTG installed.",
      "csv_name": "mf-cics-tg-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:04:58.589000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "mf-cics-tg-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "Mf-cics-tg",
          "plural": "mf-cics-tgs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator-103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44-annotation"
        },
        {
          "digest": "sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:331049f20a66e983578d0cf0e2d447a495ac8734588a867df4b7a5a309beb991",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg-operator@sha256:103cff7195035944a0874f931cb0c8264a03209b7d629971515019fb47be3c44",
          "name": "mf-cics-tg-operator"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf_cics_tg"
        },
        {
          "digest": "sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "image": "registry.connect.redhat.com/openlegacy-corp/mf-cics-tg@sha256:bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49",
          "name": "mf-cics-tg-bc3915187df704fd6950045583562cf6421fae42ea182aae4142f8d9dabe8b49-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "60da09702d9a1be0419f7ff4",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:9a88454a1cb9fe76e6a3a788c0d7a9015af3cc1fd42caf63ad46602959fba2b8",
      "bundle_path_digest": "sha256:9a88454a1cb9fe76e6a3a788c0d7a9015af3cc1fd42caf63ad46602959fba2b8",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-28T17:40:00.879000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner on Red Hat OpenShift](https://docs.gitlab.com/runner/install/openshift.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:37:42.792000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0ac74dadb45986ba59d3080446441bf0de35ea58d320c14d1d81558c52beaf9d",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner@sha256:0ac74dadb45986ba59d3080446441bf0de35ea58d320c14d1d81558c52beaf9d",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:20d6b89d8880f1796e3d3fff84940803a0ea084eb5417773511d6a7e4650ffbf",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-helper@sha256:20d6b89d8880f1796e3d3fff84940803a0ea084eb5417773511d6a7e4650ffbf",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:74924b4c33290eb557680b4584f45890f7731f6b252bf5009e318d2d74f48735",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-operator@sha256:74924b4c33290eb557680b4584f45890f7731f6b252bf5009e318d2d74f48735",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60da48473a733787222135f5",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.19.4-1"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:4073f6eb6eb55cd8012a7b929e583ba915dbc0d92be9d6b057e6daac520283b9",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:c791ad2b333614b4409381e5898c1a48029104af25f722cc5c93945fbfe1a800",
      "bundle_path_digest": "sha256:c791ad2b333614b4409381e5898c1a48029104af25f722cc5c93945fbfe1a800",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-06-28T22:08:07.973000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.13",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:26:00.038000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185",
          "name": "artifactory-operator-97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185-annotation"
        },
        {
          "digest": "sha256:97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:97a64d13e85f782c55d9975bd478df61c6037a2fbe9213a0fbe076882d450185",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:34d7ea895d6eb132bcf388a520d9d2d0cd5a6ed995fad141dc03ac5bf0ec7aeb",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:34d7ea895d6eb132bcf388a520d9d2d0cd5a6ed995fad141dc03ac5bf0ec7aeb",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:cddf1f73ce3db90d27a65cf0fed5c2987d30e37ff5d0c8bda50cbeca0dd78ece",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:cddf1f73ce3db90d27a65cf0fed5c2987d30e37ff5d0c8bda50cbeca0dd78ece",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:4073f6eb6eb55cd8012a7b929e583ba915dbc0d92be9d6b057e6daac520283b9",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:4073f6eb6eb55cd8012a7b929e583ba915dbc0d92be9d6b057e6daac520283b9",
          "name": "init-4073f6eb6eb55cd8012a7b929e583ba915dbc0d92be9d6b057e6daac520283b9-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.13",
      "version_original": "1.1.13"
    },
    {
      "_id": "60dc80c14f8f52ae12028765",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "bundle_path_digest": "sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T14:33:37.030000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:34:24.640000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator-c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3-annotation"
        },
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.7",
      "version_original": "1.2.7"
    },
    {
      "_id": "60dc81822d9a1be0419f8a8c",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "bundle_path_digest": "sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T14:36:50.716000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:52:37.370000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator-c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3-annotation"
        },
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.7",
      "version_original": "1.2.7"
    },
    {
      "_id": "60dc87cc2d9a1be0419f8a90",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "bundle_path_digest": "sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T15:03:40.026000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:09:00.747000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator-c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3-annotation"
        },
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.7",
      "version_original": "1.2.7"
    },
    {
      "_id": "60dc885d4eeb9bde82ff5a63",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "bundle_path_digest": "sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-06-30T15:06:05.573000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:11:16.271000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "name": "console"
        },
        {
          "digest": "sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "name": "scanner"
        },
        {
          "digest": "sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scan-manager@sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "name": "scan_manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.10",
      "version_original": "1.3.10"
    },
    {
      "_id": "60dc88614eeb9bde82ff5a64",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "bundle_path_digest": "sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T15:06:09.442000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:07:36.335000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "name": "console"
        },
        {
          "digest": "sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "name": "scanner"
        },
        {
          "digest": "sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scan-manager@sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "name": "scan_manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.10",
      "version_original": "1.3.10"
    },
    {
      "_id": "60dc89044f8f52ae1202876c",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "route": {
                    "enabled": false,
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "route": {
                  "enabled": true,
                  "termination": "passthrough"
                },
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "bundle_path_digest": "sha256:a8c0bb66bd911a2720df2cf08391b768e719c2e23344d58913e681066fbbb556",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-06-30T15:08:52.404000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T02:14:49.747000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator-c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3-annotation"
        },
        {
          "digest": "sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:c81a77c533a3461137859060cadde4672599b0c886102128f5ebc43f47cc24a3",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "updater"
        },
        {
          "digest": "sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d",
          "name": "manager-0c825c3c3724a2cf6f0826febc275280c3163c23c6d0f9c007b195849a80a57d-annotation"
        },
        {
          "digest": "sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1",
          "name": "enforcer-5944774f3ccc6a0db0a26c520cb86f87bee0a80c61fac2c8ae4e2beca9ecb4e1-annotation"
        },
        {
          "digest": "sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544",
          "name": "scanner-2b6d5c012e43ae0599603128d0f8a585596b319b6de0e337158066649d8e9544-annotation"
        },
        {
          "digest": "sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "image": "registry.access.redhat.com/ubi8@sha256:2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5",
          "name": "ubi8-2349c135a60dea58776c48a78af490b97f0eb52c501b396fcd65e717c0be3cf5-annotation"
        },
        {
          "digest": "sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083",
          "name": "controller-063f753d6a07bf5b6e69b11f65e99920fa5921d9ab1f9317c91dbc4a8fd2f083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.7",
      "version_original": "1.2.7"
    },
    {
      "_id": "60de1a824eeb9bde82ff5dd5",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:8dea6665a8cd0a40b0ad7daa52f22ff341ae29c5b592636bfac25e4767224324",
      "bundle_path_digest": "sha256:8dea6665a8cd0a40b0ad7daa52f22ff341ae29c5b592636bfac25e4767224324",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-01T19:41:54.356000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:46:27.056000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.2.2",
      "version_original": "8.2.2"
    },
    {
      "_id": "60e47213db72db7d0fadcf1f",
      "alm_examples": [
        {
          "api_version": "apik10.kasten.io/v1alpha1",
          "kind": "K10",
          "metadata": {
            "name": "k10-sample"
          },
          "spec": {
            "ambassadorImage": {
              "image": "ambassador",
              "registry": "quay.io",
              "repository": "datawire"
            },
            "apigateway": {
              "serviceResolver": "dns"
            },
            "apiservices": {
              "deployed": true
            },
            "auth": {
              "basicAuth": {
                "enabled": false,
                "htpasswd": "",
                "secretName": ""
              },
              "dex": {
                "enabled": false,
                "providerURL": "",
                "redirectURL": ""
              },
              "groupAllowList": [],
              "k10AdminGroups": [],
              "k10AdminUsers": [],
              "ldap": {
                "bindDN": "",
                "bindPW": "",
                "bindPWSecretName": "",
                "dashboardURL": "",
                "enabled": false,
                "groupSearch": {
                  "baseDN": "",
                  "filter": "",
                  "nameAttr": "",
                  "userMatchers": []
                },
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "host": "",
                "insecureNoSSL": false,
                "insecureSkipVerifySSL": false,
                "restartPod": false,
                "secretName": "",
                "startTLS": false,
                "userSearch": {
                  "baseDN": "",
                  "emailAttr": "",
                  "filter": "",
                  "idAttr": "",
                  "nameAttr": "",
                  "preferredUsernameAttr": "",
                  "username": ""
                },
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "oidcAuth": {
                "clientID": "",
                "clientSecret": "",
                "enabled": false,
                "groupClaim": "",
                "groupPrefix": "",
                "logoutURL": "",
                "prompt": "",
                "providerURL": "",
                "redirectURL": "",
                "scopes": "",
                "secretName": "",
                "usernameClaim": "",
                "usernamePrefix": ""
              },
              "openshift": {
                "clientSecret": "",
                "dashboardURL": "",
                "enabled": false,
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureCA": false,
                "openshiftURL": "",
                "secretName": "",
                "serviceAccount": "",
                "useServiceAccountCA": false,
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "tokenAuth": {
                "enabled": false
              }
            },
            "cacertconfigmap": {
              "name": ""
            },
            "cluster": {
              "domainName": "cluster.local"
            },
            "clusterName": "",
            "dexImage": {
              "image": "dex",
              "registry": "quay.io",
              "repository": "dexidp"
            },
            "eula": {
              "accept": false
            },
            "executorReplicas": 3,
            "externalGateway": {
              "annotations": {},
              "awsSSLCertARN": "",
              "create": false,
              "fqdn": {
                "name": "",
                "type": ""
              }
            },
            "gateway": {
              "insecureDisableSSLVerify": false
            },
            "genericVolumeSnapshot": {
              "resources": {
                "limits": {
                  "cpu": "",
                  "memory": ""
                },
                "requests": {
                  "cpu": "",
                  "memory": ""
                }
              }
            },
            "global": {
              "airgapped": {
                "repository": ""
              },
              "images": {
                "aggregatedapis": "",
                "ambassador": "",
                "auth": "",
                "catalog": "",
                "cephtool": "",
                "config": "",
                "configmap-reload": "",
                "crypto": "",
                "dashboardbff": "",
                "datamover": "",
                "dex": "",
                "executor": "",
                "frontend": "",
                "jobs": "",
                "kanister": "",
                "kanister-tools": "",
                "logging": "",
                "metering": "",
                "prometheus": "",
                "state": "",
                "upgrade": ""
              },
              "persistence": {
                "accessMode": "ReadWriteOnce",
                "catalog": {
                  "size": ""
                },
                "enabled": true,
                "jobs": {
                  "size": ""
                },
                "logging": {
                  "size": ""
                },
                "metering": {
                  "size": "2Gi"
                },
                "mountPath": "/mnt/k10state",
                "size": "20Gi",
                "storageClass": ""
              },
              "rhMarketPlace": true,
              "upstreamCertifiedImages": true
            },
            "image": {
              "image": "",
              "pullPolicy": "Always",
              "registry": "gcr.io",
              "repository": "kasten-images",
              "tag": ""
            },
            "ingress": {
              "class": "",
              "create": false,
              "host": "",
              "tls": {
                "enabled": false
              },
              "urlPath": ""
            },
            "injectKanisterSidecar": {
              "enabled": false,
              "namespaceSelector": {
                "matchLabels": {}
              },
              "objectSelector": {
                "matchLabels": {}
              },
              "webhookServer": {
                "port": 8080
              }
            },
            "jaeger": {
              "agentDNS": "",
              "enabled": false
            },
            "kanisterPodCustomAnnotations": "",
            "kanisterPodCustomLabels": "",
            "kanisterToolsImage": {
              "image": "kanister-tools",
              "pullPolicy": "Always",
              "registry": "ghcr.io",
              "repository": "kanisterio"
            },
            "license": "",
            "limiter": {
              "csiSnapshots": 10,
              "genericVolumeCopies": 10,
              "genericVolumeRestores": 10,
              "genericVolumeSnapshots": 10,
              "providerSnapshots": 10
            },
            "logLevel": "info",
            "metering": {
              "awsMarketPlaceIamRole": "",
              "consumerId": "",
              "reportingKey": "",
              "serviceAccount": {
                "create": false,
                "name": ""
              }
            },
            "networkPolicy": {
              "create": true
            },
            "prometheus": {
              "alertmanager": {
                "affinity": {},
                "baseURL": "/",
                "configFileName": "alertmanager.yml",
                "configFromSecret": "",
                "configMapOverrideName": "",
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enabled": false,
                "extraArgs": {},
                "extraEnv": {},
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/alertmanager",
                  "tag": "v0.21.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "alertmanager",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "enableMeshPeer": false,
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "tolerations": [],
                "useClusterRole": true,
                "useExistingRole": false
              },
              "alertmanagerFiles": {
                "alertmanager.yml": {
                  "global": {},
                  "receivers": [
                    {
                      "name": "default-receiver"
                    }
                  ],
                  "route": {
                    "group_interval": "5m",
                    "group_wait": "10s",
                    "receiver": "default-receiver",
                    "repeat_interval": "3h"
                  }
                }
              },
              "configmapReload": {
                "alertmanager": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                },
                "prometheus": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                }
              },
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "images": {
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "catalog": "",
                  "cephtool": "",
                  "config": "",
                  "configmap-reload": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "executor": "",
                  "frontend": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": ""
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "rhMarketPlace": true,
                "upstreamCertifiedImages": true
              },
              "initChownData": {
                "enabled": false
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "kubeStateMetrics": {
                "enabled": false
              },
              "networkPolicy": {
                "enabled": true
              },
              "nodeExporter": {
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "hostNetwork": true,
                "hostPID": true,
                "hostRootfs": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/node-exporter",
                  "tag": "v1.1.2"
                },
                "name": "node-exporter",
                "nodeSelector": {},
                "pod": {
                  "labels": {}
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "None",
                  "externalIPs": [],
                  "hostPort": 9100,
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9100,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "updateStrategy": {
                  "type": "RollingUpdate"
                }
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "pushgateway": {
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "enabled": false,
                "extraArgs": {},
                "extraInitContainers": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/pushgateway",
                  "tag": "v1.3.1"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "pushgateway",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": false,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/probe": "pushgateway"
                  },
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9091,
                  "type": "ClusterIP"
                },
                "tolerations": []
              },
              "rbac": {
                "create": false
              },
              "scrapeCAdvisor": false,
              "server": {
                "affinity": {},
                "alertmanagers": [],
                "baseURL": "/k10/prometheus/",
                "configMapOverrideName": "k10-prometheus-config",
                "configPath": "/etc/config/prometheus.yml",
                "deploymentAnnotations": {},
                "dnsConfig": {},
                "dnsPolicy": "ClusterFirst",
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enableServiceLinks": true,
                "enabled": true,
                "env": [],
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraFlags": [
                  "web.enable-lifecycle"
                ],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "fullnameOverride": "prometheus-server",
                "global": {
                  "evaluation_interval": "1m",
                  "scrape_interval": "1m",
                  "scrape_timeout": "10s"
                },
                "hostAliases": [],
                "hostNetwork": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/prometheus/prometheus"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "livenessProbeFailureThreshold": 3,
                "livenessProbeInitialDelay": 30,
                "livenessProbePeriodSeconds": 15,
                "livenessProbeSuccessThreshold": 1,
                "livenessProbeTimeout": 10,
                "name": "server",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "8Gi",
                  "storageClass": "",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "/k10/prometheus/",
                "priorityClassName": "",
                "readinessProbeFailureThreshold": 3,
                "readinessProbeInitialDelay": 30,
                "readinessProbePeriodSeconds": 5,
                "readinessProbeSuccessThreshold": 1,
                "readinessProbeTimeout": 4,
                "remoteRead": [],
                "remoteWrite": [],
                "replicaCount": 1,
                "resources": {},
                "retention": "30d",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "gRPC": {
                    "enabled": false,
                    "servicePort": 10901
                  },
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "statefulsetReplica": {
                    "enabled": false,
                    "replica": 0
                  },
                  "type": "ClusterIP"
                },
                "sidecarContainers": {},
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "gRPC": {
                      "enabled": false,
                      "servicePort": 10901
                    },
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "storagePath": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": "100%",
                    "maxUnavailable": "100%"
                  },
                  "type": "RollingUpdate"
                },
                "terminationGracePeriodSeconds": 300,
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "serverFiles": {
                "alerting_rules.yml": {},
                "alerts": {},
                "prometheus.yml": {
                  "rule_files": [
                    "/etc/config/recording_rules.yml",
                    "/etc/config/alerting_rules.yml",
                    "/etc/config/rules",
                    "/etc/config/alerts"
                  ],
                  "scrape_configs": [
                    {
                      "job_name": "prometheus",
                      "static_configs": [
                        {
                          "targets": [
                            "localhost:9090"
                          ]
                        }
                      ]
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-apiservers",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "default;kubernetes;https",
                          "source_labels": [
                            "__meta_kubernetes_namespace",
                            "__meta_kubernetes_service_name",
                            "__meta_kubernetes_endpoint_port_name"
                          ]
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes-cadvisor",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics/cadvisor",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "job_name": "kubernetes-service-endpoints",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-service-endpoints-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    },
                    {
                      "honor_labels": true,
                      "job_name": "prometheus-pushgateway",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "pushgateway",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-services",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "metrics_path": "/probe",
                      "params": {
                        "module": [
                          "http_2xx"
                        ]
                      },
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        },
                        {
                          "source_labels": [
                            "__address__"
                          ],
                          "target_label": "__param_target"
                        },
                        {
                          "replacement": "blackbox",
                          "target_label": "__address__"
                        },
                        {
                          "source_labels": [
                            "__param_target"
                          ],
                          "target_label": "instance"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        },
                        {
                          "action": "drop",
                          "regex": "Pending|Succeeded|Failed",
                          "source_labels": [
                            "__meta_kubernetes_pod_phase"
                          ]
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    }
                  ]
                },
                "recording_rules.yml": {},
                "rules": {}
              },
              "serviceAccounts": {
                "alertmanager": {
                  "annotations": {},
                  "create": false
                },
                "kubeStateMetrics": {
                  "create": false
                },
                "nodeExporter": {
                  "annotations": {},
                  "create": false
                },
                "pushgateway": {
                  "annotations": {},
                  "create": false
                },
                "server": {
                  "annotations": {},
                  "create": true
                }
              }
            },
            "rbac": {
              "create": true
            },
            "resources": {},
            "route": {
              "annotations": {},
              "enabled": false,
              "host": "",
              "labels": {},
              "path": "/",
              "tls": {
                "enabled": false,
                "insecureEdgeTerminationPolicy": "Redirect",
                "termination": "edge"
              }
            },
            "scc": {
              "create": true
            },
            "secrets": {
              "apiTlsCrt": "",
              "apiTlsKey": "",
              "awsAccessKeyId": "",
              "awsIamRole": "",
              "awsSecretAccessKey": "",
              "azureADEndpoint": "",
              "azureADResourceID": "",
              "azureClientId": "",
              "azureClientSecret": "",
              "azureResourceGroup": "",
              "azureResourceMgrEndpoint": "",
              "azureSubscriptionID": "",
              "azureTenantId": "",
              "dockerConfig": "",
              "dockerConfigPath": "",
              "googleApiKey": "",
              "ibmSoftLayerApiKey": "",
              "ibmSoftLayerApiUsername": "",
              "vsphereEndpoint": "",
              "vspherePassword": "",
              "vsphereUsername": ""
            },
            "service": {
              "aggregatedApiPort": 10250,
              "externalPort": 8000,
              "gatewayAdminPort": 8877,
              "internalPort": 8000
            },
            "serviceAccount": {
              "create": true,
              "name": ""
            },
            "services": {
              "dashboardbff": {
                "hostNetwork": false
              },
              "executor": {
                "hostNetwork": false
              },
              "securityContext": {
                "fsGroup": 1000,
                "runAsUser": 1000
              }
            },
            "toolsImage": {
              "enabled": true,
              "pullPolicy": "Always"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kasten/kasten-bundle@sha256:aca1212f1ffd5d2b76817b0f29a76fef27501cdf5c44798cb5363da9b6397051",
      "bundle_path_digest": "sha256:aca1212f1ffd5d2b76817b0f29a76fef27501cdf5c44798cb5363da9b6397051",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-07-06T15:09:07.414000+00:00",
      "csv_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_display_name": "K10 Helm Operator",
      "csv_metadata_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_name": "k10-kasten-operator.4.0.5003",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:38:36.377000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k10-kasten-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b",
          "name": "k10-operator-298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b-annotation"
        },
        {
          "digest": "sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6d0286b8a8f6f3cd9d6cd8319400acf27b70fbb52df5808ec6fe2d9849be7d8c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:298c6b0f529604ea78321619c7ad2e116f2c86787960a03a201edb706a37ec0b",
          "name": "manager"
        },
        {
          "digest": "sha256:fd1958a016b874869adaa864ee07401bc1c55dd6a334929e6db38380b7f56543",
          "image": "registry.connect.redhat.com/kasten/aggregatedapis@sha256:fd1958a016b874869adaa864ee07401bc1c55dd6a334929e6db38380b7f56543",
          "name": "aggregatedapis"
        },
        {
          "digest": "sha256:a4acda5ee385396464e943c11380e6ed4cee55d1388f924d4983bf3a8ef59dbc",
          "image": "registry.connect.redhat.com/kasten/auth@sha256:a4acda5ee385396464e943c11380e6ed4cee55d1388f924d4983bf3a8ef59dbc",
          "name": "auth"
        },
        {
          "digest": "sha256:0c602e22c528dd271617e090827b240e9811e3e430a3ed1c5f0bb3cbc0ff449a",
          "image": "registry.connect.redhat.com/kasten/catalog@sha256:0c602e22c528dd271617e090827b240e9811e3e430a3ed1c5f0bb3cbc0ff449a",
          "name": "catalog"
        },
        {
          "digest": "sha256:6634c555a2d63f8a683e017f83fcaa91934b6d90b28fa8c6d6e81887b153d8ab",
          "image": "registry.connect.redhat.com/kasten/config@sha256:6634c555a2d63f8a683e017f83fcaa91934b6d90b28fa8c6d6e81887b153d8ab",
          "name": "config"
        },
        {
          "digest": "sha256:51514e0db8f672b91a2ec66fb39170bcdcac7d4ec5f76744c7f9d12e1fec7209",
          "image": "registry.connect.redhat.com/kasten/crypto@sha256:51514e0db8f672b91a2ec66fb39170bcdcac7d4ec5f76744c7f9d12e1fec7209",
          "name": "crypto"
        },
        {
          "digest": "sha256:7ae8f647b44494a687922c423dff8d8b63125df17a55e2952fe9e2625438cc1a",
          "image": "registry.connect.redhat.com/kasten/dashboardbff@sha256:7ae8f647b44494a687922c423dff8d8b63125df17a55e2952fe9e2625438cc1a",
          "name": "dashboardbff"
        },
        {
          "digest": "sha256:69d899fdb06a963b29bd3281e84e44022587f9bcd5be29bc406b6fd8b4357592",
          "image": "registry.connect.redhat.com/kasten/executor@sha256:69d899fdb06a963b29bd3281e84e44022587f9bcd5be29bc406b6fd8b4357592",
          "name": "executor"
        },
        {
          "digest": "sha256:287a2d8fc20d6ac0d7c35b962d14a70d4057286e48f5d428a5f252cfc6c669f6",
          "image": "registry.connect.redhat.com/kasten/frontend@sha256:287a2d8fc20d6ac0d7c35b962d14a70d4057286e48f5d428a5f252cfc6c669f6",
          "name": "frontend"
        },
        {
          "digest": "sha256:d11d4becac2bf961bbaa25577d9a4fc1d8b23efe85cb6ccbc9b9328cb177c59b",
          "image": "registry.connect.redhat.com/kasten/jobs@sha256:d11d4becac2bf961bbaa25577d9a4fc1d8b23efe85cb6ccbc9b9328cb177c59b",
          "name": "jobs"
        },
        {
          "digest": "sha256:ee74eb557c4b4ecdca57830416ce7af09ef7d4a3bd853da73fc8b3e06da7027f",
          "image": "registry.connect.redhat.com/kasten/kanister@sha256:ee74eb557c4b4ecdca57830416ce7af09ef7d4a3bd853da73fc8b3e06da7027f",
          "name": "kanister"
        },
        {
          "digest": "sha256:a5f3aab57929ef590899d225c67ff5039a635654fae8fe4a873154a36e3fb341",
          "image": "registry.connect.redhat.com/kasten/logging@sha256:a5f3aab57929ef590899d225c67ff5039a635654fae8fe4a873154a36e3fb341",
          "name": "logging"
        },
        {
          "digest": "sha256:ba2fb55bc7f7e5d2fd18d7cc5711ac3104a96c746180205beb9c550259132b2f",
          "image": "registry.connect.redhat.com/kasten/metering@sha256:ba2fb55bc7f7e5d2fd18d7cc5711ac3104a96c746180205beb9c550259132b2f",
          "name": "metering"
        },
        {
          "digest": "sha256:f39c1822afd602fbfec3a5b47bae106c13bd096dc3e0782dc83d39db4db970e8",
          "image": "registry.connect.redhat.com/kasten/state@sha256:f39c1822afd602fbfec3a5b47bae106c13bd096dc3e0782dc83d39db4db970e8",
          "name": "state"
        },
        {
          "digest": "sha256:adebb0e44b451773465345d518c7470851ff0c88408d079532e5398152da54ea",
          "image": "registry.connect.redhat.com/kasten/ambassador@sha256:adebb0e44b451773465345d518c7470851ff0c88408d079532e5398152da54ea",
          "name": "ambassador"
        },
        {
          "digest": "sha256:72546dde6d69358ba01260361abb8474958fe63c4b717a4504ecc74b306fc670",
          "image": "registry.connect.redhat.com/kasten/prometheus@sha256:72546dde6d69358ba01260361abb8474958fe63c4b717a4504ecc74b306fc670",
          "name": "prometheus"
        },
        {
          "digest": "sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395",
          "image": "registry.connect.redhat.com/kasten/configmap-reload@sha256:a320d6893b7b7ef006d0c4ee51bc223ecd07d845e8ec633e3485c7d1cc700395",
          "name": "configmapreload"
        },
        {
          "digest": "sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "image": "registry.connect.redhat.com/kasten/dex@sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "name": "dex"
        },
        {
          "digest": "sha256:e33203b51a1905204b9a6b474641a1b82a0db71e4cca55ddb10b5f390babeb29",
          "image": "registry.connect.redhat.com/kasten/kanister-tools@sha256:e33203b51a1905204b9a6b474641a1b82a0db71e4cca55ddb10b5f390babeb29",
          "name": "kanistertools"
        },
        {
          "digest": "sha256:216fcd6c27f9372518051ce20ceb8b887f5e7a62338a82fba25ff912305ce718",
          "image": "registry.connect.redhat.com/kasten/upgrade@sha256:216fcd6c27f9372518051ce20ceb8b887f5e7a62338a82fba25ff912305ce718",
          "name": "upgrade"
        },
        {
          "digest": "sha256:741a44bb4482e0c25f3680acd8fa02899ea9e41b44b46ff6aa3877a3180c6e07",
          "image": "registry.connect.redhat.com/kasten/cephtool@sha256:741a44bb4482e0c25f3680acd8fa02899ea9e41b44b46ff6aa3877a3180c6e07",
          "name": "cephtool"
        },
        {
          "digest": "sha256:19e04b7db994cb4e0b0626620d11b4d7f6a930e81d3de9c17ff8b06449c96a98",
          "image": "registry.connect.redhat.com/kasten/datamover@sha256:19e04b7db994cb4e0b0626620d11b4d7f6a930e81d3de9c17ff8b06449c96a98",
          "name": "datamover"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "4.0.5003",
      "version_original": "4.0.5003"
    },
    {
      "_id": "60e4db8fdb72db7d0fadcf37",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:abe1504fedbf38bc1cb45e5393216bae9cca95066ca84fa730c7e8b129930074",
      "bundle_path_digest": "sha256:abe1504fedbf38bc1cb45e5393216bae9cca95066ca84fa730c7e8b129930074",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-07-06T22:39:11.154000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner on Red Hat OpenShift](https://docs.gitlab.com/runner/install/openshift.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:48:33.448000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f48d93d89905284a35a72ec312ad4313bb1a42deaaab662eb181a65d34a89cd9",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner@sha256:f48d93d89905284a35a72ec312ad4313bb1a42deaaab662eb181a65d34a89cd9",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:9148c4c10685871e3bbed037d9c36e85f0603da38e721c5db2a85b9c6defeac9",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-helper@sha256:9148c4c10685871e3bbed037d9c36e85f0603da38e721c5db2a85b9c6defeac9",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:6ac79da50858f82949e1dae4a016cbe86b75de977fe747a958d28dcd5c8e4080",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-operator@sha256:6ac79da50858f82949e1dae4a016cbe86b75de977fe747a958d28dcd5c8e4080",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.0",
      "version_original": "1.2.0"
    }
  ],
  "page": 12,
  "page_size": 100,
  "total": 4532
}

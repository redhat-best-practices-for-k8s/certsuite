{
  "data": [
    {
      "_id": "62bf78dc09a31e274258b243",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-ee-olm-metadata@sha256:c593ed2375c6a44d041636b256ea909e8c06a914e0e3a07f7162f3959fdb0120",
      "bundle_path_digest": "sha256:c593ed2375c6a44d041636b256ea909e8c06a914e0e3a07f7162f3959fdb0120",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "1.11",
      "creation_date": "2022-07-01T22:44:44.185000+00:00",
      "csv_description": "Cilium Enterprise - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium Enterprise",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.11.6-x5140b7a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-28T15:51:51.912000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "cilium-enterprise",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3cd5fb5d7ebe2d2dbfe9279903c1cc1acee0d92e4c3108c1fd3671241bae5eae",
          "image": "quay.io/isovalent/cilium@sha256:3cd5fb5d7ebe2d2dbfe9279903c1cc1acee0d92e4c3108c1fd3671241bae5eae",
          "name": "cilium"
        },
        {
          "digest": "sha256:809fb167c9d8beea96a39fd5e7a2cba4d151cbef388e41430271608913fd451a",
          "image": "quay.io/isovalent/hubble-relay@sha256:809fb167c9d8beea96a39fd5e7a2cba4d151cbef388e41430271608913fd451a",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:230fd3e1d56c1a78997db7354e084b1b27973979a0feb68c671584ebcf3ee039",
          "image": "quay.io/isovalent/operator-generic@sha256:230fd3e1d56c1a78997db7354e084b1b27973979a0feb68c671584ebcf3ee039",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:3cd5fb5d7ebe2d2dbfe9279903c1cc1acee0d92e4c3108c1fd3671241bae5eae",
          "image": "quay.io/isovalent/cilium@sha256:3cd5fb5d7ebe2d2dbfe9279903c1cc1acee0d92e4c3108c1fd3671241bae5eae",
          "name": "preflight"
        },
        {
          "digest": "sha256:f3a647c73cc33196c15da0c4ec758520134235a4332d79e1f44a88d1aa84ab75",
          "image": "quay.io/isovalent/clustermesh-apiserver@sha256:f3a647c73cc33196c15da0c4ec758520134235a4332d79e1f44a88d1aa84ab75",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble-ui-oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble-enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble-enterprise-metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble-enterprise-operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble-export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble-export-fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble-export-s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble-rbac"
        },
        {
          "digest": "sha256:27c47c8d653f746b7574d24695c621783e4b6b37e7df2fb510c51bc01fabd6b7",
          "image": "registry.connect.redhat.com/isovalent/cilium-ee-olm@sha256:27c47c8d653f746b7574d24695c621783e4b6b37e7df2fb510c51bc01fabd6b7",
          "name": "operator"
        },
        {
          "digest": "sha256:809fb167c9d8beea96a39fd5e7a2cba4d151cbef388e41430271608913fd451a",
          "image": "quay.io/isovalent/hubble-relay@sha256:809fb167c9d8beea96a39fd5e7a2cba4d151cbef388e41430271608913fd451a",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:230fd3e1d56c1a78997db7354e084b1b27973979a0feb68c671584ebcf3ee039",
          "image": "quay.io/isovalent/operator-generic@sha256:230fd3e1d56c1a78997db7354e084b1b27973979a0feb68c671584ebcf3ee039",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble_ui_oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble_enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble_enterprise_metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble_enterprise_operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble_export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble_export_fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble_export_s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble_rbac"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.11.6+x5140b7a",
      "version_original": "1.11.6+x5140b7a"
    },
    {
      "_id": "62bf7ad609a31e274258b2e9",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-ee-olm-metadata@sha256:c593ed2375c6a44d041636b256ea909e8c06a914e0e3a07f7162f3959fdb0120",
      "bundle_path_digest": "sha256:c593ed2375c6a44d041636b256ea909e8c06a914e0e3a07f7162f3959fdb0120",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "1.11",
      "creation_date": "2022-07-01T22:53:10.665000+00:00",
      "csv_description": "Cilium Enterprise - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium Enterprise",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.11.6-x5140b7a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-28T16:06:16.162000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cilium-enterprise",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3cd5fb5d7ebe2d2dbfe9279903c1cc1acee0d92e4c3108c1fd3671241bae5eae",
          "image": "quay.io/isovalent/cilium@sha256:3cd5fb5d7ebe2d2dbfe9279903c1cc1acee0d92e4c3108c1fd3671241bae5eae",
          "name": "cilium"
        },
        {
          "digest": "sha256:809fb167c9d8beea96a39fd5e7a2cba4d151cbef388e41430271608913fd451a",
          "image": "quay.io/isovalent/hubble-relay@sha256:809fb167c9d8beea96a39fd5e7a2cba4d151cbef388e41430271608913fd451a",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:230fd3e1d56c1a78997db7354e084b1b27973979a0feb68c671584ebcf3ee039",
          "image": "quay.io/isovalent/operator-generic@sha256:230fd3e1d56c1a78997db7354e084b1b27973979a0feb68c671584ebcf3ee039",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:3cd5fb5d7ebe2d2dbfe9279903c1cc1acee0d92e4c3108c1fd3671241bae5eae",
          "image": "quay.io/isovalent/cilium@sha256:3cd5fb5d7ebe2d2dbfe9279903c1cc1acee0d92e4c3108c1fd3671241bae5eae",
          "name": "preflight"
        },
        {
          "digest": "sha256:f3a647c73cc33196c15da0c4ec758520134235a4332d79e1f44a88d1aa84ab75",
          "image": "quay.io/isovalent/clustermesh-apiserver@sha256:f3a647c73cc33196c15da0c4ec758520134235a4332d79e1f44a88d1aa84ab75",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble-ui-oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble-enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble-enterprise-metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble-enterprise-operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble-export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble-export-fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble-export-s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble-rbac"
        },
        {
          "digest": "sha256:27c47c8d653f746b7574d24695c621783e4b6b37e7df2fb510c51bc01fabd6b7",
          "image": "registry.connect.redhat.com/isovalent/cilium-ee-olm@sha256:27c47c8d653f746b7574d24695c621783e4b6b37e7df2fb510c51bc01fabd6b7",
          "name": "operator"
        },
        {
          "digest": "sha256:809fb167c9d8beea96a39fd5e7a2cba4d151cbef388e41430271608913fd451a",
          "image": "quay.io/isovalent/hubble-relay@sha256:809fb167c9d8beea96a39fd5e7a2cba4d151cbef388e41430271608913fd451a",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:230fd3e1d56c1a78997db7354e084b1b27973979a0feb68c671584ebcf3ee039",
          "image": "quay.io/isovalent/operator-generic@sha256:230fd3e1d56c1a78997db7354e084b1b27973979a0feb68c671584ebcf3ee039",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble_ui_oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble_enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble_enterprise_metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble_enterprise_operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble_export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble_export_fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble_export_s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble_rbac"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.11.6+x5140b7a",
      "version_original": "1.11.6+x5140b7a"
    },
    {
      "_id": "62bfb049b490e03bc2bd5fce",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "prometheus": {
                "serviceMonitor": {
                  "enabled": false
                }
              }
            },
            "kubeProxyReplacement": "probe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-ee-olm-metadata@sha256:31bdf5b1739babe85543958d4d37b1c3af20b44b77e7e272a7029b0aa60caeec",
      "bundle_path_digest": "sha256:31bdf5b1739babe85543958d4d37b1c3af20b44b77e7e272a7029b0aa60caeec",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "1.10",
      "creation_date": "2022-07-02T02:41:13.210000+00:00",
      "csv_description": "Cilium Enterprise - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium Enterprise",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.12-xb203fae",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-27T23:16:24.692000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "cilium-enterprise",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "image": "quay.io/isovalent/cilium@sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "name": "cilium"
        },
        {
          "digest": "sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "image": "quay.io/isovalent/hubble-relay@sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "image": "quay.io/isovalent/operator-generic@sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "image": "quay.io/isovalent/cilium@sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "name": "preflight"
        },
        {
          "digest": "sha256:e97ef13afeadc7e9395a0aa348cebd07260fe16e4081ae05e6a9b3969c8efa74",
          "image": "quay.io/isovalent/clustermesh-apiserver@sha256:e97ef13afeadc7e9395a0aa348cebd07260fe16e4081ae05e6a9b3969c8efa74",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble-ui-oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble-enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble-enterprise-metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble-enterprise-operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble-export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble-export-fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble-export-s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble-rbac"
        },
        {
          "digest": "sha256:23cb5e39ecfac55d3da9d328cbf8a7150916711479f788ab1e38bb56a72c3120",
          "image": "registry.connect.redhat.com/isovalent/cilium-ee-olm@sha256:23cb5e39ecfac55d3da9d328cbf8a7150916711479f788ab1e38bb56a72c3120",
          "name": "operator"
        },
        {
          "digest": "sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "image": "quay.io/isovalent/hubble-relay@sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "image": "quay.io/isovalent/operator-generic@sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble_ui_oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble_enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble_enterprise_metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble_enterprise_operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble_export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble_export_fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble_export_s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble_rbac"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.10.12+xb203fae",
      "version_original": "1.10.12+xb203fae"
    },
    {
      "_id": "62bfb22b0ad353df5d0065e6",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "prometheus": {
                "serviceMonitor": {
                  "enabled": false
                }
              }
            },
            "kubeProxyReplacement": "probe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-ee-olm-metadata@sha256:31bdf5b1739babe85543958d4d37b1c3af20b44b77e7e272a7029b0aa60caeec",
      "bundle_path_digest": "sha256:31bdf5b1739babe85543958d4d37b1c3af20b44b77e7e272a7029b0aa60caeec",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "1.10",
      "creation_date": "2022-07-02T02:49:15.181000+00:00",
      "csv_description": "Cilium Enterprise - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium Enterprise",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.12-xb203fae",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-27T23:32:50.341000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cilium-enterprise",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "image": "quay.io/isovalent/cilium@sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "name": "cilium"
        },
        {
          "digest": "sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "image": "quay.io/isovalent/hubble-relay@sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "image": "quay.io/isovalent/operator-generic@sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "image": "quay.io/isovalent/cilium@sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "name": "preflight"
        },
        {
          "digest": "sha256:e97ef13afeadc7e9395a0aa348cebd07260fe16e4081ae05e6a9b3969c8efa74",
          "image": "quay.io/isovalent/clustermesh-apiserver@sha256:e97ef13afeadc7e9395a0aa348cebd07260fe16e4081ae05e6a9b3969c8efa74",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble-ui-oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble-enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble-enterprise-metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble-enterprise-operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble-export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble-export-fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble-export-s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble-rbac"
        },
        {
          "digest": "sha256:23cb5e39ecfac55d3da9d328cbf8a7150916711479f788ab1e38bb56a72c3120",
          "image": "registry.connect.redhat.com/isovalent/cilium-ee-olm@sha256:23cb5e39ecfac55d3da9d328cbf8a7150916711479f788ab1e38bb56a72c3120",
          "name": "operator"
        },
        {
          "digest": "sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "image": "quay.io/isovalent/hubble-relay@sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "image": "quay.io/isovalent/operator-generic@sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble_ui_oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble_enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble_enterprise_metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble_enterprise_operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble_export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble_export_fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble_export_s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble_rbac"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.12+xb203fae",
      "version_original": "1.10.12+xb203fae"
    },
    {
      "_id": "62bfb24d655931047b6927df",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "prometheus": {
                "serviceMonitor": {
                  "enabled": false
                }
              }
            },
            "kubeProxyReplacement": "probe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-ee-olm-metadata@sha256:31bdf5b1739babe85543958d4d37b1c3af20b44b77e7e272a7029b0aa60caeec",
      "bundle_path_digest": "sha256:31bdf5b1739babe85543958d4d37b1c3af20b44b77e7e272a7029b0aa60caeec",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "1.10",
      "creation_date": "2022-07-02T02:49:49.839000+00:00",
      "csv_description": "Cilium Enterprise - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium Enterprise",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.12-xb203fae",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-27T23:33:31.555000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cilium-enterprise",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "image": "quay.io/isovalent/cilium@sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "name": "cilium"
        },
        {
          "digest": "sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "image": "quay.io/isovalent/hubble-relay@sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "image": "quay.io/isovalent/operator-generic@sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "image": "quay.io/isovalent/cilium@sha256:51c4f156e73565b9d5404c693f65cd84173111a6da7cac4ccfff51d4fcc917e0",
          "name": "preflight"
        },
        {
          "digest": "sha256:e97ef13afeadc7e9395a0aa348cebd07260fe16e4081ae05e6a9b3969c8efa74",
          "image": "quay.io/isovalent/clustermesh-apiserver@sha256:e97ef13afeadc7e9395a0aa348cebd07260fe16e4081ae05e6a9b3969c8efa74",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble-ui-oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble-enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble-enterprise-metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble-enterprise-operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble-export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble-export-fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble-export-s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble-rbac"
        },
        {
          "digest": "sha256:23cb5e39ecfac55d3da9d328cbf8a7150916711479f788ab1e38bb56a72c3120",
          "image": "registry.connect.redhat.com/isovalent/cilium-ee-olm@sha256:23cb5e39ecfac55d3da9d328cbf8a7150916711479f788ab1e38bb56a72c3120",
          "name": "operator"
        },
        {
          "digest": "sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "image": "quay.io/isovalent/hubble-relay@sha256:dfb499b9763bb01fb4c62b7110cc2a77b34423cd404c9a729caa464bd527fecb",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "image": "quay.io/isovalent/operator-generic@sha256:b618f7bdbf97e263f7a92b3b47dd160684c94ab4ea93cf80a7bc750be9eddcb4",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "image": "quay.io/isovalent/hubble-ui-enterprise-backend@sha256:e892cba6dafcdf6704df3135a0b38d11894a5f276ace40683e74cb62b9c311d8",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "image": "quay.io/isovalent/hubble-ui-enterprise@sha256:c9921c65892a5293a4f1bef787636d6ae58cec1af65da06862a47e3450afdc6e",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "image": "quay.io/oauth2-proxy/oauth2-proxy@sha256:ecd26b74a01f2b547ddaed4d32d35f8f5e09c378d5c1fc6cfa63f0adf659ac2b",
          "name": "hubble_ui_oauth"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        },
        {
          "digest": "sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "image": "quay.io/isovalent/hubble-enterprise@sha256:1e1d3e6c199546b2398f4166ff64210c04075bb407c8f07c5be8d3db08560d4a",
          "name": "hubble_enterprise"
        },
        {
          "digest": "sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "image": "quay.io/isovalent/hubble-enterprise-metadata@sha256:72c7aa3961f14df413569cd156820a45553bb24d393b11246a18bf8b6553e022",
          "name": "hubble_enterprise_metadata"
        },
        {
          "digest": "sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "image": "quay.io/isovalent/hubble-enterprise-operator@sha256:0d5e6a5d9c07780c18e5aa81d8f1c95c399bff2d36a44fa5f61ac89a788ca83b",
          "name": "hubble_enterprise_operator"
        },
        {
          "digest": "sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "image": "quay.io/cilium/hubble-export-stdout@sha256:f1b1475a3c89950481264f5f8ca63eea3b911a45dc83fdf15122d695a0fba9b3",
          "name": "hubble_export"
        },
        {
          "digest": "sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "image": "quay.io/isovalent/hubble-export-fluentd@sha256:05cb13f533f2c89b98a47cd58badda07add54077cd22283ca5028cb39f2e4486",
          "name": "hubble_export_fluentd"
        },
        {
          "digest": "sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "image": "quay.io/isovalent/hubble-export-s3@sha256:ce4f71f7f13301133b7d471b87fb81108b2c2da7fc29865ef96bc8431b2be72b",
          "name": "hubble_export_s3"
        },
        {
          "digest": "sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "image": "quay.io/isovalent/hubble-rbac@sha256:03f3304c157024356a6de13c3d91b4506b8e54d587920d80ebcc76cbcfeaeda6",
          "name": "hubble_rbac"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.12+xb203fae",
      "version_original": "1.10.12+xb203fae"
    },
    {
      "_id": "62c317dd0ad353df5d00dddb",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "bundle_path_digest": "sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-04T16:39:57.814000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-13T18:26:39.696000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.5.6",
      "version_original": "8.5.6"
    },
    {
      "_id": "62c317f80ad353df5d00dddd",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "bundle_path_digest": "sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-04T16:40:24.824000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-13T18:31:07.743000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.5.6",
      "version_original": "8.5.6"
    },
    {
      "_id": "62c3181509a31e2742593ab0",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "bundle_path_digest": "sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-04T16:40:53.763000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-13T18:30:36.751000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.5.6",
      "version_original": "8.5.6"
    },
    {
      "_id": "62c318a9655931047b69a031",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "bundle_path_digest": "sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-04T16:43:21.531000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-13T18:41:32.730000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.5.6",
      "version_original": "8.5.6"
    },
    {
      "_id": "62c318b60ad353df5d00ddec",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "bundle_path_digest": "sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-04T16:43:34.397000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-13T18:45:34.899000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.5.6",
      "version_original": "8.5.6"
    },
    {
      "_id": "62c318be09a31e2742593aba",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "bundle_path_digest": "sha256:65fd30b6c03b1f3eb44d8efb1407a7e0ba9e861adf3b9196640371482ced1df4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-04T16:43:42.408000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-13T18:37:34.572000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:8aa3d62bb82b65ba95daf3170c316485486e7ca8052b5b525566b7a15b6f08e5",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.5.6",
      "version_original": "8.5.6"
    },
    {
      "_id": "62c43b0d655931047b69bb20",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.3.1"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "bundle_path_digest": "sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-05T13:22:21.265000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.3/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-05T13:22:21.265000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "eck-operator-3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d-annotation"
        },
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.3.0",
      "version_original": "2.3.0"
    },
    {
      "_id": "62c43b2a655931047b69bb23",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.3.1"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "bundle_path_digest": "sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-05T13:22:50.066000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.3/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-05T13:22:50.066000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "version": "v1beta1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "version": "v1beta1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "version": "v1beta1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "eck-operator-3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d-annotation"
        },
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.3.0",
      "version_original": "2.3.0"
    },
    {
      "_id": "62c43b3b09a31e2742595610",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.3.1"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "bundle_path_digest": "sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-05T13:23:07.977000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.3/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-05T13:23:07.977000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "eck-operator-3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d-annotation"
        },
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.3.0",
      "version_original": "2.3.0"
    },
    {
      "_id": "62c43bb5b490e03bc2bdf465",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.3.1"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "bundle_path_digest": "sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-05T13:25:09.433000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.3/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-05T13:25:09.433000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "eck-operator-3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d-annotation"
        },
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.3.0",
      "version_original": "2.3.0"
    },
    {
      "_id": "62c43bee0ad353df5d00f93d",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.3.1"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "bundle_path_digest": "sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-05T13:26:06.050000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.3/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-05T13:26:06.050000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "eck-operator-3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d-annotation"
        },
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.3.0",
      "version_original": "2.3.0"
    },
    {
      "_id": "62c43ef9655931047b69bb57",
      "alm_examples": [
        {
          "api_version": "elasticsearch.k8s.elastic.co/v1",
          "kind": "Elasticsearch",
          "metadata": {
            "name": "elasticsearch-sample"
          },
          "spec": {
            "nodeSets": [
              {
                "config": {
                  "node.attr.attr_name": "attr_value",
                  "node.roles": [
                    "master",
                    "data"
                  ],
                  "node.store.allow_mmap": false
                },
                "count": 3,
                "name": "default",
                "podTemplate": {
                  "metadata": {
                    "labels": {
                      "foo": "bar"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "name": "elasticsearch",
                        "resources": {
                          "limits": {
                            "cpu": 2,
                            "memory": "4Gi"
                          },
                          "requests": {
                            "cpu": 1,
                            "memory": "4Gi"
                          }
                        }
                      }
                    ]
                  }
                }
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "kibana.k8s.elastic.co/v1",
          "kind": "Kibana",
          "metadata": {
            "name": "kibana-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "podTemplate": {
              "metadata": {
                "labels": {
                  "foo": "bar"
                }
              },
              "spec": {
                "containers": [
                  {
                    "name": "kibana",
                    "resources": {
                      "limits": {
                        "cpu": 2,
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": 0.5,
                        "memory": "1Gi"
                      }
                    }
                  }
                ]
              }
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "apm.k8s.elastic.co/v1",
          "kind": "ApmServer",
          "metadata": {
            "name": "apmserver-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "enterprisesearch.k8s.elastic.co/v1",
          "kind": "EnterpriseSearch",
          "metadata": {
            "name": "ent-sample"
          },
          "spec": {
            "config": {
              "ent_search.external_url": "https://localhost:3002"
            },
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        },
        {
          "api_version": "beat.k8s.elastic.co/v1beta1",
          "kind": "Beat",
          "metadata": {
            "name": "heartbeat-sample"
          },
          "spec": {
            "config": {
              "heartbeat.monitors": [
                {
                  "hosts": [
                    "elasticsearch-sample-es-http.default.svc:9200"
                  ],
                  "schedule": "@every 5s",
                  "type": "tcp"
                }
              ]
            },
            "deployment": {
              "podTemplate": {
                "spec": {
                  "securityContext": {
                    "runAsUser": 0
                  }
                }
              },
              "replicas": 1
            },
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "type": "heartbeat",
            "version": "8.3.1"
          }
        },
        {
          "api_version": "agent.k8s.elastic.co/v1alpha1",
          "kind": "Agent",
          "metadata": {
            "name": "agent-sample"
          },
          "spec": {
            "config": {
              "inputs": [
                {
                  "data_stream": {
                    "namespace": "default"
                  },
                  "meta": {
                    "package": {
                      "name": "system",
                      "version": "0.9.1"
                    }
                  },
                  "name": "system-1",
                  "revision": 1,
                  "streams": [
                    {
                      "cpu.metrics": [
                        "percentages",
                        "normalized_percentages"
                      ],
                      "data_stream": {
                        "dataset": "system.cpu",
                        "type": "metrics"
                      },
                      "id": "system/metrics-system.cpu",
                      "metricsets": [
                        "cpu"
                      ],
                      "period": "10s"
                    }
                  ],
                  "type": "system/metrics",
                  "use_output": "default"
                }
              ]
            },
            "daemonSet": {},
            "elasticsearchRefs": [
              {
                "name": "elasticsearch-sample"
              }
            ],
            "version": "8.3.1"
          }
        },
        {
          "api_version": "maps.k8s.elastic.co/v1alpha1",
          "kind": "ElasticMapsServer",
          "metadata": {
            "name": "ems-sample"
          },
          "spec": {
            "count": 1,
            "elasticsearchRef": {
              "name": "elasticsearch-sample"
            },
            "version": "8.3.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/elastic/eck@sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "bundle_path_digest": "sha256:9c3de68be969ea622539c2f7dfa643016154fa4a0a5ce9d33dae3bc855ea03bd",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-05T13:39:05.285000+00:00",
      "csv_description": "Elastic Cloud on Kubernetes (ECK) is the official operator by Elastic for automating the deployment, provisioning, management, and orchestration of Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes.\n\nCurrent features:\n\n*  Elasticsearch, Kibana, APM Server, Enterprise Search, Beats, Elastic Agent and Elastic Maps Server deployments\n*  TLS Certificates management\n*  Safe Elasticsearch cluster configuration and topology changes\n*  Persistent volumes usage\n*  Custom node configuration and attributes\n*  Secure settings keystore updates\n\nSupported versions:\n\n* Kubernetes 1.20-1.24\n* OpenShift 4.6-4.10\n* Google Kubernetes Engine (GKE), Azure Kubernetes Service (AKS), and Amazon Elastic Kubernetes Service (EKS)\n* Elasticsearch, Kibana, APM Server: 7.10+, 8+\n* Enterprise Search: 7.10+, 8+\n* Beats: 7.10+, 8+\n* Elastic Agent: 7.10+, 8+\n* Elastic Maps Server: 7.11+, 8+\n\nECK should work with all conformant installers as listed in these [FAQs](https://github.com/cncf/k8s-conformance/blob/master/faq.md#what-is-a-distribution-hosted-platform-and-an-installer). Distributions include source patches and so may not work as-is with ECK.\nAlpha, beta, and stable API versions follow the same [conventions used by Kubernetes](https://kubernetes.io/docs/concepts/overview/kubernetes-api/#api-versioning).\nSee the full [Elastic support matrix](https://www.elastic.co/support/matrix#matrix_kubernetes) for more information.\nSee the [Quickstart](https://www.elastic.co/guide/en/cloud-on-k8s/2.3/k8s-quickstart.html) to get started with ECK.",
      "csv_display_name": "Elasticsearch (ECK) Operator",
      "csv_metadata_description": "Run Elasticsearch, Kibana, APM Server, Beats, Enterprise Search, Elastic Agent and Elastic Maps Server on Kubernetes and OpenShift",
      "csv_name": "elasticsearch-eck-operator-certified.v2.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-05T13:39:05.285000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "elasticsearch-eck-operator-certified",
      "provided_apis": [
        {
          "group": "beat.k8s.elastic.co",
          "kind": "Beat",
          "plural": "beats",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1beta1"
        },
        {
          "group": "elasticsearch.k8s.elastic.co",
          "kind": "Elasticsearch",
          "plural": "elasticsearches",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1beta1"
        },
        {
          "group": "kibana.k8s.elastic.co",
          "kind": "Kibana",
          "plural": "kibanas",
          "version": "v1beta1"
        },
        {
          "group": "agent.k8s.elastic.co",
          "kind": "Agent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "apm.k8s.elastic.co",
          "kind": "ApmServer",
          "plural": "apmservers",
          "version": "v1alpha1"
        },
        {
          "group": "enterprisesearch.k8s.elastic.co",
          "kind": "EnterpriseSearch",
          "plural": "enterprisesearches",
          "version": "v1"
        },
        {
          "group": "maps.k8s.elastic.co",
          "kind": "ElasticMapsServer",
          "plural": "elasticmapsservers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "eck-operator-3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d-annotation"
        },
        {
          "digest": "sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "image": "registry.connect.redhat.com/elastic/eck-operator@sha256:3ed9323e46ccbdd932a259bb0dd9f04010ec842b4cc7b4c4e7ee889760a90c1d",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.3.0",
      "version_original": "2.3.0"
    },
    {
      "_id": "62c57e55655931047b69cf67",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/fredco/simple-demo-operator@sha256:0c77cdb922ca485bebaa18fc9c0e210a180ce4cbc5a82d009aefdc9d5f2f38ea",
      "bundle_path_digest": "sha256:0c77cdb922ca485bebaa18fc9c0e210a180ce4cbc5a82d009aefdc9d5f2f38ea",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T12:21:41.044000+00:00",
      "csv_description": "A simple demo operator with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "Simple Demo Operator",
      "csv_metadata_description": "",
      "csv_name": "simple-demo-operator.v0.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T12:21:41.044000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "simple-demo-operator",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3658954f199040b0f244945c94955f794ee68008657421002e1b32962e7c30fc",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3658954f199040b0f244945c94955f794ee68008657421002e1b32962e7c30fc",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:99b58208eef97de495e9c1e2369f8e09fae9854462146e54265599a180c59ba2",
          "image": "quay.io/opdev/simple-demo-operator@sha256:99b58208eef97de495e9c1e2369f8e09fae9854462146e54265599a180c59ba2",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.6",
      "version_original": "0.0.6"
    },
    {
      "_id": "62c57f590ad353df5d010cef",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/fredco/simple-demo-operator@sha256:0c77cdb922ca485bebaa18fc9c0e210a180ce4cbc5a82d009aefdc9d5f2f38ea",
      "bundle_path_digest": "sha256:0c77cdb922ca485bebaa18fc9c0e210a180ce4cbc5a82d009aefdc9d5f2f38ea",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T12:26:01.780000+00:00",
      "csv_description": "A simple demo operator with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "Simple Demo Operator",
      "csv_metadata_description": "",
      "csv_name": "simple-demo-operator.v0.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T12:26:01.780000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "simple-demo-operator",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3658954f199040b0f244945c94955f794ee68008657421002e1b32962e7c30fc",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:3658954f199040b0f244945c94955f794ee68008657421002e1b32962e7c30fc",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:99b58208eef97de495e9c1e2369f8e09fae9854462146e54265599a180c59ba2",
          "image": "quay.io/opdev/simple-demo-operator@sha256:99b58208eef97de495e9c1e2369f8e09fae9854462146e54265599a180c59ba2",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.6",
      "version_original": "0.0.6"
    },
    {
      "_id": "62c5b68d655931047b69d26b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-07-06T16:21:33.720000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T16:21:33.720000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5b68e655931047b69d26e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-07-06T16:21:34.608000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T16:21:34.608000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5b6c30ad353df5d010ff1",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-07-06T16:22:27.116000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T16:22:27.116000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5b6c4655931047b69d27d",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-07-06T16:22:28.489000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T16:22:28.489000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5b6d509a31e2742596d43",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-07-06T16:22:45.280000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T16:22:45.280000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5b6d60ad353df5d010ff6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-07-06T16:22:46.683000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T16:22:46.683000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5b867655931047b69d298",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-07-06T16:29:27.159000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T16:29:27.159000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5b8670ad353df5d011007",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-07-06T16:29:27.694000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T16:29:27.694000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5bb1ab490e03bc2be0c5a",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-07-06T16:40:58.957000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T16:40:58.957000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5bb1b0ad353df5d011024",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-07-06T16:40:59.980000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T16:40:59.980000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5bb2a0ad353df5d011027",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-07-06T16:41:14.350000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T16:41:14.350000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5bb2a09a31e2742596d71",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "bundle_path_digest": "sha256:3e0fde49a8e8c5f780a76087bbc42507a42fea0e1fea572ae05ba66d27338365",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-07-06T16:41:14.914000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T16:41:14.914000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "bootstrapper-image"
        },
        {
          "digest": "sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "image": "registry.connect.redhat.com/redislabs/services-manager@sha256:8b46f2aacfb3e1b243c0b64975accc55fd80b4de9c9ac4769c3c67a5676addc5",
          "name": "k8s-controller-image"
        },
        {
          "digest": "sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise@sha256:ffdf10a1b08115fd4de06f1cd751d36644a9bc9a8c11034cd432e9b66a5d2f73",
          "name": "rs-image"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "redis-enterprise-operator-b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6-annotation"
        },
        {
          "digest": "sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b771ef87bf211c17c37df028c202aac97170fb6d7d5d49b3ccb3410deb8212f6",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.10-45",
      "version_original": "6.2.10-45"
    },
    {
      "_id": "62c5fcdb655931047b69d795",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T21:21:31.645000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T21:21:31.645000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c5fcdc0ad353df5d0114d7",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-07-06T21:21:32.154000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T21:21:32.154000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c5fd10655931047b69d799",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T21:22:24.356000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T21:22:24.356000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c5fd10655931047b69d79b",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-07-06T21:22:24.856000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T21:22:24.856000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c5feaa655931047b69d7a3",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T21:29:14.543000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T21:29:14.543000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c5feabb490e03bc2be1145",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-07-06T21:29:15.114000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T21:29:15.114000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c600b90ad353df5d01150e",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-07-06T21:38:01.077000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T21:38:01.077000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c600b9655931047b69d7c8",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T21:38:01.677000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T21:38:01.677000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c6016db490e03bc2be1169",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T21:41:01.360000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T21:41:01.360000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c6016f655931047b69d7d8",
      "alm_examples": [
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Certificate",
          "metadata": {
            "name": "gitlab-serving-cert",
            "namespace": "gitlab-system"
          },
          "spec": {
            "dnsNames": [
              "gitlab-webhook-service.gitlab-system.svc",
              "gitlab-webhook-service.gitlab-system.svc.cluster.local"
            ],
            "issuerRef": {
              "kind": "Issuer",
              "name": "gitlab-selfsigned-issuer"
            },
            "secretName": "webhook-server-cert"
          }
        },
        {
          "api_version": "cert-manager.io/v1",
          "kind": "Issuer",
          "metadata": {
            "name": "gitlab-selfsigned-issuer",
            "namespace": "gitlab-system"
          },
          "spec": {
            "selfSigned": {}
          }
        },
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.1.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "bundle_path_digest": "sha256:4c11622a551d65a1f3cb87ccc55b05ba8912021048b136b79479a9ce856159fd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-07-06T21:41:03.245000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T21:41:03.245000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1beta1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha3"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha2"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Challenge",
          "plural": "challenges",
          "version": "v1"
        },
        {
          "group": "acme.cert-manager.io",
          "kind": "Order",
          "plural": "orders",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Certificate",
          "plural": "certificates",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha3"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1beta1"
        },
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        },
        {
          "group": "cert-manager.io",
          "kind": "ClusterIssuer",
          "plural": "clusterissuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "Issuer",
          "plural": "issuers",
          "version": "v1alpha2"
        },
        {
          "group": "cert-manager.io",
          "kind": "CertificateRequest",
          "plural": "certificaterequests",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "cloud-native/gitlab-operator-477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663-annotation"
        },
        {
          "digest": "sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:477e08afc29f802338a9b26f6cd2f04808a7495531cf81f6f7d693bff148d663",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "62c60b10655931047b69d831",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:9a7f126398b4947e2d18c7d9d6871b46582e3e147996c7d5cd88b46cde06ec30",
      "bundle_path_digest": "sha256:9a7f126398b4947e2d18c7d9d6871b46582e3e147996c7d5cd88b46cde06ec30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T22:22:08.989000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T22:22:08.989000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "coralogix-operator-4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "62c60b2c09a31e27425972a4",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:9a7f126398b4947e2d18c7d9d6871b46582e3e147996c7d5cd88b46cde06ec30",
      "bundle_path_digest": "sha256:9a7f126398b4947e2d18c7d9d6871b46582e3e147996c7d5cd88b46cde06ec30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T22:22:36.015000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T22:22:36.015000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "coralogix-operator-4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "62c60cc609a31e27425972b8",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:9a7f126398b4947e2d18c7d9d6871b46582e3e147996c7d5cd88b46cde06ec30",
      "bundle_path_digest": "sha256:9a7f126398b4947e2d18c7d9d6871b46582e3e147996c7d5cd88b46cde06ec30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T22:29:26.388000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T22:29:26.388000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "coralogix-operator-4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "62c60ccf655931047b69d84a",
      "alm_examples": [
        {
          "api_version": "loggers.coralogix.com/v1",
          "kind": "CoralogixLogger",
          "metadata": {
            "name": "coralogix-logger"
          },
          "spec": {
            "cluster_name": "cluster.local",
            "private_key": "00000000-0000-0000-0000-000000000000",
            "region": "Europe"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/coralogix/coralogix-operator-manifests-bundle@sha256:9a7f126398b4947e2d18c7d9d6871b46582e3e147996c7d5cd88b46cde06ec30",
      "bundle_path_digest": "sha256:9a7f126398b4947e2d18c7d9d6871b46582e3e147996c7d5cd88b46cde06ec30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-06T22:29:35.196000+00:00",
      "csv_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_display_name": "Coralogix Operator",
      "csv_metadata_description": "Coralogix is a machine data analytics SaaS platform that drastically improves the delivery & maintenance process for software providers. Using proprietary machine learning algorithms, Coralogix helps over 100 businesses reduce their issue resolution time, improve customer satisfaction and decrease maintenance costs.",
      "csv_name": "coralogix-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-06T22:29:35.196000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "coralogix-operator",
      "provided_apis": [
        {
          "group": "loggers.coralogix.com",
          "kind": "CoralogixLogger",
          "plural": "coralogixloggers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "coralogix-operator"
        },
        {
          "digest": "sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "image": "registry.connect.redhat.com/coralogix/coralogix-fluentd@sha256:925b2d97edd0681c10cc3cc61059e6fd17e68cb12f9386d4af50c1e380db422d",
          "name": "coralogix-fluentd"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "ose-kube-rbac-proxy"
        },
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "coralogix-operator-4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389-annotation"
        },
        {
          "digest": "sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:bb54bc66185afa09853744545d52ea22f88b67756233a47b9f808fe59cda925e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "image": "registry.connect.redhat.com/coralogix/coralogix-operator@sha256:4673e4db99fb76496479fa30f390c02c14018cdb13450a78efc6690c8420f389",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "62c6d988655931047b69e850",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1-12-0",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "finalizers": [
              "delete-psmdb-pods-in-order"
            ],
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
              "pitr": {
                "compressionLevel": 6,
                "compressionType": "gzip",
                "enabled": false
              },
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.12.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
            "imagePullPolicy": "Always",
            "multiCluster": {
              "DNSSuffix": "svc.clusterset.local",
              "enabled": false
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "3Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "encryptionKey": "my-cluster-name-mongodb-encryption-key",
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "clusterName": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:7b6e3cf854a141cb1e0215386ac56e0317055a8040b338d34af0c2a233e964ea",
      "bundle_path_digest": "sha256:7b6e3cf854a141cb1e0215386ac56e0317055a8040b338d34af0c2a233e964ea",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-07T13:03:04.057000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_USER: cG1t\n  PMM_SERVER_PASSWORD: c3VwYXxefHBheno=\n```\n### Release Highlights\n* The Operator is able now to use the Amazon Web Services feature of authenticating applications running on EC2 instances based on Identity and Access Management (IAM) roles assigned to the instance.\n  This makes it possible to configure S3 backup on AWS without using IAM keys saved in Secrets\n* This release brings support for the Multi Cluster Services (MCS).\n  This allows users to deploy MongoDB with Percona Operator across multiple Kubernetes clusters using MCS, which extends the reach of the Service object beyond one cluster, so one Service can be used\nacross multiple clusters.\n  It can be used to provide disaster recovery or perform a migration for MongoDB clusters.\n* The OpenAPI schema is now generated for the Operator CRD, which allows Kubernetes to perform Custom Resource validation and saves user from occasionally applying deploy/cr.yaml with syntax typos\n\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator-certified.v1.12.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-07T13:03:04.057000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-1-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-6-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "plural": "perconaservermongodbrestores",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-9-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1alpha1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-5-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-12-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "plural": "perconaservermongodbbackups",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-10-0"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8789c2c89ece6482530341c36dd69523673b38178ab5b597970d77bf8860a9df",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:8789c2c89ece6482530341c36dd69523673b38178ab5b597970d77bf8860a9df",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:f1b88d6e69092692682a742ef3a70b032761c8b21a42c7e7ba175f06b203208a",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f1b88d6e69092692682a742ef3a70b032761c8b21a42c7e7ba175f06b203208a",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "name": "backup"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "operator"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "percona-server-mongodb-operator-e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802-annotation"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "name": "percona-server-mongodb-operator-containers-f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165-annotation"
        },
        {
          "digest": "sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
          "name": "percona-server-mongodb-operator-containers-cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4-annotation"
        },
        {
          "digest": "sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "name": "percona-server-mongodb-operator-containers-e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.12.0",
      "version_original": "1.12.0"
    },
    {
      "_id": "62c6db90b490e03bc2be2265",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1-12-0",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "finalizers": [
              "delete-psmdb-pods-in-order"
            ],
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
              "pitr": {
                "compressionLevel": 6,
                "compressionType": "gzip",
                "enabled": false
              },
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.12.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
            "imagePullPolicy": "Always",
            "multiCluster": {
              "DNSSuffix": "svc.clusterset.local",
              "enabled": false
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "3Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "encryptionKey": "my-cluster-name-mongodb-encryption-key",
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "clusterName": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:7b6e3cf854a141cb1e0215386ac56e0317055a8040b338d34af0c2a233e964ea",
      "bundle_path_digest": "sha256:7b6e3cf854a141cb1e0215386ac56e0317055a8040b338d34af0c2a233e964ea",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-07T13:11:44.213000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_USER: cG1t\n  PMM_SERVER_PASSWORD: c3VwYXxefHBheno=\n```\n### Release Highlights\n* The Operator is able now to use the Amazon Web Services feature of authenticating applications running on EC2 instances based on Identity and Access Management (IAM) roles assigned to the instance.\n  This makes it possible to configure S3 backup on AWS without using IAM keys saved in Secrets\n* This release brings support for the Multi Cluster Services (MCS).\n  This allows users to deploy MongoDB with Percona Operator across multiple Kubernetes clusters using MCS, which extends the reach of the Service object beyond one cluster, so one Service can be used\nacross multiple clusters.\n  It can be used to provide disaster recovery or perform a migration for MongoDB clusters.\n* The OpenAPI schema is now generated for the Operator CRD, which allows Kubernetes to perform Custom Resource validation and saves user from occasionally applying deploy/cr.yaml with syntax typos\n\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator-certified.v1.12.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-07T13:11:44.213000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-6-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-1-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-10-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-12-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-5-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1alpha1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "plural": "perconaservermongodbbackups",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "plural": "perconaservermongodbrestores",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-9-0"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8789c2c89ece6482530341c36dd69523673b38178ab5b597970d77bf8860a9df",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:8789c2c89ece6482530341c36dd69523673b38178ab5b597970d77bf8860a9df",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:f1b88d6e69092692682a742ef3a70b032761c8b21a42c7e7ba175f06b203208a",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f1b88d6e69092692682a742ef3a70b032761c8b21a42c7e7ba175f06b203208a",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "name": "backup"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "operator"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "percona-server-mongodb-operator-e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802-annotation"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "name": "percona-server-mongodb-operator-containers-f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165-annotation"
        },
        {
          "digest": "sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
          "name": "percona-server-mongodb-operator-containers-cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4-annotation"
        },
        {
          "digest": "sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "name": "percona-server-mongodb-operator-containers-e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.12.0",
      "version_original": "1.12.0"
    },
    {
      "_id": "62c6dbad09a31e2742598397",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1-12-0",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "finalizers": [
              "delete-psmdb-pods-in-order"
            ],
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
              "pitr": {
                "compressionLevel": 6,
                "compressionType": "gzip",
                "enabled": false
              },
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.12.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
            "imagePullPolicy": "Always",
            "multiCluster": {
              "DNSSuffix": "svc.clusterset.local",
              "enabled": false
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "3Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "encryptionKey": "my-cluster-name-mongodb-encryption-key",
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "clusterName": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:7b6e3cf854a141cb1e0215386ac56e0317055a8040b338d34af0c2a233e964ea",
      "bundle_path_digest": "sha256:7b6e3cf854a141cb1e0215386ac56e0317055a8040b338d34af0c2a233e964ea",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-07T13:12:13.870000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_USER: cG1t\n  PMM_SERVER_PASSWORD: c3VwYXxefHBheno=\n```\n### Release Highlights\n* The Operator is able now to use the Amazon Web Services feature of authenticating applications running on EC2 instances based on Identity and Access Management (IAM) roles assigned to the instance.\n  This makes it possible to configure S3 backup on AWS without using IAM keys saved in Secrets\n* This release brings support for the Multi Cluster Services (MCS).\n  This allows users to deploy MongoDB with Percona Operator across multiple Kubernetes clusters using MCS, which extends the reach of the Service object beyond one cluster, so one Service can be used\nacross multiple clusters.\n  It can be used to provide disaster recovery or perform a migration for MongoDB clusters.\n* The OpenAPI schema is now generated for the Operator CRD, which allows Kubernetes to perform Custom Resource validation and saves user from occasionally applying deploy/cr.yaml with syntax typos\n\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator-certified.v1.12.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-07T13:12:13.870000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-1-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-12-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "plural": "perconaservermongodbbackups",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "plural": "perconaservermongodbrestores",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-5-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1alpha1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-10-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-9-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-6-0"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8789c2c89ece6482530341c36dd69523673b38178ab5b597970d77bf8860a9df",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:8789c2c89ece6482530341c36dd69523673b38178ab5b597970d77bf8860a9df",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:f1b88d6e69092692682a742ef3a70b032761c8b21a42c7e7ba175f06b203208a",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f1b88d6e69092692682a742ef3a70b032761c8b21a42c7e7ba175f06b203208a",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "name": "backup"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "operator"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "percona-server-mongodb-operator-e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802-annotation"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "name": "percona-server-mongodb-operator-containers-f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165-annotation"
        },
        {
          "digest": "sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
          "name": "percona-server-mongodb-operator-containers-cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4-annotation"
        },
        {
          "digest": "sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "name": "percona-server-mongodb-operator-containers-e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.12.0",
      "version_original": "1.12.0"
    },
    {
      "_id": "62c6dbaf655931047b69e872",
      "alm_examples": [
        {
          "api_version": "psmdb.percona.com/v1-12-0",
          "kind": "PerconaServerMongoDB",
          "metadata": {
            "finalizers": [
              "delete-psmdb-pods-in-order"
            ],
            "name": "my-cluster-name"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
              "pitr": {
                "compressionLevel": 6,
                "compressionType": "gzip",
                "enabled": false
              },
              "serviceAccountName": "percona-server-mongodb-operator"
            },
            "crVersion": "1.12.0",
            "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
            "imagePullPolicy": "Always",
            "multiCluster": {
              "DNSSuffix": "svc.clusterset.local",
              "enabled": false
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
              "serverHost": "monitoring-service"
            },
            "replsets": [
              {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "arbiter": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "size": 1
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "name": "rs0",
                "nonvoting": {
                  "affinity": {
                    "antiAffinityTopologyKey": "kubernetes.io/hostname"
                  },
                  "enabled": false,
                  "podDisruptionBudget": {
                    "maxUnavailable": 1
                  },
                  "resources": {
                    "limits": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    },
                    "requests": {
                      "cpu": "300m",
                      "memory": "0.5G"
                    }
                  },
                  "size": 3,
                  "volumeSpec": {
                    "persistentVolumeClaim": {
                      "resources": {
                        "requests": {
                          "storage": "3Gi"
                        }
                      }
                    }
                  }
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              }
            ],
            "secrets": {
              "encryptionKey": "my-cluster-name-mongodb-encryption-key",
              "users": "my-cluster-name-secrets"
            },
            "sharding": {
              "configsvrReplSet": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "enabled": false,
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3,
                "volumeSpec": {
                  "persistentVolumeClaim": {
                    "resources": {
                      "requests": {
                        "storage": "3Gi"
                      }
                    }
                  }
                }
              },
              "enabled": true,
              "mongos": {
                "affinity": {
                  "antiAffinityTopologyKey": "kubernetes.io/hostname"
                },
                "expose": {
                  "exposeType": "ClusterIP"
                },
                "podDisruptionBudget": {
                  "maxUnavailable": 1
                },
                "resources": {
                  "limits": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  },
                  "requests": {
                    "cpu": "300m",
                    "memory": "0.5G"
                  }
                },
                "size": 3
              }
            },
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 2 * * *",
              "setFCV": false,
              "versionServiceEndpoint": "https://check.percona.com"
            }
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "clusterName": "my-cluster-name",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "psmdb.percona.com/v1",
          "kind": "PerconaServerMongoDBRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "clusterName": "my-cluster-name"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-bundle@sha256:7b6e3cf854a141cb1e0215386ac56e0317055a8040b338d34af0c2a233e964ea",
      "bundle_path_digest": "sha256:7b6e3cf854a141cb1e0215386ac56e0317055a8040b338d34af0c2a233e964ea",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-07T13:12:15.049000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nThe Percona Distribution for MongoDB Kubernetes Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance modification, or deletion of items in your Percona Server for MongoDB environment. The Operator contains the necessary Kubernetes settings to maintain a consistent Percona Server for MongoDB instance.\n\nConsult the [documentation](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/index.html/) on the Percona Kubernetes Operator for Percona Server for MongoDB for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster** - change the `size` parameter to [add or remove members](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/scaling.html) of the replica set. Three is the minimum recommended size for a functioning replica set.\n\n* **Add Monitoring** - [Percona Monitoring and Management (PMM) can be easily deployed](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/monitoring.html) to monitor your Percona Server for MongoDB replica set(s). The recommended installation process uses Helm, the package manager for Kubernetes.\n\n* **Automate Your Backups** - [configure automatic backups](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/backups.html) to run on a scheduled basis or run an on-demand backup at any time. Backups are performed using Percona Backup for MongoDB (PBM) and can be stored on local PVs or in any S3-compatible cloud storage provider.\n\n### Common Configurations\n\n* **Set Member as Arbiter** - [Set up a replica set which contains an arbiter](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/arbiter.html), which participates in elections but does not store any data.  This reduces storage costs while helping maintain replica set integrity.\n\n* **Expose Members Outside K8S** - [by appropriately configuring the ServiceType](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/expose.html) you can expose replica set members outside of Kubernetes or provide statically assigned IP addresses.\n\n* **Utilize Local Storage Options** - [with support for Local Storage you can mount existing data directories](https://www.percona.com/doc/kubernetes-operator-for-psmongodb/storage.html) into your replica set managed by Kubernetes or utilize high performance hardware for local storage rather than network storage for your database.\n\n### Before You Start\n\nAdd the PSMDB user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-name-secrets\ntype: Opaque\ndata:\n  MONGODB_BACKUP_USER: YmFja3Vw\n  MONGODB_BACKUP_PASSWORD: YmFja3VwMTIzNDU2\n  MONGODB_CLUSTER_ADMIN_USER: Y2x1c3RlckFkbWlu\n  MONGODB_CLUSTER_ADMIN_PASSWORD: Y2x1c3RlckFkbWluMTIzNDU2\n  MONGODB_CLUSTER_MONITOR_USER: Y2x1c3Rlck1vbml0b3I=\n  MONGODB_CLUSTER_MONITOR_PASSWORD: Y2x1c3Rlck1vbml0b3IxMjM0NTY=\n  MONGODB_USER_ADMIN_USER: dXNlckFkbWlu\n  MONGODB_USER_ADMIN_PASSWORD: dXNlckFkbWluMTIzNDU2\n  PMM_SERVER_USER: cG1t\n  PMM_SERVER_PASSWORD: c3VwYXxefHBheno=\n```\n### Release Highlights\n* The Operator is able now to use the Amazon Web Services feature of authenticating applications running on EC2 instances based on Identity and Access Management (IAM) roles assigned to the instance.\n  This makes it possible to configure S3 backup on AWS without using IAM keys saved in Secrets\n* This release brings support for the Multi Cluster Services (MCS).\n  This allows users to deploy MongoDB with Percona Operator across multiple Kubernetes clusters using MCS, which extends the reach of the Service object beyond one cluster, so one Service can be used\nacross multiple clusters.\n  It can be used to provide disaster recovery or perform a migration for MongoDB clusters.\n* The OpenAPI schema is now generated for the Operator CRD, which allows Kubernetes to perform Custom Resource validation and saves user from occasionally applying deploy/cr.yaml with syntax typos\n\n\n",
      "csv_display_name": "Percona Distribution for MongoDB Operator",
      "csv_metadata_description": "Percona Distribution for MongoDB Operator automates the creation, modification, or deletion of items in your Percona Server for MongoDB environment",
      "csv_name": "percona-server-mongodb-operator-certified.v1.12.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-07T13:12:15.049000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "percona-server-mongodb-operator-certified",
      "provided_apis": [
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBBackup",
          "plural": "perconaservermongodbbackups",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-3-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-10-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1alpha1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-11-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-9-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-7-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-6-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-12-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDBRestore",
          "plural": "perconaservermongodbrestores",
          "version": "v1"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-8-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-1-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-2-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-4-0"
        },
        {
          "group": "psmdb.percona.com",
          "kind": "PerconaServerMongoDB",
          "plural": "perconaservermongodbs",
          "version": "v1-5-0"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8789c2c89ece6482530341c36dd69523673b38178ab5b597970d77bf8860a9df",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:8789c2c89ece6482530341c36dd69523673b38178ab5b597970d77bf8860a9df",
          "name": "mongod4.2"
        },
        {
          "digest": "sha256:f1b88d6e69092692682a742ef3a70b032761c8b21a42c7e7ba175f06b203208a",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f1b88d6e69092692682a742ef3a70b032761c8b21a42c7e7ba175f06b203208a",
          "name": "mongod4.4"
        },
        {
          "digest": "sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "name": "mongod5.0"
        },
        {
          "digest": "sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "name": "backup"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "operator"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "percona-server-mongodb-operator-e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802-annotation"
        },
        {
          "digest": "sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator@sha256:e9ed11994cef3f7ab33e126484d5d5991cccc00b54d066183d1c7abe8e29b802",
          "name": "percona-server-mongodb-operator"
        },
        {
          "digest": "sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165",
          "name": "percona-server-mongodb-operator-containers-f9c18daf3996548d3905eae9ab843e800e9279033439802026d5a27e72b33165-annotation"
        },
        {
          "digest": "sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4",
          "name": "percona-server-mongodb-operator-containers-cd8dbe211450197ffd3373fc5b58420bbc785ee9e90cfee0e8f163ae000cede4-annotation"
        },
        {
          "digest": "sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "image": "registry.connect.redhat.com/percona/percona-server-mongodb-operator-containers@sha256:e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1",
          "name": "percona-server-mongodb-operator-containers-e157eca8038ed2db3f9baafba1267e7654ae03e2a8d8e6c0b675c24aaeef2ca1-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.12.0",
      "version_original": "1.12.0"
    },
    {
      "_id": "62cc8055e4ad541e1fa6cfd7",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_AUTH_TYPE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_MAX_PATH_LIMIT",
                    "value": "192"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--leader-election-lease-duration=15s",
                    "--leader-election-renew-deadline=10s",
                    "--leader-election-retry-period=5s"
                  ],
                  "name": "common"
                },
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_TOPOLOGY_CONTROL_ENABLED",
                    "value": "false"
                  }
                ],
                "tolerations": [
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/memory-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/disk-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/network-unavailable",
                    "operator": "Exists"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_NFS_ACLS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {},
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "File",
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "node": {},
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:e3606060059e812714465554b2b4958f5103b5220d63589278c9c6fb4f832be9",
      "bundle_path_digest": "sha256:e3606060059e812714465554b2b4958f5103b5220d63589278c9c6fb4f832be9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-11T19:56:05.509000+00:00",
      "csv_description": "Dell CSI Operator for Dell CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-11T19:56:05.509000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "name": "dell-csi-operator-2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352-annotation"
        },
        {
          "digest": "sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
          "name": "csi-vxflexos-5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a-annotation"
        },
        {
          "digest": "sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
          "image": "docker.io/dellemc/csi-unity@sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
          "name": "csi-unity-95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13-annotation"
        },
        {
          "digest": "sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
          "image": "docker.io/dellemc/csi-powerstore@sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
          "name": "csi-powerstore-d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd-annotation"
        },
        {
          "digest": "sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "name": "csipowermax-reverseproxy-c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7-annotation"
        },
        {
          "digest": "sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
          "image": "docker.io/dellemc/csi-powermax@sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
          "name": "csi-powermax-d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8-annotation"
        },
        {
          "digest": "sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
          "image": "docker.io/dellemc/csi-isilon@sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
          "name": "csi-isilon-c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "62cc826baae29e66d1b3895b",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_AUTH_TYPE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_MAX_PATH_LIMIT",
                    "value": "192"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--leader-election-lease-duration=15s",
                    "--leader-election-renew-deadline=10s",
                    "--leader-election-retry-period=5s"
                  ],
                  "name": "common"
                },
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_TOPOLOGY_CONTROL_ENABLED",
                    "value": "false"
                  }
                ],
                "tolerations": [
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/memory-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/disk-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/network-unavailable",
                    "operator": "Exists"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_NFS_ACLS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {},
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "File",
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "node": {},
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:e3606060059e812714465554b2b4958f5103b5220d63589278c9c6fb4f832be9",
      "bundle_path_digest": "sha256:e3606060059e812714465554b2b4958f5103b5220d63589278c9c6fb4f832be9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-11T20:04:59.023000+00:00",
      "csv_description": "Dell CSI Operator for Dell CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-11T20:04:59.023000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "name": "dell-csi-operator-2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352-annotation"
        },
        {
          "digest": "sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
          "name": "csi-vxflexos-5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a-annotation"
        },
        {
          "digest": "sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
          "image": "docker.io/dellemc/csi-unity@sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
          "name": "csi-unity-95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13-annotation"
        },
        {
          "digest": "sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
          "image": "docker.io/dellemc/csi-powerstore@sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
          "name": "csi-powerstore-d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd-annotation"
        },
        {
          "digest": "sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "name": "csipowermax-reverseproxy-c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7-annotation"
        },
        {
          "digest": "sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
          "image": "docker.io/dellemc/csi-powermax@sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
          "name": "csi-powermax-d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8-annotation"
        },
        {
          "digest": "sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
          "image": "docker.io/dellemc/csi-isilon@sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
          "name": "csi-isilon-c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "62cc8280aae29e66d1b38960",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_AUTH_TYPE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_MAX_PATH_LIMIT",
                    "value": "192"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--leader-election-lease-duration=15s",
                    "--leader-election-renew-deadline=10s",
                    "--leader-election-retry-period=5s"
                  ],
                  "name": "common"
                },
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_TOPOLOGY_CONTROL_ENABLED",
                    "value": "false"
                  }
                ],
                "tolerations": [
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/memory-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/disk-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/network-unavailable",
                    "operator": "Exists"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_NFS_ACLS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {},
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.3.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "File",
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "node": {},
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:e3606060059e812714465554b2b4958f5103b5220d63589278c9c6fb4f832be9",
      "bundle_path_digest": "sha256:e3606060059e812714465554b2b4958f5103b5220d63589278c9c6fb4f832be9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-11T20:05:20.926000+00:00",
      "csv_description": "Dell CSI Operator for Dell CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-11T20:05:20.926000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "name": "dell-csi-operator-2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352-annotation"
        },
        {
          "digest": "sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:2895604b8fb0635c80ac6074b5e640425ae2c368b687471e40f9568b2ca5e352",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a",
          "name": "csi-vxflexos-5fda22d6b681579017d593254223298aedfb8000bdb596e71b88b13dfeb5715a-annotation"
        },
        {
          "digest": "sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
          "image": "docker.io/dellemc/csi-unity@sha256:95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13",
          "name": "csi-unity-95ce3ede0487986e0b8b19e97dedce0796f8b686c30896c798b829d223adad13-annotation"
        },
        {
          "digest": "sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
          "image": "docker.io/dellemc/csi-powerstore@sha256:d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd",
          "name": "csi-powerstore-d11726080832b58a55cd2cc96ed3810db4034bd0cee3d5df88f2b32bfc52e6cd-annotation"
        },
        {
          "digest": "sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "name": "csipowermax-reverseproxy-c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7-annotation"
        },
        {
          "digest": "sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
          "image": "docker.io/dellemc/csi-powermax@sha256:d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8",
          "name": "csi-powermax-d5cc6b21ca15b3f53698909ee60bd3ffc705d994729a70e7358ca5c4cbc65ee8-annotation"
        },
        {
          "digest": "sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
          "image": "docker.io/dellemc/csi-isilon@sha256:c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b",
          "name": "csi-isilon-c77b8e62ce600832ef8930486d4cc7c71ac3ae55b810ec15f2dc62424a42337b-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "62cd43ae1aa1526ac3277379",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "bundle_path_digest": "sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T09:49:34.126000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-14T05:04:45.646000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "control-plane-222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701-annotation"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "image": "registry.connect.redhat.com/trilio/web@sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "dex-init"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "metamover"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "datamover"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "hook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.10.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.10.0",
      "version_original": "2.10.0"
    },
    {
      "_id": "62cd43b44f09db93321cc224",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "bundle_path_digest": "sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T09:49:40.009000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-14T05:06:43.081000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "control-plane-222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701-annotation"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "image": "registry.connect.redhat.com/trilio/web@sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "dex-init"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "metamover"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "datamover"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "hook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.10.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.10.0",
      "version_original": "2.10.0"
    },
    {
      "_id": "62cd47d1aae29e66d1b44b9a",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "bundle_path_digest": "sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T10:07:13.799000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-14T05:21:10.070000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "control-plane-222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701-annotation"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "image": "registry.connect.redhat.com/trilio/web@sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "dex-init"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "metamover"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "datamover"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "hook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.10.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.10.0",
      "version_original": "2.10.0"
    },
    {
      "_id": "62cd4889e4ad541e1fa791c1",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "bundle_path_digest": "sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T10:10:17.883000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-14T05:23:55.034000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "control-plane-222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701-annotation"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "image": "registry.connect.redhat.com/trilio/web@sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "dex-init"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "metamover"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "datamover"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "hook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.10.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.10.0",
      "version_original": "2.10.0"
    },
    {
      "_id": "62cd488a4f09db93321cc265",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "bundle_path_digest": "sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T10:10:18.938000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-14T05:24:44.800000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "control-plane-222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701-annotation"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "image": "registry.connect.redhat.com/trilio/web@sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "dex-init"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "metamover"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "datamover"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "hook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.10.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.10.0",
      "version_original": "2.10.0"
    },
    {
      "_id": "62cd48a34f09db93321cc26a",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "bundle_path_digest": "sha256:a41a34a2254d49d73d0a1fb7369772e1a17aa8be345a60b96928107b3fb8c708",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T10:10:43.209000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.2.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-14T05:24:27.007000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "control-plane-222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701-annotation"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "image": "registry.connect.redhat.com/trilio/web@sha256:44dbb94a1fc3a9c666c7ea1ffa5edd5b09a2e0e9be75f7178796efe37e11ea50",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "dex-init"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "metamover"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "datamover"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:37fed0913300344853e6ac86358c2f71f7c63208bcd79e4cc7a35c21bfd56109",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:2c8f54518706f05a8fe5b158e0fa1049f6bfe4a5685f63564b44acce5fb3ea1c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "hook"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:222e5991deaafb48f710cbd60dbce1e5474a4467a39126599588a7b6fa1f5701",
          "name": "tvk_init"
        }
      ],
      "replaces": "",
      "skip_range": "<2.10.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.10.0",
      "version_original": "2.10.0"
    },
    {
      "_id": "62cd5f1eaae29e66d1b44c86",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:77f5d6ca42d106beab21225d56949aeb99347f17085fd1d3b9e42c6af6a332f8",
      "bundle_path_digest": "sha256:77f5d6ca42d106beab21225d56949aeb99347f17085fd1d3b9e42c6af6a332f8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T11:46:38.132000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T11:46:38.132000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator-558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b-annotation"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.3.1",
      "version_original": "2.3.1"
    },
    {
      "_id": "62cd5fe81aa1526ac3277498",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:77f5d6ca42d106beab21225d56949aeb99347f17085fd1d3b9e42c6af6a332f8",
      "bundle_path_digest": "sha256:77f5d6ca42d106beab21225d56949aeb99347f17085fd1d3b9e42c6af6a332f8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T11:50:00.722000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T11:50:00.722000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator-558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b-annotation"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.3.1",
      "version_original": "2.3.1"
    },
    {
      "_id": "62cd60771aa1526ac32774a3",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:77f5d6ca42d106beab21225d56949aeb99347f17085fd1d3b9e42c6af6a332f8",
      "bundle_path_digest": "sha256:77f5d6ca42d106beab21225d56949aeb99347f17085fd1d3b9e42c6af6a332f8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T11:52:23.305000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T11:52:23.305000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d87dfc05f054c856549ea7722d9e6c7299b8ce87fbf659a6904c9fbf5a8f2841",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:5055121216aa2e2a8240d1a1a30850077e77c4828d94e1bd02045d640faf1f1d",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:5ad615f1256d1d23b159a5a331a31103692dd0293b6f128b9095d0b34c0f6586",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:86e5fa1fa294987114be200890c2e516501e424aee0fb98ece25c95e7716295b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "sriov-fec-operator-558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b-annotation"
        },
        {
          "digest": "sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:558b236c3938024280600939798a0aad84949fce4de758763b6ecbd57d00f48b",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.3.1",
      "version_original": "2.3.1"
    },
    {
      "_id": "62cd85cae4ad541e1fa7b7da",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "bundle_path_digest": "sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-07-12T14:31:38.066000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T14:31:38.066000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator-aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc-annotation"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "operator"
        },
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "5.1.2",
      "version_original": "5.1.2"
    },
    {
      "_id": "62cd86ee1aa1526ac32799a7",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "bundle_path_digest": "sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-07-12T14:36:30.202000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T14:36:30.202000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator-aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc-annotation"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "operator"
        },
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "5.1.2",
      "version_original": "5.1.2"
    },
    {
      "_id": "62cd8703e4ad541e1fa7b7f8",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "bundle_path_digest": "sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-07-12T14:36:51.900000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T14:36:51.900000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator-aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc-annotation"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "operator"
        },
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "5.1.2",
      "version_original": "5.1.2"
    },
    {
      "_id": "62cd87d44f09db93321ce998",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "bundle_path_digest": "sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-07-12T14:40:20.167000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T14:40:20.167000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator-aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc-annotation"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "operator"
        },
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.1.2",
      "version_original": "5.1.2"
    },
    {
      "_id": "62cd88131aa1526ac3279a66",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "bundle_path_digest": "sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-07-12T14:41:23.118000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T14:41:23.118000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator-aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc-annotation"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "operator"
        },
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.1.2",
      "version_original": "5.1.2"
    },
    {
      "_id": "62cd89d61aa1526ac3279ab6",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "bundle_path_digest": "sha256:9547747d18e34264cb16d7f8699706e2e87bc797f9bb4f474d5120376748f7c2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-07-12T14:48:54.001000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T14:48:54.001000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "POSTGRES_14_GIS_3.2"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "postgres-operator-aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc-annotation"
        },
        {
          "digest": "sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:aff7077b0ef48e9e6bfb64912f617974eb28926ff62ffc254e8655c5bd1ecffc",
          "name": "operator"
        },
        {
          "digest": "sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:0666d86fc8b208df9d670b13e0c87523357d03f116b40a4282d579014709a83a",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:f772ac43d35d3aa05a54fed78e6865261827a44a4ee0a2456540991203600994",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:989085b821bf7ed9f2306837ac543ce4806efe428243b854d8777d586ae0e60e",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:e28fd2f88f834307721f4c38eb0f46b4e0614bfa2a96ff4e03ff6c29621f4955",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:41b60699288a0498e3acbc405cb8cc07b9a0aa9e04183ca239a687c008378a23",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:ff2e00738458664bf9e97ed69c252c05fa6308beb25bef62cbb3b43319f7aed8",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:3763c79ed5c75c81346d8cd48c9427df9bb0a66fbf591f677c527218e92e0e09",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ee92358d8d05a3cb62441ee015520e987a64a960f365693509a5e66e8f23c3ac",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:11e62c37973ee8854d4f0ba1669df06cfd2c0cb815bfda7af5911031e8449647",
          "name": "postgres_14_gis_3.1"
        },
        {
          "digest": "sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:ca3c65650d95073b4adf6e1f19e6599fcde56ae7bf5ea988ff243dd18ccfa095",
          "name": "postgres_14_gis_3.2"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.1.2",
      "version_original": "5.1.2"
    },
    {
      "_id": "62cd95054f09db93321ceada",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "bundle_path_digest": "sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T15:36:37.427000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T15:36:37.427000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "nutanix-csi-operator-fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f-annotation"
        },
        {
          "digest": "sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "<2.5.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.5.4",
      "version_original": "2.5.4"
    },
    {
      "_id": "62cd95511aa1526ac3279b91",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "bundle_path_digest": "sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T15:37:53.374000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T15:37:53.374000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "nutanix-csi-operator-fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f-annotation"
        },
        {
          "digest": "sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "<2.5.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.5.4",
      "version_original": "2.5.4"
    },
    {
      "_id": "62cd97514f09db93321ceaf7",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "bundle_path_digest": "sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T15:46:25.932000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T15:46:25.932000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "nutanix-csi-operator-fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f-annotation"
        },
        {
          "digest": "sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "<2.5.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.5.4",
      "version_original": "2.5.4"
    },
    {
      "_id": "62cd98eeaae29e66d1b47427",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "bundle_path_digest": "sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T15:53:18.091000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T15:53:18.091000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "nutanix-csi-operator-fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f-annotation"
        },
        {
          "digest": "sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "<2.5.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.5.4",
      "version_original": "2.5.4"
    },
    {
      "_id": "62cd999de4ad541e1fa7ba44",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "bundle_path_digest": "sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T15:56:13.372000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T15:56:13.372000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "nutanix-csi-operator-fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f-annotation"
        },
        {
          "digest": "sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "<2.5.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.5.4",
      "version_original": "2.5.4"
    },
    {
      "_id": "62cd9b2f1aa1526ac3279bcf",
      "alm_examples": [
        {
          "api_version": "crd.nutanix.com/v1alpha1",
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "bundle_path_digest": "sha256:a68f0e097d347888dbe54d3c9df436ad69e9dec5a0e959b2c5387b72d19535ff",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-07-12T16:02:55.199000+00:00",
      "csv_description": "# Overview \n\nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n| Red Hat OpenShift      | 4.11    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a NutanixCsiStorage resource to deploy your driver\n\nYou can do it directly inside the Operator UI with the `Create instance` button or with the following ressource\n```yaml\napiVersion: crd.nutanix.com/v1alpha1\nkind: NutanixCsiStorage\nmetadata:\n  name: nutanixcsistorage\n  namespace: ntnx-system\nspec: {}\n```\n\n2. Create a Nutanix secret\n```yaml\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: openshift-cluster-csi-drivers\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n3. Create storage classes\n\n- volume mode example\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```yaml\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: openshift-cluster-csi-drivers\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: openshift-cluster-csi-drivers\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T16:02:55.199000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "nutanix-csi-operator-fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f-annotation"
        },
        {
          "digest": "sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:011909289ad5a6e6dd012fafaab83117777073febb15536ee7e66a4d5830f303",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:fbb5204d196f84b2b38278ae411b1a2fa63919a194febe333fe5ed932b3a328f",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "<2.5.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.5.4",
      "version_original": "2.5.4"
    },
    {
      "_id": "62cdc871aae29e66d1b47acf",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideGuvnor",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret",
            "namespace": "app-director-example-app"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "Guvnor",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director-example-app"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "bundle_path_digest": "sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.4",
      "creation_date": "2022-07-12T19:16:01.802000+00:00",
      "csv_description": "App Director\u00ae Operator manages the Guvnor agent that connects with the App Director\u00ae Platform to receive deployments and send back events. The agent can be scoped to a namespace or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App-Director",
      "csv_metadata_description": "Define, Manage and Deploy Apps Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.7.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T19:16:01.802000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideGuvnor",
          "plural": "clusterwideguvnors",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "Guvnor",
          "plural": "guvnors",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "app-director-operator:0.7.4-ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.4",
      "version_original": "0.7.4"
    },
    {
      "_id": "62cdc89b4f09db93321cf1f5",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideGuvnor",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret",
            "namespace": "app-director-example-app"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "Guvnor",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director-example-app"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "bundle_path_digest": "sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.4",
      "creation_date": "2022-07-12T19:16:43.290000+00:00",
      "csv_description": "App Director\u00ae Operator manages the Guvnor agent that connects with the App Director\u00ae Platform to receive deployments and send back events. The agent can be scoped to a namespace or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App-Director",
      "csv_metadata_description": "Define, Manage and Deploy Apps Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.7.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T19:16:43.290000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideGuvnor",
          "plural": "clusterwideguvnors",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "Guvnor",
          "plural": "guvnors",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "app-director-operator:0.7.4-ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.4",
      "version_original": "0.7.4"
    },
    {
      "_id": "62cdca551aa1526ac327a27a",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideGuvnor",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret",
            "namespace": "app-director-example-app"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "Guvnor",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director-example-app"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "bundle_path_digest": "sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.4",
      "creation_date": "2022-07-12T19:24:05.536000+00:00",
      "csv_description": "App Director\u00ae Operator manages the Guvnor agent that connects with the App Director\u00ae Platform to receive deployments and send back events. The agent can be scoped to a namespace or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App-Director",
      "csv_metadata_description": "Define, Manage and Deploy Apps Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.7.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T19:24:05.536000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideGuvnor",
          "plural": "clusterwideguvnors",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "Guvnor",
          "plural": "guvnors",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "app-director-operator:0.7.4-ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.7.4",
      "version_original": "0.7.4"
    },
    {
      "_id": "62cdcbed4f09db93321cf238",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideGuvnor",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret",
            "namespace": "app-director-example-app"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "Guvnor",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director-example-app"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "bundle_path_digest": "sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.4",
      "creation_date": "2022-07-12T19:30:53.941000+00:00",
      "csv_description": "App Director\u00ae Operator manages the Guvnor agent that connects with the App Director\u00ae Platform to receive deployments and send back events. The agent can be scoped to a namespace or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App-Director",
      "csv_metadata_description": "Define, Manage and Deploy Apps Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.7.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T19:30:53.941000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideGuvnor",
          "plural": "clusterwideguvnors",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "Guvnor",
          "plural": "guvnors",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "app-director-operator:0.7.4-ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.4",
      "version_original": "0.7.4"
    },
    {
      "_id": "62cdcc3e1aa1526ac327a291",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideGuvnor",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret",
            "namespace": "app-director-example-app"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "Guvnor",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director-example-app"
          },
          "spec": {
            "guvnorCertsSecretName": "guvnor-certs",
            "guvnorSecretName": "guvnor-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "bundle_path_digest": "sha256:1e63aee9a3f5d6ab3fab682018c171168b7a4892b33f8fb829e870f6c6ccb4d7",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.7.4",
      "creation_date": "2022-07-12T19:32:14.700000+00:00",
      "csv_description": "App Director\u00ae Operator manages the Guvnor agent that connects with the App Director\u00ae Platform to receive deployments and send back events. The agent can be scoped to a namespace or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App-Director",
      "csv_metadata_description": "Define, Manage and Deploy Apps Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.7.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-12T19:32:14.700000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideGuvnor",
          "plural": "clusterwideguvnors",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "Guvnor",
          "plural": "guvnors",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "app-director-operator:0.7.4-ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "image": "docker.io/randoli/app-director-operator:0.7.4@sha256:ed9ccc099839bcca44ebff0db2e5a14a8336a922623ebd65da4724183fc4f775",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.7.4",
      "version_original": "0.7.4"
    },
    {
      "_id": "62cecd5f7fc77f8835a82579",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "bundle_path_digest": "sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-07-13T13:49:19.435000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22188",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T13:49:19.435000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aquasec-310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533-annotation"
        },
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "name": "gateway"
        },
        {
          "digest": "sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "name": "server"
        },
        {
          "digest": "sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "name": "scanner"
        },
        {
          "digest": "sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "name": "kube_enforcer"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.2 <6.5.22188",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.5.22188",
      "version_original": "6.5.22188"
    },
    {
      "_id": "62ced2f983bbf6bb3ddf853f",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "bundle_path_digest": "sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-07-13T14:13:13.845000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22188",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T14:13:13.845000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aquasec-310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533-annotation"
        },
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "name": "gateway"
        },
        {
          "digest": "sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "name": "server"
        },
        {
          "digest": "sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "name": "scanner"
        },
        {
          "digest": "sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "name": "kube_enforcer"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.2 <6.5.22188",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.5.22188",
      "version_original": "6.5.22188"
    },
    {
      "_id": "62ced36be42974b7999e4b95",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "bundle_path_digest": "sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-07-13T14:15:07.362000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22188",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T14:15:07.362000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aquasec-310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533-annotation"
        },
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "name": "gateway"
        },
        {
          "digest": "sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "name": "server"
        },
        {
          "digest": "sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "name": "scanner"
        },
        {
          "digest": "sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "name": "kube_enforcer"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.2 <6.5.22188",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.5.22188",
      "version_original": "6.5.22188"
    },
    {
      "_id": "62ced388e42974b7999e4b98",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "bundle_path_digest": "sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-07-13T14:15:36.288000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22188",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T14:15:36.288000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aquasec-310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533-annotation"
        },
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "name": "gateway"
        },
        {
          "digest": "sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "name": "server"
        },
        {
          "digest": "sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "name": "scanner"
        },
        {
          "digest": "sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "name": "kube_enforcer"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.2 <6.5.22188",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.5.22188",
      "version_original": "6.5.22188"
    },
    {
      "_id": "62ced39983bbf6bb3ddf854a",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "bundle_path_digest": "sha256:cf711d4f5842b8618b74396f93ae5dac9ddb34d0d8f38fc4ebc130f4dc20bd98",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-07-13T14:15:53.872000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22188",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T14:15:53.872000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aquasec-310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533-annotation"
        },
        {
          "digest": "sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:310c485ee99d3956183829c0fa4be193db0147f8dc2156a8da2cbc6c90c58533",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:eb8afdbe8773d986fe9f8103a505025d66d91469abe56d8c2c0bef31357372cd",
          "name": "gateway"
        },
        {
          "digest": "sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:2c0a0575663dcc04dc0d3aab51172e29d578282758c8feb5878c7523677b1e69",
          "name": "server"
        },
        {
          "digest": "sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:1101003dacfbe0cd0dd6c344bef5750485d5518c80e7fcf4c964bc9a9f3583d5",
          "name": "scanner"
        },
        {
          "digest": "sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:1e3700c6ca0a02b361542d15ecea95ebf70f4213afaf571ef1f79b24e0ab3ced",
          "name": "enforcer"
        },
        {
          "digest": "sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:8f557be28c3d09482b236850a9d115b3f62b7e17226e4b647e8c8dc941fc86fd",
          "name": "kube_enforcer"
        }
      ],
      "replaces": "",
      "skip_range": ">=1.0.2 <6.5.22188",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.5.22188",
      "version_original": "6.5.22188"
    },
    {
      "_id": "62cedeb1f403f71942667ed6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:03:13.774000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:03:13.774000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "62cedeb2f403f71942667ed8",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/outbound",
              "versionTag": "6.2.10-41"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.14-9.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager",
              "versionTag": "6.2.10-41"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:4981d96081cc3d10cd26f20aab792e9c195b05bdcd609367011b7e9c7e6759b1",
      "bundle_path_digest": "sha256:4981d96081cc3d10cd26f20aab792e9c195b05bdcd609367011b7e9c7e6759b1",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:03:14.330000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-41",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:03:14.330000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "outbound-3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2-annotation"
        },
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-41",
      "version_original": "6.2.10-41"
    },
    {
      "_id": "62ceded56537ee32f3d77301",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:03:49.673000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:03:49.673000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "62ceded66537ee32f3d77303",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/outbound",
              "versionTag": "6.2.10-41"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.14-9.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager",
              "versionTag": "6.2.10-41"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:4981d96081cc3d10cd26f20aab792e9c195b05bdcd609367011b7e9c7e6759b1",
      "bundle_path_digest": "sha256:4981d96081cc3d10cd26f20aab792e9c195b05bdcd609367011b7e9c7e6759b1",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:03:50.147000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-41",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:03:50.147000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "outbound-3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2-annotation"
        },
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.10-41",
      "version_original": "6.2.10-41"
    },
    {
      "_id": "62cee1a183bbf6bb3ddf86b0",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:15:45.265000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:15:45.265000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "62cee1a1f403f71942667f51",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-90.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "bundle_path_digest": "sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:15:45.654000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:15:45.654000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator-97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31-annotation"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-4",
      "version_original": "6.2.10-4"
    },
    {
      "_id": "62cee1a2e42974b7999e4cfd",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/outbound",
              "versionTag": "6.2.10-41"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.14-9.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager",
              "versionTag": "6.2.10-41"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:4981d96081cc3d10cd26f20aab792e9c195b05bdcd609367011b7e9c7e6759b1",
      "bundle_path_digest": "sha256:4981d96081cc3d10cd26f20aab792e9c195b05bdcd609367011b7e9c7e6759b1",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:15:46.035000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-41",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:15:46.035000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "outbound-3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2-annotation"
        },
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "image": "registry.connect.redhat.com/redislabs/outbound@sha256:3c251754ae8650157465a56ef3a7b41d5a0ad4e9db09ef042e0014076f25e8a2",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-41",
      "version_original": "6.2.10-41"
    },
    {
      "_id": "62cee1a2fe766184e15e98aa",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-53.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "bundle_path_digest": "sha256:bd97c3efdbdf7c723bebef078153ba68d5ed1f47038146dd5c5bbf575592da9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:15:46.436000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:15:46.436000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator-5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59-annotation"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:5a9eabfc36dc8cab8a69383fa91bc4adb5058a9db2622d1a85070ff29ba52d59",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-11",
      "version_original": "6.2.8-11"
    },
    {
      "_id": "62cee1a2f403f71942667f54",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:15:46.820000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:15:46.820000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    },
    {
      "_id": "62cee2c66537ee32f3d7738a",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.8-64.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "bundle_path_digest": "sha256:9d1a896c1276852d8cad7e670924f309a7a82de2f8843f23d2a6ae42ba0a8b53",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "preview",
      "creation_date": "2022-07-13T15:20:38.389000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.8-15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-13T15:20:38.389000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator-0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37-annotation"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0f144922ea1e2d4ea72affb36238258c9f21c39d6ba9ad73da79278dde1eed37",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.8-15",
      "version_original": "6.2.8-15"
    }
  ],
  "page": 40,
  "page_size": 93,
  "total": 4093
}

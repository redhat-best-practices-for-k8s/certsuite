{
  "data": [
    {
      "_id": "632d69a52bdd76944b8ec4fd",
      "alm_examples": [
        {
          "api_version": "mlops.cnvrg.io/v1",
          "kind": "CnvrgApp",
          "metadata": {
            "name": "cnvrg-app"
          },
          "spec": {
            "clusterDomain": "",
            "controlPlane": {
              "baseConfig": {
                "agentCustomTag": "agnostic-logs",
                "cnvrgJobRbacStrict": true,
                "cnvrgJobUid": "0",
                "cnvrgPrivilegedJob": false,
                "featureFlags": {
                  "CNVRG_ENABLE_MOUNT_FOLDERS": "false",
                  "CNVRG_MOUNT_HOST_FOLDERS": "false",
                  "CNVRG_PROMETHEUS_METRICS": "true",
                  "OCP_ENABLED": "true"
                },
                "metagpuEnabled": false
              },
              "cnvrgScheduler": {
                "enabled": false
              },
              "hyper": {
                "enabled": true
              },
              "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
              "nomex": {
                "enabled": true
              },
              "searchkiq": {
                "enabled": true
              },
              "sidekiq": {
                "enabled": true,
                "replicas": 1,
                "split": true
              },
              "systemkiq": {
                "enabled": true
              },
              "webapp": {
                "enabled": true
              }
            },
            "dbs": {
              "es": {
                "elastalert": {
                  "enabled": true
                },
                "enabled": true,
                "kibana": {
                  "enabled": true
                }
              },
              "minio": {
                "enabled": true
              },
              "pg": {
                "enabled": true
              },
              "prom": {
                "enabled": true,
                "extraScrapeConfigs": [
                  {
                    "labelSelector": "app=nvidia-dcgm-exporter",
                    "namespace": "nvidia-gpu-operator",
                    "role": "endpoints"
                  },
                  {
                    "labelSelector": "app=metagpu-exporter",
                    "namespace": "cnvrg",
                    "role": "endpoints"
                  }
                ],
                "grafana": {
                  "enabled": true
                }
              },
              "redis": {
                "enabled": true
              }
            },
            "imageHub": "docker.io/cnvrg",
            "networking": {
              "ingress": {
                "type": "openshift"
              }
            },
            "registry": {
              "name": "cnvrg-app-registry",
              "password": "",
              "url": "docker.io",
              "user": ""
            }
          }
        },
        {
          "api_version": "mlops.cnvrg.io/v1",
          "kind": "CnvrgThirdParty",
          "metadata": {
            "name": "cnvrg-thirdparty"
          },
          "spec": {
            "imageHub": "docker.io/cnvrg",
            "metagpu": {
              "enabled": true,
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cnvrg-core/cnvrg@sha256:c85a7beb46ace09e8468d2ba416df80807a951576b7b11750a22d4bbf6ee931a",
      "bundle_path_digest": "sha256:c85a7beb46ace09e8468d2ba416df80807a951576b7b11750a22d4bbf6ee931a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T08:09:09.385000+00:00",
      "csv_description": "## Cnvrg is a Cloud Native AI:OS, transforming the way enterprises manage, scale and accelerate AI.\n#### Installation\nFor quick start, deploy the default CnvrgApp spec.  For advanced deployment scenarios, make required changes\non the CnvrgApp spec through the OpenShift console and deploy the spec.\nHave additional questions? Email us at support@cnvrg.io or read the [docs](https://app.cnvrg.io/docs/).\n#### MetaGpu (Fractional GPU) support\nFor deploying the MetaGPU device plugin, install the default `CnvrgThirdParty` spec on your OpenShift cluster.\nOnce `CnvrgThirdParty` has been successfully deployed, enabled MetaGPU support in `CnvrgApp` CR by setting the\n`spec.controlPlane.baseConfig.metagpuEnabled: true`.\n**Note**: make sure all the low level GPU components (mainly the GPU drivers & GPU container runtimes)\nhas been installed on the OpenShift GPU nodes.\n#### Habana HPU (Gaudi) support\nFor enabling Habana HPU support, add new entry `\"HABANA_ENABLED\": \"true\"`\nunder `spec.controlPlane.baseConfig.featureFlags`",
      "csv_display_name": "Cnvrg Operator",
      "csv_metadata_description": "cnvrg.io is an AI OS, transforming the way enterprises manage, scale and accelerate AI.",
      "csv_name": "cnvrg.v4.3.39",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T08:09:09.385000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "cnvrg",
      "provided_apis": [
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgApp",
          "version": "v1"
        },
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgThirdParty",
          "version": "v1"
        }
      ],
      "provider": "cnvrg.io",
      "related_images": [
        {
          "digest": "sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "image": "docker.io/cnvrg/cnvrg-operator@sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "name": "cnvrg-operator"
        },
        {
          "digest": "sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "name": "core"
        },
        {
          "digest": "sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "image": "docker.io/cnvrg/cnvrg-operator@sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "name": "cnvrg-operator-70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813-annotation"
        },
        {
          "digest": "sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "name": "core-50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "4.3.39",
      "version_original": "4.3.39"
    },
    {
      "_id": "632d69b46c46121321885890",
      "alm_examples": [
        {
          "api_version": "mlops.cnvrg.io/v1",
          "kind": "CnvrgApp",
          "metadata": {
            "name": "cnvrg-app"
          },
          "spec": {
            "clusterDomain": "",
            "controlPlane": {
              "baseConfig": {
                "agentCustomTag": "agnostic-logs",
                "cnvrgJobRbacStrict": true,
                "cnvrgJobUid": "0",
                "cnvrgPrivilegedJob": false,
                "featureFlags": {
                  "CNVRG_ENABLE_MOUNT_FOLDERS": "false",
                  "CNVRG_MOUNT_HOST_FOLDERS": "false",
                  "CNVRG_PROMETHEUS_METRICS": "true",
                  "OCP_ENABLED": "true"
                },
                "metagpuEnabled": false
              },
              "cnvrgScheduler": {
                "enabled": false
              },
              "hyper": {
                "enabled": true
              },
              "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
              "nomex": {
                "enabled": true
              },
              "searchkiq": {
                "enabled": true
              },
              "sidekiq": {
                "enabled": true,
                "replicas": 1,
                "split": true
              },
              "systemkiq": {
                "enabled": true
              },
              "webapp": {
                "enabled": true
              }
            },
            "dbs": {
              "es": {
                "elastalert": {
                  "enabled": true
                },
                "enabled": true,
                "kibana": {
                  "enabled": true
                }
              },
              "minio": {
                "enabled": true
              },
              "pg": {
                "enabled": true
              },
              "prom": {
                "enabled": true,
                "extraScrapeConfigs": [
                  {
                    "labelSelector": "app=nvidia-dcgm-exporter",
                    "namespace": "nvidia-gpu-operator",
                    "role": "endpoints"
                  },
                  {
                    "labelSelector": "app=metagpu-exporter",
                    "namespace": "cnvrg",
                    "role": "endpoints"
                  }
                ],
                "grafana": {
                  "enabled": true
                }
              },
              "redis": {
                "enabled": true
              }
            },
            "imageHub": "docker.io/cnvrg",
            "networking": {
              "ingress": {
                "type": "openshift"
              }
            },
            "registry": {
              "name": "cnvrg-app-registry",
              "password": "",
              "url": "docker.io",
              "user": ""
            }
          }
        },
        {
          "api_version": "mlops.cnvrg.io/v1",
          "kind": "CnvrgThirdParty",
          "metadata": {
            "name": "cnvrg-thirdparty"
          },
          "spec": {
            "imageHub": "docker.io/cnvrg",
            "metagpu": {
              "enabled": true,
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cnvrg-core/cnvrg@sha256:c85a7beb46ace09e8468d2ba416df80807a951576b7b11750a22d4bbf6ee931a",
      "bundle_path_digest": "sha256:c85a7beb46ace09e8468d2ba416df80807a951576b7b11750a22d4bbf6ee931a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T08:09:24+00:00",
      "csv_description": "## Cnvrg is a Cloud Native AI:OS, transforming the way enterprises manage, scale and accelerate AI.\n#### Installation\nFor quick start, deploy the default CnvrgApp spec.  For advanced deployment scenarios, make required changes\non the CnvrgApp spec through the OpenShift console and deploy the spec.\nHave additional questions? Email us at support@cnvrg.io or read the [docs](https://app.cnvrg.io/docs/).\n#### MetaGpu (Fractional GPU) support\nFor deploying the MetaGPU device plugin, install the default `CnvrgThirdParty` spec on your OpenShift cluster.\nOnce `CnvrgThirdParty` has been successfully deployed, enabled MetaGPU support in `CnvrgApp` CR by setting the\n`spec.controlPlane.baseConfig.metagpuEnabled: true`.\n**Note**: make sure all the low level GPU components (mainly the GPU drivers & GPU container runtimes)\nhas been installed on the OpenShift GPU nodes.\n#### Habana HPU (Gaudi) support\nFor enabling Habana HPU support, add new entry `\"HABANA_ENABLED\": \"true\"`\nunder `spec.controlPlane.baseConfig.featureFlags`",
      "csv_display_name": "Cnvrg Operator",
      "csv_metadata_description": "cnvrg.io is an AI OS, transforming the way enterprises manage, scale and accelerate AI.",
      "csv_name": "cnvrg.v4.3.39",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T08:09:24+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cnvrg",
      "provided_apis": [
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgApp",
          "plural": "cnvrgapps",
          "version": "v1"
        },
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgThirdParty",
          "plural": "cnvrgthirdparties",
          "version": "v1"
        }
      ],
      "provider": "cnvrg.io",
      "related_images": [
        {
          "digest": "sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "image": "docker.io/cnvrg/cnvrg-operator@sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "name": "cnvrg-operator"
        },
        {
          "digest": "sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "name": "core"
        },
        {
          "digest": "sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "image": "docker.io/cnvrg/cnvrg-operator@sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "name": "cnvrg-operator-70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813-annotation"
        },
        {
          "digest": "sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "name": "core-50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "4.3.39",
      "version_original": "4.3.39"
    },
    {
      "_id": "632d6b316c461213218858c4",
      "alm_examples": [
        {
          "api_version": "mlops.cnvrg.io/v1",
          "kind": "CnvrgApp",
          "metadata": {
            "name": "cnvrg-app"
          },
          "spec": {
            "clusterDomain": "",
            "controlPlane": {
              "baseConfig": {
                "agentCustomTag": "agnostic-logs",
                "cnvrgJobRbacStrict": true,
                "cnvrgJobUid": "0",
                "cnvrgPrivilegedJob": false,
                "featureFlags": {
                  "CNVRG_ENABLE_MOUNT_FOLDERS": "false",
                  "CNVRG_MOUNT_HOST_FOLDERS": "false",
                  "CNVRG_PROMETHEUS_METRICS": "true",
                  "OCP_ENABLED": "true"
                },
                "metagpuEnabled": false
              },
              "cnvrgScheduler": {
                "enabled": false
              },
              "hyper": {
                "enabled": true
              },
              "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
              "nomex": {
                "enabled": true
              },
              "searchkiq": {
                "enabled": true
              },
              "sidekiq": {
                "enabled": true,
                "replicas": 1,
                "split": true
              },
              "systemkiq": {
                "enabled": true
              },
              "webapp": {
                "enabled": true
              }
            },
            "dbs": {
              "es": {
                "elastalert": {
                  "enabled": true
                },
                "enabled": true,
                "kibana": {
                  "enabled": true
                }
              },
              "minio": {
                "enabled": true
              },
              "pg": {
                "enabled": true
              },
              "prom": {
                "enabled": true,
                "extraScrapeConfigs": [
                  {
                    "labelSelector": "app=nvidia-dcgm-exporter",
                    "namespace": "nvidia-gpu-operator",
                    "role": "endpoints"
                  },
                  {
                    "labelSelector": "app=metagpu-exporter",
                    "namespace": "cnvrg",
                    "role": "endpoints"
                  }
                ],
                "grafana": {
                  "enabled": true
                }
              },
              "redis": {
                "enabled": true
              }
            },
            "imageHub": "docker.io/cnvrg",
            "networking": {
              "ingress": {
                "type": "openshift"
              }
            },
            "registry": {
              "name": "cnvrg-app-registry",
              "password": "",
              "url": "docker.io",
              "user": ""
            }
          }
        },
        {
          "api_version": "mlops.cnvrg.io/v1",
          "kind": "CnvrgThirdParty",
          "metadata": {
            "name": "cnvrg-thirdparty"
          },
          "spec": {
            "imageHub": "docker.io/cnvrg",
            "metagpu": {
              "enabled": true,
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cnvrg-core/cnvrg@sha256:c85a7beb46ace09e8468d2ba416df80807a951576b7b11750a22d4bbf6ee931a",
      "bundle_path_digest": "sha256:c85a7beb46ace09e8468d2ba416df80807a951576b7b11750a22d4bbf6ee931a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T08:15:45.502000+00:00",
      "csv_description": "## Cnvrg is a Cloud Native AI:OS, transforming the way enterprises manage, scale and accelerate AI.\n#### Installation\nFor quick start, deploy the default CnvrgApp spec.  For advanced deployment scenarios, make required changes\non the CnvrgApp spec through the OpenShift console and deploy the spec.\nHave additional questions? Email us at support@cnvrg.io or read the [docs](https://app.cnvrg.io/docs/).\n#### MetaGpu (Fractional GPU) support\nFor deploying the MetaGPU device plugin, install the default `CnvrgThirdParty` spec on your OpenShift cluster.\nOnce `CnvrgThirdParty` has been successfully deployed, enabled MetaGPU support in `CnvrgApp` CR by setting the\n`spec.controlPlane.baseConfig.metagpuEnabled: true`.\n**Note**: make sure all the low level GPU components (mainly the GPU drivers & GPU container runtimes)\nhas been installed on the OpenShift GPU nodes.\n#### Habana HPU (Gaudi) support\nFor enabling Habana HPU support, add new entry `\"HABANA_ENABLED\": \"true\"`\nunder `spec.controlPlane.baseConfig.featureFlags`",
      "csv_display_name": "Cnvrg Operator",
      "csv_metadata_description": "cnvrg.io is an AI OS, transforming the way enterprises manage, scale and accelerate AI.",
      "csv_name": "cnvrg.v4.3.39",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T08:15:45.502000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cnvrg",
      "provided_apis": [
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgApp",
          "plural": "cnvrgapps",
          "version": "v1"
        },
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgThirdParty",
          "plural": "cnvrgthirdparties",
          "version": "v1"
        }
      ],
      "provider": "cnvrg.io",
      "related_images": [
        {
          "digest": "sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "image": "docker.io/cnvrg/cnvrg-operator@sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "name": "cnvrg-operator"
        },
        {
          "digest": "sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "name": "core"
        },
        {
          "digest": "sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "image": "docker.io/cnvrg/cnvrg-operator@sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "name": "cnvrg-operator-70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813-annotation"
        },
        {
          "digest": "sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "name": "core-50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "4.3.39",
      "version_original": "4.3.39"
    },
    {
      "_id": "632d6ef12bdd76944b8ec5b3",
      "alm_examples": [
        {
          "api_version": "mlops.cnvrg.io/v1",
          "kind": "CnvrgApp",
          "metadata": {
            "name": "cnvrg-app"
          },
          "spec": {
            "clusterDomain": "",
            "controlPlane": {
              "baseConfig": {
                "agentCustomTag": "agnostic-logs",
                "cnvrgJobRbacStrict": true,
                "cnvrgJobUid": "0",
                "cnvrgPrivilegedJob": false,
                "featureFlags": {
                  "CNVRG_ENABLE_MOUNT_FOLDERS": "false",
                  "CNVRG_MOUNT_HOST_FOLDERS": "false",
                  "CNVRG_PROMETHEUS_METRICS": "true",
                  "OCP_ENABLED": "true"
                },
                "metagpuEnabled": false
              },
              "cnvrgScheduler": {
                "enabled": false
              },
              "hyper": {
                "enabled": true
              },
              "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
              "nomex": {
                "enabled": true
              },
              "searchkiq": {
                "enabled": true
              },
              "sidekiq": {
                "enabled": true,
                "replicas": 1,
                "split": true
              },
              "systemkiq": {
                "enabled": true
              },
              "webapp": {
                "enabled": true
              }
            },
            "dbs": {
              "es": {
                "elastalert": {
                  "enabled": true
                },
                "enabled": true,
                "kibana": {
                  "enabled": true
                }
              },
              "minio": {
                "enabled": true
              },
              "pg": {
                "enabled": true
              },
              "prom": {
                "enabled": true,
                "extraScrapeConfigs": [
                  {
                    "labelSelector": "app=nvidia-dcgm-exporter",
                    "namespace": "nvidia-gpu-operator",
                    "role": "endpoints"
                  },
                  {
                    "labelSelector": "app=metagpu-exporter",
                    "namespace": "cnvrg",
                    "role": "endpoints"
                  }
                ],
                "grafana": {
                  "enabled": true
                }
              },
              "redis": {
                "enabled": true
              }
            },
            "imageHub": "docker.io/cnvrg",
            "networking": {
              "ingress": {
                "type": "openshift"
              }
            },
            "registry": {
              "name": "cnvrg-app-registry",
              "password": "",
              "url": "docker.io",
              "user": ""
            }
          }
        },
        {
          "api_version": "mlops.cnvrg.io/v1",
          "kind": "CnvrgThirdParty",
          "metadata": {
            "name": "cnvrg-thirdparty"
          },
          "spec": {
            "imageHub": "docker.io/cnvrg",
            "metagpu": {
              "enabled": true,
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cnvrg-core/cnvrg@sha256:c85a7beb46ace09e8468d2ba416df80807a951576b7b11750a22d4bbf6ee931a",
      "bundle_path_digest": "sha256:c85a7beb46ace09e8468d2ba416df80807a951576b7b11750a22d4bbf6ee931a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T08:31:45.204000+00:00",
      "csv_description": "## Cnvrg is a Cloud Native AI:OS, transforming the way enterprises manage, scale and accelerate AI.\n#### Installation\nFor quick start, deploy the default CnvrgApp spec.  For advanced deployment scenarios, make required changes\non the CnvrgApp spec through the OpenShift console and deploy the spec.\nHave additional questions? Email us at support@cnvrg.io or read the [docs](https://app.cnvrg.io/docs/).\n#### MetaGpu (Fractional GPU) support\nFor deploying the MetaGPU device plugin, install the default `CnvrgThirdParty` spec on your OpenShift cluster.\nOnce `CnvrgThirdParty` has been successfully deployed, enabled MetaGPU support in `CnvrgApp` CR by setting the\n`spec.controlPlane.baseConfig.metagpuEnabled: true`.\n**Note**: make sure all the low level GPU components (mainly the GPU drivers & GPU container runtimes)\nhas been installed on the OpenShift GPU nodes.\n#### Habana HPU (Gaudi) support\nFor enabling Habana HPU support, add new entry `\"HABANA_ENABLED\": \"true\"`\nunder `spec.controlPlane.baseConfig.featureFlags`",
      "csv_display_name": "Cnvrg Operator",
      "csv_metadata_description": "cnvrg.io is an AI OS, transforming the way enterprises manage, scale and accelerate AI.",
      "csv_name": "cnvrg.v4.3.39",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T08:31:45.204000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cnvrg",
      "provided_apis": [
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgThirdParty",
          "plural": "cnvrgthirdparties",
          "version": "v1"
        },
        {
          "group": "mlops.cnvrg.io",
          "kind": "CnvrgApp",
          "plural": "cnvrgapps",
          "version": "v1"
        }
      ],
      "provider": "cnvrg.io",
      "related_images": [
        {
          "digest": "sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "image": "docker.io/cnvrg/cnvrg-operator@sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "name": "cnvrg-operator"
        },
        {
          "digest": "sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "name": "core"
        },
        {
          "digest": "sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "image": "docker.io/cnvrg/cnvrg-operator@sha256:70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813",
          "name": "cnvrg-operator-70cd60e4cc0c5df2cfdf2be87ac4d7f4e5b90607cef2889f4af0d37f42082813-annotation"
        },
        {
          "digest": "sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "image": "docker.io/cnvrg/core@sha256:50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b",
          "name": "core-50a9c8cb0aebb24cc43cbb24de05621075f8989d93db1f030fdbe5b686a6b69b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "4.3.39",
      "version_original": "4.3.39"
    },
    {
      "_id": "632df93e6c46121321886c9d",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "annotations": {},
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough",
                  "tls": ""
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                },
                "mastersvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "ranchersso": {
                "enabled": false
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "runAsUser": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8",
                "priorityClassName": "",
                "runAsUser": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "imagePullSecrets": "",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough",
                "tls": ""
              },
              "runAsUser": "",
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "oem": "",
            "openshift": true,
            "psp": false,
            "rbac": true,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "bundle_path_digest": "sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-23T18:21:50.766000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.6 of the NeuVector Certified Operator deploys version 5.0.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nPrivileged SCC is added to Service Account specified in the deploment yaml by Operator version 1.3.6 and above in new deployment. In case of upgrading NeuVector Operator from previous version to 1.3.6, please delete Privileged SCC before upgrading.\n\n         oc delete rolebinding -nneuvector system:openshift:scc:privileged\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T18:21:50.766000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator-af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010-annotation"
        },
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "name": "controller"
        },
        {
          "digest": "sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "name": "enforcer"
        },
        {
          "digest": "sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "name": "manager"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "updater"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner-5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3-annotation"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "ubi8-8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.3.6",
      "version_original": "1.3.6"
    },
    {
      "_id": "632dfb3afc81574279e7bcae",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "annotations": {},
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough",
                  "tls": ""
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                },
                "mastersvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "ranchersso": {
                "enabled": false
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "runAsUser": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8",
                "priorityClassName": "",
                "runAsUser": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "imagePullSecrets": "",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough",
                "tls": ""
              },
              "runAsUser": "",
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "oem": "",
            "openshift": true,
            "psp": false,
            "rbac": true,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "bundle_path_digest": "sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-23T18:30:18.661000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.6 of the NeuVector Certified Operator deploys version 5.0.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nPrivileged SCC is added to Service Account specified in the deploment yaml by Operator version 1.3.6 and above in new deployment. In case of upgrading NeuVector Operator from previous version to 1.3.6, please delete Privileged SCC before upgrading.\n\n         oc delete rolebinding -nneuvector system:openshift:scc:privileged\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T18:30:18.661000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator-af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010-annotation"
        },
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "name": "controller"
        },
        {
          "digest": "sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "name": "enforcer"
        },
        {
          "digest": "sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "name": "manager"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "updater"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner-5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3-annotation"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "ubi8-8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.3.6",
      "version_original": "1.3.6"
    },
    {
      "_id": "632dfd108a97b22f4fc23130",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "annotations": {},
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough",
                  "tls": ""
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                },
                "mastersvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "ranchersso": {
                "enabled": false
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "runAsUser": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8",
                "priorityClassName": "",
                "runAsUser": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "imagePullSecrets": "",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough",
                "tls": ""
              },
              "runAsUser": "",
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "oem": "",
            "openshift": true,
            "psp": false,
            "rbac": true,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "bundle_path_digest": "sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-23T18:38:08.250000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.6 of the NeuVector Certified Operator deploys version 5.0.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nPrivileged SCC is added to Service Account specified in the deploment yaml by Operator version 1.3.6 and above in new deployment. In case of upgrading NeuVector Operator from previous version to 1.3.6, please delete Privileged SCC before upgrading.\n\n         oc delete rolebinding -nneuvector system:openshift:scc:privileged\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T18:38:08.250000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator-af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010-annotation"
        },
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "name": "controller"
        },
        {
          "digest": "sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "name": "enforcer"
        },
        {
          "digest": "sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "name": "manager"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "updater"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner-5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3-annotation"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "ubi8-8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.3.6",
      "version_original": "1.3.6"
    },
    {
      "_id": "632dfe141b05b6df63f34551",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "annotations": {},
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough",
                  "tls": ""
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                },
                "mastersvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "ranchersso": {
                "enabled": false
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "runAsUser": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8",
                "priorityClassName": "",
                "runAsUser": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "imagePullSecrets": "",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough",
                "tls": ""
              },
              "runAsUser": "",
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "oem": "",
            "openshift": true,
            "psp": false,
            "rbac": true,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "bundle_path_digest": "sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-23T18:42:28.298000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.6 of the NeuVector Certified Operator deploys version 5.0.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nPrivileged SCC is added to Service Account specified in the deploment yaml by Operator version 1.3.6 and above in new deployment. In case of upgrading NeuVector Operator from previous version to 1.3.6, please delete Privileged SCC before upgrading.\n\n         oc delete rolebinding -nneuvector system:openshift:scc:privileged\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T18:42:28.298000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator-af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010-annotation"
        },
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "name": "controller"
        },
        {
          "digest": "sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "name": "enforcer"
        },
        {
          "digest": "sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "name": "manager"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "updater"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner-5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3-annotation"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "ubi8-8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.3.6",
      "version_original": "1.3.6"
    },
    {
      "_id": "632dff179bb8b51dd356ff31",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "annotations": {},
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough",
                  "tls": ""
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                },
                "mastersvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "ranchersso": {
                "enabled": false
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "runAsUser": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8",
                "priorityClassName": "",
                "runAsUser": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "imagePullSecrets": "",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough",
                "tls": ""
              },
              "runAsUser": "",
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "oem": "",
            "openshift": true,
            "psp": false,
            "rbac": true,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "bundle_path_digest": "sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-23T18:46:47.560000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.6 of the NeuVector Certified Operator deploys version 5.0.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nPrivileged SCC is added to Service Account specified in the deploment yaml by Operator version 1.3.6 and above in new deployment. In case of upgrading NeuVector Operator from previous version to 1.3.6, please delete Privileged SCC before upgrading.\n\n         oc delete rolebinding -nneuvector system:openshift:scc:privileged\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T18:46:47.560000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator-af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010-annotation"
        },
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "name": "controller"
        },
        {
          "digest": "sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "name": "enforcer"
        },
        {
          "digest": "sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "name": "manager"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "updater"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner-5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3-annotation"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "ubi8-8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.6",
      "version_original": "1.3.6"
    },
    {
      "_id": "632e00a6c9abe8b4a6ea2dfd",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "annotations": {},
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough",
                  "tls": ""
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                },
                "mastersvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "ranchersso": {
                "enabled": false
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "runAsUser": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8",
                "priorityClassName": "",
                "runAsUser": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "imagePullSecrets": "",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough",
                "tls": ""
              },
              "runAsUser": "",
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "oem": "",
            "openshift": true,
            "psp": false,
            "rbac": true,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "bundle_path_digest": "sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-23T18:53:26.561000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.6 of the NeuVector Certified Operator deploys version 5.0.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nPrivileged SCC is added to Service Account specified in the deploment yaml by Operator version 1.3.6 and above in new deployment. In case of upgrading NeuVector Operator from previous version to 1.3.6, please delete Privileged SCC before upgrading.\n\n         oc delete rolebinding -nneuvector system:openshift:scc:privileged\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T18:53:26.561000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator-af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010-annotation"
        },
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "name": "controller"
        },
        {
          "digest": "sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "name": "enforcer"
        },
        {
          "digest": "sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "name": "manager"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "updater"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner-5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3-annotation"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "ubi8-8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.3.6",
      "version_original": "1.3.6"
    },
    {
      "_id": "632e00a62bdd76944b8eda45",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "affinity": {
                "podAntiAffinity": {
                  "preferredDuringSchedulingIgnoredDuringExecution": [
                    {
                      "podAffinityTerm": {
                        "labelSelector": {
                          "matchExpressions": [
                            {
                              "key": "app",
                              "operator": "In",
                              "values": [
                                "neuvector-controller-pod"
                              ]
                            }
                          ]
                        },
                        "topologyKey": "kubernetes.io/hostname"
                      },
                      "weight": 100
                    }
                  ]
                }
              },
              "annotations": {},
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough",
                  "tls": ""
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "env": [],
              "federation": {
                "managedsvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                },
                "mastersvc": {
                  "annotations": {},
                  "ingress": {
                    "annotations": {
                      "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                    },
                    "enabled": false,
                    "host": "",
                    "ingressClassName": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough",
                    "tls": ""
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "ranchersso": {
                "enabled": false
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "secret": {
                "data": {},
                "enabled": false
              },
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              },
              "tolerations": []
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "affinity": {},
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner",
                "nodeSelector": {},
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "runAsUser": "",
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                },
                "tolerations": []
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8",
                "priorityClassName": "",
                "runAsUser": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "imagePullSecrets": "",
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "affinity": {},
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {
                  "nginx.ingress.kubernetes.io/backend-protocol": "HTTPS"
                },
                "enabled": false,
                "host": "",
                "ingressClassName": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "nodeSelector": {},
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough",
                "tls": ""
              },
              "runAsUser": "",
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              },
              "tolerations": []
            },
            "oem": "",
            "openshift": true,
            "psp": false,
            "rbac": true,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "bundle_path_digest": "sha256:2e3fac3184915fb26a0ee4772e6d98e99d14f212e371d235c9dd859b6a67e406",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-23T18:53:26.859000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.3.6 of the NeuVector Certified Operator deploys version 5.0.3 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nPrivileged SCC is added to Service Account specified in the deploment yaml by Operator version 1.3.6 and above in new deployment. In case of upgrading NeuVector Operator from previous version to 1.3.6, please delete Privileged SCC before upgrading.\n\n         oc delete rolebinding -nneuvector system:openshift:scc:privileged\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T18:53:26.859000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator-af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010-annotation"
        },
        {
          "digest": "sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:af83b4abaa625c274faff86cfa8213c2d018d64ac0d080b59fbd772614bb4010",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:361fd8aa620d378038e57efaf6050c6442d1c06472294b405efa4dae5a3ce985",
          "name": "controller"
        },
        {
          "digest": "sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:c04ff372d4f98c02d721d415bd154e1d454b398f8686d67ef095c58fd9110742",
          "name": "enforcer"
        },
        {
          "digest": "sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:1b72ffdc362b415062f007baab892093f2705ccd446f163e85a0d603f906a100",
          "name": "manager"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "updater"
        },
        {
          "digest": "sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3",
          "name": "scanner-5c23dc5abcd4bf65c547af359b4deef96726bb43183cd0121c43f474ea7d84d3-annotation"
        },
        {
          "digest": "sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "image": "registry.access.redhat.com/ubi8@sha256:8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98",
          "name": "ubi8-8ce9caf9d86c83b47bda7c73a8fafb5fcf17f56ea13c050408cfb59aae28ae98-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.6",
      "version_original": "1.3.6"
    },
    {
      "_id": "632e0928fc81574279e7be46",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "bundle_path_digest": "sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T19:29:44.558000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:29:44.558000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator-718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f-annotation"
        },
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "8.6.4",
      "version_original": "8.6.4"
    },
    {
      "_id": "632e09561b05b6df63f3462e",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "bundle_path_digest": "sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T19:30:30.015000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:30:30.015000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator-718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f-annotation"
        },
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.4",
      "version_original": "8.6.4"
    },
    {
      "_id": "632e0c1ec9abe8b4a6ea2eda",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "bundle_path_digest": "sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T19:42:22.372000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:42:22.372000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator-718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f-annotation"
        },
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.4",
      "version_original": "8.6.4"
    },
    {
      "_id": "632e0d5b8a97b22f4fc232ad",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "bundle_path_digest": "sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T19:47:39.193000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:47:39.193000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator-718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f-annotation"
        },
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.4",
      "version_original": "8.6.4"
    },
    {
      "_id": "632e0fe5407cfb8fa77c7a03",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "bundle_path_digest": "sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T19:58:29.549000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T19:58:29.549000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator-718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f-annotation"
        },
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.4",
      "version_original": "8.6.4"
    },
    {
      "_id": "632e10f36c46121321886f17",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "bundle_path_digest": "sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T20:02:59.035000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T20:02:59.035000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator-718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f-annotation"
        },
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.4",
      "version_original": "8.6.4"
    },
    {
      "_id": "632e112f407cfb8fa77c7a2c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "bundle_path_digest": "sha256:1afc2fa2c2f557f4e9a9e6ab46d41ed4ad3365e863edb17f385bc33476b7437b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-23T20:03:59.247000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.6.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-23T20:03:59.247000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator-718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f-annotation"
        },
        {
          "digest": "sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:718b36dd2e4d29be4a6e4bb5c94372cc037925ef9c65d7c14c8ec505a4ac4f8f",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:772260e0e7619b900744b83da261a0a2fbdb3b74eae28f5f43da9b7a80481831",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:2433e852dbe8ee841c58de583d68bef2eda52a9b8427bbbb9709b5c8d664efc9",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.4",
      "version_original": "8.6.4"
    },
    {
      "_id": "632ec20c1b05b6df63f35a32",
      "alm_examples": [
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "ControlPlane",
          "metadata": {
            "name": "controlplane-example"
          },
          "spec": {
            "dataplane": "dataplane-example",
            "gatewayClass": "kong"
          }
        },
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "DataPlane",
          "metadata": {
            "name": "dataplane-example"
          },
          "spec": {
            "env": [
              {
                "name": "KONG_LOG_LEVEL",
                "value": "debug"
              }
            ]
          }
        },
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "GatewayConfiguration",
          "metadata": {
            "name": "kong",
            "namespace": "default"
          },
          "spec": {
            "controlPlaneDeploymentOptions": {
              "env": [
                {
                  "name": "CONTROLLER_LOG_LEVEL",
                  "value": "debug"
                }
              ]
            },
            "dataPlaneDeploymentOptions": {
              "containerImage": "kong",
              "version": "2.8"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kong/gateway-operator-bundle@sha256:bcf3522f23d22287867091d5af338b425c8f71b9c83467759e66140493e61151",
      "bundle_path_digest": "sha256:bcf3522f23d22287867091d5af338b425c8f71b9c83467759e66140493e61151",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-24T08:38:36.888000+00:00",
      "csv_description": "Kong Gateway Operator for Kubernetes. Technical preview.\n\nA [Kubernetes Operator][k8soperator] for the [Kong Gateway][kong].\n\n[k8soperator]:https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\n[kong]:https://konghq.com\n\n### Quick Start\n\nThe [Quick Start guide](https://kong.github.io/gateway-operator-docs/#quick-start-guide) uses Kong Gateway Operator to deploy sample Kong setup for Kubernetes users, which includes an instance of Kong serving as a proxy to an example Kubernetes service.\n\n### Documentation\n\nThe primary documentation site for Kong Operator is located [in its GitHub repository](https://kong.github.io/gateway-operator-docs/).\n\nThe Gateway API documentation is located [in the Gateway API repository](https://gateway-api.sigs.k8s.io/).\n",
      "csv_display_name": "Kong Gateway Operator",
      "csv_metadata_description": "A Kubernetes Operator for the Kong Gateway",
      "csv_name": "kong-gateway-operator.v0.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-24T08:38:36.888000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kong-gateway-operator",
      "provided_apis": [
        {
          "group": "gateway-operator.konghq.com",
          "kind": "ControlPlane",
          "version": "v1alpha1"
        },
        {
          "group": "gateway-operator.konghq.com",
          "kind": "DataPlane",
          "version": "v1alpha1"
        },
        {
          "group": "gateway-operator.konghq.com",
          "kind": "GatewayConfiguration",
          "version": "v1alpha1"
        }
      ],
      "provider": "Kong Inc.",
      "related_images": [
        {
          "digest": "sha256:54e7c7e57bf93810a7cc36327023b8699f754c4c40c5c289548d54170caa5db2",
          "image": "registry.connect.redhat.com/kong/kong@sha256:54e7c7e57bf93810a7cc36327023b8699f754c4c40c5c289548d54170caa5db2",
          "name": "kong"
        },
        {
          "digest": "sha256:6f8f47c1da40bf39c3df8705409fd564c255e72c9c87be56bcd3a5a048191cc5",
          "image": "registry.connect.redhat.com/kong/kong-ingress-controller@sha256:6f8f47c1da40bf39c3df8705409fd564c255e72c9c87be56bcd3a5a048191cc5",
          "name": "kong-controller"
        },
        {
          "digest": "sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "name": "certificate-config"
        },
        {
          "digest": "sha256:ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7",
          "image": "ghcr.io/kong/gateway-operator@sha256:ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7",
          "name": "gateway-operator-ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7-annotation"
        },
        {
          "digest": "sha256:ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7",
          "image": "ghcr.io/kong/gateway-operator@sha256:ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7",
          "name": "manager"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:6f8f47c1da40bf39c3df8705409fd564c255e72c9c87be56bcd3a5a048191cc5",
          "image": "registry.connect.redhat.com/kong/kong-ingress-controller@sha256:6f8f47c1da40bf39c3df8705409fd564c255e72c9c87be56bcd3a5a048191cc5",
          "name": "kong_controller"
        },
        {
          "digest": "sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "name": "certificate_config"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.1.1",
      "version_original": "0.1.1"
    },
    {
      "_id": "632ec2958a97b22f4fc2467f",
      "alm_examples": [
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "ControlPlane",
          "metadata": {
            "name": "controlplane-example"
          },
          "spec": {
            "dataplane": "dataplane-example",
            "gatewayClass": "kong"
          }
        },
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "DataPlane",
          "metadata": {
            "name": "dataplane-example"
          },
          "spec": {
            "env": [
              {
                "name": "KONG_LOG_LEVEL",
                "value": "debug"
              }
            ]
          }
        },
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "GatewayConfiguration",
          "metadata": {
            "name": "kong",
            "namespace": "default"
          },
          "spec": {
            "controlPlaneDeploymentOptions": {
              "env": [
                {
                  "name": "CONTROLLER_LOG_LEVEL",
                  "value": "debug"
                }
              ]
            },
            "dataPlaneDeploymentOptions": {
              "containerImage": "kong",
              "version": "2.8"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kong/gateway-operator-bundle@sha256:bcf3522f23d22287867091d5af338b425c8f71b9c83467759e66140493e61151",
      "bundle_path_digest": "sha256:bcf3522f23d22287867091d5af338b425c8f71b9c83467759e66140493e61151",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-24T08:40:53.254000+00:00",
      "csv_description": "Kong Gateway Operator for Kubernetes. Technical preview.\n\nA [Kubernetes Operator][k8soperator] for the [Kong Gateway][kong].\n\n[k8soperator]:https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\n[kong]:https://konghq.com\n\n### Quick Start\n\nThe [Quick Start guide](https://kong.github.io/gateway-operator-docs/#quick-start-guide) uses Kong Gateway Operator to deploy sample Kong setup for Kubernetes users, which includes an instance of Kong serving as a proxy to an example Kubernetes service.\n\n### Documentation\n\nThe primary documentation site for Kong Operator is located [in its GitHub repository](https://kong.github.io/gateway-operator-docs/).\n\nThe Gateway API documentation is located [in the Gateway API repository](https://gateway-api.sigs.k8s.io/).\n",
      "csv_display_name": "Kong Gateway Operator",
      "csv_metadata_description": "A Kubernetes Operator for the Kong Gateway",
      "csv_name": "kong-gateway-operator.v0.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-24T08:40:53.254000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kong-gateway-operator",
      "provided_apis": [
        {
          "group": "gateway-operator.konghq.com",
          "kind": "ControlPlane",
          "plural": "controlplanes",
          "version": "v1alpha1"
        },
        {
          "group": "gateway-operator.konghq.com",
          "kind": "DataPlane",
          "plural": "dataplanes",
          "version": "v1alpha1"
        },
        {
          "group": "gateway-operator.konghq.com",
          "kind": "GatewayConfiguration",
          "plural": "gatewayconfigurations",
          "version": "v1alpha1"
        }
      ],
      "provider": "Kong Inc.",
      "related_images": [
        {
          "digest": "sha256:54e7c7e57bf93810a7cc36327023b8699f754c4c40c5c289548d54170caa5db2",
          "image": "registry.connect.redhat.com/kong/kong@sha256:54e7c7e57bf93810a7cc36327023b8699f754c4c40c5c289548d54170caa5db2",
          "name": "kong"
        },
        {
          "digest": "sha256:6f8f47c1da40bf39c3df8705409fd564c255e72c9c87be56bcd3a5a048191cc5",
          "image": "registry.connect.redhat.com/kong/kong-ingress-controller@sha256:6f8f47c1da40bf39c3df8705409fd564c255e72c9c87be56bcd3a5a048191cc5",
          "name": "kong-controller"
        },
        {
          "digest": "sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "name": "certificate-config"
        },
        {
          "digest": "sha256:ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7",
          "image": "ghcr.io/kong/gateway-operator@sha256:ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7",
          "name": "gateway-operator-ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7-annotation"
        },
        {
          "digest": "sha256:ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7",
          "image": "ghcr.io/kong/gateway-operator@sha256:ec485d2d7308a9b3700eba0c8cfb3df4dd266ce8c33e15c2692b0d9ab25e7dc7",
          "name": "manager"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:6f8f47c1da40bf39c3df8705409fd564c255e72c9c87be56bcd3a5a048191cc5",
          "image": "registry.connect.redhat.com/kong/kong-ingress-controller@sha256:6f8f47c1da40bf39c3df8705409fd564c255e72c9c87be56bcd3a5a048191cc5",
          "name": "kong_controller"
        },
        {
          "digest": "sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "name": "certificate_config"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.1.1",
      "version_original": "0.1.1"
    },
    {
      "_id": "633057821b05b6df63f38746",
      "alm_examples": [
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Function",
          "metadata": {
            "name": "java-function-sample",
            "namespace": "default"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "input": {
              "topics": [
                "persistent://public/default/java-function-input-topic"
              ],
              "typeClassName": "java.lang.String"
            },
            "java": {
              "extraDependenciesDir": "random-dir/",
              "jar": "pulsar-functions-api-examples.jar",
              "jarLocation": "public/default/nlu-test-java-function"
            },
            "logTopic": "persistent://public/default/logging-function-logs",
            "maxPendingAsyncRequests": 1000,
            "maxReplicas": 5,
            "output": {
              "topic": "persistent://public/default/java-function-output-topic",
              "typeClassName": "java.lang.String"
            },
            "pod": {
              "annotations": {
                "managed-function": "true"
              },
              "env": [
                {
                  "name": "EXAMPLE_VARIABLE",
                  "value": "exampleValue"
                }
              ],
              "imagePullSecrets": [
                {
                  "name": "regcred"
                }
              ],
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30"
                  ],
                  "image": "busybox:1.28",
                  "name": "init-function"
                }
              ],
              "labels": {
                "locaction": "mtv"
              },
              "sidecars": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30000"
                  ],
                  "image": "busybox:1.28",
                  "name": "sidecar-function"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "cache-volume"
                }
              ]
            },
            "pulsar": {
              "authSecret": "test-auth",
              "pulsarConfig": "test-pulsar",
              "tlsSecret": "test-tls"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "secretsMap": {
              "name": {
                "key": "username",
                "path": "test-secret"
              },
              "pwd": {
                "key": "password",
                "path": "test-secret"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/cache",
                "name": "cache-volume"
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "FunctionMesh",
          "metadata": {
            "name": "functionmesh-sample"
          },
          "spec": {
            "functions": [
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/functionmesh-input-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex1"
                },
                "logTopic": "persistent://public/default/logging-function-log",
                "maxReplicas": 1,
                "name": "ex1",
                "output": {
                  "topic": "persistent://public/default/mid-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              },
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/mid-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex2"
                },
                "logTopic": "persistent://public/default/logging-function-logs",
                "maxReplicas": 1,
                "name": "ex2",
                "output": {
                  "topic": "persistent://public/default/functionmesh-output-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Sink",
          "metadata": {
            "name": "sink-sample"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.io.elasticsearch.ElasticSearchSink",
            "clusterName": "test-pulsar",
            "image": "streamnative/pulsar-io-elastic-search:2.10.0.0-rc10",
            "input": {
              "topics": [
                "persistent://public/default/input"
              ],
              "typeClassName": "[B"
            },
            "java": {
              "jar": "connectors/pulsar-io-elastic-search-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "pulsar": {
              "pulsarConfig": "test-sink"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sinkConfig": {
              "elasticSearchUrl": "http://quickstart-es-http.default.svc.cluster.local:9200",
              "indexName": "my_index",
              "password": "wJ757TmoXEd941kXm07Z2GW3",
              "typeName": "doc",
              "username": "elastic"
            }
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Source",
          "metadata": {
            "name": "source-sample"
          },
          "spec": {
            "className": "org.apache.pulsar.io.debezium.mongodb.DebeziumMongoDbSource",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "image": "streamnative/pulsar-io-debezium-mongodb:2.10.0.0-rc10",
            "java": {
              "jar": "connectors/pulsar-io-debezium-mongodb-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "output": {
              "producerConf": {
                "maxPendingMessages": 1000,
                "maxPendingMessagesAcrossPartitions": 50000,
                "useThreadLocalProducers": true
              },
              "topic": "persistent://public/default/destination",
              "typeClassName": "org.apache.pulsar.common.schema.KeyValue"
            },
            "pulsar": {
              "pulsarConfig": "test-source"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sourceConfig": {
              "database.whitelist": "inventory",
              "mongodb.hosts": "rs0/mongo-dbz-0.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-1.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-2.mongo.default.svc.cluster.local:27017",
              "mongodb.name": "dbserver1",
              "mongodb.password": "dbz",
              "mongodb.task.id": "1",
              "mongodb.user": "debezium",
              "pulsar.service.url": "pulsar://test-pulsar-broker.default.svc.cluster.local:6650"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/function-mesh-bundle@sha256:76537db90d8e64ee43cff269d1769caa84d45c9262de5312e1eb6bee9b74202f",
      "bundle_path_digest": "sha256:76537db90d8e64ee43cff269d1769caa84d45c9262de5312e1eb6bee9b74202f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-25T13:28:34.211000+00:00",
      "csv_description": "[Function Mesh](https://functionmesh.io/) is a serverless framework purpose-built for stream processing applications. It brings powerful event-streaming capabilities to your applications by orchestrating multiple [Pulsar Functions](http://pulsar.apache.org/docs/en/next/functions-overview/) and [Pulsar IO connectors](http://pulsar.apache.org/docs/en/next/io-overview/) for complex stream processing jobs on Kubernetes.\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Function Mesh Operator",
      "csv_metadata_description": "The Function Mesh Operator manages the Pulsar Functions and Connectors deployed on a Kubernetes cluster.",
      "csv_name": "function-mesh.v0.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-25T13:28:34.211000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "function-mesh",
      "provided_apis": [
        {
          "group": "compute.functionmesh.io",
          "kind": "Function",
          "plural": "functions",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Sink",
          "plural": "sinks",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Source",
          "plural": "sources",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "FunctionMesh",
          "plural": "functionmeshes",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "function-mesh"
        },
        {
          "digest": "sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "image": "docker.cloudsmith.io/streamnative/mirrors/gcr.io/kubebuilder/kube-rbac-proxy@sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "function-mesh-15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36-annotation"
        },
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.6.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.6.0",
      "version_original": "0.6.0"
    },
    {
      "_id": "63305796fc81574279e7fff2",
      "alm_examples": [
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Function",
          "metadata": {
            "name": "java-function-sample",
            "namespace": "default"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "input": {
              "topics": [
                "persistent://public/default/java-function-input-topic"
              ],
              "typeClassName": "java.lang.String"
            },
            "java": {
              "extraDependenciesDir": "random-dir/",
              "jar": "pulsar-functions-api-examples.jar",
              "jarLocation": "public/default/nlu-test-java-function"
            },
            "logTopic": "persistent://public/default/logging-function-logs",
            "maxPendingAsyncRequests": 1000,
            "maxReplicas": 5,
            "output": {
              "topic": "persistent://public/default/java-function-output-topic",
              "typeClassName": "java.lang.String"
            },
            "pod": {
              "annotations": {
                "managed-function": "true"
              },
              "env": [
                {
                  "name": "EXAMPLE_VARIABLE",
                  "value": "exampleValue"
                }
              ],
              "imagePullSecrets": [
                {
                  "name": "regcred"
                }
              ],
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30"
                  ],
                  "image": "busybox:1.28",
                  "name": "init-function"
                }
              ],
              "labels": {
                "locaction": "mtv"
              },
              "sidecars": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30000"
                  ],
                  "image": "busybox:1.28",
                  "name": "sidecar-function"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "cache-volume"
                }
              ]
            },
            "pulsar": {
              "authSecret": "test-auth",
              "pulsarConfig": "test-pulsar",
              "tlsSecret": "test-tls"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "secretsMap": {
              "name": {
                "key": "username",
                "path": "test-secret"
              },
              "pwd": {
                "key": "password",
                "path": "test-secret"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/cache",
                "name": "cache-volume"
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "FunctionMesh",
          "metadata": {
            "name": "functionmesh-sample"
          },
          "spec": {
            "functions": [
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/functionmesh-input-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex1"
                },
                "logTopic": "persistent://public/default/logging-function-log",
                "maxReplicas": 1,
                "name": "ex1",
                "output": {
                  "topic": "persistent://public/default/mid-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              },
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/mid-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex2"
                },
                "logTopic": "persistent://public/default/logging-function-logs",
                "maxReplicas": 1,
                "name": "ex2",
                "output": {
                  "topic": "persistent://public/default/functionmesh-output-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Sink",
          "metadata": {
            "name": "sink-sample"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.io.elasticsearch.ElasticSearchSink",
            "clusterName": "test-pulsar",
            "image": "streamnative/pulsar-io-elastic-search:2.10.0.0-rc10",
            "input": {
              "topics": [
                "persistent://public/default/input"
              ],
              "typeClassName": "[B"
            },
            "java": {
              "jar": "connectors/pulsar-io-elastic-search-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "pulsar": {
              "pulsarConfig": "test-sink"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sinkConfig": {
              "elasticSearchUrl": "http://quickstart-es-http.default.svc.cluster.local:9200",
              "indexName": "my_index",
              "password": "wJ757TmoXEd941kXm07Z2GW3",
              "typeName": "doc",
              "username": "elastic"
            }
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Source",
          "metadata": {
            "name": "source-sample"
          },
          "spec": {
            "className": "org.apache.pulsar.io.debezium.mongodb.DebeziumMongoDbSource",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "image": "streamnative/pulsar-io-debezium-mongodb:2.10.0.0-rc10",
            "java": {
              "jar": "connectors/pulsar-io-debezium-mongodb-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "output": {
              "producerConf": {
                "maxPendingMessages": 1000,
                "maxPendingMessagesAcrossPartitions": 50000,
                "useThreadLocalProducers": true
              },
              "topic": "persistent://public/default/destination",
              "typeClassName": "org.apache.pulsar.common.schema.KeyValue"
            },
            "pulsar": {
              "pulsarConfig": "test-source"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sourceConfig": {
              "database.whitelist": "inventory",
              "mongodb.hosts": "rs0/mongo-dbz-0.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-1.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-2.mongo.default.svc.cluster.local:27017",
              "mongodb.name": "dbserver1",
              "mongodb.password": "dbz",
              "mongodb.task.id": "1",
              "mongodb.user": "debezium",
              "pulsar.service.url": "pulsar://test-pulsar-broker.default.svc.cluster.local:6650"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/function-mesh-bundle@sha256:76537db90d8e64ee43cff269d1769caa84d45c9262de5312e1eb6bee9b74202f",
      "bundle_path_digest": "sha256:76537db90d8e64ee43cff269d1769caa84d45c9262de5312e1eb6bee9b74202f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-25T13:28:54.789000+00:00",
      "csv_description": "[Function Mesh](https://functionmesh.io/) is a serverless framework purpose-built for stream processing applications. It brings powerful event-streaming capabilities to your applications by orchestrating multiple [Pulsar Functions](http://pulsar.apache.org/docs/en/next/functions-overview/) and [Pulsar IO connectors](http://pulsar.apache.org/docs/en/next/io-overview/) for complex stream processing jobs on Kubernetes.\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Function Mesh Operator",
      "csv_metadata_description": "The Function Mesh Operator manages the Pulsar Functions and Connectors deployed on a Kubernetes cluster.",
      "csv_name": "function-mesh.v0.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-25T13:28:54.789000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "function-mesh",
      "provided_apis": [
        {
          "group": "compute.functionmesh.io",
          "kind": "Source",
          "plural": "sources",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "FunctionMesh",
          "plural": "functionmeshes",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Function",
          "plural": "functions",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Sink",
          "plural": "sinks",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "function-mesh"
        },
        {
          "digest": "sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "image": "docker.cloudsmith.io/streamnative/mirrors/gcr.io/kubebuilder/kube-rbac-proxy@sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "function-mesh-15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36-annotation"
        },
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.6.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.6.0",
      "version_original": "0.6.0"
    },
    {
      "_id": "633057af9bb8b51dd35741a3",
      "alm_examples": [
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Function",
          "metadata": {
            "name": "java-function-sample",
            "namespace": "default"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "input": {
              "topics": [
                "persistent://public/default/java-function-input-topic"
              ],
              "typeClassName": "java.lang.String"
            },
            "java": {
              "extraDependenciesDir": "random-dir/",
              "jar": "pulsar-functions-api-examples.jar",
              "jarLocation": "public/default/nlu-test-java-function"
            },
            "logTopic": "persistent://public/default/logging-function-logs",
            "maxPendingAsyncRequests": 1000,
            "maxReplicas": 5,
            "output": {
              "topic": "persistent://public/default/java-function-output-topic",
              "typeClassName": "java.lang.String"
            },
            "pod": {
              "annotations": {
                "managed-function": "true"
              },
              "env": [
                {
                  "name": "EXAMPLE_VARIABLE",
                  "value": "exampleValue"
                }
              ],
              "imagePullSecrets": [
                {
                  "name": "regcred"
                }
              ],
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30"
                  ],
                  "image": "busybox:1.28",
                  "name": "init-function"
                }
              ],
              "labels": {
                "locaction": "mtv"
              },
              "sidecars": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30000"
                  ],
                  "image": "busybox:1.28",
                  "name": "sidecar-function"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "cache-volume"
                }
              ]
            },
            "pulsar": {
              "authSecret": "test-auth",
              "pulsarConfig": "test-pulsar",
              "tlsSecret": "test-tls"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "secretsMap": {
              "name": {
                "key": "username",
                "path": "test-secret"
              },
              "pwd": {
                "key": "password",
                "path": "test-secret"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/cache",
                "name": "cache-volume"
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "FunctionMesh",
          "metadata": {
            "name": "functionmesh-sample"
          },
          "spec": {
            "functions": [
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/functionmesh-input-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex1"
                },
                "logTopic": "persistent://public/default/logging-function-log",
                "maxReplicas": 1,
                "name": "ex1",
                "output": {
                  "topic": "persistent://public/default/mid-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              },
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/mid-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex2"
                },
                "logTopic": "persistent://public/default/logging-function-logs",
                "maxReplicas": 1,
                "name": "ex2",
                "output": {
                  "topic": "persistent://public/default/functionmesh-output-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Sink",
          "metadata": {
            "name": "sink-sample"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.io.elasticsearch.ElasticSearchSink",
            "clusterName": "test-pulsar",
            "image": "streamnative/pulsar-io-elastic-search:2.10.0.0-rc10",
            "input": {
              "topics": [
                "persistent://public/default/input"
              ],
              "typeClassName": "[B"
            },
            "java": {
              "jar": "connectors/pulsar-io-elastic-search-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "pulsar": {
              "pulsarConfig": "test-sink"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sinkConfig": {
              "elasticSearchUrl": "http://quickstart-es-http.default.svc.cluster.local:9200",
              "indexName": "my_index",
              "password": "wJ757TmoXEd941kXm07Z2GW3",
              "typeName": "doc",
              "username": "elastic"
            }
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Source",
          "metadata": {
            "name": "source-sample"
          },
          "spec": {
            "className": "org.apache.pulsar.io.debezium.mongodb.DebeziumMongoDbSource",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "image": "streamnative/pulsar-io-debezium-mongodb:2.10.0.0-rc10",
            "java": {
              "jar": "connectors/pulsar-io-debezium-mongodb-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "output": {
              "producerConf": {
                "maxPendingMessages": 1000,
                "maxPendingMessagesAcrossPartitions": 50000,
                "useThreadLocalProducers": true
              },
              "topic": "persistent://public/default/destination",
              "typeClassName": "org.apache.pulsar.common.schema.KeyValue"
            },
            "pulsar": {
              "pulsarConfig": "test-source"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sourceConfig": {
              "database.whitelist": "inventory",
              "mongodb.hosts": "rs0/mongo-dbz-0.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-1.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-2.mongo.default.svc.cluster.local:27017",
              "mongodb.name": "dbserver1",
              "mongodb.password": "dbz",
              "mongodb.task.id": "1",
              "mongodb.user": "debezium",
              "pulsar.service.url": "pulsar://test-pulsar-broker.default.svc.cluster.local:6650"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/function-mesh-bundle@sha256:76537db90d8e64ee43cff269d1769caa84d45c9262de5312e1eb6bee9b74202f",
      "bundle_path_digest": "sha256:76537db90d8e64ee43cff269d1769caa84d45c9262de5312e1eb6bee9b74202f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-25T13:29:19.094000+00:00",
      "csv_description": "[Function Mesh](https://functionmesh.io/) is a serverless framework purpose-built for stream processing applications. It brings powerful event-streaming capabilities to your applications by orchestrating multiple [Pulsar Functions](http://pulsar.apache.org/docs/en/next/functions-overview/) and [Pulsar IO connectors](http://pulsar.apache.org/docs/en/next/io-overview/) for complex stream processing jobs on Kubernetes.\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Function Mesh Operator",
      "csv_metadata_description": "The Function Mesh Operator manages the Pulsar Functions and Connectors deployed on a Kubernetes cluster.",
      "csv_name": "function-mesh.v0.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-25T13:29:19.094000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "function-mesh",
      "provided_apis": [
        {
          "group": "compute.functionmesh.io",
          "kind": "Sink",
          "plural": "sinks",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Source",
          "plural": "sources",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "FunctionMesh",
          "plural": "functionmeshes",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Function",
          "plural": "functions",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "function-mesh"
        },
        {
          "digest": "sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "image": "docker.cloudsmith.io/streamnative/mirrors/gcr.io/kubebuilder/kube-rbac-proxy@sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "function-mesh-15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36-annotation"
        },
        {
          "digest": "sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "image": "quay.io/streamnativeio/function-mesh@sha256:15ab33a8e2726416a05e034184a2253d33871aba40e6f41347511caf47e08d36",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.6.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.6.0",
      "version_original": "0.6.0"
    },
    {
      "_id": "6330992c407cfb8fa77cbfc2",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-25T18:08:43.979000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-25T18:08:43.979000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "6330992e9bb8b51dd35746d6",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-25T18:08:46.103000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-25T18:08:46.103000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "63309977fc81574279e80558",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-25T18:09:59.336000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-25T18:09:59.336000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "633099781b05b6df63f38ca9",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-25T18:10:00.479000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-25T18:10:00.479000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "633099908454bee1cb73aed0",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-25T18:10:24.486000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-25T18:10:24.486000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "63309990c9abe8b4a6ea7599",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-25T18:10:24.968000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-25T18:10:24.968000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "633099a59bb8b51dd35746dc",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-25T18:10:45.233000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-25T18:10:45.233000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "633099a59bb8b51dd35746de",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-25T18:10:45.641000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-25T18:10:45.641000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "63309d691b05b6df63f38ce7",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-25T18:26:49.861000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-25T18:26:49.861000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "63309d6a6c4612132188b561",
      "alm_examples": [
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "bc-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Slave",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f1",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              },
              {
                "ethName": "enp2s0f2",
                "ethPort": 2,
                "holdoff": 500,
                "ipv4": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-BC-8275.1",
            "nodeSelector": {
              "sts.silicom.com/config": "bc-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsConfig",
          "metadata": {
            "name": "gm-1",
            "namespace": "openshift-operators"
          },
          "spec": {
            "interfaces": [
              {
                "ethName": "enp2s0f0",
                "ethPort": 1,
                "holdoff": 500,
                "ipv4": 1,
                "ipv6": 1,
                "mode": "Master",
                "ql": 4,
                "qlEnable": 1,
                "synce": 1
              }
            ],
            "mode": "T-GM.8275.1",
            "nodeSelector": {
              "sts.silicom.com/mode": "gm-1"
            }
          }
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsNode",
          "metadata": {
            "name": "worker2"
          },
          "spec": {}
        },
        {
          "api_version": "sts.silicom.com/v1alpha1",
          "kind": "StsOperatorConfig",
          "metadata": {
            "name": "sts-operator-config",
            "namespace": "openshift-operators"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/silicomltd/silicom-sts-operator@sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "bundle_path_digest": "sha256:ddfe2ef7d9e1093860adc84f44a0f4af7fc18b4742152b7779da05dbdca74d58",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-25T18:26:50.345000+00:00",
      "csv_description": "Silicom STS line card for 4G and 5G NIC enable real-time data transmission\nwith high timing accuracy at the lowest cost to power 5G DRAN and CRAN edge\ndeployments.\n\n* Support 1588/PTP over IPv4 / IPV6, IEEE1588v2\n* Support SyncE /ITU-T G.8262\n* T-BC/T-TSC Boundary Clock and TSC Slave Clock /G.8273.2\n* T-GM Grand Master /G.8273.1 per G.8275.1 PTP Profile\n* PRTC Primary Reference Time Clock Class B/G.8272\n* T-TC Transparent Clock /G.8273.3\n* 1588 Software Stack and Servo Software in x86\n* [Silicom STS2 Card](https://www.silicom-usa.com/pr/server-adapters/networking-adapters/10-gigabit-ethernet-networking-adapters/p410g8ts81-timesync-server-adapter)\n\n### Prequisites:\n* [NFD Operator](https://operatorhub.io/operator/nfd-operator \"NFD operator needed for the discovery of STS cards\").\n* [SRO Operator](https://github.com/openshift/special-resource-operator)\n",
      "csv_display_name": "Silicom STS Operator",
      "csv_metadata_description": "This Operator is a Kubernetes custom controller whose goal\nis to serve the installation and lifecycle management of\nSilicom STS device plugins for Kubernetes.\n",
      "csv_name": "silicom-sts-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-25T18:26:50.345000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "silicom-sts-operator",
      "provided_apis": [
        {
          "group": "sts.silicom.com",
          "kind": "StsConfig",
          "plural": "stsconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsNode",
          "plural": "stsnodes",
          "version": "v1alpha1"
        },
        {
          "group": "sts.silicom.com",
          "kind": "StsOperatorConfig",
          "plural": "stsoperatorconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Silicom Ltd.",
      "related_images": [
        {
          "digest": "sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "image": "quay.io/silicom/gpsd@sha256:cc1066f0ab347fd11c2214d6633b9727f581830bcc6b638df51e5657a5408c07",
          "name": "gpsd"
        },
        {
          "digest": "sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "image": "quay.io/silicom/phc2sys@sha256:f471a2596c2cff1c538a7f167c3c586721f36dd9690cf656e329f797fd16f412",
          "name": "phc2sys"
        },
        {
          "digest": "sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "image": "quay.io/silicom/tsyncd@sha256:410d078fdf94a306942d36c69d86af35afd51711b2dad67a7d6ced7f5b52c8d3",
          "name": "tsyncd"
        },
        {
          "digest": "sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "image": "quay.io/silicom/grpc-tsyncd@sha256:7ddf9e3ba749f6ec8ded7c4a2d41d94008eb64f69e38f14a01e082f780b08994",
          "name": "grpc-tsyncd"
        },
        {
          "digest": "sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "image": "quay.io/silicom/sts-plugin@sha256:529cd89559276680efcd73ef4e8d19df5741726dcfb02ad17a1c9f264d378fe0",
          "name": "sts-plugin"
        },
        {
          "digest": "sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "image": "quay.io/silicom/ice-driver-src@sha256:56fbe39ec7b1732959f1bdef7854376e3b8f6aa7a1ebd2dcdd84c738a2eb7604",
          "name": "ice-driver-src"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "sts-operator"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "image": "quay.io/silicom/sts-operator@sha256:a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5",
          "name": "sts-operator-a79a5cf99f5238ee08c509efe0b6142197ef0b79a6b209c125d9f7b7235758e5-annotation"
        },
        {
          "digest": "sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "image": "quay.io/silicom/sts-operator@sha256:26d352120fc86e5b67610ecd56ac383f07f093d8606e26f913acad7dbe11a8de",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "6331e4cfc9abe8b4a6eaa54a",
      "alm_examples": [
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveMemoryConfig",
          "metadata": {
            "labels": {
              "KoveMemoryConfig": ""
            },
            "name": "example-memory-config"
          },
          "spec": {
            "container": "",
            "namespace": "",
            "size": ""
          }
        },
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveSystem",
          "metadata": {
            "labels": {
              "KoveSystem": ""
            },
            "name": "kove-system"
          },
          "spec": {
            "autogrowInitialIncrement": "1 GiB",
            "autogrowMaxIncrement": "1 TiB",
            "l4MaxMemoryPercent": 90,
            "managementConsoleAddress": "",
            "memoryPlusLocalMemoryMaxSize": "0 MiB"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/kove/kove-operator@sha256:bc2af832a1504289e5d4402c822845513c9d882084cb40fddfb1148f197e7c4b",
      "bundle_path_digest": "sha256:bc2af832a1504289e5d4402c822845513c9d882084cb40fddfb1148f197e7c4b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-26T17:43:43.223000+00:00",
      "csv_description": "## About the Operator\nThe Kove External Memory operator integrates Kove's software-defined memory\nsolution with Kubernetes and OpenShift clusters. The operator enables\ncontainers to transparently provision any amount of memory, enabling total\ncontainer memory capacity to exceed physical hardware limitations.\n\nUse the Kove External Memory operator to:\n\n* Create custom resources to automatically allocate memory to specific\n  containers\n* Increase container flexibility with dynamic memory capacity that\n  auto-grows as needed\n* Scale up container density by removing memory as an orchestration\n  bottleneck\n\n## Using the Operator\nUsing the operator is as simple as creating a custom resource which\nspecifies an initial Kove memory allocation size, a namespace, and a\ncontainer name. Containers in the specified namespace with a matching\ncontainer name will automatically be provided with a Kove memory allocation\nwhich will auto-grow as needed.\n\n## About Kove\nKove makes memory a provisionable resource, just like storage, CPUs, and\nnetworking. Kove External Memory provides a transparent, linearly scalable\nmemory resource accessible to any application without code changes, from\nbare-metal apps to virtual machines and containers.\n",
      "csv_display_name": "Kove External Memory Operator",
      "csv_metadata_description": "Configure containers with Kove memory",
      "csv_name": "kove-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-26T17:43:43.223000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kove-operator",
      "provided_apis": [
        {
          "group": "containers.kove.net",
          "kind": "KoveMemoryConfig",
          "plural": "kovememoryconfigs",
          "version": "v1"
        },
        {
          "group": "containers.kove.net",
          "kind": "KoveSystem",
          "plural": "kovesystems",
          "version": "v1"
        }
      ],
      "provider": "Kove",
      "related_images": [
        {
          "digest": "sha256:37a16a1baf121356bb1de376f75d2b616f505d398cea4b31457d2c7190c23d69",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:37a16a1baf121356bb1de376f75d2b616f505d398cea4b31457d2c7190c23d69",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "image": "quay.io/kove/kove-operator@sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "name": "manager"
        },
        {
          "digest": "sha256:3dabdc1e523a043df50cf8296b36013c7e2628867839c8b365bf2647cd5cdeb5",
          "image": "quay.io/kove/kove-agent@sha256:3dabdc1e523a043df50cf8296b36013c7e2628867839c8b365bf2647cd5cdeb5",
          "name": "kove_agent"
        },
        {
          "digest": "sha256:16d614645c2fbd4649285c5905ebb2ef58adf36b11d2e2a584de5a3cdbf930ce",
          "image": "quay.io/kove/kove-client-drivers@sha256:16d614645c2fbd4649285c5905ebb2ef58adf36b11d2e2a584de5a3cdbf930ce",
          "name": "kove_client_drivers_8_3"
        },
        {
          "digest": "sha256:a31bf264d6d92653761d3073a1438529f5e3253c64351274f78ef498b3a88215",
          "image": "quay.io/kove/kove-client-drivers@sha256:a31bf264d6d92653761d3073a1438529f5e3253c64351274f78ef498b3a88215",
          "name": "kove_client_drivers_8_4"
        },
        {
          "digest": "sha256:041325a29ed222714afd139a8cd89bbb2e72e4166cfff80ff67cd630146a83f8",
          "image": "quay.io/kove/kove-container-hook@sha256:041325a29ed222714afd139a8cd89bbb2e72e4166cfff80ff67cd630146a83f8",
          "name": "kove_container_hook"
        },
        {
          "digest": "sha256:4db798be1ec40d38b84a12d6fce97bd72e3a51d2811725f1023caef33e3dfce7",
          "image": "quay.io/kove/kove-xmem@sha256:4db798be1ec40d38b84a12d6fce97bd72e3a51d2811725f1023caef33e3dfce7",
          "name": "kove_xmem"
        },
        {
          "digest": "sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "image": "quay.io/kove/kove-operator@sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "name": "kove-operator-b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.1.5 <1.2.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "6331e515fc81574279e83460",
      "alm_examples": [
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveMemoryConfig",
          "metadata": {
            "labels": {
              "KoveMemoryConfig": ""
            },
            "name": "example-memory-config"
          },
          "spec": {
            "container": "",
            "namespace": "",
            "size": ""
          }
        },
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveSystem",
          "metadata": {
            "labels": {
              "KoveSystem": ""
            },
            "name": "kove-system"
          },
          "spec": {
            "autogrowInitialIncrement": "1 GiB",
            "autogrowMaxIncrement": "1 TiB",
            "l4MaxMemoryPercent": 90,
            "managementConsoleAddress": "",
            "memoryPlusLocalMemoryMaxSize": "0 MiB"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/kove/kove-operator@sha256:bc2af832a1504289e5d4402c822845513c9d882084cb40fddfb1148f197e7c4b",
      "bundle_path_digest": "sha256:bc2af832a1504289e5d4402c822845513c9d882084cb40fddfb1148f197e7c4b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-26T17:44:53.010000+00:00",
      "csv_description": "## About the Operator\nThe Kove External Memory operator integrates Kove's software-defined memory\nsolution with Kubernetes and OpenShift clusters. The operator enables\ncontainers to transparently provision any amount of memory, enabling total\ncontainer memory capacity to exceed physical hardware limitations.\n\nUse the Kove External Memory operator to:\n\n* Create custom resources to automatically allocate memory to specific\n  containers\n* Increase container flexibility with dynamic memory capacity that\n  auto-grows as needed\n* Scale up container density by removing memory as an orchestration\n  bottleneck\n\n## Using the Operator\nUsing the operator is as simple as creating a custom resource which\nspecifies an initial Kove memory allocation size, a namespace, and a\ncontainer name. Containers in the specified namespace with a matching\ncontainer name will automatically be provided with a Kove memory allocation\nwhich will auto-grow as needed.\n\n## About Kove\nKove makes memory a provisionable resource, just like storage, CPUs, and\nnetworking. Kove External Memory provides a transparent, linearly scalable\nmemory resource accessible to any application without code changes, from\nbare-metal apps to virtual machines and containers.\n",
      "csv_display_name": "Kove External Memory Operator",
      "csv_metadata_description": "Configure containers with Kove memory",
      "csv_name": "kove-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-26T17:44:53.010000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kove-operator",
      "provided_apis": [
        {
          "group": "containers.kove.net",
          "kind": "KoveSystem",
          "plural": "kovesystems",
          "version": "v1"
        },
        {
          "group": "containers.kove.net",
          "kind": "KoveMemoryConfig",
          "plural": "kovememoryconfigs",
          "version": "v1"
        }
      ],
      "provider": "Kove",
      "related_images": [
        {
          "digest": "sha256:37a16a1baf121356bb1de376f75d2b616f505d398cea4b31457d2c7190c23d69",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:37a16a1baf121356bb1de376f75d2b616f505d398cea4b31457d2c7190c23d69",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "image": "quay.io/kove/kove-operator@sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "name": "manager"
        },
        {
          "digest": "sha256:3dabdc1e523a043df50cf8296b36013c7e2628867839c8b365bf2647cd5cdeb5",
          "image": "quay.io/kove/kove-agent@sha256:3dabdc1e523a043df50cf8296b36013c7e2628867839c8b365bf2647cd5cdeb5",
          "name": "kove_agent"
        },
        {
          "digest": "sha256:16d614645c2fbd4649285c5905ebb2ef58adf36b11d2e2a584de5a3cdbf930ce",
          "image": "quay.io/kove/kove-client-drivers@sha256:16d614645c2fbd4649285c5905ebb2ef58adf36b11d2e2a584de5a3cdbf930ce",
          "name": "kove_client_drivers_8_3"
        },
        {
          "digest": "sha256:a31bf264d6d92653761d3073a1438529f5e3253c64351274f78ef498b3a88215",
          "image": "quay.io/kove/kove-client-drivers@sha256:a31bf264d6d92653761d3073a1438529f5e3253c64351274f78ef498b3a88215",
          "name": "kove_client_drivers_8_4"
        },
        {
          "digest": "sha256:041325a29ed222714afd139a8cd89bbb2e72e4166cfff80ff67cd630146a83f8",
          "image": "quay.io/kove/kove-container-hook@sha256:041325a29ed222714afd139a8cd89bbb2e72e4166cfff80ff67cd630146a83f8",
          "name": "kove_container_hook"
        },
        {
          "digest": "sha256:4db798be1ec40d38b84a12d6fce97bd72e3a51d2811725f1023caef33e3dfce7",
          "image": "quay.io/kove/kove-xmem@sha256:4db798be1ec40d38b84a12d6fce97bd72e3a51d2811725f1023caef33e3dfce7",
          "name": "kove_xmem"
        },
        {
          "digest": "sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "image": "quay.io/kove/kove-operator@sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "name": "kove-operator-b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.1.5 <1.2.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "6331e99c75dd89c62d7008cf",
      "alm_examples": [
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveMemoryConfig",
          "metadata": {
            "labels": {
              "KoveMemoryConfig": ""
            },
            "name": "example-memory-config"
          },
          "spec": {
            "container": "",
            "namespace": "",
            "size": ""
          }
        },
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveSystem",
          "metadata": {
            "labels": {
              "KoveSystem": ""
            },
            "name": "kove-system"
          },
          "spec": {
            "autogrowInitialIncrement": "1 GiB",
            "autogrowMaxIncrement": "1 TiB",
            "l4MaxMemoryPercent": 90,
            "managementConsoleAddress": "",
            "memoryPlusLocalMemoryMaxSize": "0 MiB"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/kove/kove-operator@sha256:bc2af832a1504289e5d4402c822845513c9d882084cb40fddfb1148f197e7c4b",
      "bundle_path_digest": "sha256:bc2af832a1504289e5d4402c822845513c9d882084cb40fddfb1148f197e7c4b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-26T18:04:12.308000+00:00",
      "csv_description": "## About the Operator\nThe Kove External Memory operator integrates Kove's software-defined memory\nsolution with Kubernetes and OpenShift clusters. The operator enables\ncontainers to transparently provision any amount of memory, enabling total\ncontainer memory capacity to exceed physical hardware limitations.\n\nUse the Kove External Memory operator to:\n\n* Create custom resources to automatically allocate memory to specific\n  containers\n* Increase container flexibility with dynamic memory capacity that\n  auto-grows as needed\n* Scale up container density by removing memory as an orchestration\n  bottleneck\n\n## Using the Operator\nUsing the operator is as simple as creating a custom resource which\nspecifies an initial Kove memory allocation size, a namespace, and a\ncontainer name. Containers in the specified namespace with a matching\ncontainer name will automatically be provided with a Kove memory allocation\nwhich will auto-grow as needed.\n\n## About Kove\nKove makes memory a provisionable resource, just like storage, CPUs, and\nnetworking. Kove External Memory provides a transparent, linearly scalable\nmemory resource accessible to any application without code changes, from\nbare-metal apps to virtual machines and containers.\n",
      "csv_display_name": "Kove External Memory Operator",
      "csv_metadata_description": "Configure containers with Kove memory",
      "csv_name": "kove-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-26T18:04:12.308000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kove-operator",
      "provided_apis": [
        {
          "group": "containers.kove.net",
          "kind": "KoveMemoryConfig",
          "plural": "kovememoryconfigs",
          "version": "v1"
        },
        {
          "group": "containers.kove.net",
          "kind": "KoveSystem",
          "plural": "kovesystems",
          "version": "v1"
        }
      ],
      "provider": "Kove",
      "related_images": [
        {
          "digest": "sha256:37a16a1baf121356bb1de376f75d2b616f505d398cea4b31457d2c7190c23d69",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:37a16a1baf121356bb1de376f75d2b616f505d398cea4b31457d2c7190c23d69",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "image": "quay.io/kove/kove-operator@sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "name": "manager"
        },
        {
          "digest": "sha256:3dabdc1e523a043df50cf8296b36013c7e2628867839c8b365bf2647cd5cdeb5",
          "image": "quay.io/kove/kove-agent@sha256:3dabdc1e523a043df50cf8296b36013c7e2628867839c8b365bf2647cd5cdeb5",
          "name": "kove_agent"
        },
        {
          "digest": "sha256:16d614645c2fbd4649285c5905ebb2ef58adf36b11d2e2a584de5a3cdbf930ce",
          "image": "quay.io/kove/kove-client-drivers@sha256:16d614645c2fbd4649285c5905ebb2ef58adf36b11d2e2a584de5a3cdbf930ce",
          "name": "kove_client_drivers_8_3"
        },
        {
          "digest": "sha256:a31bf264d6d92653761d3073a1438529f5e3253c64351274f78ef498b3a88215",
          "image": "quay.io/kove/kove-client-drivers@sha256:a31bf264d6d92653761d3073a1438529f5e3253c64351274f78ef498b3a88215",
          "name": "kove_client_drivers_8_4"
        },
        {
          "digest": "sha256:041325a29ed222714afd139a8cd89bbb2e72e4166cfff80ff67cd630146a83f8",
          "image": "quay.io/kove/kove-container-hook@sha256:041325a29ed222714afd139a8cd89bbb2e72e4166cfff80ff67cd630146a83f8",
          "name": "kove_container_hook"
        },
        {
          "digest": "sha256:4db798be1ec40d38b84a12d6fce97bd72e3a51d2811725f1023caef33e3dfce7",
          "image": "quay.io/kove/kove-xmem@sha256:4db798be1ec40d38b84a12d6fce97bd72e3a51d2811725f1023caef33e3dfce7",
          "name": "kove_xmem"
        },
        {
          "digest": "sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "image": "quay.io/kove/kove-operator@sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "name": "kove-operator-b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.1.5 <1.2.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "6331e9a48454bee1cb73de52",
      "alm_examples": [
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveMemoryConfig",
          "metadata": {
            "labels": {
              "KoveMemoryConfig": ""
            },
            "name": "example-memory-config"
          },
          "spec": {
            "container": "",
            "namespace": "",
            "size": ""
          }
        },
        {
          "api_version": "containers.kove.net/v1",
          "kind": "KoveSystem",
          "metadata": {
            "labels": {
              "KoveSystem": ""
            },
            "name": "kove-system"
          },
          "spec": {
            "autogrowInitialIncrement": "1 GiB",
            "autogrowMaxIncrement": "1 TiB",
            "l4MaxMemoryPercent": 90,
            "managementConsoleAddress": "",
            "memoryPlusLocalMemoryMaxSize": "0 MiB"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/kove/kove-operator@sha256:bc2af832a1504289e5d4402c822845513c9d882084cb40fddfb1148f197e7c4b",
      "bundle_path_digest": "sha256:bc2af832a1504289e5d4402c822845513c9d882084cb40fddfb1148f197e7c4b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-26T18:04:20.642000+00:00",
      "csv_description": "## About the Operator\nThe Kove External Memory operator integrates Kove's software-defined memory\nsolution with Kubernetes and OpenShift clusters. The operator enables\ncontainers to transparently provision any amount of memory, enabling total\ncontainer memory capacity to exceed physical hardware limitations.\n\nUse the Kove External Memory operator to:\n\n* Create custom resources to automatically allocate memory to specific\n  containers\n* Increase container flexibility with dynamic memory capacity that\n  auto-grows as needed\n* Scale up container density by removing memory as an orchestration\n  bottleneck\n\n## Using the Operator\nUsing the operator is as simple as creating a custom resource which\nspecifies an initial Kove memory allocation size, a namespace, and a\ncontainer name. Containers in the specified namespace with a matching\ncontainer name will automatically be provided with a Kove memory allocation\nwhich will auto-grow as needed.\n\n## About Kove\nKove makes memory a provisionable resource, just like storage, CPUs, and\nnetworking. Kove External Memory provides a transparent, linearly scalable\nmemory resource accessible to any application without code changes, from\nbare-metal apps to virtual machines and containers.\n",
      "csv_display_name": "Kove External Memory Operator",
      "csv_metadata_description": "Configure containers with Kove memory",
      "csv_name": "kove-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-26T18:04:20.642000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kove-operator",
      "provided_apis": [
        {
          "group": "containers.kove.net",
          "kind": "KoveSystem",
          "plural": "kovesystems",
          "version": "v1"
        },
        {
          "group": "containers.kove.net",
          "kind": "KoveMemoryConfig",
          "plural": "kovememoryconfigs",
          "version": "v1"
        }
      ],
      "provider": "Kove",
      "related_images": [
        {
          "digest": "sha256:37a16a1baf121356bb1de376f75d2b616f505d398cea4b31457d2c7190c23d69",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:37a16a1baf121356bb1de376f75d2b616f505d398cea4b31457d2c7190c23d69",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "image": "quay.io/kove/kove-operator@sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "name": "manager"
        },
        {
          "digest": "sha256:3dabdc1e523a043df50cf8296b36013c7e2628867839c8b365bf2647cd5cdeb5",
          "image": "quay.io/kove/kove-agent@sha256:3dabdc1e523a043df50cf8296b36013c7e2628867839c8b365bf2647cd5cdeb5",
          "name": "kove_agent"
        },
        {
          "digest": "sha256:16d614645c2fbd4649285c5905ebb2ef58adf36b11d2e2a584de5a3cdbf930ce",
          "image": "quay.io/kove/kove-client-drivers@sha256:16d614645c2fbd4649285c5905ebb2ef58adf36b11d2e2a584de5a3cdbf930ce",
          "name": "kove_client_drivers_8_3"
        },
        {
          "digest": "sha256:a31bf264d6d92653761d3073a1438529f5e3253c64351274f78ef498b3a88215",
          "image": "quay.io/kove/kove-client-drivers@sha256:a31bf264d6d92653761d3073a1438529f5e3253c64351274f78ef498b3a88215",
          "name": "kove_client_drivers_8_4"
        },
        {
          "digest": "sha256:041325a29ed222714afd139a8cd89bbb2e72e4166cfff80ff67cd630146a83f8",
          "image": "quay.io/kove/kove-container-hook@sha256:041325a29ed222714afd139a8cd89bbb2e72e4166cfff80ff67cd630146a83f8",
          "name": "kove_container_hook"
        },
        {
          "digest": "sha256:4db798be1ec40d38b84a12d6fce97bd72e3a51d2811725f1023caef33e3dfce7",
          "image": "quay.io/kove/kove-xmem@sha256:4db798be1ec40d38b84a12d6fce97bd72e3a51d2811725f1023caef33e3dfce7",
          "name": "kove_xmem"
        },
        {
          "digest": "sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "image": "quay.io/kove/kove-operator@sha256:b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671",
          "name": "kove-operator-b904dfe8a916efe45916c2c4160c1e5f992f4c7133a4731dbea5f2523eaa9671-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.1.5 <1.2.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "633343b775dd89c62d706638",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/orionx/operator-manager@sha256:208da61b0d39822bef27d957d0182fc62676f9121fcc9b3f6e88fc4a8de3ab68",
      "bundle_path_digest": "sha256:208da61b0d39822bef27d957d0182fc62676f9121fcc9b3f6e88fc4a8de3ab68",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-27T18:40:55.458000+00:00",
      "csv_description": "Orionx Operator description. TODO.",
      "csv_display_name": "Orionx Operator",
      "csv_metadata_description": "",
      "csv_name": "orionx-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-27T18:40:55.458000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "orionx-operator",
      "provided_apis": [
        {
          "group": "orion.virtaitech.com",
          "kind": "OrionX",
          "plural": "orionxes",
          "version": "v1beta1"
        }
      ],
      "provider": "Provider Name",
      "related_images": [
        {
          "digest": "sha256:0f774e8d11693ff427d10a21bde6b2cc6a37cb90920a0d2034c7b30caf4dfd08",
          "image": "harbor.virtaitech.com/redhat/orion-gui-controller-all-in-one@sha256:0f774e8d11693ff427d10a21bde6b2cc6a37cb90920a0d2034c7b30caf4dfd08",
          "name": "orion-gui-controller-all-in-one"
        },
        {
          "digest": "sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "image": "harbor.virtaitech.com/redhat/orionx-operator@sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "name": "orionx-operator"
        },
        {
          "digest": "sha256:7abede2caee5a935f87219f51732cff5a8c3bfca1eab1f0e9725ca93fd347b89",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7abede2caee5a935f87219f51732cff5a8c3bfca1eab1f0e9725ca93fd347b89",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "image": "harbor.virtaitech.com/redhat/orionx-operator@sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "633343b9c8ae8d70b75c59ce",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/orionx/operator-manager@sha256:208da61b0d39822bef27d957d0182fc62676f9121fcc9b3f6e88fc4a8de3ab68",
      "bundle_path_digest": "sha256:208da61b0d39822bef27d957d0182fc62676f9121fcc9b3f6e88fc4a8de3ab68",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-27T18:40:57.647000+00:00",
      "csv_description": "Orionx Operator description. TODO.",
      "csv_display_name": "Orionx Operator",
      "csv_metadata_description": "",
      "csv_name": "orionx-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-27T18:40:57.647000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "orionx-operator",
      "provided_apis": [
        {
          "group": "orion.virtaitech.com",
          "kind": "OrionX",
          "plural": "orionxes",
          "version": "v1beta1"
        }
      ],
      "provider": "Provider Name",
      "related_images": [
        {
          "digest": "sha256:0f774e8d11693ff427d10a21bde6b2cc6a37cb90920a0d2034c7b30caf4dfd08",
          "image": "harbor.virtaitech.com/redhat/orion-gui-controller-all-in-one@sha256:0f774e8d11693ff427d10a21bde6b2cc6a37cb90920a0d2034c7b30caf4dfd08",
          "name": "orion-gui-controller-all-in-one"
        },
        {
          "digest": "sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "image": "harbor.virtaitech.com/redhat/orionx-operator@sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "name": "orionx-operator"
        },
        {
          "digest": "sha256:7abede2caee5a935f87219f51732cff5a8c3bfca1eab1f0e9725ca93fd347b89",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7abede2caee5a935f87219f51732cff5a8c3bfca1eab1f0e9725ca93fd347b89",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "image": "harbor.virtaitech.com/redhat/orionx-operator@sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "633343d45947c9413ae6f743",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/orionx/operator-manager@sha256:208da61b0d39822bef27d957d0182fc62676f9121fcc9b3f6e88fc4a8de3ab68",
      "bundle_path_digest": "sha256:208da61b0d39822bef27d957d0182fc62676f9121fcc9b3f6e88fc4a8de3ab68",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-27T18:41:23.995000+00:00",
      "csv_description": "Orionx Operator description. TODO.",
      "csv_display_name": "Orionx Operator",
      "csv_metadata_description": "",
      "csv_name": "orionx-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-27T18:41:23.995000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "orionx-operator",
      "provided_apis": [
        {
          "group": "orion.virtaitech.com",
          "kind": "OrionX",
          "plural": "orionxes",
          "version": "v1beta1"
        }
      ],
      "provider": "Provider Name",
      "related_images": [
        {
          "digest": "sha256:0f774e8d11693ff427d10a21bde6b2cc6a37cb90920a0d2034c7b30caf4dfd08",
          "image": "harbor.virtaitech.com/redhat/orion-gui-controller-all-in-one@sha256:0f774e8d11693ff427d10a21bde6b2cc6a37cb90920a0d2034c7b30caf4dfd08",
          "name": "orion-gui-controller-all-in-one"
        },
        {
          "digest": "sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "image": "harbor.virtaitech.com/redhat/orionx-operator@sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "name": "orionx-operator"
        },
        {
          "digest": "sha256:7abede2caee5a935f87219f51732cff5a8c3bfca1eab1f0e9725ca93fd347b89",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:7abede2caee5a935f87219f51732cff5a8c3bfca1eab1f0e9725ca93fd347b89",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "image": "harbor.virtaitech.com/redhat/orionx-operator@sha256:162854ead577cab23e70dcaf2db9574143bb3535bc2ea646c29b2d6364b293bc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6333786ac9abe8b4a6eb0d65",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:bed03330d9aafabc6670c0c0cb063dd66a79fa4c70c8853b71649ed4e3ec445b",
      "bundle_path_digest": "sha256:bed03330d9aafabc6670c0c0cb063dd66a79fa4c70c8853b71649ed4e3ec445b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-27T22:25:46.468000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.92622",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T23:01:13.057000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:16a7f5881dd8d09edd0764c34c5a8c1dc11c9114bc7d45a53c92407957ebcc63",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:16a7f5881dd8d09edd0764c34c5a8c1dc11c9114bc7d45a53c92407957ebcc63",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2022.3.92622",
      "version_original": "2022.3.92622"
    },
    {
      "_id": "63337a107f4ac527ba8101bf",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:bed03330d9aafabc6670c0c0cb063dd66a79fa4c70c8853b71649ed4e3ec445b",
      "bundle_path_digest": "sha256:bed03330d9aafabc6670c0c0cb063dd66a79fa4c70c8853b71649ed4e3ec445b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-27T22:32:48.323000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.92622",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T23:05:35.575000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:16a7f5881dd8d09edd0764c34c5a8c1dc11c9114bc7d45a53c92407957ebcc63",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:16a7f5881dd8d09edd0764c34c5a8c1dc11c9114bc7d45a53c92407957ebcc63",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2022.3.92622",
      "version_original": "2022.3.92622"
    },
    {
      "_id": "63337a58c8ae8d70b75c643a",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:bed03330d9aafabc6670c0c0cb063dd66a79fa4c70c8853b71649ed4e3ec445b",
      "bundle_path_digest": "sha256:bed03330d9aafabc6670c0c0cb063dd66a79fa4c70c8853b71649ed4e3ec445b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-27T22:34:00.326000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.92622",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T23:23:50.103000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:16a7f5881dd8d09edd0764c34c5a8c1dc11c9114bc7d45a53c92407957ebcc63",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:16a7f5881dd8d09edd0764c34c5a8c1dc11c9114bc7d45a53c92407957ebcc63",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2022.3.92622",
      "version_original": "2022.3.92622"
    },
    {
      "_id": "633408bad56957cd2e72b006",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:2345cb8c3043081d0aeb68dc33fffc4cd357f292eb6554987fe3d025fab1b9b6",
      "bundle_path_digest": "sha256:2345cb8c3043081d0aeb68dc33fffc4cd357f292eb6554987fe3d025fab1b9b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-28T08:41:30.170000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T08:41:30.170000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v2"
        }
      ],
      "provider": "Intel Corporation",
      "related_images": [
        {
          "digest": "sha256:d7b91d4bf4e57415f9a9ca46619d98bfafe5e2d7c5e8072dedd2bcd638725c8d",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d7b91d4bf4e57415f9a9ca46619d98bfafe5e2d7c5e8072dedd2bcd638725c8d",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:001d52f2461f1e0224f7fea92fbe4a7b6a8f51a022a5f118837928878b5eedd9",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:001d52f2461f1e0224f7fea92fbe4a7b6a8f51a022a5f118837928878b5eedd9",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:a889f21e30b81364789e50811a3cb34b1eb2d20c7567dcd4d5831cce87a32473",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:a889f21e30b81364789e50811a3cb34b1eb2d20c7567dcd4d5831cce87a32473",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "sriov-fec-operator-5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412-annotation"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.5.0",
      "version_original": "2.5.0"
    },
    {
      "_id": "633408cf5947c9413ae7202c",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:2345cb8c3043081d0aeb68dc33fffc4cd357f292eb6554987fe3d025fab1b9b6",
      "bundle_path_digest": "sha256:2345cb8c3043081d0aeb68dc33fffc4cd357f292eb6554987fe3d025fab1b9b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-28T08:41:51.737000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T08:41:51.737000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "version": "v2"
        }
      ],
      "provider": "Intel Corporation",
      "related_images": [
        {
          "digest": "sha256:d7b91d4bf4e57415f9a9ca46619d98bfafe5e2d7c5e8072dedd2bcd638725c8d",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d7b91d4bf4e57415f9a9ca46619d98bfafe5e2d7c5e8072dedd2bcd638725c8d",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:001d52f2461f1e0224f7fea92fbe4a7b6a8f51a022a5f118837928878b5eedd9",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:001d52f2461f1e0224f7fea92fbe4a7b6a8f51a022a5f118837928878b5eedd9",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:a889f21e30b81364789e50811a3cb34b1eb2d20c7567dcd4d5831cce87a32473",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:a889f21e30b81364789e50811a3cb34b1eb2d20c7567dcd4d5831cce87a32473",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "sriov-fec-operator-5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412-annotation"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.5.0",
      "version_original": "2.5.0"
    },
    {
      "_id": "63340997c9abe8b4a6eb2d6f",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "acc100SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "acc100": {
                  "downlink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "downlink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  },
                  "maxQueueSize": 1024,
                  "numVfBundles": 16,
                  "pfMode": true,
                  "uplink4G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 0
                  },
                  "uplink5G": {
                    "aqDepthLog2": 4,
                    "numAqsPerGroups": 16,
                    "numQueueGroups": 4
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "n3000SampleConfig",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "acceleratorSelector": {
              "deviceID": "someDevice",
              "driver": "someDriver",
              "maxVirtualFunctions": 2,
              "pciAddress": "somePciAddress",
              "vendorID": "someVendor"
            },
            "drainSkip": false,
            "nodeSelector": {
              "expectedLabel1": "valueOfExpectedLabel1",
              "expectedLabelN": "valueOfExpectedLabelN"
            },
            "physicalFunction": {
              "bbDevConfig": {
                "n3000": {
                  "downlink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  },
                  "flrTimeout": 610,
                  "networkType": "FPGA_5GNR",
                  "pfMode": true,
                  "uplink": {
                    "bandwidth": 3,
                    "loadBalance": 128,
                    "queues": {
                      "vf0": 16,
                      "vf1": 16,
                      "vf2": 0,
                      "vf3": 0,
                      "vf4": 0,
                      "vf5": 0,
                      "vf6": 0,
                      "vf7": 0
                    }
                  }
                }
              },
              "pfDriver": "pci-pf-stub",
              "vfAmount": 2,
              "vfDriver": "vfio-pci"
            },
            "priority": 100
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "acc100-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "acc100": {
                    "downlink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "downlink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    },
                    "maxQueueSize": 1024,
                    "numVfBundles": 16,
                    "pfMode": true,
                    "uplink4G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 0
                    },
                    "uplink5G": {
                      "aqDepthLog2": 4,
                      "numAqsPerGroups": 16,
                      "numQueueGroups": 4
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v2",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "n3000-worker",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "drainSkip": false,
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "somePciAddress",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:2345cb8c3043081d0aeb68dc33fffc4cd357f292eb6554987fe3d025fab1b9b6",
      "bundle_path_digest": "sha256:2345cb8c3043081d0aeb68dc33fffc4cd357f292eb6554987fe3d025fab1b9b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-28T08:45:11.895000+00:00",
      "csv_description": "The vRAN Dedicated Accelerator ACC100, based on Intel eASIC technology is designed to offload and accelerate the computing-intensive process of forward error correction (FEC) for 4G/LTE and 5G technology, freeing up processing power. Intel eASIC devices are structured ASICs, an intermediate technology between FPGAs and standard application-specific integrated circuits (ASICs). It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel ACC100 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel ACC100 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the ACC100 resource can be used on the Smart Edge Open (SEO) platform for accelerating network functions and edge application workloads. We use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on eASIC for Inference applications. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "SEO SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "An operator for Intel Wireless FEC Accelerator to orchestrate and manage the resources/devices exposed by a range of Intel's vRAN FEC acceleration devices/hardware within the OpenShift cluster.",
      "csv_name": "sriov-fec.v2.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T08:45:11.895000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v2"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v2"
        }
      ],
      "provider": "Intel Corporation",
      "related_images": [
        {
          "digest": "sha256:d7b91d4bf4e57415f9a9ca46619d98bfafe5e2d7c5e8072dedd2bcd638725c8d",
          "image": "registry.connect.redhat.com/intel/sriov-fec-daemon@sha256:d7b91d4bf4e57415f9a9ca46619d98bfafe5e2d7c5e8072dedd2bcd638725c8d",
          "name": "sriov-fec-daemon"
        },
        {
          "digest": "sha256:001d52f2461f1e0224f7fea92fbe4a7b6a8f51a022a5f118837928878b5eedd9",
          "image": "registry.connect.redhat.com/intel/n3000-labeler@sha256:001d52f2461f1e0224f7fea92fbe4a7b6a8f51a022a5f118837928878b5eedd9",
          "name": "sriov-fec-labeler"
        },
        {
          "digest": "sha256:a889f21e30b81364789e50811a3cb34b1eb2d20c7567dcd4d5831cce87a32473",
          "image": "registry.redhat.io/openshift4/ose-sriov-network-device-plugin@sha256:a889f21e30b81364789e50811a3cb34b1eb2d20c7567dcd4d5831cce87a32473",
          "name": "sriov-network-device-plugin"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "sriov-fec-operator"
        },
        {
          "digest": "sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ef2c41fb899228a64cf2f61d7606a980a5f8fcae820da246d25c4f17faa0da3d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "sriov-fec-operator-5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412-annotation"
        },
        {
          "digest": "sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:5962e20d88f031d5b1b9c726120b14b39ef78b42d9f82322554de57129015412",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.5.0",
      "version_original": "2.5.0"
    },
    {
      "_id": "6334465d75dd89c62d709845",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:04:29.365000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T13:04:29.365000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "6334471cd56957cd2e72b875",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:07:40.349000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T13:07:40.349000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "6334474f8a97b22f4fc338a7",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:08:31.231000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T13:08:31.231000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "633448809bb8b51dd3580604",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:13:36.883000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T13:13:36.883000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "63344a23c8ae8d70b75c8be4",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:20:35.937000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T13:20:35.937000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "63344ac9eb10d77b66495cab",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:23:21.203000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T13:23:21.203000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "63344bc69bb8b51dd3580633",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "citrixingresscontroller-sample"
          },
          "spec": {
            "adcCredentialSecret": "",
            "affinity": {},
            "analyticsConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": "",
                "service": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "clusterName": "",
            "cncPbr": false,
            "crds": {
              "install": false,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "disableAPIServerCertVerify": false,
            "disableOpenshiftRoutes": false,
            "entityPrefix": "",
            "exporter": {
              "extraVolumeMounts": [],
              "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false,
              "resources": {}
            },
            "extraVolumeMounts": [],
            "extraVolumes": [],
            "fullnameOverride": "",
            "ignoreNodeExternalIP": false,
            "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
            "imagePullSecrets": [],
            "ingressClass": [],
            "ipam": false,
            "jsonLog": false,
            "kubernetesURL": "",
            "license": {
              "accept": "no"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "nameOverride": "",
            "namespaceLabels": "",
            "nitroReadTimeout": 20,
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsConfigDnsRec": false,
            "nsCookieVersion": "0",
            "nsDnsNameserver": "",
            "nsEnableLabel": true,
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsLbHashAlgo": {
              "hashAlgorithm": "DEFAULT",
              "hashFingers": 256,
              "required": false
            },
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": [],
            "nsSvcLbDnsRec": false,
            "nsVIP": "",
            "openshift": true,
            "optimizeEndpointBinding": false,
            "podAnnotations": {},
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "resources": {},
            "routeLabels": "",
            "secretStore": {
              "enabled": false,
              "password": {},
              "username": {}
            },
            "serviceAccount": {
              "create": true
            },
            "serviceClass": [],
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "bundle_path_digest": "sha256:15fe091b3a7fdd3286ed56a67ccc67b5aec10897f8e13b306730ec81151c6cdf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-28T13:27:34.280000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.26.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-28T13:27:34.280000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Citrix",
      "related_images": [
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "cic"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "exporter"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "citrix-k8s-ingress-controller-bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4-annotation"
        },
        {
          "digest": "sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:9185a8d8bab28f84db59c75053dbc25cee79c8342990aaf32509a4b6389e9cc2",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:bd1d4de8444691d7f55c4dce4bc5a34e533ea14514110042da52b073e599d1f4",
          "name": "manager"
        },
        {
          "digest": "sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "image": "quay.io/citrix/citrix-k8s-ingress-controller@sha256:2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01",
          "name": "citrix-k8s-ingress-controller-2d44399ae59cd6d73bdc1c1fcd387c11e272841cb97333c782cacb7ff1987d01-annotation"
        },
        {
          "digest": "sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "image": "quay.io/citrix/citrix-adc-metrics-exporter@sha256:2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58",
          "name": "citrix-adc-metrics-exporter-2508c3a1780b281f43487c0ed1c115003687683d5856b26324a0832b1216fd58-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.18.5 <1.26.7",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.26.7",
      "version_original": "1.26.7"
    },
    {
      "_id": "6334fdbed56957cd2e72d0b1",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "2022.3.0-1"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:c27eaa0ae4a19b1f6a3721f089182e6750030e8669d6aac5b0c19de081bad262",
      "bundle_path_digest": "sha256:c27eaa0ae4a19b1f6a3721f089182e6750030e8669d6aac5b0c19de081bad262",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-29T02:06:54.138000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2022.3.92622",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T23:05:18.950000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "plural": "aikitcontainers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:a404f117fbfe37d607127001ef5b088972481ecc9f71e064f533da4f08c7bff1",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:a404f117fbfe37d607127001ef5b088972481ecc9f71e064f533da4f08c7bff1",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2022.3.92622",
      "version_original": "2022.3.92622"
    },
    {
      "_id": "63353270c8ae8d70b75caaca",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPLogging",
          "metadata": {
            "name": "new-fep-logging"
          },
          "spec": {
            "fepLogging": {
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\nfailover_on_backend_error = off\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = csvlog\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\npassword_encryption = 'md5'\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-operator-bundle@sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "bundle_path_digest": "sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T05:51:44.734000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 14 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64, s390x and ppc64le.\n\nThe download and Use of the Product is strictly subject to the terms of the End User License Agreement with Fujitsu Limited found at https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-license-agreements. Where the Product that has been embedded as a whole or part into a third party program, only Authorised Customers may download and use the Product.\n",
      "csv_display_name": "FUJITSU Enterprise Postgres Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres",
      "csv_name": "fujitsu-enterprise-postgres-operator.v4.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T05:51:44.734000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-postgres-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPLogging",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUpgrade",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep-14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup-14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore-14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2-14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "exporter-14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "fluentd-14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "fluentbit-14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob-14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade-14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep-13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup-13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore-13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2-13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter-13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep-12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup-12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore-12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2-12"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fujitsu-enterprise-postgres-operator-a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f-annotation"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep_14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup_14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore_14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2_14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter_14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging_14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit_14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob_14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade_14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep_13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup_13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore_13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2_13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter_13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep_12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup_12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore_12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2_12"
        }
      ],
      "replaces": null,
      "skip_range": "<4.1.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "4.1.6",
      "version_original": "4.1.6"
    },
    {
      "_id": "633532979bb8b51dd35824a3",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPLogging",
          "metadata": {
            "name": "new-fep-logging"
          },
          "spec": {
            "fepLogging": {
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\nfailover_on_backend_error = off\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = csvlog\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\npassword_encryption = 'md5'\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-operator-bundle@sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "bundle_path_digest": "sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T05:52:23.873000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 14 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64, s390x and ppc64le.\n\nThe download and Use of the Product is strictly subject to the terms of the End User License Agreement with Fujitsu Limited found at https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-license-agreements. Where the Product that has been embedded as a whole or part into a third party program, only Authorised Customers may download and use the Product.\n",
      "csv_display_name": "FUJITSU Enterprise Postgres Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres",
      "csv_name": "fujitsu-enterprise-postgres-operator.v4.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T05:52:23.873000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-postgres-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPLogging",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUpgrade",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep-14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup-14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore-14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2-14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "exporter-14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "fluentd-14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "fluentbit-14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob-14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade-14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep-13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup-13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore-13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2-13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter-13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep-12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup-12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore-12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2-12"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fujitsu-enterprise-postgres-operator-a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f-annotation"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep_14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup_14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore_14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2_14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter_14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging_14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit_14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob_14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade_14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep_13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup_13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore_13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2_13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter_13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep_12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup_12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore_12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2_12"
        }
      ],
      "replaces": null,
      "skip_range": "<4.1.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "4.1.6",
      "version_original": "4.1.6"
    },
    {
      "_id": "633534328a97b22f4fc35739",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPLogging",
          "metadata": {
            "name": "new-fep-logging"
          },
          "spec": {
            "fepLogging": {
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\nfailover_on_backend_error = off\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = csvlog\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\npassword_encryption = 'md5'\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-operator-bundle@sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "bundle_path_digest": "sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T05:59:14.461000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 14 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64, s390x and ppc64le.\n\nThe download and Use of the Product is strictly subject to the terms of the End User License Agreement with Fujitsu Limited found at https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-license-agreements. Where the Product that has been embedded as a whole or part into a third party program, only Authorised Customers may download and use the Product.\n",
      "csv_display_name": "FUJITSU Enterprise Postgres Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres",
      "csv_name": "fujitsu-enterprise-postgres-operator.v4.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T05:59:14.461000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-postgres-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUpgrade",
          "plural": "fepupgrades",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPLogging",
          "plural": "feploggings",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "plural": "fepautoscales",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "plural": "fepexporters",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep-14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup-14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore-14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2-14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "exporter-14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "fluentd-14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "fluentbit-14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob-14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade-14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep-13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup-13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore-13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2-13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter-13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep-12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup-12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore-12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2-12"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fujitsu-enterprise-postgres-operator-a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f-annotation"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep_14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup_14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore_14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2_14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter_14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging_14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit_14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob_14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade_14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep_13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup_13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore_13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2_13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter_13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep_12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup_12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore_12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2_12"
        }
      ],
      "replaces": null,
      "skip_range": "<4.1.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "4.1.6",
      "version_original": "4.1.6"
    },
    {
      "_id": "63353500c8ae8d70b75cab25",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPLogging",
          "metadata": {
            "name": "new-fep-logging"
          },
          "spec": {
            "fepLogging": {
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\nfailover_on_backend_error = off\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = csvlog\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\npassword_encryption = 'md5'\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-operator-bundle@sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "bundle_path_digest": "sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T06:02:40.826000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 14 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64, s390x and ppc64le.\n\nThe download and Use of the Product is strictly subject to the terms of the End User License Agreement with Fujitsu Limited found at https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-license-agreements. Where the Product that has been embedded as a whole or part into a third party program, only Authorised Customers may download and use the Product.\n",
      "csv_display_name": "FUJITSU Enterprise Postgres Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres",
      "csv_name": "fujitsu-enterprise-postgres-operator.v4.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T06:02:40.826000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-postgres-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUpgrade",
          "plural": "fepupgrades",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "plural": "fepexporters",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPLogging",
          "plural": "feploggings",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "plural": "fepautoscales",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep-14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup-14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore-14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2-14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "exporter-14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "fluentd-14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "fluentbit-14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob-14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade-14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep-13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup-13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore-13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2-13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter-13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep-12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup-12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore-12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2-12"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fujitsu-enterprise-postgres-operator-a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f-annotation"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep_14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup_14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore_14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2_14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter_14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging_14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit_14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob_14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade_14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep_13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup_13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore_13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2_13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter_13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep_12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup_12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore_12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2_12"
        }
      ],
      "replaces": null,
      "skip_range": "<4.1.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "4.1.6",
      "version_original": "4.1.6"
    },
    {
      "_id": "633536c0d56957cd2e72d842",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPLogging",
          "metadata": {
            "name": "new-fep-logging"
          },
          "spec": {
            "fepLogging": {
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\nfailover_on_backend_error = off\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = csvlog\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\npassword_encryption = 'md5'\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-operator-bundle@sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "bundle_path_digest": "sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T06:10:08.138000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 14 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64, s390x and ppc64le.\n\nThe download and Use of the Product is strictly subject to the terms of the End User License Agreement with Fujitsu Limited found at https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-license-agreements. Where the Product that has been embedded as a whole or part into a third party program, only Authorised Customers may download and use the Product.\n",
      "csv_display_name": "FUJITSU Enterprise Postgres Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres",
      "csv_name": "fujitsu-enterprise-postgres-operator.v4.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T06:10:08.138000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-postgres-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "plural": "fepautoscales",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "plural": "fepexporters",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUpgrade",
          "plural": "fepupgrades",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPLogging",
          "plural": "feploggings",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep-14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup-14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore-14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2-14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "exporter-14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "fluentd-14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "fluentbit-14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob-14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade-14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep-13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup-13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore-13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2-13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter-13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep-12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup-12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore-12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2-12"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fujitsu-enterprise-postgres-operator-a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f-annotation"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep_14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup_14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore_14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2_14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter_14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging_14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit_14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob_14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade_14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep_13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup_13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore_13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2_13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter_13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep_12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup_12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore_12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2_12"
        }
      ],
      "replaces": null,
      "skip_range": "<4.1.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "4.1.6",
      "version_original": "4.1.6"
    },
    {
      "_id": "63353870c9abe8b4a6eb5569",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPLogging",
          "metadata": {
            "name": "new-fep-logging"
          },
          "spec": {
            "fepLogging": {
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\nfailover_on_backend_error = off\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = csvlog\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\npassword_encryption = 'md5'\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-operator-bundle@sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "bundle_path_digest": "sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T06:17:20.221000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 14 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64, s390x and ppc64le.\n\nThe download and Use of the Product is strictly subject to the terms of the End User License Agreement with Fujitsu Limited found at https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-license-agreements. Where the Product that has been embedded as a whole or part into a third party program, only Authorised Customers may download and use the Product.\n",
      "csv_display_name": "FUJITSU Enterprise Postgres Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres",
      "csv_name": "fujitsu-enterprise-postgres-operator.v4.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T06:17:20.221000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-postgres-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "plural": "fepautoscales",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "plural": "fepexporters",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPLogging",
          "plural": "feploggings",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUpgrade",
          "plural": "fepupgrades",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep-14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup-14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore-14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2-14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "exporter-14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "fluentd-14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "fluentbit-14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob-14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade-14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep-13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup-13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore-13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2-13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter-13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep-12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup-12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore-12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2-12"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fujitsu-enterprise-postgres-operator-a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f-annotation"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep_14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup_14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore_14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2_14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter_14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging_14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit_14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob_14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade_14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep_13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup_13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore_13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2_13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter_13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep_12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup_12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore_12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2_12"
        }
      ],
      "replaces": null,
      "skip_range": "<4.1.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "4.1.6",
      "version_original": "4.1.6"
    },
    {
      "_id": "6335388a2bdd76944b90002f",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPLogging",
          "metadata": {
            "name": "new-fep-logging"
          },
          "spec": {
            "fepLogging": {
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\nfailover_on_backend_error = off\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = csvlog\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\npassword_encryption = 'md5'\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "ppc64le",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-operator-bundle@sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "bundle_path_digest": "sha256:e1946cae0fa5143efdbebcb6074288054fa8f8eb1fa4613f5578746a74c9889f",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T06:17:46.235000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 14 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64, s390x and ppc64le.\n\nThe download and Use of the Product is strictly subject to the terms of the End User License Agreement with Fujitsu Limited found at https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-license-agreements. Where the Product that has been embedded as a whole or part into a third party program, only Authorised Customers may download and use the Product.\n",
      "csv_display_name": "FUJITSU Enterprise Postgres Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres",
      "csv_name": "fujitsu-enterprise-postgres-operator.v4.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T06:17:46.235000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-postgres-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUpgrade",
          "plural": "fepupgrades",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPLogging",
          "plural": "feploggings",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "plural": "fepautoscales",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "plural": "fepexporters",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep-14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup-14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore-14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2-14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "exporter-14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "fluentd-14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "fluentbit-14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob-14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade-14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep-13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup-13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore-13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2-13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter-13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep-12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup-12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore-12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2-12"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fujitsu-enterprise-postgres-operator-a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f-annotation"
        },
        {
          "digest": "sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-operator@sha256:a090626177b8d4c106be676aa047be86917bb53d8e59e413db18a598ec395e4f",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade"
        },
        {
          "digest": "sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-server@sha256:9aae0d14261146c80fd62ff8432a8361198a403a8e5c118fd552aab7a935e0b2",
          "name": "fep_14"
        },
        {
          "digest": "sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-backup@sha256:48311a19b5a160d4d07405a7a45994427ca46a227e9f2c5622914324b3dde99c",
          "name": "backup_14"
        },
        {
          "digest": "sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-restore@sha256:089da18297d26521e0f7a7c656dc2b6b4362a150f09b540f4dbfb2995434ac94",
          "name": "restore_14"
        },
        {
          "digest": "sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-pgpool2@sha256:1a62a030f8abb158f7d963d1499395c9ccc35e3ebde6d3cc09950ca20a6ac88e",
          "name": "pgpool2_14"
        },
        {
          "digest": "sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-exporter@sha256:a15404d7ac75beba96837c239507e2fdb49d59d10f60df47f37fbad9cfcf37a5",
          "name": "fepexporter_14"
        },
        {
          "digest": "sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentd@sha256:243d2e35f28d0b6591945625f1b34cf305bc9ea12c9097c986ee582a30f4cb68",
          "name": "feplogging_14"
        },
        {
          "digest": "sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-fluentbit@sha256:78d7a3833b57367c03b3fd2d4d2061989fd33c91631dd359d237bc46e12303fc",
          "name": "feplogging_fluentbit_14"
        },
        {
          "digest": "sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-cronjob@sha256:c98b39d5a31bf6464365283c4b043121e9d87c8aafff398dfc22568e0da71d76",
          "name": "cronjob_14"
        },
        {
          "digest": "sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-14-upgrade@sha256:b71b2d0837c443b1846bdbef8afce1a79a4464a8355466f7111440448355d762",
          "name": "upgrade_14"
        },
        {
          "digest": "sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:d640e5b7d66620497d1dce6b3100ded6058bad18a5c487fbd9a8180b7b79ebe1",
          "name": "fep_13"
        },
        {
          "digest": "sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:2cc294aae6f13c8e03473e3eb54d0ea67f3270428f3cac62f3ac3ce976118526",
          "name": "backup_13"
        },
        {
          "digest": "sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:b1d068b3f513bc75b9b44a20bacc3857ce0114175404404f733b98fe8bd45850",
          "name": "restore_13"
        },
        {
          "digest": "sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:cb47da84123f81c74ba6ad55174a4a937831f73bea68211438cc0822598037ba",
          "name": "pgpool2_13"
        },
        {
          "digest": "sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:0d01b54593a1975fe11c78aef4bfebd5dd4240bba5e5dfc150e003b3fb06773e",
          "name": "fepexporter_13"
        },
        {
          "digest": "sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:cc80b94f4ebf1992391fa38d62b03b3d9069c6acccbb222bce0e463f9f1d12f4",
          "name": "fep_12"
        },
        {
          "digest": "sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:da3cd235d0e91ec737049c7bc15c44e1942df54bf6b03a0b76fc18dd1982bf58",
          "name": "backup_12"
        },
        {
          "digest": "sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:90c06849ff42ee203bbcd01699f7f80122c3b11cce5ab672d5debd721648f3d9",
          "name": "restore_12"
        },
        {
          "digest": "sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:6ef6f864efd1571179b359ef27b2a1e3bea0569e9d69331e8f1fcc9b4cbad62d",
          "name": "pgpool2_12"
        }
      ],
      "replaces": null,
      "skip_range": "<4.1.6",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "4.1.6",
      "version_original": "4.1.6"
    },
    {
      "_id": "633570e175dd89c62d70bfb4",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:68626635ed305d95f881800eb090cec83fca779b6be370f079421ee338e16e64",
      "bundle_path_digest": "sha256:68626635ed305d95f881800eb090cec83fca779b6be370f079421ee338e16e64",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-29T10:18:09.500000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T10:18:09.500000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "dynatrace-operator-76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf-annotation"
        },
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "633571ae8a97b22f4fc35fb8",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:68626635ed305d95f881800eb090cec83fca779b6be370f079421ee338e16e64",
      "bundle_path_digest": "sha256:68626635ed305d95f881800eb090cec83fca779b6be370f079421ee338e16e64",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-29T10:21:34.899000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T10:21:34.899000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "version": "v1beta1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "dynatrace-operator-76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf-annotation"
        },
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "63357398d56957cd2e72dfe6",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:68626635ed305d95f881800eb090cec83fca779b6be370f079421ee338e16e64",
      "bundle_path_digest": "sha256:68626635ed305d95f881800eb090cec83fca779b6be370f079421ee338e16e64",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-29T10:29:44.391000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T10:29:44.391000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "dynatrace-operator-76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf-annotation"
        },
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "633574399bb8b51dd3582dc8",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:68626635ed305d95f881800eb090cec83fca779b6be370f079421ee338e16e64",
      "bundle_path_digest": "sha256:68626635ed305d95f881800eb090cec83fca779b6be370f079421ee338e16e64",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-29T10:32:25.130000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T10:32:25.130000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "dynatrace-operator-76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf-annotation"
        },
        {
          "digest": "sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:76bd50cee5fdbdde440404c36ab23adee6fb5a49da2543f3ffa4d88bb316b6cf",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "6335c3a7d56957cd2e72e9d1",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "bundle_path_digest": "sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T16:11:19.527000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T16:11:19.527000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "operator-5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935-annotation"
        },
        {
          "digest": "sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "image": "quay.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "name": "console"
        },
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "name": "minio-c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "4.5.1",
      "version_original": "4.5.1"
    },
    {
      "_id": "6335c62a3e77eb509cc13e34",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "bundle_path_digest": "sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T16:22:02.340000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T16:22:02.340000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "operator-5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935-annotation"
        },
        {
          "digest": "sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "image": "quay.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "name": "console"
        },
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "name": "minio-c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "4.5.1",
      "version_original": "4.5.1"
    },
    {
      "_id": "6335c6ee75dd89c62d70cc08",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "bundle_path_digest": "sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T16:25:18.739000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T16:25:18.739000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "operator-5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935-annotation"
        },
        {
          "digest": "sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "image": "quay.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "name": "console"
        },
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "name": "minio-c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "4.5.1",
      "version_original": "4.5.1"
    },
    {
      "_id": "6335c8c69bb8b51dd35839d2",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "bundle_path_digest": "sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T16:33:10.515000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T16:33:10.515000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "operator-5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935-annotation"
        },
        {
          "digest": "sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "image": "quay.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "name": "console"
        },
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "name": "minio-c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "4.5.1",
      "version_original": "4.5.1"
    },
    {
      "_id": "6335ce843e77eb509cc14159",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "bundle_path_digest": "sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T16:57:40.931000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T16:57:40.931000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "operator-5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935-annotation"
        },
        {
          "digest": "sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "image": "quay.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "name": "console"
        },
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "name": "minio-c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "4.5.1",
      "version_original": "4.5.1"
    },
    {
      "_id": "6335cf282bdd76944b901657",
      "alm_examples": [
        {
          "api_version": "minio.min.io/v2",
          "kind": "Tenant",
          "metadata": {
            "annotations": {
              "prometheus.io/path": "/minio/v2/metrics/cluster",
              "prometheus.io/port": "9000",
              "prometheus.io/scrape": "true"
            },
            "labels": {
              "app": "minio"
            },
            "name": "storage-lite",
            "namespace": "tenant-lite"
          },
          "spec": {
            "certConfig": {},
            "configuration": {
              "name": "storage-configuration"
            },
            "env": [],
            "externalCaCertSecret": [],
            "externalCertSecret": [],
            "externalClientCertSecrets": [],
            "features": {
              "bucketDNS": false,
              "domains": {}
            },
            "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
            "imagePullSecret": {},
            "log": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "audit": {
                "diskCapacityGB": 1
              },
              "db": {
                "affinity": {
                  "nodeAffinity": {},
                  "podAffinity": {},
                  "podAntiAffinity": {}
                },
                "annotations": {},
                "env": [],
                "image": "",
                "initimage": "",
                "labels": {},
                "nodeSelector": {},
                "resources": {},
                "securityContext": {
                  "fsGroup": 999,
                  "runAsGroup": 999,
                  "runAsNonRoot": true,
                  "runAsUser": 999
                },
                "serviceAccountName": "",
                "tolerations": [],
                "volumeClaimTemplate": {
                  "metadata": {},
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "1Gi"
                      }
                    },
                    "storageClassName": "standard"
                  }
                }
              },
              "env": [],
              "image": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "tolerations": []
            },
            "mountPath": "/export",
            "podManagementPolicy": "Parallel",
            "pools": [
              {
                "name": "pool-0",
                "servers": 4,
                "volumeClaimTemplate": {
                  "metadata": {
                    "name": "data"
                  },
                  "spec": {
                    "accessModes": [
                      "ReadWriteOnce"
                    ],
                    "resources": {
                      "requests": {
                        "storage": "2Gi"
                      }
                    }
                  }
                },
                "volumesPerServer": 2
              }
            ],
            "priorityClassName": "",
            "prometheus": {
              "affinity": {
                "nodeAffinity": {},
                "podAffinity": {},
                "podAntiAffinity": {}
              },
              "annotations": {},
              "diskCapacityGB": 1,
              "env": [],
              "image": "",
              "initimage": "",
              "labels": {},
              "nodeSelector": {},
              "resources": {},
              "securityContext": {
                "fsGroup": 1000,
                "runAsGroup": 1000,
                "runAsNonRoot": true,
                "runAsUser": 1000
              },
              "serviceAccountName": "",
              "sidecarimage": "",
              "storageClassName": "standard"
            },
            "requestAutoCert": true,
            "serviceAccountName": "",
            "serviceMetadata": {
              "consoleServiceAnnotations": {},
              "consoleServiceLabels": {},
              "minioServiceAnnotations": {},
              "minioServiceLabels": {}
            },
            "subPath": "",
            "users": [
              {
                "name": "storage-user"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/minio/minio-operator1@sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "bundle_path_digest": "sha256:99bb38441429e0fc651364ecc4ea2051b2b1a558a61ca5fc83a03a79f6a28405",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-29T17:00:24.291000+00:00",
      "csv_description": "## Overview\n\n\nThe MinIO Operator brings native support for deploying and managing MinIO\ndeployments (\u201cMinIO Tenants\u201d) on a Kubernetes cluster.\n\n\nMinIO is a high performance, Kubernetes native object storage suite. With an\nextensive list of enterprise features, it is scalable, secure and resilient\nwhile remaining remarkably simple to deploy and operate at scale.\nSoftware-defined, MinIO can run on any infrastructure and in any cloud -\npublic, private or edge. MinIO is the world's fastest object storage and can\nrun the broadest set of workloads in the industry. It is widely considered\nto be the leader in compatibility with Amazon's S3 API.\n\n## Features\n\n\nThe MinIO Operator takes care of the deployment of MinIO Tenant along with:\n\n* TLS Certificate Management\n\n* Configuration of the encryption at rest\n\n* Cluster expansion\n\n* Hot Updates\n\n* Users and Buckets bootstrapping\n\n## Prerequisites for enabling this Operator\n\n* At least Kubernetes 1.18\n\n* [CSR\nCapability](https://kubernetes.io/docs/reference/access-authn-authz/certificate-signing-requests/)\nmust be enabled\n\n* Locally attached volumes for performance or some CSI to provision block\nstorage to the MinIO pods.",
      "csv_display_name": "Minio Operator",
      "csv_metadata_description": "MinIO is a Kubernetes-native high performance object store with an\nS3-compatible API. The MinIO Operator supports deploying MinIO Tenants\nonto any Kubernetes.",
      "csv_name": "minio-operator.v4.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-29T17:00:24.291000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "minio-operator",
      "provided_apis": [
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1"
        },
        {
          "group": "minio.min.io",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v2"
        }
      ],
      "provider": "MinIO Inc",
      "related_images": [
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "operator-5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935-annotation"
        },
        {
          "digest": "sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "image": "quay.io/minio/console@sha256:8dce83e096fb72373aa27634f5d9d0cad574d6d89dd4d89f9b27334d77e7465e",
          "name": "console"
        },
        {
          "digest": "sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "image": "quay.io/minio/operator@sha256:5f5f31cf46a7683dc37aeaf598baf552640c03ac6fc8f2aac169e015d077e935",
          "name": "minio-operator"
        },
        {
          "digest": "sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "image": "quay.io/minio/minio@sha256:c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7",
          "name": "minio-c3d20bc2ea08477248c15f932822f932b092b658c5692a9c9f4d88abcf556ed7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "4.5.1",
      "version_original": "4.5.1"
    },
    {
      "_id": "633656cc9bb8b51dd358764c",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:39:08.161000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:39:08.161000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "633656cc9bb8b51dd358764f",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:39:08.951000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:39:08.951000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "633656cd51ac4f4c0ee6e979",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:39:09.557000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T02:39:09.557000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365af275dd89c62d710a77",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:56:50.426000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:56:50.426000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365af4103d9edf1be976d6",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:56:52.857000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:56:52.857000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365af72bdd76944b9051c7",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:56:55.232000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T02:56:55.232000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b5fe93f04a7c48115d1",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:58:39.030000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T02:58:39.030000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b5feb10d77b6649cf25",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:58:39.775000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:58:39.775000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b6051ac4f4c0ee6ebdc",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:58:40.538000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:58:40.538000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b67038c18c5435c2c5c",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:58:47.626000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:58:47.626000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b68038c18c5435c2c5e",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:58:48.209000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:58:48.209000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b68e93f04a7c48115d5",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:58:48.723000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T02:58:48.723000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b69eb10d77b6649cf2e",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T02:58:49.733000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:58:49.733000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b6a51ac4f4c0ee6ebe1",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T02:58:50.160000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T02:58:50.160000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "63365b6ae93f04a7c48115d8",
      "alm_examples": [
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarBroker",
          "metadata": {
            "name": "pulsarbroker-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "pulsar.streamnative.io/v1alpha1",
          "kind": "PulsarProxy",
          "metadata": {
            "name": "pulsar"
          },
          "spec": {
            "configMapName": "proxy-configmap",
            "image": "apachepulsar/pulsar:2.5.0",
            "imagePullPolicy": "Always",
            "replicas": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/pulsar-operator-bundle@sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "bundle_path_digest": "sha256:f5c3b6419f9b8e106992ba0ff34d3e5995f7715e5237aff586a73c5bcce4e2c3",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T02:58:50.690000+00:00",
      "csv_description": "The Pulsar Operator is a controller that manages Pulsar clusters in Kubernetes. It provides a full management life-cycle for Pulsar, including deployment, upgrades, scaling, and configuration changes. With the Pulsar Operator, Pulsar can run seamlessly in the Kubernetes clusters deployed on a public or private cloud. You can then manage Pulsar clusters using the Kubernetes Application Programming Interface (API) and the kubectl tool.\n\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Pulsar Operator",
      "csv_metadata_description": "The Pulsar Operator manages the Pulsar service instances deployed on a Kubernetes cluster.",
      "csv_name": "pulsar-operator.v0.12.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T02:58:50.690000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pulsar-operator",
      "provided_apis": [
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTopic",
          "plural": "pulsartopics",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarBroker",
          "plural": "pulsarbrokers",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarConnection",
          "plural": "pulsarconnections",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarNamespace",
          "plural": "pulsarnamespaces",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarPermission",
          "plural": "pulsarpermissions",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarProxy",
          "plural": "pulsarproxies",
          "version": "v1alpha1"
        },
        {
          "group": "pulsar.streamnative.io",
          "kind": "PulsarTenant",
          "plural": "pulsartenants",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "pulsar-operator-e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d-annotation"
        },
        {
          "digest": "sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "image": "quay.io/streamnativeio/kube-rbac-proxy@sha256:34e8724e0f47e31eb2ec3279ac398b657db5f60f167426ee73138e2e84af6486",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "image": "quay.io/streamnativeio/pulsar-operator@sha256:e574158c774fc156615bc0e63ed13ff4d5680328c8a44e242f0824e88e9c677d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.12.4",
      "version_original": "0.12.4"
    },
    {
      "_id": "6336bcc075dd89c62d7138bc",
      "alm_examples": [
        {
          "api_version": "operator.antrea.vmware.com/v1",
          "kind": "AntreaInstall",
          "metadata": {
            "name": "antrea-install",
            "namespace": "antrea-operator"
          },
          "spec": {
            "antreaAgentConfig": "# FeatureGates is a map of feature names to bools that enable or disable experimental features.\nfeatureGates:\n# AllAlpha is a global toggle for alpha features. Per-feature key values override the default set by AllAlpha.\n#  AllAlpha: false\n\n# AllBeta is a global toggle for beta features. Per-feature key values override the default set by AllBeta.\n#  AllBeta: false\n\n# Enable AntreaProxy which provides ServiceLB for in-cluster Services in antrea-agent.\n# It should be enabled on Windows, otherwise NetworkPolicy will not take effect on\n# Service traffic.\n#  AntreaProxy: true\n\n# Enable EndpointSlice support in AntreaProxy. Don't enable this feature unless that EndpointSlice\n# API version v1 is supported and set as enabled in Kubernetes. If AntreaProxy is not enabled,\n# this flag will not take effect.\n#  EndpointSlice: false\n\n# Enable TopologyAwareHints in AntreaProxy. This requires AntreaProxy and EndpointSlice to be\n# enabled, otherwise this flag will not take effect.\n#  TopologyAwareHints: false\n\n# Enable traceflow which provides packet tracing feature to diagnose network issue.\n#  Traceflow: true\n\n# Enable NodePortLocal feature to make the Pods reachable externally through NodePort\n#  NodePortLocal: true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy for cluster admins\n# to define security policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable flowexporter which exports polled conntrack connections as IPFIX flow records from each\n# agent to a configured collector.\n#  FlowExporter: false\n\n# Enable collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n#  Egress: true\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools. AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in bridging mode. It is also required to use Antrea for\n# IPAM when configuring secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable multicast traffic.\n#  Multicast: false\n\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This feature is supported only with encap mode.\n#  Multicluster: false\n\n# Enable support for provisioning secondary network interfaces for Pods (using\n# Pod annotations). At the moment, Antrea can only create secondary network\n# interfaces using SR-IOV VFs on baremetal Nodes.\n#  SecondaryNetwork: false\n\n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP: false\n\n# Enable mirroring or redirecting the traffic Pods send or receive.\n#  TrafficControl: false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth: false\n\n# Name of the OpenVSwitch bridge antrea-agent will create and use.\n# Make sure it doesn't conflict with your existing OpenVSwitch bridges.\novsBridge: \"br-int\"\n\n# Datapath type to use for the OpenVSwitch bridge created by Antrea. Supported values are:\n# - system\n# - netdev\n# 'system' is the default value and corresponds to the kernel datapath. Use 'netdev' to run\n# OVS in userspace mode. Userspace mode requires the tun device driver to be available.\n#ovsDatapathType: system\n\n# Name of the interface antrea-agent will create and use for host <--> pod communication.\n# Make sure it doesn't conflict with your existing interfaces.\nhostGateway: \"antrea-gw0\"\n\n# Determines how traffic is encapsulated. It has the following options:\n# encap(default):    Inter-node Pod traffic is always encapsulated and Pod to external network\n#                    traffic is SNAT'd.\n# noEncap:           Inter-node Pod traffic is not encapsulated; Pod to external network traffic is\n#                    SNAT'd if noSNAT is not set to true. Underlying network must be capable of\n#                    supporting Pod traffic across IP subnets.\n# hybrid:            noEncap if source and destination Nodes are on the same subnet, otherwise encap.\n# networkPolicyOnly: Antrea enforces NetworkPolicy only, and utilizes CNI chaining and delegates Pod\n#                    IPAM and connectivity to the primary CNI.\n#\ntrafficEncapMode: \"encap\"\n\n# Whether or not to SNAT (using the Node IP) the egress traffic from a Pod to the external network.\n# This option is for the noEncap traffic mode only, and the default value is false. In the noEncap\n# mode, if the cluster's Pod CIDR is reachable from the external network, then the Pod traffic to\n# the external network needs not be SNAT'd. In the networkPolicyOnly mode, antrea-agent never\n# performs SNAT and this option will be ignored; for other modes it must be set to false.\nnoSNAT: false\n\n# Tunnel protocols used for encapsulating traffic across Nodes. If WireGuard is enabled in trafficEncryptionMode,\n# this option will not take effect. Supported values:\n# - geneve (default)\n# - vxlan\n# - gre\n# - stt\n# Note that \"gre\" is not supported for IPv6 clusters (IPv6-only or dual-stack clusters).\ntunnelType: \"geneve\"\n\n# TunnelPort is the destination port for UDP and TCP based tunnel protocols (Geneve, VXLAN, and STT).\n# If zero, it will use the assigned IANA port for the protocol, i.e. 6081 for Geneve, 4789 for VXLAN,\n# and 7471 for STT.\ntunnelPort: 0\n\n# Determines how tunnel traffic is encrypted. Currently encryption only works with encap mode.\n# It has the following options:\n# - none (default):  Inter-node Pod traffic will not be encrypted.\n# - ipsec:           Enable IPsec (ESP) encryption for Pod traffic across Nodes. Antrea uses\n#                    Preshared Key (PSK) for IKE authentication. When IPsec tunnel is enabled,\n#                    the PSK value must be passed to Antrea Agent through an environment\n#                    variable: ANTREA_IPSEC_PSK.\n# - wireGuard:       Enable WireGuard for tunnel traffic encryption.\ntrafficEncryptionMode: \"none\"\n\n# Enable bridging mode of Pod network on Nodes, in which the Node's transport interface is connected\n# to the OVS bridge, and cross-Node/VLAN traffic of AntreaIPAM Pods (Pods whose IP addresses are\n# allocated by AntreaIPAM from IPPools) is sent to the underlay network, and forwarded/routed by the\n# underlay network.\n# This option requires the `AntreaIPAM` feature gate to be enabled. At this moment, it supports only\n# IPv4 and Linux Nodes, and can be enabled only when `ovsDatapathType` is `system`,\n# `trafficEncapMode` is `noEncap`, and `noSNAT` is true.\nenableBridgingMode: false\n\n# Disable TX checksum offloading for container network interfaces. It's supposed to be set to true when the\n# datapath doesn't support TX checksum offloading, which causes packets to be dropped due to bad checksum.\n# It affects Pods running on Linux Nodes only.\ndisableTXChecksumOffload: false\n\n# Default MTU to use for the host gateway interface and the network interface of each Pod.\n# If omitted, antrea-agent will discover the MTU of the Node's primary interface and\n# also adjust MTU to accommodate for tunnel encapsulation overhead (if applicable).\ndefaultMTU: 0\n\n# wireGuard specifies WireGuard related configurations.\nwireGuard:\n  # The port for WireGuard to receive traffic.\n  port: 51820\n\negress:\n  # exceptCIDRs is the CIDR ranges to which outbound Pod traffic will not be SNAT'd by Egresses.\n  exceptCIDRs:\n\n# ClusterIP CIDR range for Services. It's required when AntreaProxy is not enabled, and should be\n# set to the same value as the one specified by --service-cluster-ip-range for kube-apiserver. When\n# AntreaProxy is enabled, this parameter is not needed and will be ignored if provided.\nserviceCIDR: \"\"\n\n# ClusterIP CIDR range for IPv6 Services. It's required when using kube-proxy to provide IPv6 Service in a Dual-Stack\n# cluster or an IPv6 only cluster. The value should be the same as the configuration for kube-apiserver specified by\n# --service-cluster-ip-range. When AntreaProxy is enabled, this parameter is not needed.\n# No default value for this field.\nserviceCIDRv6: \"\"\n\n# The port for the antrea-agent APIServer to serve on.\n# Note that if it's set to another value, the `containerPort` of the `api` port of the\n# `antrea-agent` container must be set to the same value.\napiPort: 10350\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Provide the IPFIX collector address as a string with format <HOST>:[<PORT>][:<PROTO>].\n# HOST can either be the DNS name or the IP of the Flow Collector. For example,\n# \"flow-aggregator.flow-aggregator.svc\" can be provided as DNS name to connect\n# to the Antrea Flow Aggregator service. If IP, it can be either IPv4 or IPv6.\n# However, IPv6 address should be wrapped with [].\n# If PORT is empty, we default to 4739, the standard IPFIX port.\n# If no PROTO is given, we consider \"tls\" as default. We support \"tls\", \"tcp\" and\n# \"udp\" protocols. \"tls\" is used for securing communication between flow exporter and\n# flow aggregator.\nflowCollectorAddr: \"flow-aggregator.flow-aggregator.svc:4739:tls\"\n\n# Provide flow poll interval as a duration string. This determines how often the\n# flow exporter dumps connections from the conntrack module. Flow poll interval\n# should be greater than or equal to 1s (one second).\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nflowPollInterval: \"5s\"\n\n# Provide the active flow export timeout, which is the timeout after which a flow\n# record is sent to the collector for active flows. Thus, for flows with a continuous\n# stream of packets, a flow record will be exported to the collector once the elapsed\n# time since the last export event is equal to the value of this timeout.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nactiveFlowExportTimeout: \"5s\"\n\n# Provide the idle flow export timeout, which is the timeout after which a flow\n# record is sent to the collector for idle flows. A flow is considered idle if no\n# packet matching this flow has been observed since the last export event.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nidleFlowExportTimeout: \"15s\"\n\nnodePortLocal:\n# Enable NodePortLocal, a feature used to make Pods reachable using port forwarding on the host. To\n# enable this feature, you need to set \"enable\" to true, and ensure that the NodePortLocal feature\n# gate is also enabled (which is the default).\n  enable: false\n# Provide the port range used by NodePortLocal. When the NodePortLocal feature is enabled, a port\n# from that range will be assigned whenever a Pod's container defines a specific port to be exposed\n# (each container can define a list of ports as pod.spec.containers[].ports), and all Node traffic\n# directed to that port will be forwarded to the Pod.\n  portRange: \"61000-62000\"\n\n# Provide the address of Kubernetes apiserver, to override any value provided in kubeconfig or InClusterConfig.\n# Defaults to \"\". It must be a host string, a host:port pair, or a URL to the base of the apiserver.\nkubeAPIServerOverride: \"\"\n\n# Provide the address of DNS server, to override the kube-dns service. It's used to resolve hostname in FQDN policy.\n# Defaults to \"\". It must be a host string or a host:port pair of the DNS server (e.g. 10.96.0.10, 10.96.0.10:53,\n# [fd00:10:96::a]:53).\ndnsServerOverride: \"\"\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n# Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites: \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\ntlsMinVersion: \"\"\n\n# The name of the interface on Node which is used for tunneling or routing the traffic across Nodes.\n# If there are multiple IP addresses configured on the interface, the first one is used. The IP\n# address used for tunneling or routing traffic to remote Nodes is decided in the following order of\n# preference (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n# 3. The Node IP\ntransportInterface: \"\"\n\nmulticast:\n# The names of the interfaces on Nodes that are used to forward multicast traffic.\n# Defaults to transport interface if not set.\n  multicastInterfaces:\n\n# The interval at which the antrea-agent sends IGMP queries to Pods.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\n  igmpQueryInterval: \"125s\"\n\n# The network CIDRs of the interface on Node which is used for tunneling or routing the traffic across\n# Nodes. If there are multiple interfaces configured the same network CIDR, the first one is used. The\n# IP address used for tunneling or routing traffic to remote Nodes is decided in the following order of\n# preference (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n# 3. The Node IP\ntransportInterfaceCIDRs:\n\n# Option antreaProxy contains AntreaProxy related configuration options.\nantreaProxy:\n  # ProxyAll tells antrea-agent to proxy all Service traffic, including NodePort, LoadBalancer, and ClusterIP traffic,\n  # regardless of where they come from. Therefore, running kube-proxy is no longer required. This requires the AntreaProxy\n  # feature to be enabled.\n  # Note that this option is experimental. If kube-proxy is removed, option kubeAPIServerOverride must be used to access\n  # apiserver directly.\n  proxyAll: false\n  # A string array of values which specifies the host IPv4/IPv6 addresses for NodePort. Values can be valid IP blocks.\n  # (e.g. 1.2.3.0/24, 1.2.3.4/32). An empty string slice is meant to select all host IPv4/IPv6 addresses.\n  # Note that the option is only valid when proxyAll is true.\n  nodePortAddresses:\n  # An array of string values to specify a list of Services which should be ignored by AntreaProxy (traffic to these\n  # Services will not be load-balanced). Values can be a valid ClusterIP (e.g. 10.11.1.2) or a Service name\n  # with Namespace (e.g. kube-system/kube-dns)\n  skipServices:\n  # When ProxyLoadBalancerIPs is set to false, AntreaProxy no longer load-balances traffic destined to the\n  # External IPs of LoadBalancer Services. This is useful when the external LoadBalancer provides additional\n  # capabilities (e.g. TLS termination) and it is desirable for Pod-to-ExternalIP traffic to be sent to the\n  # external LoadBalancer instead of being load-balanced to an Endpoint directly by AntreaProxy.\n  # Note that setting ProxyLoadBalancerIPs to false usually only makes sense when ProxyAll is set to true and\n  # kube-proxy is removed from the cluser, otherwise kube-proxy will still load-balance this traffic.\n  proxyLoadBalancerIPs: true\n\n# IPsec tunnel related configurations.\nipsec:\n  # The authentication mode of IPsec tunnel. It has the following options:\n  # - psk (default): Use pre-shared key (PSK) for IKE authentication.\n  # - cert:          Use CA-signed certificates for IKE authentication. This option requires the `IPsecCertAuth`\n  #                  feature gate to be enabled.\n  authenticationMode: \"psk\"\n\nmulticluster:\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This feature is supported only with encap mode.\n  enable: false\n# The Namespace where Antrea Multi-cluster Controller is running.\n# The default is antrea-agent's Namespace.\n  namespace: \"\"\n",
            "antreaCNIConfig": "{\n    \"cniVersion\":\"0.3.0\",\n    \"name\": \"antrea\",\n    \"plugins\": [\n        {\n            \"type\": \"antrea\",\n            \"ipam\": {\n                \"type\": \"host-local\"\n            }\n        }\n        ,\n        {\n            \"type\": \"portmap\",\n            \"capabilities\": {\"portMappings\": true}\n        }\n        ,\n        {\n            \"type\": \"bandwidth\",\n            \"capabilities\": {\"bandwidth\": true}\n        }\n    ]\n}\n",
            "antreaControllerConfig": "# FeatureGates is a map of feature names to bools that enable or disable experimental features.\nfeatureGates:\n# AllAlpha is a global toggle for alpha features. Per-feature key values override the default set by AllAlpha.\n#  AllAlpha: false\n\n# AllBeta is a global toggle for beta features. Per-feature key values override the default set by AllBeta.\n#  AllBeta: false\n\n# Enable traceflow which provides packet tracing feature to diagnose network issue.\n#  Traceflow: true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy for cluster admins\n# to define security policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\n# Enable multicast traffic.\n#  Multicast: false\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n#  Egress: true\n\n# Run Kubernetes NodeIPAMController with Antrea.\n#  NodeIPAM: false\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools. AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in bridging mode. It is also required to use Antrea for\n# IPAM when configuring secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP: false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth: false\n\n# Enable managing ExternalNode for unmanaged VM/BM.\n#  ExternalNode: false\n\n# The port for the antrea-controller APIServer to serve on.\n# Note that if it's set to another value, the `containerPort` of the `api` port of the\n# `antrea-controller` container must be set to the same value.\napiPort: 10349\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Indicates whether to use auto-generated self-signed TLS certificate.\n# If false, a Secret named \"antrea-controller-tls\" must be provided with the following keys:\n#   ca.crt: <CA certificate>\n#   tls.crt: <TLS certificate>\n#   tls.key: <TLS private key>\nselfSignedCert: true\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n# Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites: \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\ntlsMinVersion: \"\"\n\nnodeIPAM:\n  # Enable the integrated Node IPAM controller within the Antrea controller.\n  enableNodeIPAM: false\n  # CIDR ranges for Pods in cluster. String array containing single CIDR range, or multiple ranges.\n  # The CIDRs could be either IPv4 or IPv6. At most one CIDR may be specified for each IP family.\n  # Value ignored when enableNodeIPAM is false.\n  clusterCIDRs:\n  # CIDR ranges for Services in cluster. It is not necessary to specify it when there is no overlap with clusterCIDRs.\n  # Value ignored when enableNodeIPAM is false.\n  serviceCIDR: \"\"\n  serviceCIDRv6: \"\"\n  # Mask size for IPv4 Node CIDR in IPv4 or dual-stack cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv4 Pod CIDR is not configured. Valid range is 16 to 30.\n  nodeCIDRMaskSizeIPv4: 24\n  # Mask size for IPv6 Node CIDR in IPv6 or dual-stack cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv6 Pod CIDR is not configured. Valid range is 64 to 126.\n  nodeCIDRMaskSizeIPv6: 64\n\nipsecCSRSigner:\n  # Determines the auto-approve policy of Antrea CSR signer for IPsec certificates management.\n  # If enabled, Antrea will auto-approve the CertificateSingingRequest (CSR) if its subject and x509 extensions\n  # are permitted, and the requestor can be validated. If K8s `BoundServiceAccountTokenVolume` feature is enabled,\n  # the Pod identity will also be validated to provide maximum security.\n  # If set to false, Antrea will not auto-approve CertificateSingingRequests and they need to be approved\n  # manually by `kubectl certificate approve`.\n  autoApprove: true\n  # Indicates whether to use auto-generated self-signed CA certificate.\n  # If false, a Secret named \"antrea-ipsec-ca\" must be provided with the following keys:\n  #   tls.crt: <CA certificate>\n  #   tls.key: <CA private key>\n  selfSignedCA: true\n",
            "antreaImage": "antrea/antrea-ubi:v1.8.0",
            "platform": "openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/antrea-openshift-operator@sha256:d7cbf270f06ebb128c3bc37abb1f0cd952cf7edea3125199043d1b076e16ed97",
      "bundle_path_digest": "sha256:d7cbf270f06ebb128c3bc37abb1f0cd952cf7edea3125199043d1b076e16ed97",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T09:54:08.247000+00:00",
      "csv_description": "An operator which installs Antrea network CNI plugin on the Kubernetes cluster.",
      "csv_display_name": "Antrea Operator",
      "csv_metadata_description": "An operator which installs Antrea network CNI plugin on the Kubernetes cluster.",
      "csv_name": "antrea-operator-for-kubernetes.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T09:54:08.247000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "antrea-operator-for-kubernetes",
      "provided_apis": [
        {
          "group": "operator.antrea.vmware.com",
          "kind": "AntreaInstall",
          "plural": "antreainstalls",
          "version": "v1"
        }
      ],
      "provider": "antrea.io",
      "related_images": [
        {
          "digest": "sha256:d829b3447a3f106e77ed7390f6e1a13308d9077f7099210b3f257e401312ba00",
          "image": "antrea/antrea-operator@sha256:d829b3447a3f106e77ed7390f6e1a13308d9077f7099210b3f257e401312ba00",
          "name": "antrea-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "6336bf27d56957cd2e73585c",
      "alm_examples": [
        {
          "api_version": "operator.antrea.vmware.com/v1",
          "kind": "AntreaInstall",
          "metadata": {
            "name": "antrea-install",
            "namespace": "antrea-operator"
          },
          "spec": {
            "antreaAgentConfig": "# FeatureGates is a map of feature names to bools that enable or disable experimental features.\nfeatureGates:\n# AllAlpha is a global toggle for alpha features. Per-feature key values override the default set by AllAlpha.\n#  AllAlpha: false\n\n# AllBeta is a global toggle for beta features. Per-feature key values override the default set by AllBeta.\n#  AllBeta: false\n\n# Enable AntreaProxy which provides ServiceLB for in-cluster Services in antrea-agent.\n# It should be enabled on Windows, otherwise NetworkPolicy will not take effect on\n# Service traffic.\n#  AntreaProxy: true\n\n# Enable EndpointSlice support in AntreaProxy. Don't enable this feature unless that EndpointSlice\n# API version v1 is supported and set as enabled in Kubernetes. If AntreaProxy is not enabled,\n# this flag will not take effect.\n#  EndpointSlice: false\n\n# Enable TopologyAwareHints in AntreaProxy. This requires AntreaProxy and EndpointSlice to be\n# enabled, otherwise this flag will not take effect.\n#  TopologyAwareHints: false\n\n# Enable traceflow which provides packet tracing feature to diagnose network issue.\n#  Traceflow: true\n\n# Enable NodePortLocal feature to make the Pods reachable externally through NodePort\n#  NodePortLocal: true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy for cluster admins\n# to define security policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable flowexporter which exports polled conntrack connections as IPFIX flow records from each\n# agent to a configured collector.\n#  FlowExporter: false\n\n# Enable collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n#  Egress: true\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools. AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in bridging mode. It is also required to use Antrea for\n# IPAM when configuring secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable multicast traffic.\n#  Multicast: false\n\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This feature is supported only with encap mode.\n#  Multicluster: false\n\n# Enable support for provisioning secondary network interfaces for Pods (using\n# Pod annotations). At the moment, Antrea can only create secondary network\n# interfaces using SR-IOV VFs on baremetal Nodes.\n#  SecondaryNetwork: false\n\n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP: false\n\n# Enable mirroring or redirecting the traffic Pods send or receive.\n#  TrafficControl: false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth: false\n\n# Name of the OpenVSwitch bridge antrea-agent will create and use.\n# Make sure it doesn't conflict with your existing OpenVSwitch bridges.\novsBridge: \"br-int\"\n\n# Datapath type to use for the OpenVSwitch bridge created by Antrea. Supported values are:\n# - system\n# - netdev\n# 'system' is the default value and corresponds to the kernel datapath. Use 'netdev' to run\n# OVS in userspace mode. Userspace mode requires the tun device driver to be available.\n#ovsDatapathType: system\n\n# Name of the interface antrea-agent will create and use for host <--> pod communication.\n# Make sure it doesn't conflict with your existing interfaces.\nhostGateway: \"antrea-gw0\"\n\n# Determines how traffic is encapsulated. It has the following options:\n# encap(default):    Inter-node Pod traffic is always encapsulated and Pod to external network\n#                    traffic is SNAT'd.\n# noEncap:           Inter-node Pod traffic is not encapsulated; Pod to external network traffic is\n#                    SNAT'd if noSNAT is not set to true. Underlying network must be capable of\n#                    supporting Pod traffic across IP subnets.\n# hybrid:            noEncap if source and destination Nodes are on the same subnet, otherwise encap.\n# networkPolicyOnly: Antrea enforces NetworkPolicy only, and utilizes CNI chaining and delegates Pod\n#                    IPAM and connectivity to the primary CNI.\n#\ntrafficEncapMode: \"encap\"\n\n# Whether or not to SNAT (using the Node IP) the egress traffic from a Pod to the external network.\n# This option is for the noEncap traffic mode only, and the default value is false. In the noEncap\n# mode, if the cluster's Pod CIDR is reachable from the external network, then the Pod traffic to\n# the external network needs not be SNAT'd. In the networkPolicyOnly mode, antrea-agent never\n# performs SNAT and this option will be ignored; for other modes it must be set to false.\nnoSNAT: false\n\n# Tunnel protocols used for encapsulating traffic across Nodes. If WireGuard is enabled in trafficEncryptionMode,\n# this option will not take effect. Supported values:\n# - geneve (default)\n# - vxlan\n# - gre\n# - stt\n# Note that \"gre\" is not supported for IPv6 clusters (IPv6-only or dual-stack clusters).\ntunnelType: \"geneve\"\n\n# TunnelPort is the destination port for UDP and TCP based tunnel protocols (Geneve, VXLAN, and STT).\n# If zero, it will use the assigned IANA port for the protocol, i.e. 6081 for Geneve, 4789 for VXLAN,\n# and 7471 for STT.\ntunnelPort: 0\n\n# Determines how tunnel traffic is encrypted. Currently encryption only works with encap mode.\n# It has the following options:\n# - none (default):  Inter-node Pod traffic will not be encrypted.\n# - ipsec:           Enable IPsec (ESP) encryption for Pod traffic across Nodes. Antrea uses\n#                    Preshared Key (PSK) for IKE authentication. When IPsec tunnel is enabled,\n#                    the PSK value must be passed to Antrea Agent through an environment\n#                    variable: ANTREA_IPSEC_PSK.\n# - wireGuard:       Enable WireGuard for tunnel traffic encryption.\ntrafficEncryptionMode: \"none\"\n\n# Enable bridging mode of Pod network on Nodes, in which the Node's transport interface is connected\n# to the OVS bridge, and cross-Node/VLAN traffic of AntreaIPAM Pods (Pods whose IP addresses are\n# allocated by AntreaIPAM from IPPools) is sent to the underlay network, and forwarded/routed by the\n# underlay network.\n# This option requires the `AntreaIPAM` feature gate to be enabled. At this moment, it supports only\n# IPv4 and Linux Nodes, and can be enabled only when `ovsDatapathType` is `system`,\n# `trafficEncapMode` is `noEncap`, and `noSNAT` is true.\nenableBridgingMode: false\n\n# Disable TX checksum offloading for container network interfaces. It's supposed to be set to true when the\n# datapath doesn't support TX checksum offloading, which causes packets to be dropped due to bad checksum.\n# It affects Pods running on Linux Nodes only.\ndisableTXChecksumOffload: false\n\n# Default MTU to use for the host gateway interface and the network interface of each Pod.\n# If omitted, antrea-agent will discover the MTU of the Node's primary interface and\n# also adjust MTU to accommodate for tunnel encapsulation overhead (if applicable).\ndefaultMTU: 0\n\n# wireGuard specifies WireGuard related configurations.\nwireGuard:\n  # The port for WireGuard to receive traffic.\n  port: 51820\n\negress:\n  # exceptCIDRs is the CIDR ranges to which outbound Pod traffic will not be SNAT'd by Egresses.\n  exceptCIDRs:\n\n# ClusterIP CIDR range for Services. It's required when AntreaProxy is not enabled, and should be\n# set to the same value as the one specified by --service-cluster-ip-range for kube-apiserver. When\n# AntreaProxy is enabled, this parameter is not needed and will be ignored if provided.\nserviceCIDR: \"\"\n\n# ClusterIP CIDR range for IPv6 Services. It's required when using kube-proxy to provide IPv6 Service in a Dual-Stack\n# cluster or an IPv6 only cluster. The value should be the same as the configuration for kube-apiserver specified by\n# --service-cluster-ip-range. When AntreaProxy is enabled, this parameter is not needed.\n# No default value for this field.\nserviceCIDRv6: \"\"\n\n# The port for the antrea-agent APIServer to serve on.\n# Note that if it's set to another value, the `containerPort` of the `api` port of the\n# `antrea-agent` container must be set to the same value.\napiPort: 10350\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Provide the IPFIX collector address as a string with format <HOST>:[<PORT>][:<PROTO>].\n# HOST can either be the DNS name or the IP of the Flow Collector. For example,\n# \"flow-aggregator.flow-aggregator.svc\" can be provided as DNS name to connect\n# to the Antrea Flow Aggregator service. If IP, it can be either IPv4 or IPv6.\n# However, IPv6 address should be wrapped with [].\n# If PORT is empty, we default to 4739, the standard IPFIX port.\n# If no PROTO is given, we consider \"tls\" as default. We support \"tls\", \"tcp\" and\n# \"udp\" protocols. \"tls\" is used for securing communication between flow exporter and\n# flow aggregator.\nflowCollectorAddr: \"flow-aggregator.flow-aggregator.svc:4739:tls\"\n\n# Provide flow poll interval as a duration string. This determines how often the\n# flow exporter dumps connections from the conntrack module. Flow poll interval\n# should be greater than or equal to 1s (one second).\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nflowPollInterval: \"5s\"\n\n# Provide the active flow export timeout, which is the timeout after which a flow\n# record is sent to the collector for active flows. Thus, for flows with a continuous\n# stream of packets, a flow record will be exported to the collector once the elapsed\n# time since the last export event is equal to the value of this timeout.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nactiveFlowExportTimeout: \"5s\"\n\n# Provide the idle flow export timeout, which is the timeout after which a flow\n# record is sent to the collector for idle flows. A flow is considered idle if no\n# packet matching this flow has been observed since the last export event.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\nidleFlowExportTimeout: \"15s\"\n\nnodePortLocal:\n# Enable NodePortLocal, a feature used to make Pods reachable using port forwarding on the host. To\n# enable this feature, you need to set \"enable\" to true, and ensure that the NodePortLocal feature\n# gate is also enabled (which is the default).\n  enable: false\n# Provide the port range used by NodePortLocal. When the NodePortLocal feature is enabled, a port\n# from that range will be assigned whenever a Pod's container defines a specific port to be exposed\n# (each container can define a list of ports as pod.spec.containers[].ports), and all Node traffic\n# directed to that port will be forwarded to the Pod.\n  portRange: \"61000-62000\"\n\n# Provide the address of Kubernetes apiserver, to override any value provided in kubeconfig or InClusterConfig.\n# Defaults to \"\". It must be a host string, a host:port pair, or a URL to the base of the apiserver.\nkubeAPIServerOverride: \"\"\n\n# Provide the address of DNS server, to override the kube-dns service. It's used to resolve hostname in FQDN policy.\n# Defaults to \"\". It must be a host string or a host:port pair of the DNS server (e.g. 10.96.0.10, 10.96.0.10:53,\n# [fd00:10:96::a]:53).\ndnsServerOverride: \"\"\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n# Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites: \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\ntlsMinVersion: \"\"\n\n# The name of the interface on Node which is used for tunneling or routing the traffic across Nodes.\n# If there are multiple IP addresses configured on the interface, the first one is used. The IP\n# address used for tunneling or routing traffic to remote Nodes is decided in the following order of\n# preference (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n# 3. The Node IP\ntransportInterface: \"\"\n\nmulticast:\n# The names of the interfaces on Nodes that are used to forward multicast traffic.\n# Defaults to transport interface if not set.\n  multicastInterfaces:\n\n# The interval at which the antrea-agent sends IGMP queries to Pods.\n# Valid time units are \"ns\", \"us\" (or \"\u00b5s\"), \"ms\", \"s\", \"m\", \"h\".\n  igmpQueryInterval: \"125s\"\n\n# The network CIDRs of the interface on Node which is used for tunneling or routing the traffic across\n# Nodes. If there are multiple interfaces configured the same network CIDR, the first one is used. The\n# IP address used for tunneling or routing traffic to remote Nodes is decided in the following order of\n# preference (from highest to lowest):\n# 1. transportInterface\n# 2. transportInterfaceCIDRs\n# 3. The Node IP\ntransportInterfaceCIDRs:\n\n# Option antreaProxy contains AntreaProxy related configuration options.\nantreaProxy:\n  # ProxyAll tells antrea-agent to proxy all Service traffic, including NodePort, LoadBalancer, and ClusterIP traffic,\n  # regardless of where they come from. Therefore, running kube-proxy is no longer required. This requires the AntreaProxy\n  # feature to be enabled.\n  # Note that this option is experimental. If kube-proxy is removed, option kubeAPIServerOverride must be used to access\n  # apiserver directly.\n  proxyAll: false\n  # A string array of values which specifies the host IPv4/IPv6 addresses for NodePort. Values can be valid IP blocks.\n  # (e.g. 1.2.3.0/24, 1.2.3.4/32). An empty string slice is meant to select all host IPv4/IPv6 addresses.\n  # Note that the option is only valid when proxyAll is true.\n  nodePortAddresses:\n  # An array of string values to specify a list of Services which should be ignored by AntreaProxy (traffic to these\n  # Services will not be load-balanced). Values can be a valid ClusterIP (e.g. 10.11.1.2) or a Service name\n  # with Namespace (e.g. kube-system/kube-dns)\n  skipServices:\n  # When ProxyLoadBalancerIPs is set to false, AntreaProxy no longer load-balances traffic destined to the\n  # External IPs of LoadBalancer Services. This is useful when the external LoadBalancer provides additional\n  # capabilities (e.g. TLS termination) and it is desirable for Pod-to-ExternalIP traffic to be sent to the\n  # external LoadBalancer instead of being load-balanced to an Endpoint directly by AntreaProxy.\n  # Note that setting ProxyLoadBalancerIPs to false usually only makes sense when ProxyAll is set to true and\n  # kube-proxy is removed from the cluser, otherwise kube-proxy will still load-balance this traffic.\n  proxyLoadBalancerIPs: true\n\n# IPsec tunnel related configurations.\nipsec:\n  # The authentication mode of IPsec tunnel. It has the following options:\n  # - psk (default): Use pre-shared key (PSK) for IKE authentication.\n  # - cert:          Use CA-signed certificates for IKE authentication. This option requires the `IPsecCertAuth`\n  #                  feature gate to be enabled.\n  authenticationMode: \"psk\"\n\nmulticluster:\n# Enable Antrea Multi-cluster Gateway to support cross-cluster traffic.\n# This feature is supported only with encap mode.\n  enable: false\n# The Namespace where Antrea Multi-cluster Controller is running.\n# The default is antrea-agent's Namespace.\n  namespace: \"\"\n",
            "antreaCNIConfig": "{\n    \"cniVersion\":\"0.3.0\",\n    \"name\": \"antrea\",\n    \"plugins\": [\n        {\n            \"type\": \"antrea\",\n            \"ipam\": {\n                \"type\": \"host-local\"\n            }\n        }\n        ,\n        {\n            \"type\": \"portmap\",\n            \"capabilities\": {\"portMappings\": true}\n        }\n        ,\n        {\n            \"type\": \"bandwidth\",\n            \"capabilities\": {\"bandwidth\": true}\n        }\n    ]\n}\n",
            "antreaControllerConfig": "# FeatureGates is a map of feature names to bools that enable or disable experimental features.\nfeatureGates:\n# AllAlpha is a global toggle for alpha features. Per-feature key values override the default set by AllAlpha.\n#  AllAlpha: false\n\n# AllBeta is a global toggle for beta features. Per-feature key values override the default set by AllBeta.\n#  AllBeta: false\n\n# Enable traceflow which provides packet tracing feature to diagnose network issue.\n#  Traceflow: true\n\n# Enable Antrea ClusterNetworkPolicy feature to complement K8s NetworkPolicy for cluster admins\n# to define security policies which apply to the entire cluster, and Antrea NetworkPolicy\n# feature that supports priorities, rule actions and externalEntities in the future.\n#  AntreaPolicy: true\n\n# Enable collecting and exposing NetworkPolicy statistics.\n#  NetworkPolicyStats: true\n\n# Enable multicast traffic.\n#  Multicast: false\n\n# Enable controlling SNAT IPs of Pod egress traffic.\n#  Egress: true\n\n# Run Kubernetes NodeIPAMController with Antrea.\n#  NodeIPAM: false\n\n# Enable AntreaIPAM, which can allocate IP addresses from IPPools. AntreaIPAM is required by the\n# bridging mode and allocates IPs to Pods in bridging mode. It is also required to use Antrea for\n# IPAM when configuring secondary network interfaces with Multus.\n#  AntreaIPAM: false\n\n# Enable managing external IPs of Services of LoadBalancer type.\n#  ServiceExternalIP: false\n\n# Enable certificated-based authentication for IPsec.\n#  IPsecCertAuth: false\n\n# Enable managing ExternalNode for unmanaged VM/BM.\n#  ExternalNode: false\n\n# The port for the antrea-controller APIServer to serve on.\n# Note that if it's set to another value, the `containerPort` of the `api` port of the\n# `antrea-controller` container must be set to the same value.\napiPort: 10349\n\n# Enable metrics exposure via Prometheus. Initializes Prometheus metrics listener.\nenablePrometheusMetrics: true\n\n# Indicates whether to use auto-generated self-signed TLS certificate.\n# If false, a Secret named \"antrea-controller-tls\" must be provided with the following keys:\n#   ca.crt: <CA certificate>\n#   tls.crt: <TLS certificate>\n#   tls.key: <TLS private key>\nselfSignedCert: true\n\n# Comma-separated list of Cipher Suites. If omitted, the default Go Cipher Suites will be used.\n# https://golang.org/pkg/crypto/tls/#pkg-constants\n# Note that TLS1.3 Cipher Suites cannot be added to the list. But the apiserver will always\n# prefer TLS1.3 Cipher Suites whenever possible.\ntlsCipherSuites: \"\"\n\n# TLS min version from: VersionTLS10, VersionTLS11, VersionTLS12, VersionTLS13.\ntlsMinVersion: \"\"\n\nnodeIPAM:\n  # Enable the integrated Node IPAM controller within the Antrea controller.\n  enableNodeIPAM: false\n  # CIDR ranges for Pods in cluster. String array containing single CIDR range, or multiple ranges.\n  # The CIDRs could be either IPv4 or IPv6. At most one CIDR may be specified for each IP family.\n  # Value ignored when enableNodeIPAM is false.\n  clusterCIDRs:\n  # CIDR ranges for Services in cluster. It is not necessary to specify it when there is no overlap with clusterCIDRs.\n  # Value ignored when enableNodeIPAM is false.\n  serviceCIDR: \"\"\n  serviceCIDRv6: \"\"\n  # Mask size for IPv4 Node CIDR in IPv4 or dual-stack cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv4 Pod CIDR is not configured. Valid range is 16 to 30.\n  nodeCIDRMaskSizeIPv4: 24\n  # Mask size for IPv6 Node CIDR in IPv6 or dual-stack cluster. Value ignored when enableNodeIPAM is false\n  # or when IPv6 Pod CIDR is not configured. Valid range is 64 to 126.\n  nodeCIDRMaskSizeIPv6: 64\n\nipsecCSRSigner:\n  # Determines the auto-approve policy of Antrea CSR signer for IPsec certificates management.\n  # If enabled, Antrea will auto-approve the CertificateSingingRequest (CSR) if its subject and x509 extensions\n  # are permitted, and the requestor can be validated. If K8s `BoundServiceAccountTokenVolume` feature is enabled,\n  # the Pod identity will also be validated to provide maximum security.\n  # If set to false, Antrea will not auto-approve CertificateSingingRequests and they need to be approved\n  # manually by `kubectl certificate approve`.\n  autoApprove: true\n  # Indicates whether to use auto-generated self-signed CA certificate.\n  # If false, a Secret named \"antrea-ipsec-ca\" must be provided with the following keys:\n  #   tls.crt: <CA certificate>\n  #   tls.key: <CA private key>\n  selfSignedCA: true\n",
            "antreaImage": "antrea/antrea-ubi:v1.8.0",
            "platform": "openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/antrea-openshift-operator@sha256:d7cbf270f06ebb128c3bc37abb1f0cd952cf7edea3125199043d1b076e16ed97",
      "bundle_path_digest": "sha256:d7cbf270f06ebb128c3bc37abb1f0cd952cf7edea3125199043d1b076e16ed97",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T10:04:23.436000+00:00",
      "csv_description": "An operator which installs Antrea network CNI plugin on the Kubernetes cluster.",
      "csv_display_name": "Antrea Operator",
      "csv_metadata_description": "An operator which installs Antrea network CNI plugin on the Kubernetes cluster.",
      "csv_name": "antrea-operator-for-kubernetes.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T10:04:23.436000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "antrea-operator-for-kubernetes",
      "provided_apis": [
        {
          "group": "operator.antrea.vmware.com",
          "kind": "AntreaInstall",
          "plural": "antreainstalls",
          "version": "v1"
        }
      ],
      "provider": "antrea.io",
      "related_images": [
        {
          "digest": "sha256:d829b3447a3f106e77ed7390f6e1a13308d9077f7099210b3f257e401312ba00",
          "image": "antrea/antrea-operator@sha256:d829b3447a3f106e77ed7390f6e1a13308d9077f7099210b3f257e401312ba00",
          "name": "antrea-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "6336ced93e77eb509cc1b27a",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T11:11:21.876000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T11:11:21.876000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336cedf51ac4f4c0ee7212c",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T11:11:27.454000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T11:11:27.454000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336cee5eb10d77b664a048a",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T11:11:33.767000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T11:11:33.767000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336cfa7d56957cd2e735eda",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T11:14:47.670000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T11:14:47.670000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336cfae2bdd76944b908730",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T11:14:54.257000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T11:14:54.257000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336cfb275dd89c62d714035",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T11:14:58.778000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T11:14:58.778000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336d10a51ac4f4c0ee72213",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T11:20:42.479000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T11:20:42.479000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336d112a0585583ec5bf164",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T11:20:50.345000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T11:20:50.345000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336d11a2bdd76944b9087d3",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T11:20:58.088000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T11:20:58.088000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336d2bce93f04a7c4814cd3",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-09-30T11:27:56.503000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T11:27:56.503000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336d2bdd56957cd2e73600b",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-09-30T11:27:57.545000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-30T11:27:57.545000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    },
    {
      "_id": "6336d2bfeb10d77b664a0645",
      "alm_examples": [
        {
          "api_version": "ca.broadcom.com/v1alpha1",
          "kind": "UniversalMonitoringAgent",
          "metadata": {
            "name": "uma-monitor"
          },
          "spec": {
            "agentManager": {
              "credential": "",
              "tenantID": "",
              "url": "localhost:5001"
            },
            "cloudmonitoring": {
              "aws": {
                "accessKey": "",
                "enabled": false,
                "secretKey": "",
                "servicesList": ""
              }
            },
            "clusterName": "DevelopmentCluster",
            "daemonset": {
              "apmia": {
                "epagent": {
                  "port": 8889
                }
              },
              "privileged": true
            },
            "monitor": {
              "application": {
                "autoattach": {
                  "dotnet": {
                    "enabled": true
                  },
                  "dynamicPropertyResolution": {
                    "agentName": "",
                    "hostName": "{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost"
                  },
                  "filterType": "whitelist",
                  "java": {
                    "customJdkTools": {
                      "enabled": false,
                      "imageName": ""
                    },
                    "enabled": true
                  },
                  "nodejs": {
                    "enabled": true,
                    "writeAccessVerify": false
                  },
                  "probe": {
                    "enabled": true,
                    "manageAutoAttachWebhook": true,
                    "webhookEnabled": true
                  }
                },
                "jmx": {
                  "enabled": true
                },
                "opentracing": {
                  "correlation": {
                    "enabled": false
                  },
                  "enabled": true,
                  "grpc": {
                    "hostport": ""
                  }
                },
                "zipkinTracing": {
                  "enabled": true,
                  "zipkinServer": {}
                }
              },
              "clusterPerformance": {
                "dataReporter": {
                  "vertex": {
                    "refreshInterval": 360,
                    "ttl": 720
                  }
                },
                "enabled": true,
                "node": {
                  "noscheduleTaint": {
                    "allowed": {
                      "tolerations": ""
                    },
                    "skipMetricAggregation": {
                      "enabled": true
                    }
                  }
                }
              },
              "container": {
                "dockerstats": {
                  "enabled": true
                },
                "prometheus": {
                  "backend": {
                    "custom": {
                      "promqlConfigMap": "custom-promql-config"
                    },
                    "enabled": false,
                    "endPoint": {
                      "configFiles": "",
                      "metricAlias": "container_name=container,pod_name=pod",
                      "password": "",
                      "token": "",
                      "url": "",
                      "username": ""
                    },
                    "filter": {
                      "name": "",
                      "value": ""
                    }
                  },
                  "exporter": {
                    "enabled": true
                  }
                }
              },
              "events": {
                "clamp": {
                  "perDayLimit": 15000
                },
                "elasticDocTypeId": "itoa_events_apm",
                "elasticDocTypeVersion": 1,
                "elasticProduct": "ao",
                "enabled": false,
                "filter": {
                  "fieldselector": "type!=Normal"
                }
              },
              "httpCollector": {
                "enabled": true,
                "ingress": {
                  "enabled": false,
                  "ssl": {
                    "enabled": false
                  }
                },
                "memoryGrid": {},
                "replicas": 1,
                "server": {
                  "host": "0.0.0.0",
                  "maxMemory": "",
                  "minMemory": "",
                  "port": 8085
                }
              },
              "kafka": {
                "consumergroups": {
                  "filter": "",
                  "metrics": true
                },
                "debug": false,
                "deployAsDaemonSet": false,
                "enabled": false,
                "jmx": {
                  "MBeans": {
                    "exclude": "",
                    "include": ""
                  },
                  "modules": "kafka,jvm,memory"
                },
                "ssl": {
                  "client": {
                    "enabled": false,
                    "endpointIdentificationEnabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystoreKeyPassword": {
                      "value": ""
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  },
                  "jmx": {
                    "enabled": false,
                    "keystoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "keystorePassword": {
                      "value": ""
                    },
                    "truststoreKey": {
                      "value": "",
                      "valueFrom": {
                        "secretKeyRef": {
                          "key": "",
                          "name": ""
                        }
                      }
                    },
                    "truststorePassword": {
                      "value": ""
                    }
                  }
                }
              },
              "node": {
                "enabled": true
              }
            },
            "role": "common",
            "type": "Openshift"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "bundle_path_digest": "sha256:365ba845a7c784e28cf84d0d2b18a3cd4dc98f762f04226de1e5fca2ead93668",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-09-30T11:27:59.578000+00:00",
      "csv_description": "The **DX APM Universal Monitoring Agent** for Kubernetes (UMA for Kubernetes) acts as a single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes. UMA for Kubernetes discovers and monitors all the containers on a host. This capability allows to monitor both the Kubernetes Infrastructure ( like Node, Pods, Containers, Cluster Services etc ) and applications running on this infrastructure & correlate them together which can help the triager to isolate if the the problem is related to the application or infrastructure\n\n**Usage**:\n```\n apiVersion: ca.broadcom.com/v1alpha1\n kind: UniversalMonitoringAgent\n metadata:\n   name: uma-monitor\n spec:\n   agentManager:\n     url: localhost:5001\n     credential: \"\"\n     # tenantID is Cohort ID of DX SaaS tenant.\n     # After logging into DX SaaS, Cohort ID is available at \"Launch Pad -> Settings -> Connector Parameters\"\n     # tenantID is only required if Kubernetes/OpenShift events monitoring is enabled in UMA.\n     tenantID: \"\"\n\n   clusterName: DevelopmentCluster\n\n   type: Kubernetes\n   role: common\n   openshift311Support: false\n   monitor:\n     application:\n       autoattach:\n         filterType: whitelist\n         probe:\n           enabled: true\n           webhookEnabled: true\n           manageAutoAttachWebhook: true\n         # this feature leverages container metadata to resolve agent host name and agent name\n         dynamicPropertyResolution:\n           hostName: \"{k8s_deployment_name},{k8s_daemonset_name},{k8s_deploymentconfig_name},{k8s_pod_name},ContainerHost\"\n           agentName: \"\"\n         java:\n           enabled: true\n           propertiesOverride:\n           customJdkTools:\n             enabled: false\n             # Provide your custom created jdk tools jar image name below.\n             imageName: \"\"\n         dotnet:\n           enabled: true\n           propertiesOverride:\n         nodejs:\n           enabled: true\n           writeAccessVerify: false\n       jmx:\n         enabled: true\n       opentracing:\n         enabled: true\n         grpc:\n           hostport: \"\"\n         correlation:\n           enabled: false\n       zipkinTracing:\n         enabled: true\n         zipkinServer:\n           hostport:\n     events:\n       enabled: false\n       filter:\n         # fieldselector property can be used to filter the Kubernetes events based on the value of one or more resource fields.\n         # Here are some examples of field selector queries: metadata.namespace!=default, metadata.name=my-service etc.\n         fieldselector: type!=Normal\n         namespace:\n       clamp:\n         perDayLimit: 15000\n       elasticDocTypeId: itoa_events_apm\n       elasticDocTypeVersion: 1\n       elasticProduct: ao\n     httpCollector:\n       enabled: true\n       replicas: 1\n       server:\n         host: 0.0.0.0\n         port: 8085\n         minMemory: \"\"\n         maxMemory: \"\"\n       memoryGrid:\n         enabled:\n       # Enable this ingress resource creation if there is Ingress Controller deployed\n       # It requires session affinity using HTTP Headers by LB Ingress Controller\n       ingress:\n         enabled: false\n         host:\n         ssl:\n           enabled: false\n     container:\n       prometheus:\n         exporter:\n           enabled: true\n         backend:\n           enabled: false\n           endPoint:\n             # Defines the URL endpoint of the Prometheus backend.\n             url: \"\"\n             # Username (if any) for connecting to the Prometheus backend URL.\n             username:\n             password: \"\"\n             # Token (if any) for connecting to the Prometheus backend URL.\n             token: \"\"\n             configFiles: \"\"\n             metricAlias: container_name=container,pod_name=pod\n           filter:\n             name: \"\"\n             value: \"\"\n           custom:\n             promqlConfigMap: custom-promql-config\n\n       dockerstats:\n         enabled: true\n     clusterPerformance:\n       enabled: true\n       node:\n         noscheduleTaint:\n           skipMetricAggregation:\n             enabled: true\n           allowed:\n             tolerations: \"\"\n       dataReporter:\n         vertex:\n           ttl: 720\n           refreshInterval: 360\n     node:\n       enabled: true\n     kafka:\n       enabled: false\n       consumergroups:\n         metrics: true\n         filter: \"\"\n       jmx:\n         modules: \"kafka,jvm,memory\"\n         MBeans:\n           # A semi-colon separated list of managed bean object names. JMX metrics will be automatically reported for matching beans.\n           include: \"\"\n           # A semi-colon separated list of managed bean object names. Matching beans will be ignored for Kafka JMX metrics reporting. This property overrides \"include\" configuration.\n           exclude: \"\"\n       deployAsDaemonSet: false\n       debug: false\n       ssl:\n         client:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n           keystoreKeyPassword:\n             value: \"\"\n           endpointIdentificationEnabled: false\n         jmx:\n           enabled: false\n           truststoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           truststorePassword:\n             value: \"\"\n           keystoreKey:\n             value: \"\"\n             valueFrom:\n               secretKeyRef:\n                 name: \"\"\n                 key: \"\"\n           keystorePassword:\n             value: \"\"\n\n   # Default epagent port of the UMA daemonset pod deployment (app-container-monitor)\n   daemonset:\n     privileged: true\n     apmia:\n       epagent:\n         port: 8889\n   cloudmonitoring:\n     aws:\n       enabled: false\n       accessKey: \"\"\n       secretKey: \"\"\n       # services supported are rds,ec2,ebs,lambda,dynamodb,s3,sns,ecs,sqs,kinesis,clb,nlb,alb,redshift,elasticache,autoScaling,billing,apiGateway\n       # provide comma separated services to monitor\n       servicesList: \"\"\n\n```\n",
      "csv_display_name": "DX APM Universal Monitoring Agent",
      "csv_metadata_description": "The Universal Monitoring Agent for Kubernetes (UMA for Kubernetes) acts as single deployment that automatically discovers and monitors cloud and container infrastructures and containerized application processes.",
      "csv_name": "uma-operator.v2022.8.1-45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-30T11:27:59.578000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [
        {
          "group": "ca.broadcom.com",
          "kind": "UniversalMonitoringAgent",
          "plural": "universalmonitoringagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Broadcom, Inc.",
      "related_images": [
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator-3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6-annotation"
        },
        {
          "digest": "sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "image": "registry.connect.redhat.com/ca/uma-operator@sha256:3e4e11e63f5566a256154f9e174587f28754c070edf2594616b1df5f26e1dec6",
          "name": "uma-operator"
        },
        {
          "digest": "sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "image": "registry.connect.redhat.com/ca/universalmonitoragent@sha256:51afa6800bb60e1afcf8929b5be0dfac3f94bfd8314bde33a4b9100e3be6c47e",
          "name": "uma"
        }
      ],
      "replaces": null,
      "skip_range": ">=2022.1.0 <2022.8.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2022.8.1-45",
      "version_original": "2022.8.1-45"
    }
  ]
}

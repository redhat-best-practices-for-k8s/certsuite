{
  "data": [
    {
      "_id": "5f8f29cb3b6621a763342f79",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:243b8f0bbc2bda6bb13395f165fe5ec01999331e9b61878686d2073df3bf906c",
      "bundle_path_digest": "sha256:243b8f0bbc2bda6bb13395f165fe5ec01999331e9b61878686d2073df3bf906c",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-20T18:17:47.530000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.3.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:07:27.703000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "5f8f29cc5428f9169bc6aa34",
      "alm_examples": [
        {
          "api_version": "growth-stack.operator.com/v1alpha1",
          "kind": "AirgappedDeployment",
          "metadata": {
            "name": "airgappeddeployment"
          },
          "spec": {
            "airgapped": {
              "persistent_storage": {
                "backup_deletion_frequency": "@daily",
                "backup_retention_period": 7,
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              }
            },
            "event_scheduler_frequency": "@hourly",
            "image_pull_secret": "growthstack-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            }
          }
        },
        {
          "api_version": "growth-stack.operator.com/v1alpha1",
          "kind": "AnalyticsProxy",
          "metadata": {
            "name": "analyticsproxy"
          },
          "spec": {
            "airgapped": {
              "enabled": false,
              "persistent_storage": {
                "backup_deletion_frequency": "@daily",
                "backup_retention_period": 7,
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              }
            },
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "growthstack-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "segment_key": "set_segment_key_value"
          }
        },
        {
          "api_version": "growth-stack.operator.com/v1alpha1",
          "kind": "DeleteCluster",
          "metadata": {
            "name": "deletecluster"
          },
          "spec": {
            "image_pull_secret": "growthstack-pull-secret"
          }
        },
        {
          "api_version": "growth-stack.operator.com/v1alpha1",
          "kind": "FullDeployment",
          "metadata": {
            "name": "fulldeployment"
          },
          "spec": {
            "airgapped": {
              "enabled": false,
              "persistent_storage": {
                "backup_deletion_frequency": "@daily",
                "backup_retention_period": 7,
                "storage#": "10G",
                "storage_class": "ibmc-file-bronze-gid"
              }
            },
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "growthstack-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_scheduler_frequency": "@hourly",
            "segment_key": "set_segment_key_value"
          }
        },
        {
          "api_version": "growth-stack.operator.com/v1alpha1",
          "kind": "GenerateKey",
          "metadata": {
            "name": "generatekey"
          },
          "spec": {
            "image_pull_secret": "growthstack-pull-secret"
          }
        },
        {
          "api_version": "growth-stack.operator.com/v1alpha1",
          "kind": "StoreForwardMetric",
          "metadata": {
            "name": "storeforwardmetric"
          },
          "spec": {
            "event_scheduler_frequency": "@hourly",
            "ibmproxyurl": "https://iaps.ibm.com",
            "image_pull_secret": "growthstack-pull-secret",
            "postgres": {
              "storage#": "10G",
              "storage_class": "ibmc-block-bronze"
            },
            "prometheus_scheduler_frequency": "@hourly",
            "segment_key": "set_segment_key_value",
            "version": "alpha"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/growth-stack-operator-bundle@sha256:328b7978ab51e7019e118ec1777278e5d5c2f74040a292f650f7bb8b3f1917cf",
      "bundle_path_digest": "sha256:328b7978ab51e7019e118ec1777278e5d5c2f74040a292f650f7bb8b3f1917cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-20T18:17:48.684000+00:00",
      "csv_description": "Growth Stack Operator is a service that collects, transforms and transits product usage data\n\n**Pre-requisites**\n----\nStep 1: Create a new Project\n```sh\noc new-project <project-name>\n```\n\nStep 2: Create a secret named \"database-credentials\" for PostgreSQL DB \n```sh\n oc create secret generic database-credentials --from-literal=db_username=<DB Username> --from-literal=db_password=<DB Password> -n <project-name>\n```\n \nStep 3: [Optional] If the images require a secret to pull the container images, create a secret of type dockerconfigjson. Pass this secret name in the CR spec image\\_pull\\_secret \n```sh\noc create secret generic growthstack-pull-secret --from-file=.dockerconfigjson=<path/to/.docker/config.json>  --type=kubernetes.io/dockerconfigjson\n```\n\nStep 4: Create a secret named \"grafana-credentials\" to setup Grafana login credentials\n```sh\n oc create secret generic grafana-credentials --from-literal=grafana_username=<username> --from-literal=grafana_password=<password> -n <project-name>\n```\n\n**Installing the Growth Stack**\n----\n\nSelect any one of the deployments to setup the Growth Stack\n1. Full Deployment\n2. Analytics Proxy Deployment\n3. Store and Forward metrics Deployment\n4. Airgapped Analytics Proxy Deployment\n\n    \n     Spec                                                 |            Details\n----------------------------------------------------------|-----------------------------\nibmproxyurl                                               | URL of IBM Proxy Service\npostgres.storage_class                                    | Storage class of type ReadWriteOnce \npostgres.size                                             | Size (in Mi or G) of the storage to be attached to the Database\nairgapped.enabled                                         | true/false if airgapped setup is to be enabled. *Requires additional storage\nairgapped.persistent\\_storage.storage\\_size               | Size (in Mi or G) of the storage to be attached for saving airgapped files\nairgapped.persistent\\_storage.storage\\_class              | Storage class to be used for the persistent storage\nairgapped.persistent\\_storage.backup\\_retention\\_period   | Number of days to keep the backup files in the storage\nairgapped.persistent\\_storage.backup\\_deletion\\_frequency | Frequency of Cronjob to execute which will delete files from the storage\nevent\\_scheduler\\_frequency                               | Scheduler frequency in Cronjob format to forward events to proxy ( https://en.wikipedia.org/wiki/Cron )\nprometheus\\_scheduler\\_frequency                          | Prometheus Scheduler Frequency in Cronjob format to pull metrics from Prometheus\nimage\\_pull\\_secret                                       | Secret to pull container images from registry\nsegment\\_key                                              | Segment key to be used to send events to Segment\n\n**Generating the API Key**\n----\nOnce the deployment is complete, to use the Growth Stack Endpoints, generate an API key using the CR GenerateKey.\n\nNote- Key can be retrieved from the secret with same name used while creating Generate Key CR's instance. \nOnce you get key from the secret, decode it using below command: \n```sh\necho -n <secret key> | base64 -d \n```\nPass it as the Header- X-API-KEY and the key while using the Growth Stack Endpoints.\n\n**Deleting the API Key**\n----\nTo revoke the Key, delete the corresponding GenerateKey instance.  \n",
      "csv_display_name": "Growth Stack Operator",
      "csv_metadata_description": "Growth Stack Operator is a service that collects, transforms and transits product usage data.",
      "csv_name": "growth-stack-operator.v2.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:09:54.640000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "growth-stack-operator-certified",
      "provided_apis": [
        {
          "group": "growth-stack.operator.com",
          "kind": "AirgappedDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "AnalyticsProxy",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "DeleteCluster",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "FullDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "GenerateKey",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "StoreForwardMetric",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:6ea0e70b0443b3a368285ebae4c19a554fdf368d854fd35815cb03b313ca2df4",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:6ea0e70b0443b3a368285ebae4c19a554fdf368d854fd35815cb03b313ca2df4",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:f85a2869f2c60baa63c359017216f92dd49d2f2410bb8f9cfff9f00ab09abc9d",
          "image": "registry.connect.redhat.com/ibm-edge/growth-stack-operator@sha256:f85a2869f2c60baa63c359017216f92dd49d2f2410bb8f9cfff9f00ab09abc9d",
          "name": "growth-stack-operator"
        },
        {
          "digest": "sha256:e03edf631f1291ce16dc1525623bac60f9859fe2293e94f0981336c005b0c643",
          "image": "registry.connect.redhat.com/ibm-edge/event-api@sha256:e03edf631f1291ce16dc1525623bac60f9859fe2293e94f0981336c005b0c643",
          "name": "event_api"
        },
        {
          "digest": "sha256:afb1387bed461a286148540456542ee95e5776cc7132ab01f514b3e272190335",
          "image": "registry.connect.redhat.com/ibm-edge/store-api@sha256:afb1387bed461a286148540456542ee95e5776cc7132ab01f514b3e272190335",
          "name": "store_api"
        },
        {
          "digest": "sha256:299e793cedb20d19aa884746ee75ec2cacdc01525526680daee34658b76c5af3",
          "image": "registry.connect.redhat.com/ibm-edge/event-reader@sha256:299e793cedb20d19aa884746ee75ec2cacdc01525526680daee34658b76c5af3",
          "name": "reader"
        },
        {
          "digest": "sha256:45beee1ad43d6b26a6498c764dd4907e773a3763e381897d80d19b9fcb4d0381",
          "image": "registry.connect.redhat.com/ibm-edge/event-scheduler@sha256:45beee1ad43d6b26a6498c764dd4907e773a3763e381897d80d19b9fcb4d0381",
          "name": "event_scheduler"
        },
        {
          "digest": "sha256:e1c3181b99a8b9693826e23261d6f70c7ee3e123b88fed127e03d8e863587687",
          "image": "registry.connect.redhat.com/ibm-edge/prometheus-scheduler@sha256:e1c3181b99a8b9693826e23261d6f70c7ee3e123b88fed127e03d8e863587687",
          "name": "prometheus_scheduler"
        },
        {
          "digest": "sha256:02a55a4d8e21d3cedf3856b3638c83a3a1c382680ed751c00371dad33653c016",
          "image": "registry.connect.redhat.com/ibm-edge/pgo-client@sha256:02a55a4d8e21d3cedf3856b3638c83a3a1c382680ed751c00371dad33653c016",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:f19243b617f3a492b4b9fed67e4f9836284ec49db6c5befd76ef6fa24d817ceb",
          "image": "registry.connect.redhat.com/ibm-edge/reverse-proxy@sha256:f19243b617f3a492b4b9fed67e4f9836284ec49db6c5befd76ef6fa24d817ceb",
          "name": "nginx"
        },
        {
          "digest": "sha256:77bd19539c6e82aea1dfdfa1f390466dd68bcedf666846787bee3c97d6ca8c2a",
          "image": "registry.redhat.io/openshift4/ose-grafana@sha256:77bd19539c6e82aea1dfdfa1f390466dd68bcedf666846787bee3c97d6ca8c2a",
          "name": "grafana"
        },
        {
          "digest": "sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "image": "registry.redhat.io/openshift3/ose-kube-state-metrics@sha256:4fc96dc7a835c37dd3441a2c78e094cbfff8ea7fc8432e99f979c00965184260",
          "name": "ksm"
        },
        {
          "digest": "sha256:0e2481cb31684ca60cee2eab0df13b213f5f4ab303c3ec81eb2d9727949ddc7e",
          "image": "registry.access.redhat.com/redhat-sso-7/sso71-openshift@sha256:0e2481cb31684ca60cee2eab0df13b213f5f4ab303c3ec81eb2d9727949ddc7e",
          "name": "init_container"
        },
        {
          "digest": "sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "image": "registry.access.redhat.com/ubi8/ubi@sha256:d748c21a55796827da82c61f162b505c59451cba24f1874e5185f21275b6bddc",
          "name": "ubi"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "5f8f29cf3b6621a763342f7b",
      "alm_examples": [
        {
          "api_version": "here.com/v1alpha1",
          "kind": "HLSService",
          "metadata": {
            "name": "example-hlsservice"
          },
          "spec": {
            "apikey": "Get APIKey from https://here.dev/ref/service_operator?create=Freemium-Basic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/heremaps/here-service-operator-bundle@sha256:5a48a5194566573c5010a2e3ebc79f834652a777253856b2bc1e2e6c5c0f26e3",
      "bundle_path_digest": "sha256:5a48a5194566573c5010a2e3ebc79f834652a777253856b2bc1e2e6c5c0f26e3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-20T18:17:51.910000+00:00",
      "csv_description": "HERE Location Services are key in use cases such as Fleet Utilization, Supply Chain Optimization, Urban Mobility, etc. They open up new location intelligence opportunities in diverse enterprise and technology areas, including the Internet of Things, Automotive, Insurance, Advertising, Mobile Payments, Public Sector, Smart Cities, Telecom, Utilities, and Transportation and Logistics. HERE Location Services cover Geocoder, Search, Navigation, Routing, Fleet Telematics, Positioning and other services, providing solutions for map visualization, navigation, routing, geocoding, time zone lookups, geofencing, custom locations, routing, route matching GPS traces, geospatial, sequencing multiple waypoints, truck routing, positioning, etc.\n",
      "csv_display_name": "HERE Maps and Location Services Operator",
      "csv_metadata_description": "HERE Maps and Location Services Operator will provide containerised applications and Kubernetes users access to HERE Location Services APIs by enabling discovery of HERE Location Services and provisioning HERE authentication to access these services.\n",
      "csv_name": "hls-service-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:37:06.197000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "here-service-operator-certified",
      "provided_apis": [
        {
          "group": "here.com",
          "kind": "HLSService",
          "plural": "hlsservices",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "image": "registry.connect.redhat.com/heremaps/here-service-operator@sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "name": "here-service-operator-4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770-annotation"
        },
        {
          "digest": "sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "image": "registry.connect.redhat.com/heremaps/here-service-operator@sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "name": "hls-service-operator"
        },
        {
          "digest": "sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "image": "registry.connect.redhat.com/heremaps/here-service-operator@sha256:4969c8fe8087ea2a09c2f802e30166b12368d57d48ff11c3982d483e3ceba770",
          "name": "statefulset"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5f8f29d2316c15a2726ac8ad",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.3.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64",
                              "s390x"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.3.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "registry.redhat.io/openshift4/ose-csi-driver-registrar",
                "tag": "v4.3"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-provisioner-rhel7",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-attacher",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "registry.redhat.io/openshift4/ose-csi-external-snapshotter-rhel7",
                "tag": "v4.4"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "registry.redhat.io/openshift4/ose-csi-livenessprobe",
                "tag": "v4.4"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:aa2f7b4b4b2d489cd9671b0b45d696ca2fcb8f76ad2b2551a06475917b9fdc99",
      "bundle_path_digest": "sha256:aa2f7b4b4b2d489cd9671b0b45d696ca2fcb8f76ad2b2551a06475917b9fdc99",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-20T18:17:54.536000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\n\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n\nSupported container platforms (and architectures):\n  - OpenShift v4.3 (IBM Z and IBM PowerPC)\n  - OpenShift v4.4 (x86 and IBM Z)\n  - OpenShift v4.5 (x86)\n  - Kubernetes v1.17 (x86)\n  - Kubernetes v1.18 (x86)\n\nSupported IBM storage systems:\n  - IBM Spectrum Virtualize Family including IBM SAN Volume Controller (SVC) and IBM FlashSystem\u00ae family members built with IBM Spectrum\u00ae Virtualize (FlashSystem 5010, 5030, 5100, 7200, 9100, 9200, 9200R)\n  - IBM FlashSystem A9000/R\n  - IBM DS8880\n  - IBM DS8900\n\nSupported operating systems (and architectures):\n  - RHEL 7.x (x86)\n  - RHCOS (x86, IBM Z, and IBM PowerPC)\n\nFull documentation can be found on the [IBM Knowledge Center](https://www.ibm.com/support/knowledgecenter/SSRQ8T).\n\n## Prerequisites\n> **Note**: The operator can be installed directly from the RedHat OpenShift web console, through the OperatorHub. The prerequisites below also mentioned and can be viewed via OpenShift.\n\n### Preparing worker nodes\nPerform these steps for each worker node in Kubernetes cluster:\n\n#### 1. Perform this step to ensure iSCSI connectivity, when using RHEL OS.\nIf using RHCOS or if the packages are already installed, continue to the next step.\n\nRHEL 7.x:\n```bash\nyum -y install iscsi-initiator-utils   # Only if iSCSI connectivity is required\nyum -y install xfsprogs                # Only if XFS file system is required\n```\n\n#### 2. Configure Linux multipath devices on the host, using one of the following procedures.\n\n##### 2.1 Configuring for OpenShift Container Platform users (RHEL and RHCOS)\n\nThe following yaml file example is for both Fibre Channel and iSCSI configurations. To support iSCSI, uncomment the last two lines in the file:\n\n\n**Important:** The  `99-ibm-attach.yaml` configuration file overrides any files that already exist on your system. Only use this file if the files mentioned in the yaml below are not already created. If one or more have been created, edit this yaml file, as necessary.\n\nSave the `99-ibm-attach.yaml` file.\n\n```bash\napiVersion: machineconfiguration.openshift.io/v1\nkind: MachineConfig\nmetadata:\nlabels:\nmachineconfiguration.openshift.io/role: worker\nname: 99-ibm-attach\nspec:\nconfig:\nignition:\nversion: 2.2.0\nstorage:\nfiles:\n- path: /etc/multipath.conf\nmode: 384\nfilesystem: root\ncontents:\nsource: data:,defaults%20%7B%0A%20%20%20%20path_checker%20tur%0A%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20rr_weight%20uniform%0A%20%20%20%20prio%20const%0A\n%20%20%20%20rr_min_io_rq%201%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20polling_interval\n%2030%0A%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20find_multipaths%20yes%0A\n%20%20%20%20no_path_retry%20fail%0A%20%20%20%20user_friendly_names%20yes%0A%20%20%20%20failback\n%20immediate%0A%20%20%20%20checker_timeout%2010%0A%20%20%20%20fast_io_fail_tmo%20off%0A%7D%0A%0Adevices\n%20%7B%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%0A%20%20%20%20%20%20%20%20rr_min_io_rq\n%204%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20path_grouping_policy\n%20multibus%0A%20%20%20%20%20%20%20%20path_selector%20%22round-robin%200%22%0A\n%20%20%20%20%20%20%20%20no_path_retry%20fail%0A%20%20%20%20%20%20%20%20failback%20immediate%0A\n%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A%20%20%20%20%20%20%20%20path_checker%20tur%0A\n%20%20%20%20%20%20%20%20product%20%22FlashSystem-9840%22%0A%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A\n%20%20%20%20%20%20%20%20fast_io_fail_tmo%20off%0A%20%20%20%20%20%20%20%20rr_weight%20uniform%0A\n%20%20%20%20%20%20%20%20rr_min_io_rq%201000%20%20%20%20%20%20%20%20%20%20%20%20%0A\n%20%20%20%20%20%20%20%20path_grouping_policy%20multibus%0A%20%20%20%20%20%20%20%20path_selector\n%20%22round-robin%200%22%0A%20%20%20%20%20%20%20%20no_path_retry%20fail%0A\n%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%20%7D%0A%20%20%20%20device%20%7B%0A\n%20%20%20%20%20%20%20%20vendor%20%22IBM%22%0A%20%20%20%20%20%20%20%20product%20%222145%22%0A\n%20%20%20%20%20%20%20%20path_checker%20tur%0A%20%20%20%20%20%20%20%20features%20%221%20queue_if_no_path\n%22%0A%20%20%20%20%20%20%20%20path_grouping_policy%20group_by_prio%0A\n%20%20%20%20%20%20%20%20path_selector%20%22service-time%200%22%20%23%20Used%20by%20Red%20Hat%207.x%0A\n%20%20%20%20%20%20%20%20prio%20alua%0A%20%20%20%20%20%20%20%20rr_min_io_rq%201%0A\n%20%20%20%20%20%20%20%20rr_weight%20uniform%20%0A%20%20%20%20%20%20%20%20no_path_retry%20%225%22%0A\n%20%20%20%20%20%20%20%20dev_loss_tmo%20120%0A%20%20%20%20%20%20%20%20failback%20immediate%0A%20%20%20%7D\n%0A%7D%0A\nverification: {}\n- path: /etc/udev/rules.d/99-ibm-2145.rules\nmode: 420\nfilesystem: root\ncontents:\nsource: data:,%23%20Set%20SCSI%20command%20timeout%20to%20120s%20%28default%20%3D%3D\n%2030%20or%2060%29%20for%20IBM%202145%20devices%0ASUBSYSTEM%3D%3D%22block%22%2C%20ACTION%3D%3D%22add\n%22%2C%20ENV%7BID_VENDOR%7D%3D%3D%22IBM%22%2CENV%7BID_MODEL%7D%3D%3D%222145%22%2C%20RUN%2B%3D%22/bin/sh\n%20-c%20%27echo%20120%20%3E/sys/block/%25k/device/timeout%27%22%0A\nverification: {}\nsystemd:\nunits:\n- name: multipathd.service\nenabled: true\n# Uncomment the following lines if this MachineConfig will be used with iSCSI connectivity\n#- name: iscsid.service\n#    enabled: true\n```\n\nApply the yaml file.\n```bash\noc apply -f 99-ibm-attach.yaml\n```\n\nRHEL users should verify that the `systemctl status multipathd` output indicates that the multipath status is active and error-free.\n\n```bash\nyum install device-mapper-multipath\nmodprobe dm-multipath\nsystemctl enable multipathd\nsystemctl start multipathd\nsystemctl status multipathd\nmultipath -ll\n```\n\n##### 2.2 Configuring for Kubernetes users (RHEL)\nCreate and set the relevant storage system parameters in the `/etc/multipath.conf` file. You can also use the default `multipath.conf` file, located in the `/usr/share/doc/device-mapper-multipath-*` directory.\n\nVerify that the `systemctl status multipathd` output indicates that the multipath status is active and error-free.\n\n```bash\nyum install device-mapper-multipath\nmodprobe dm-multipath\nsystemctl enable multipathd\nsystemctl start multipathd\nsystemctl status multipathd\nmultipath -ll\n```\n\n#### 3. Configure storage system connectivity\n3.1. Define the hostname of each Kubernetes node on the relevant storage systems with the valid WWPN(for Fibre Channel) or IQN(for iSCSI) of the node.\n\n3.2. For Fibre Channel, configure the relevant zoning from the storage to the host.\n\n\n## Installation\n\n### Install the operator\n\n\n#### 1. Download the manifest from GitHub.\n\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/installer/generated/ibm-block-csi-operator.yaml > ibm-block-csi-operator.yaml\n```\n\n#### 2. (Optional): If required, update the image fields in the ibm-block-csi-operator.yaml.\n\n\n#### 3. Create a namespace.\n\n```bash\n$ kubectl create ns <namespace>\n```\n\n#### 4. Install the operator, while using a user-defined namespace.\n\n```bash\n$ kubectl -n <namespace> apply -f ibm-block-csi-operator.yaml\n```\n\n### Verify the operator is running:\n\n```bash\n$ kubectl get pod -l app.kubernetes.io/name=ibm-block-csi-operator -n <namespace>\nNAME                                    READY   STATUS    RESTARTS   AGE\nibm-block-csi-operator-5bb7996b86-xntss 1/1     Running   0          10m\n```\n\n### Create an IBMBlockCSI custom resource\n\n\n#### 1. Download the manifest from GitHub.\n```bash\ncurl https://raw.githubusercontent.com/IBM/ibm-block-csi-operator/master/deploy/crds/csi.ibm.com_v1_ibmblockcsi_cr.yaml > csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n\n#### 2. (Optional): If required, update the image fields in the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n\n#### 3. Install the csi.ibm.com_v1_ibmblockcsi_cr.yaml.\n\n```bash\n$ kubectl -n <namespace> apply -f csi.ibm.com_v1_ibmblockcsi_cr.yaml\n```\n\n### Verify the driver is running:\n\n```bash\n$ kubectl get all -n <namespace>  -l csi\nNAME                             READY   STATUS    RESTARTS   AGE\npod/ibm-block-csi-controller-0   5/5     Running   0          9m36s\npod/ibm-block-csi-node-jvmvh     3/3     Running   0          9m36s\npod/ibm-block-csi-node-tsppw     3/3     Running   0          9m36s\n\nNAME                                DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE\ndaemonset.apps/ibm-block-csi-node   2         2         2       2            2           <none>          9m36s\n\nNAME                                        READY   AGE\nstatefulset.apps/ibm-block-csi-controller   1/1     9m36s\n```\n\n\n## Configuring k8s secret and storage class\nIn order to use the driver, create the relevant storage classes and secrets, as needed.\n\nThis section describes how to:\n 1. Create a storage system secret - to define the storage system credentials (user and password) and its address.\n 2. Configure the storage class - to define the storage system pool name, secret reference, `SpaceEfficiency`, and `fstype`.\n\n#### 1. Create an array secret\nCreate a secret file as follows `array-secret.yaml` and update the relevant credentials:\n\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: <NAME>\n  namespace: <NAMESPACE>\ntype: Opaque\nstringData:\n  management_address: <ADDRESS-1, ADDRESS-2> # Array management addresses\n  username: <USERNAME>                   # Array username\ndata:\n  password: <PASSWORD base64>            # Array password\n```\n\nApply the secret:\n\n```\n$ kubectl apply -f array-secret.yaml\n```\n\nTo create the secret using a command line terminal, use the following command:\n```bash\nkubectl create secret generic <NAME> --from-literal=username=<USER> --fromliteral=password=<PASSWORD> --from-literal=management_address=<ARRAY_MGMT> -n <namespace>\n```\n\n#### 2. Create storage classes\n\nCreate a storage class `demo-storageclass-gold-pvc.yaml` file as follows, with the relevant capabilities, pool and, array secret.\n\nUse the `SpaceEfficiency` parameters for each storage system. These values are not case sensitive:\n* IBM FlashSystem A9000 and A9000R\n    * Always includes deduplication and compression.\n    No need to specify during configuration.\n* IBM Spectrum Virtualize Family\n    * `thin`\n    * `compressed`\n    * `deduplicated`\n* IBM DS8000 Family\n    * `standard` (default value, if not specified)\n    * `thin`\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: gold\nprovisioner: block.csi.ibm.com\nparameters:\n  SpaceEfficiency: <VALUE>          # Optional: Values applicable for Spectrum Virtualize Family are: thin, compressed, or deduplicated\n  pool: <POOL_NAME>\t                # DS8000 Family paramater is pool ID\n\n  csi.storage.k8s.io/provisioner-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/provisioner-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n  csi.storage.k8s.io/controller-publish-secret-name: <ARRAY_SECRET>\n  csi.storage.k8s.io/controller-publish-secret-namespace: <ARRAY_SECRET_NAMESPACE>\n\n  csi.storage.k8s.io/fstype: xfs    # Optional: Values ext4/xfs. The default is ext4.\n  volume_name_prefix: <prefix_name> # Optional: DS8000 Family maximum prefix length is 5 characters. Maximum prefix length for other systems is 20 characters.\n```\n\n#### 3. Apply the storage class:\n\n```bash\n$ kubectl apply -f demo-storageclass-gold-pvc.yaml\nstorageclass.storage.k8s.io/gold created\n```\n",
      "csv_display_name": "Operator for IBM block storage CSI driver",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:27:23.668000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "name": "ibm-block-csi-operator-427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc-annotation"
        },
        {
          "digest": "sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:427c6fcc36ba960887e4f15bda4870c287f1573dcbc844706d5f02987fc0d0dc",
          "name": "ibm-block-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "5f8f29d33b6621a763342f7c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator-bundle@sha256:70f310cb36f6f58221377ac77bfacce3ea80d11811b407131d9723507eaada42",
      "bundle_path_digest": "sha256:70f310cb36f6f58221377ac77bfacce3ea80d11811b407131d9723507eaada42",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-20T18:17:55.675000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "ibm-spectrum-scale-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:55:55.753000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-spectrum-scale-csi",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "CSIScaleOperator",
          "plural": "csiscaleoperators",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "5f8f29d75428f9169bc6aa38",
      "alm_examples": [
        {
          "api_version": "insightedge.gigaspaces.com/v1alpha1",
          "kind": "Insightedge",
          "metadata": {
            "name": "example-insightedge"
          },
          "spec": {
            "manager": {
              "antiAffinity": {
                "enabled": false
              },
              "ha": false,
              "hs": {
                "lus": 4174,
                "zkClient": 2181,
                "zkLeaderElection": 3888,
                "zkServer": 2888
              },
              "java": {
                "heap": "limit-150Mi",
                "options": "-Duser.home=/opt/gigaspaces"
              },
              "nameOverride": "insightedge-manager",
              "resources": {
                "limits": {
                  "memory": "300Mi"
                }
              },
              "service": {
                "api": {
                  "enabled": true,
                  "port": 8090
                },
                "lrmi": {
                  "enabled": false,
                  "port": 8200
                },
                "lus": {
                  "enabled": true,
                  "port": 4174
                },
                "type": "LoadBalancer"
              },
              "terminationGracePeriodSeconds": 30
            },
            "pu": {
              "antiAffinity": {
                "enabled": false
              },
              "java": {
                "heap": "limit-150Mi",
                "options": "-Duser.home=/opt/gigaspaces"
              },
              "license": "tryme",
              "livenessProbe": {
                "enabled": false,
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 5
              },
              "manager": {
                "discoveryTimeoutSeconds": 60,
                "ports": {
                  "api": 8090
                }
              },
              "memoryXtendVolume": {
                "enabled": false,
                "volumeClaimTemplate": {
                  "accessModes": "ReadWriteOnce",
                  "persistentVolumeReclaimPolicy": "Delete"
                },
                "volumeMount": {
                  "mountPath": "/opt/gigaspaces/work/memoryxtend",
                  "name": "mx-volume"
                }
              },
              "nameOverride": "insightedge-pu",
              "readinessProbe": {
                "enabled": false,
                "failureThreshold": 3,
                "initialDelaySeconds": 30,
                "periodSeconds": 5
              },
              "resources": {
                "limits": {
                  "memory": "400Mi"
                }
              },
              "service": {
                "lrmi": {
                  "enabled": false,
                  "port": 8200
                },
                "type": "LoadBalancer"
              },
              "terminationGracePeriodSeconds": 30
            },
            "zeppelin": {
              "nameOverride": "insightedge-zeppelin",
              "service": {
                "api": {
                  "port": 9090
                },
                "type": "LoadBalancer"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gigaspaces/insightedge-operator-bundle@sha256:f4cd0ec77bc5f19409242c4e5990447281b6bd60b8d0eff848744a431c73cd22",
      "bundle_path_digest": "sha256:f4cd0ec77bc5f19409242c4e5990447281b6bd60b8d0eff848744a431c73cd22",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-20T18:17:59.467000+00:00",
      "csv_description": "InsightEdge is an in-memory real-time analytics platform for instant insights to action. It's an always-on platform for mission-critical applications across cloud, on-premise or hybrid. InsightEdge operationalizes machine learning and transactional processing, at scale; analyzing data as it's born, enriching it with historical context, for instant insights.\n",
      "csv_display_name": "Insightedge Enterprise Operator",
      "csv_metadata_description": "InsightEdge is an in-memory real-time analytics platform for instant insights to action. It's an always-on platform for mission-critical applications across cloud, on-premise or hybrid. InsightEdge operationalizes machine learning and transactional processing, at scale; analyzing data as it's born, enriching it with historical context, for instant insights.\n",
      "csv_name": "insightedge-enterprise-operator.v15.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T05:02:04.831000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "insightedge-enterprise-operator2",
      "provided_apis": [
        {
          "group": "insightedge.gigaspaces.com",
          "kind": "Insightedge",
          "plural": "insightedges",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d",
          "image": "registry.connect.redhat.com/gigaspaces/insightedge-operator@sha256:d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d",
          "name": "insightedge-operator-d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d-annotation"
        },
        {
          "digest": "sha256:d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d",
          "image": "registry.connect.redhat.com/gigaspaces/insightedge-operator@sha256:d7d9b079a93b715d7ca94d64b08e73798f1b036c118c742b2bd031030bd1d17d",
          "name": "insightedge-enterprise-operator"
        },
        {
          "digest": "sha256:5cbd8ca9553a7a3e8cd4b99d1231d92201146745c8531e159cccfc4cd3a74ceb",
          "image": "registry.connect.redhat.com/gigaspaces/insightedge@sha256:5cbd8ca9553a7a3e8cd4b99d1231d92201146745c8531e159cccfc4cd3a74ceb",
          "name": "insightedge"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "15.0.1",
      "version_original": "15.0.1"
    },
    {
      "_id": "5f8f29d85428f9169bc6aa39",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:89cc136ad0345205fdb4fd32a6d6c73a02068f6a5a9e0669a57c4da5d9624285",
      "bundle_path_digest": "sha256:89cc136ad0345205fdb4fd32a6d6c73a02068f6a5a9e0669a57c4da5d9624285",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-20T18:18:00.608000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.8",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:22:38.011000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.3.8",
      "version_original": "0.3.8"
    },
    {
      "_id": "5f8f29d93b6621a763342f7d",
      "alm_examples": [
        {
          "api_version": "ivoryserver.gtsoftware.com/v1alpha1",
          "kind": "IvoryServer",
          "metadata": {
            "name": "ivory-server"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gtsoftware/ivory-service-architect-operator-bundle@sha256:0587893f027c7b58ea169f9f2587a561ac778db502b0e26a7bf3377fda83b85e",
      "bundle_path_digest": "sha256:0587893f027c7b58ea169f9f2587a561ac778db502b0e26a7bf3377fda83b85e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-20T18:18:01.833000+00:00",
      "csv_description": "The Ivory Service Architect Operator deploys the Ivory Server Operator Component in a Kubernetes environment.",
      "csv_display_name": "Ivory Service Architect Operator",
      "csv_metadata_description": "An operator to deploy the Ivory Server Component of the Ivory Service Architect Suite.",
      "csv_name": "ivory-server-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:34:52.981000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ivory-server-app",
      "provided_apis": [
        {
          "group": "ivoryserver.gtsoftware.com",
          "kind": "IvoryServer",
          "plural": "ivoryservers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:38e94616ef7f3237ea297d42b241a5da43ca2ac8a37073c5a529f76fffc7eced",
          "image": "registry.connect.redhat.com/gtsoftware/ivory-service-architect-operator@sha256:38e94616ef7f3237ea297d42b241a5da43ca2ac8a37073c5a529f76fffc7eced",
          "name": "ivory-service-architect-operator-38e94616ef7f3237ea297d42b241a5da43ca2ac8a37073c5a529f76fffc7eced-annotation"
        },
        {
          "digest": "sha256:38e94616ef7f3237ea297d42b241a5da43ca2ac8a37073c5a529f76fffc7eced",
          "image": "registry.connect.redhat.com/gtsoftware/ivory-service-architect-operator@sha256:38e94616ef7f3237ea297d42b241a5da43ca2ac8a37073c5a529f76fffc7eced",
          "name": "ansible"
        },
        {
          "digest": "sha256:38e94616ef7f3237ea297d42b241a5da43ca2ac8a37073c5a529f76fffc7eced",
          "image": "registry.connect.redhat.com/gtsoftware/ivory-service-architect-operator@sha256:38e94616ef7f3237ea297d42b241a5da43ca2ac8a37073c5a529f76fffc7eced",
          "name": "operator"
        },
        {
          "digest": "sha256:66f59eb9f3d3050ce0d2cba266a40c7f19114960fe0a98dd0a780552b8847bb6",
          "image": "registry.connect.redhat.com/gtsoftware/ivory-server@sha256:66f59eb9f3d3050ce0d2cba266a40c7f19114960fe0a98dd0a780552b8847bb6",
          "name": "db"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5f8f29dc5428f9169bc6aa3a",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "Joget",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-v6-operator-bundle@sha256:3a06e6251177f3585d43420ad647cd1e6731c959cf37b9294206b2b7ccbb67b6",
      "bundle_path_digest": "sha256:3a06e6251177f3585d43420ad647cd1e6731c959cf37b9294206b2b7ccbb67b6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-20T18:18:04.525000+00:00",
      "csv_description": "Joget is an open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/KBv6/Setting+Up+Database)\n\n### More Information\nMore information about Joget on JBoss EAP 7 is available on the [OpenShift Blog](https://blog.openshift.com/how-to-automatically-scale-low-code-apps-with-joget-and-jboss-eap-on-openshift/)\n",
      "csv_display_name": "Joget Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-openshift-operator.v0.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:19:11.069000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "joget-openshift-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "Joget",
          "plural": "joget",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:a50e69cc87c175894bcb47a27b1c41c81bd70dc078105176576f28927c68cada",
          "image": "registry.connect.redhat.com/joget/joget-v6-operator@sha256:a50e69cc87c175894bcb47a27b1c41c81bd70dc078105176576f28927c68cada",
          "name": "joget-v6-operator-a50e69cc87c175894bcb47a27b1c41c81bd70dc078105176576f28927c68cada-annotation"
        },
        {
          "digest": "sha256:a50e69cc87c175894bcb47a27b1c41c81bd70dc078105176576f28927c68cada",
          "image": "registry.connect.redhat.com/joget/joget-v6-operator@sha256:a50e69cc87c175894bcb47a27b1c41c81bd70dc078105176576f28927c68cada",
          "name": "ansible"
        },
        {
          "digest": "sha256:a50e69cc87c175894bcb47a27b1c41c81bd70dc078105176576f28927c68cada",
          "image": "registry.connect.redhat.com/joget/joget-v6-operator@sha256:a50e69cc87c175894bcb47a27b1c41c81bd70dc078105176576f28927c68cada",
          "name": "operator"
        },
        {
          "digest": "sha256:bc93ae4f1795470220743b5a769f2d3e3338165094b8219b0fd44fbb86ddb005",
          "image": "registry.connect.redhat.com/joget/joget-v6-eap71@sha256:bc93ae4f1795470220743b5a769f2d3e3338165094b8219b0fd44fbb86ddb005",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.4",
      "version_original": "0.0.4"
    },
    {
      "_id": "5f8f29e2316c15a2726ac8b1",
      "alm_examples": [
        {
          "api_version": "database.arangodb.com/v1",
          "kind": "ArangoDeployment",
          "metadata": {
            "name": "arangodb"
          },
          "spec": {
            "image": "registry.connect.redhat.com/arangodb/enterprise@sha256:b3ffec387cbea8fcda30382960a308df090c3b5ea5c067f5797f40755160cfb0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/arangodb/kube-arangodb-bundle@sha256:f7cd48b52e0913ca13968d396ba7158cb94344ad762838574724ef5015153945",
      "bundle_path_digest": "sha256:f7cd48b52e0913ca13968d396ba7158cb94344ad762838574724ef5015153945",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-20T18:18:10.918000+00:00",
      "csv_description": "**ArangoDB**\n\nThree major data models along with a full-text search and ranking engine in one open-source core.\n\n**One engine. One query language. Multiple models.**\n\nWhen you\u2019re building your application, ultimately what matters most is having the right data model available for the task at hand.\n\nBy uniting graph, document, and key/value in a single core with the same query language, along with a full-text search and ranking engine, ArangoDB provides the flexibility to easily apply the data models you need.\n\n**A query language that feels like coding**\n\nAs a declarative query language, those coming from SQL will feel right at home with AQL.\n\nWith AQL, you can use JOINs, traversals, filters, geo-spatial operations, and aggregations & combine them in a single query.\n\n\n\n",
      "csv_display_name": "ArangoDB",
      "csv_metadata_description": "ArangoDB Kubernetes Operator",
      "csv_name": "kube-arangodb.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:47:43.938000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kube-arangodb",
      "provided_apis": [
        {
          "group": "backup.arangodb.com",
          "kind": "ArangoBackup",
          "plural": "arangobackups",
          "version": "v1alpha"
        },
        {
          "group": "replication.database.arangodb.com",
          "kind": "ArangoDeploymentReplication",
          "plural": "arangodeploymentreplications",
          "version": "v1"
        },
        {
          "group": "replication.database.arangodb.com",
          "kind": "ArangoDeploymentReplication",
          "plural": "arangodeploymentreplications",
          "version": "v1alpha"
        },
        {
          "group": "database.arangodb.com",
          "kind": "ArangoDeployment",
          "plural": "arangodeployments",
          "version": "v1"
        },
        {
          "group": "database.arangodb.com",
          "kind": "ArangoDeployment",
          "plural": "arangodeployments",
          "version": "v1alpha"
        },
        {
          "group": "backup.arangodb.com",
          "kind": "ArangoBackupPolicy",
          "plural": "arangobackuppolicies",
          "version": "v1"
        },
        {
          "group": "backup.arangodb.com",
          "kind": "ArangoBackupPolicy",
          "plural": "arangobackuppolicies",
          "version": "v1alpha"
        },
        {
          "group": "backup.arangodb.com",
          "kind": "ArangoBackup",
          "plural": "arangobackups",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3965e84feb669011ae732abe034991f33c1ada6e72754fa9e986099d51ca6402",
          "image": "registry.connect.redhat.com/arangodb/kube-arangodb@sha256:3965e84feb669011ae732abe034991f33c1ada6e72754fa9e986099d51ca6402",
          "name": "kube-arangodb-3965e84feb669011ae732abe034991f33c1ada6e72754fa9e986099d51ca6402-annotation"
        },
        {
          "digest": "sha256:3965e84feb669011ae732abe034991f33c1ada6e72754fa9e986099d51ca6402",
          "image": "registry.connect.redhat.com/arangodb/kube-arangodb@sha256:3965e84feb669011ae732abe034991f33c1ada6e72754fa9e986099d51ca6402",
          "name": "operator"
        },
        {
          "digest": "sha256:c505667389712dc337986e29ffcb65116879ef27629dc3ce6e1b17727c06e78f",
          "image": "registry.access.redhat.com/ubi8/ubi-minimal@sha256:c505667389712dc337986e29ffcb65116879ef27629dc3ce6e1b17727c06e78f",
          "name": "ubi"
        },
        {
          "digest": "sha256:b3ffec387cbea8fcda30382960a308df090c3b5ea5c067f5797f40755160cfb0",
          "image": "registry.connect.redhat.com/arangodb/enterprise@sha256:b3ffec387cbea8fcda30382960a308df090c3b5ea5c067f5797f40755160cfb0",
          "name": "database"
        },
        {
          "digest": "sha256:b3ffec387cbea8fcda30382960a308df090c3b5ea5c067f5797f40755160cfb0",
          "image": "registry.connect.redhat.com/arangodb/enterprise@sha256:b3ffec387cbea8fcda30382960a308df090c3b5ea5c067f5797f40755160cfb0",
          "name": "enterprise-b3ffec387cbea8fcda30382960a308df090c3b5ea5c067f5797f40755160cfb0-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "5f8f29e73a93dc782c77a0e1",
      "alm_examples": [
        {
          "api_version": "memsql.com/v1alpha1",
          "kind": "MemsqlCluster",
          "metadata": {
            "name": "memsql-cluster"
          },
          "spec": {
            "adminHashedPassword": "*FABE5482D5AADF36D028AC443D117BE1180B9725",
            "aggregatorSpec": {
              "count": 3,
              "height": 0.5,
              "storageClass": "standard",
              "storageGB": 256
            },
            "leafSpec": {
              "count": 1,
              "height": 1,
              "storageClass": "standard",
              "storageGB": 1024
            },
            "license": "BDVhNDg5OWFjNTc3OTQxODRhOTVlMWVlZWY1YTFlNTlkAAAAAAAAAAAEAAAAAAAAAAwwNgIZAPXaOk16AZMCIzdmkvvO0VH57SIhkshiMAIZAJYHyL5vkNE4Sohz8BDqMuikVj9lNLvy4w==",
            "redundancyLevel": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:56849484480e43b9a599650ec9c6fba1459e701a3fac5c457ff9b3d2750838d9",
      "bundle_path_digest": "sha256:56849484480e43b9a599650ec9c6fba1459e701a3fac5c457ff9b3d2750838d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-20T18:18:15.586000+00:00",
      "csv_description": "This package contains everything you need to run the MemSQL Kubernetes Operator\nin your own Kubernetes cluster.\n\n# Getting Started\n\n* Install RBAC resources\n    ```bash\n    kubectl create -f rbac.yaml\n    ```\n* Install the MemSQL Cluster CRD\n    ```bash\n    kubectl create -f memsql-cluster-crd.yaml\n    ```\n* Deploy the Operator\n    ```bash\n    kubectl create -f deployment.yaml\n    kubectl get deployments\n    kubectl get pods\n    ```\n\n# Creating a cluster\n\n* Edit the deployment.yaml file\n    * `RELATED_IMAGE_NODE` -> use the latest version of MemSQL released (\"registry.connect.redhat.com/memsql/node:redhat-7.1.7-27ea2acf75\" for MemSQL v7.1.4)\n\n* Edit the memsql-cluster.yaml file for your MemSQL cluster\n    * name -> cluster name of your choice\n    * license -> license key from portal.memsql.com\n    * adminHashedPassword -> `HASHED_PASSWORD`\n        * see below Python script to convert your password, include the leading `*`\n\n    * Python function to hash your password:\n        ```python\n        from hashlib import sha1\n        print(\"*\" + sha1(sha1('mypassword').digest()).hexdigest().upper())\n        ```\n\n    * redundancyLevel -> 1 or 2\n    * units -> number of nodes. Leaf nodes will automatically be doubled if redundancyLevel=2\n    * height -> height=1 corresponds to one MemSQL License Unit (8vCPU/32GB RAM)\n    * storageGB -> size of the persistent volume claim in GB\n    * storageClass -> name of the Kubernetes storage class for the\n      persistent volume claim\n    * NOTE: the minimum production config should be:\n        * 1 leaf unit @ height 1\n        * 3 aggregator units @ height 0.5\n        * redundancyLevel = 2\n\n* Create the cluster.\n    ```bash\n    kubectl create -f memsql-cluster.yaml\n    ```\n\n* To get logs for operator (or any MemSQL node), run the following after looking\n  up the PODNAME using `kubectl get pods`:\n    ```bash\n    kubectl logs PODNAME\n    ```\n\n* To get info about all MemSQL clusters running, use these commands. -oyaml will expose the DDL/DML endpoints for MemSQL.\n    ```bash\n    kubectl get memsql\n    kubectl describe memsql\n    ```\n\n* To see all the pods, services, stateful sets, & resources used by the MemSQL cluster, run:\n    ```bash\n    kubectl get all\n    ```\n\n* Connect to the MemSQL cluster.\n  Use the DDL endpoint for creating tables.\n  DML endpoint (load balancer amongst other aggregators) can be used for read/write\n  workload. Use the user called \"admin\" with the password you defined during\n  cluster creation.\n    ```bash\n    mysql -u admin -h <hostname> -P <port> -p<password>\n    ```\n\n* Notes on editing a MemSQL cluster:\n    * The MemSQL operator supports scaling and changing certain parts of the spec. Currently you can change:\n        * units\n        * height\n        * releaseID\n        * adminHashedPassword\n        * license\n        * redundancyLevel\n\n* To delete the MemSQL cluster:\n    ```bash\n    kubectl delete -f memsql-cluster.yaml\n    ```\n",
      "csv_display_name": "MemSQL",
      "csv_metadata_description": "Install a MemSQL Cluster",
      "csv_name": "memsql-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T05:02:52.141000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f3be99a4fabf61cd29165c0bdaaa2f433157163a579c3444e5184179d3d4e0c8",
          "image": "registry.connect.redhat.com/memsql/operator@sha256:f3be99a4fabf61cd29165c0bdaaa2f433157163a579c3444e5184179d3d4e0c8",
          "name": "operator-f3be99a4fabf61cd29165c0bdaaa2f433157163a579c3444e5184179d3d4e0c8-annotation"
        },
        {
          "digest": "sha256:f3be99a4fabf61cd29165c0bdaaa2f433157163a579c3444e5184179d3d4e0c8",
          "image": "registry.connect.redhat.com/memsql/operator@sha256:f3be99a4fabf61cd29165c0bdaaa2f433157163a579c3444e5184179d3d4e0c8",
          "name": "memsql-operator"
        },
        {
          "digest": "sha256:c2d6e3a3941575462aa034e5ab97140077d2ad3ee4fe745439ce8aa8b7279ca1",
          "image": "registry.connect.redhat.com/memsql/node@sha256:c2d6e3a3941575462aa034e5ab97140077d2ad3ee4fe745439ce8aa8b7279ca1",
          "name": "node"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "5f8f29ea3a93dc782c77a0e2",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2c354e02f3ddfd9ef6ccac776b77603e60f907b10bac730e133845292500dd40",
      "bundle_path_digest": "sha256:2c354e02f3ddfd9ef6ccac776b77603e60f907b10bac730e133845292500dd40",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-20T18:18:18.167000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:44:02.515000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "5f8f29ed796c8e8debd8ee21",
      "alm_examples": [
        {
          "api_version": "operator.nsx.vmware.com/v1",
          "kind": "NcpInstall",
          "metadata": {
            "name": "ncp-install"
          },
          "spec": {
            "ncpReplicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/nsx-ncp-operator-bundle@sha256:9c4d4a422db64d7248dc1a9823e19de2372d06670cddd6d10cefde966cf975f1",
      "bundle_path_digest": "sha256:9c4d4a422db64d7248dc1a9823e19de2372d06670cddd6d10cefde966cf975f1",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-20T18:18:21.160000+00:00",
      "csv_description": "An operator which provides NSX as default network for an Openshit cluster. Simplifies the process of installing and upgrading the NSX Container plugin (NCP) components running in the Openshift cluster. The operator also allows for detailed monitoring of NCP components and reacts to configuration changes.",
      "csv_display_name": "NSX Container Plugin Operator",
      "csv_metadata_description": "An operator which provides NSX as default network for an Openshift cluster. Simplifies the process of installing and upgrading the NSX Container plugin (NCP) components running in an Openshift cluster. The operator also allows for detailed monitoring of NCP components and reacts to configuration changes. This is a cluster operator and must be installed upon cluster creation; for more information please refer to install-time instructions.",
      "csv_name": "nsx-container-plugin-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T05:01:46.404000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nsx-container-plugin-operator",
      "provided_apis": [
        {
          "group": "operator.nsx.vmware.com",
          "kind": "NcpInstall",
          "plural": "ncpinstalls",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37",
          "image": "vmware/nsx-container-plugin-operator@sha256:3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37",
          "name": "nsx-container-plugin-operator-3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37-annotation"
        },
        {
          "digest": "sha256:3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37",
          "image": "vmware/nsx-container-plugin-operator@sha256:3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37",
          "name": "nsx-ncp-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5f8f29f1096bd793ea020741",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:8c4b0a6f8e465f5b969ea88d78cb3883a308b1c8c19f68e3c9cef2f6a0b40584",
      "bundle_path_digest": "sha256:8c4b0a6f8e465f5b969ea88d78cb3883a308b1c8c19f68e3c9cef2f6a0b40584",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-20T18:18:25.192000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.9.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:19:36.577000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "5f8f29f2096bd793ea020742",
      "alm_examples": [
        {
          "api_version": "openliberty.io/v1beta1",
          "kind": "OpenLibertyApplication",
          "metadata": {
            "name": "demo-app"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1
          }
        },
        {
          "api_version": "openliberty.io/v1beta1",
          "kind": "OpenLibertyDump",
          "metadata": {
            "name": "example-dump"
          },
          "spec": {
            "include": [
              "heap",
              "thread"
            ],
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "api_version": "openliberty.io/v1beta1",
          "kind": "OpenLibertyTrace",
          "metadata": {
            "name": "example-trace"
          },
          "spec": {
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/open-liberty-operator-bundle@sha256:66987dd9d568c2b004a358c9fbbb5c89a74a7512bd43599b2463b08cf44724a4",
      "bundle_path_digest": "sha256:66987dd9d568c2b004a358c9fbbb5c89a74a7512bd43599b2463b08cf44724a4",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-20T18:18:26.505000+00:00",
      "csv_description": "This advanced Operator can be used to deploy and manage Open Liberty applications with consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily configuring and managing the single sign-on information for your Open Liberty applications.\nOpen Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n#### Application Lifecyle\nYou can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configured a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\nYou can also easily configure and use a single storage for serviceability related Day-2 operations, such as gatherig server traces and dumps.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Single Sign-On (SSO)\nOpen Liberty provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients.\nOpen Liberty Operator allows to easily configure and manage the single sign-on information for your applications.\n#### Exposing metrics to Prometheus\nThe Open Liberty Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication's `spec.monitoring` key controlling things like the poll internal and security credentials.\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift's Certificate Manager\nThe Open Liberty Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to automatically provision TLS certificates for pods as well as routes.\nWhen creating certificates via the OpenLibertyApplication CR the user can specify a particular issuer name and toggle the scopes between ClusterIssuer (cluster scoped) and Issuer (namespace scoped). If not specified, these values are retrieved from a ConfigMap, with a default value of `self-signed` and `ClusterIssuer`.\nThe certificate is mounted into the container via a Secret so that it is automatically refreshed once the certificate is updated.\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with Kubernetes Application Navigator (kAppNav) and OpenShift's Topology UI\nAutomatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/), allowing your runtime component to compose an umbrella [Application](https://github.com/kubernetes-sigs/application).  This integration allows users to monitor all constituents resources of the application and receive alerts when the health status of a component changes.  From an integrated panel users can also launch day-2-operations, such as viewing the Kibana / Grafana dashboards, and enabling trace for a component.\nDuring this integration we also set the corresponding labels to support OpenShift's Developer Topology UI,which allows you to visualize your entire set of deployments and how they are connected.\nSee our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/master/doc/) for more information.",
      "csv_display_name": "Open Liberty Operator",
      "csv_metadata_description": "Deploy and manage applications running on Open Liberty",
      "csv_name": "open-liberty-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:14:12.217000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "open-liberty-certified",
      "provided_apis": [
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyApplication",
          "plural": "openlibertyapplications",
          "version": "v1beta1"
        },
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyDump",
          "plural": "openlibertydumps",
          "version": "v1beta1"
        },
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyTrace",
          "plural": "openlibertytraces",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator@sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "name": "open-liberty-operator-7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38-annotation"
        },
        {
          "digest": "sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator@sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "name": "open-liberty-operator"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "5f9038b43a93dc782c77a0e4",
      "alm_examples": [
        {
          "api_version": "openunison.tremolo.io/v1",
          "kind": "OpenUnison",
          "metadata": {
            "name": "test-openunison"
          },
          "spec": {
            "dest_secret": "openunison",
            "enable_activemq": false,
            "hosts": [
              {
                "ingress_name": "openunison",
                "names": [
                  {
                    "env_var": "OU_HOST",
                    "name": "test.apps.mydomain.com"
                  }
                ]
              }
            ],
            "key_store": {
              "key_pairs": {
                "create_keypair_template": [
                  {
                    "name": "ou",
                    "value": "k8s"
                  },
                  {
                    "name": "o",
                    "value": "Tremolo Security"
                  },
                  {
                    "name": "l",
                    "value": "Alexandria"
                  },
                  {
                    "name": "st",
                    "value": "Virginia"
                  },
                  {
                    "name": "c",
                    "value": "US"
                  }
                ],
                "keys": [
                  {
                    "create_data": {
                      "ca_cert": true,
                      "key#": 2048,
                      "server_name": "test-openunison.openunison.svc.cluster.local",
                      "sign_by_k8s_ca": false,
                      "subject_alternative_names": []
                    },
                    "import_into_ks": "keypair",
                    "name": "unison-tls",
                    "tls_secret_name": "unison-tls-secret"
                  }
                ]
              },
              "static_keys": [
                {
                  "name": "session-unison",
                  "version": 1
                }
              ],
              "trusted_certificates": []
            },
            "non_secret_data": [
              {
                "name": "REG_CRED_USER",
                "value": "rh_user"
              },
              {
                "name": "TEST_USER_NAME",
                "value": "testuser"
              },
              {
                "name": "MYVD_CONFIG_PATH",
                "value": "WEB-INF/myvd.conf"
              },
              {
                "name": "unisonKeystorePath",
                "value": "/etc/openunison/unisonKeyStore.p12"
              }
            ],
            "openshift": {
              "builder_image": "registry.connect.redhat.com/tremolosecurity/openunison-s2i-10",
              "git": {
                "branch": "master",
                "dir": "/",
                "repo": "https://github.com/TremoloSecurity/openunison-qs-simple.git"
              }
            },
            "openunison_network_configuration": {
              "activemq_dir": "/tmp/amq",
              "allowed_client_names": [],
              "ciphers": [
                "TLS_RSA_WITH_RC4_128_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA",
                "TLS_RSA_WITH_AES_256_CBC_SHA",
                "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_RSA_WITH_AES_256_CBC_SHA256"
              ],
              "client_auth": "none",
              "force_to_secure": true,
              "open_external_port": 80,
              "open_port": 8080,
              "path_to_deployment": "/usr/local/openunison/work",
              "path_to_env_file": "/etc/openunison/ou.env",
              "quartz_dir": "/tmp/quartz",
              "secure_external_port": 443,
              "secure_key_alias": "unison-tls",
              "secure_port": 8443
            },
            "replicas": 1,
            "secret_data": [
              "unisonKeystorePassword",
              "TEST_USER_PASSWORD",
              "REG_CRED_PASSWORD"
            ],
            "source_secret": "openunison-secrets-source"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tremolosecurity/openunison-operator-bundle@sha256:bf50b128eefd6fb80e48f08aa8f6e6f3f384ca3d76641e7d2f5df73b055f6fbf",
      "bundle_path_digest": "sha256:bf50b128eefd6fb80e48f08aa8f6e6f3f384ca3d76641e7d2f5df73b055f6fbf",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T13:33:40.785000+00:00",
      "csv_description": "The OpenUnison operator automates the deployment of OpenUnison in OpenShift and OKD.  This operator will generate all the objects needed to run OpenUnison and keep them up-to-date.  On OpenShift OpenUnison is built and deployed via a Red Hat certified Source-to-Image (s2i) builder that generates a container based on your configuration.  The default example provided by the operator is a simple login page.  Tremolo Security offers [Orchestra for OpenShift](https://www.tremolosecurity.com/openshift/) to manage authentication, authorization and project onboarding for your OpenShift clusters.  \n\n## Before You Start\n\nBefore deploying, obtain an account for Red Hat Connect to be able to access certified images. Next create a source secret with information that shouldn't be stored in the `OpenUnison` custom resource, referenced by the `source_secret` attribute.  The minimal data in this secret should be at least:\n\n* `unisonKeystorePassword` - The password to use for the generated keystore\n* `REG_CRED_PASSWORD` - Your password for Red Hat Connect\n* `TEST_USER_PASSWORD` - The password for your test user \n\n An example of creating a secret used by the example configuration is:\n  \n```\n$ mkdir secret\n$ cd secret\n$ echo 'my_secret_password'  > unisonKeystorePassword\n$ echo 'my_rh_connect_password'  > REG_CRED_PASSWORD\n$ echo 'my_test_user_password'  > TEST_USER_PASSWORD\n$ oc create secret generic openunison-secrets-source --from-file=.\n```\n  \nYou should edit the `hosts` \\ `names` \\ `name` variable from `test.apps.mydomain.com` to whatever you want the host of your OpenUnison instance to be.  The operator will generate a `Route` based on this hostname with `reencrypt` enabled.  Also, update `key_store` \\ 'key_pairs' \\ `keys` for the `server_name` to reflect the correct `Service` name for your OpenUnison.  For instance if your `OpenUnison` CR has the name `test-openunison` and is being deployed in the `openunison` namespace this value should be `test-openunison.openunison.svc.cluster.local`.\n\n## Testing\n\nOnce deployed, point your browser to the host name you created via TLS (ie https://myapp.apps.domain.com)\n\n## Updating Keys\n\nThe operator builds a keystore for OpenUnison based on secrets referenced in the `OpenUnison` custom resource.  To regenerate self signed certificates (such as the default `unison-tls` certificate), simple delete the secret and update the custom resource.  To use certificates signed by a third party CA, create the secret and reference it in your `OpenUnison` custom resource.\n\n## New Images and Configuration\n\nThe OpenUnison Operator generates an OpenShift `BuildConfig` object and `ImageStream` objects.  The certified s2i builder image is rebuilt auotmaticlly by Red Hat as new packages are made available.  To update your deployment's container, simply tag it to your image stream.  To point to a new git repository for the configuration of OpenUnison, update the CR.",
      "csv_display_name": "OpenUnison",
      "csv_metadata_description": "OpenUnison Operator provides identity management and automation services including Single Sign-On (SSO), workflow based user provisioning, self service access management, auditing and reporting",
      "csv_name": "openunison.1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:48:43.594000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "openunison-ocp-certified",
      "provided_apis": [
        {
          "group": "openunison.tremolo.io",
          "kind": "OpenUnison",
          "plural": "openunisons",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-operator@sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "name": "openunison-operator-1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db-annotation"
        },
        {
          "digest": "sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-operator@sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "name": "openunison-operator"
        },
        {
          "digest": "sha256:185b4e9fae41900ccc07ce90622c9e128c832bcfe180ae1362c7b033747dcebf",
          "image": "registry.connect.redhat.com/tremolosecurity/activemq@sha256:185b4e9fae41900ccc07ce90622c9e128c832bcfe180ae1362c7b033747dcebf",
          "name": "amq"
        },
        {
          "digest": "sha256:5a91e1de68f3ce1d2fb837e09c6090da609882c42840859650e62b218904486c",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-s2i-10@sha256:5a91e1de68f3ce1d2fb837e09c6090da609882c42840859650e62b218904486c",
          "name": "s2i"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5f9038b53a93dc782c77a0e5",
      "alm_examples": [
        {
          "api_version": "tufin.io/v1alpha1",
          "kind": "Orca",
          "metadata": {
            "name": "orca"
          },
          "spec": {
            "components": {
              "conntrack": true,
              "dns": false,
              "istio": false,
              "kube-network-policy": true,
              "pusher": true,
              "syslog": false,
              "watcher": true
            },
            "domain": "generic-bank",
            "endpoints": {
              "guru": "guru.tufin.io:443",
              "orca": "https://securecloud.tufin.io",
              "registry": "registry.tufin.io"
            },
            "ignored_config_maps": [
              "kube-system/ingress-gce-lock",
              "istio-system/istio-ingress-controller-leader-istio"
            ],
            "images": {
              "kite": "registry.connect.redhat.com/tufin/kite",
              "monitor": "registry.connect.redhat.com/tufin/monitor"
            },
            "kube_platform": "Openshift",
            "namespace": "tufin-system",
            "project": "openshift4"
          }
        },
        {
          "api_version": "networking.tufin.io/v1",
          "kind": "Policy",
          "metadata": {
            "name": "orca",
            "namespace": "placeholder"
          },
          "spec": {
            "mode": "learning",
            "networkPolicyAllowAll": true,
            "rules": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tufin/orca-operator-bundle@sha256:3ea67ab24efcb9b693d57ba2624de6c9dd5745c788d669dff0562c4b283d447b",
      "bundle_path_digest": "sha256:3ea67ab24efcb9b693d57ba2624de6c9dd5745c788d669dff0562c4b283d447b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-21T13:33:41.456000+00:00",
      "csv_description": "Tufin SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes clusters, containers and microservices.\nThe SecureCloud Operator installs SecureCloud resources into your cluster. These work with the SecureCloud cloud application to give the following functionality:\n* Monitor the cluster configuration: namespaces, containers, pods, services, network policies etc.\n* Learn and visualize the cluster connectivity\n* Build a connectivity policy (whitelist)\n* Generate audit reports\n* Alert on unauthorized connections\n* Enforce the connectivity policy in the cluster and on enterprise firewalls surrounding the cluster\n* Integrate into the CI/CD pipeline to learn and update the policy continuously\n* Scan images for vulnerabilities\n## Deploying the agent\n* Sign up to SecureCloud [here] (https://www.tufin.com/tufin-orchestration-suite/securecloud)\n* You will be sent an email containing your deployment parameters\n* Complete the deployment following the instructions for generating the agent's secret [here] (https://github.com/Tufin/orca-operator/blob/master/docs/install_securecloud_operator.md)",
      "csv_display_name": "Tufin SecureCloud Operator",
      "csv_metadata_description": "Installs the SecureCloud Agent on the cluster. SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes.",
      "csv_name": "orca-operator.v1.0.197",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:41:13.525000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "orca",
      "provided_apis": [
        {
          "group": "tufin.io",
          "kind": "Orca",
          "plural": "orcas",
          "version": "v1alpha1"
        },
        {
          "group": "networking.tufin.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator-dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f-annotation"
        },
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.197",
      "version_original": "1.0.197"
    },
    {
      "_id": "5f9038b63a93dc782c77a0e6",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator-bundle@sha256:30aed432c70f6bd3da4e6365e32da1877affa4b56458c17549b119de17eaa932",
      "bundle_path_digest": "sha256:30aed432c70f6bd3da4e6365e32da1877affa4b56458c17549b119de17eaa932",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T13:33:42.042000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "perceptilabs-operator.v1.0.20",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:33:39.137000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "perceptilabs-operator-package",
      "provided_apis": [
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1"
        },
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.20",
      "version_original": "1.0.20"
    },
    {
      "_id": "5f9038b9796c8e8debd8ee24",
      "alm_examples": [
        {
          "api_version": "portshift.io/v1",
          "kind": "PortshiftInstaller",
          "metadata": {
            "name": "example-portshiftinstaller"
          },
          "spec": {
            "managementUrl": "console.portshift.io",
            "portshiftClusterId": "CLUSTER_ID"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portshift/operator-bundle@sha256:315706e1ed51c3543b44c0524ee717b36324d128d8dafac2388adf94107c4c48",
      "bundle_path_digest": "sha256:315706e1ed51c3543b44c0524ee717b36324d128d8dafac2388adf94107c4c48",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T13:33:45.342000+00:00",
      "csv_description": "### Contents\n * About\n * Requirements\n * Documentation\n * Issues and feedback\n\n### About\nThe portshift-operator is a controller that runs within a Kubernetes or Openshift cluster that provides a means to deploy and manage Portshift's runtime controller, which is a single pod (agentless admission controller) that provide comperhensive runtime security.\n\n## Use the portshift-operator to:\n\n * Deploy Portshfit controler on Kubernetes or Openshift cluster\n * Automate the registration/authentication process prior to the deployment.\n\n## Deployment Requirements\nThe Operator deploys on Kubernetes and Openshift clusters.\n\n * Kubernetes: 1.15 +\n * Openshift: 4.0 +\n\n## Documentation\nThe following documentation is provided:\n\n * [Installation](http://portshift.readme.io/)\n\n## Issues and feedback\nIf you encounter any problems or would like to give us feedback on deployments, we encourage you to raise issues here on GitHub.\n",
      "csv_display_name": "Portshift Operator",
      "csv_metadata_description": "The operator will deploy portshift agent on the cluster",
      "csv_name": "portshift-operator.v0.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:43:05.644000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "portshift-controller-operator",
      "provided_apis": [
        {
          "group": "portshift.io",
          "kind": "PortshiftInstaller",
          "plural": "portshiftinstallers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "image": "registry.connect.redhat.com/portshift/operator@sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "name": "operator-7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e-annotation"
        },
        {
          "digest": "sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "image": "registry.connect.redhat.com/portshift/operator@sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "name": "portshift-operator"
        },
        {
          "digest": "sha256:f52b3097d049ac86920bd6cdd4dac3def7411dcd1757438b92f0d7d36fa4852e",
          "image": "registry.connect.redhat.com/portshift/portshift-k8s-agent@sha256:f52b3097d049ac86920bd6cdd4dac3def7411dcd1757438b92f0d7d36fa4852e",
          "name": "agent"
        },
        {
          "digest": "sha256:19a49c31102b8f4afa2ad8980d3037c78167da089f4c62023da059bbf2c77c87",
          "image": "registry.connect.redhat.com/portshift/k8s-upgrader@sha256:19a49c31102b8f4afa2ad8980d3037c78167da089f4c62023da059bbf2c77c87",
          "name": "agent_upgrader"
        },
        {
          "digest": "sha256:5569481578b0049f2bdc10158c50e8c76947d0b053ed4ed9add6838c52f5ddb7",
          "image": "registry.connect.redhat.com/portshift/gopassivedns@sha256:5569481578b0049f2bdc10158c50e8c76947d0b053ed4ed9add6838c52f5ddb7",
          "name": "agent_passive_dns_detector"
        },
        {
          "digest": "sha256:3c1567790f045dd646f65cdcd3287d5ed8a01ca3212db8f48bd5586675261e74",
          "image": "registry.connect.redhat.com/portshift/clair@sha256:3c1567790f045dd646f65cdcd3287d5ed8a01ca3212db8f48bd5586675261e74",
          "name": "clair"
        },
        {
          "digest": "sha256:b27d47eb7a66968d34dc8d8e9374b74cec1bcb20345926c3ef56b1c1e46d5f15",
          "image": "registry.connect.redhat.com/portshift/clair-db@sha256:b27d47eb7a66968d34dc8d8e9374b74cec1bcb20345926c3ef56b1c1e46d5f15",
          "name": "clair_db"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.6",
      "version_original": "0.1.6"
    },
    {
      "_id": "5f9038bd79b4f8d046342f6f",
      "alm_examples": [
        {
          "api_version": "api.rapidbiz.com/v1",
          "kind": "Rapidbiz",
          "metadata": {
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "rapidbiz-operator",
              "app.kubernetes.io/managed-by": "ansible",
              "app.kubernetes.io/name": "rapidbiz",
              "name": "rapidbiz-operator"
            },
            "name": "example-rapidbiz"
          },
          "spec": {
            "adminpassword": "adminpwd",
            "adminuser": "admin@unknown.com",
            "company": "",
            "databasehost": "",
            "databasename": "",
            "databasepassword": "",
            "databaseport": "3306",
            "databasetype": "MySQL",
            "databaseuser": "",
            "pullpolicy": "IfNotPresent",
            "pvc": true,
            "replicas": 1,
            "resourcerequirement": {
              "limits": {
                "cpu": "8",
                "memory": "6400Mi"
              },
              "requests": {
                "cpu": "1000m",
                "memory": "1000Mi"
              }
            },
            "scalepodcpu": 75,
            "scalepodmax": 10,
            "scalepodmin": 1,
            "scalestate": false,
            "serverlicense": "",
            "serviceroute": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vacava/rapidbiz-operator-bundle@sha256:57e0e6c51ed2b9ebf5347eee1fdd3ebff795cf8cf51f83e43cad4b02ea3872ad",
      "bundle_path_digest": "sha256:57e0e6c51ed2b9ebf5347eee1fdd3ebff795cf8cf51f83e43cad4b02ea3872ad",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T13:33:49.789000+00:00",
      "csv_description": "RapidBIZ Ansible Operator OLM is designed to work on Open Shift version 4.2 or greater with Kuberutes version 1.14 or greater.\n\nRapidBIZ is a simple to use, integrated cloud development, and delivery environment that enables significant productivity and cost advantages - leveraging Docker Images provides enterprise level deployment management.\n\nRequires a database either external to the cluster or one installed via a database operator or docker image.\n\nSee our website [documention](https://www.vacava.com/rapidbiz/deploy) for more detailed information.",
      "csv_display_name": "RapidBIZ Operator",
      "csv_metadata_description": "RapidBIZ is a simple to use, integrated cloud development and delivery environment that enables significant productivity advantages.",
      "csv_name": "rapidbiz-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:42:44.009000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "rapidbiz-operator-certified",
      "provided_apis": [
        {
          "group": "api.rapidbiz.com",
          "kind": "Rapidbiz",
          "plural": "rapidbizs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "rapidbiz-operator-0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a-annotation"
        },
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "ansible"
        },
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "operator"
        },
        {
          "digest": "sha256:af1fbbb2e68bd736aee9b213ec4cf299dc5fd0ad228d35bee8e97e9926e4e905",
          "image": "registry.connect.redhat.com/vacava/rapidbiz@sha256:af1fbbb2e68bd736aee9b213ec4cf299dc5fd0ad228d35bee8e97e9926e4e905",
          "name": "rapidbiz"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5f9038c0a52503de7b020734",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "5.4.14",
      "creation_date": "2020-10-21T13:33:52.593000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:19:31.756000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "5f9038c13a93dc782c77a0eb",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.6",
      "creation_date": "2020-10-21T13:33:53.284000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:09:15.604000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "5f9038c33a93dc782c77a0ed",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "production",
      "creation_date": "2020-10-21T13:33:55.744000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T05:01:59.830000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "5f9038c54649c8502ac6aa25",
      "alm_examples": [
        {
          "api_version": "open.rocket.chat/v1alpha1",
          "kind": "RocketChat",
          "metadata": {
            "name": "rocketchat-quickstart"
          },
          "spec": {
            "labels": {
              "app": "rocketchat"
            },
            "memoryLimit": "512Mi",
            "mongodbDatabase": "rocketchat",
            "mongodbReplicaName": "rs0",
            "mongodbReplicas": 1,
            "mongodbSecretName": "mongodb-secret",
            "rocketchatReplicas": 1,
            "volumeCapacity": "1Gi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rocketchat/rocketchat-operator-bundle@sha256:939fd27346e704244fda2c6666cda4e6f164d541e89c0000f4a46d91296831c1",
      "bundle_path_digest": "sha256:939fd27346e704244fda2c6666cda4e6f164d541e89c0000f4a46d91296831c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-21T13:33:57.523000+00:00",
      "csv_description": "# Rocket.Chat Operator\n\nThis will launch an instance of the Rocket.Chat collaboration platform on your OpenShift cluster.\nIt is designed as a \"push-button-go\" operator, leveraging Ansible for the underlying logic.\nThe operator handles the provisioning of MongoDB from Red Hat Software Collections, and the deployment of Rocket.Chat from the Red Hat Container Catalog.\n\n## Quick Instructions\n\nTo get started, you can use the included RocketChat custom resource template (provided when installing from OperatorHub), which will launch Rocket.Chat with the following options:\n\n* 1 GiB storage volume for MongoDB\n* 512 MiB memory limit each for MongoDB and Rocket.Chat\n* Single pod instances of MongoDB and Rocket.Chat\n* Automatically generated credentials for MongoDB, stored in a Kubernetes secret\n\n## Custom Installation\n\nThe default CR template is enough to get started, but for a production environment you'll likely want to adjust your resource size accordingly.\n\nStorage, memory and pod replicas can be adjusted by changing the respective fields in the RocketChat custom resource:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbReplicas: 1\n  memoryLimit: 512Mi\n  rocketchatReplicas: 1\n  volumeCapacity: 1Gi\n```\n\nYou can also install Rocket.Chat using an ephemeral storage volume by setting the `spec.volumeCapacity` field of the CR to an empty string:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  volumeCapacity: \"\"\n```\n\nIf you would like to provide your own MongoDB credentials, you can create a Kubernetes secret with the following fields (`keyfile` is a base64 encoded, 756 character randomized string):\n\n```\nusername:\npassword:\nadmin_password:\nkeyfile:\n```\n\nThe name of the kubernetes secret you created above should be set in the RocketChat custom resource:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbSecretName: mongodb-secret-name\n```\n\nYou can customize or add labels that will be applied by the operator to all of the created objects:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  labels:\n    app: rocketchat\n    env: production\n    region: na-east\n```\n\nIf desired, you can also customize the MongoDB database and replicaset names:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbDatabase: rocketchat\n  mongodbReplicaName: rs0\n```\n",
      "csv_display_name": "Rocket.Chat Operator",
      "csv_metadata_description": "Deploy Rocket.Chat Collaboration Platform on OpenShift",
      "csv_name": "rocketchat-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:42:32.850000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "rocketchat-operator-certified",
      "provided_apis": [
        {
          "group": "open.rocket.chat",
          "kind": "RocketChat",
          "plural": "rocketchats",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571",
          "image": "quay.io/rhc4tp/rocketchat-operator@sha256:e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571",
          "name": "rocketchat-operator-e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571-annotation"
        },
        {
          "digest": "sha256:1a7796aea2d8e974df8c26de1ecf240917b0fd0c3594cc77f86d48e73c0a5ad1",
          "image": "registry.connect.redhat.com/rocketchat/rocketchat-operator@sha256:1a7796aea2d8e974df8c26de1ecf240917b0fd0c3594cc77f86d48e73c0a5ad1",
          "name": "rocketchat-operator"
        },
        {
          "digest": "sha256:856c0c3e3b7a71795262e29915bf748ee692ecc6dcef0ef3eff0dd1fdb2f85f7",
          "image": "registry.access.redhat.com/rhscl/mongodb-36-rhel7@sha256:856c0c3e3b7a71795262e29915bf748ee692ecc6dcef0ef3eff0dd1fdb2f85f7",
          "name": "mongodb"
        },
        {
          "digest": "sha256:d26a76943471e057a088acd4896eab5b7cdc478069656de0f896ee66ffa61cf7",
          "image": "registry.connect.redhat.com/rocketchat/rocketchat@sha256:d26a76943471e057a088acd4896eab5b7cdc478069656de0f896ee66ffa61cf7",
          "name": "rocketchat"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5f9038c6796c8e8debd8ee26",
      "alm_examples": [
        {
          "api_version": "app.stacks/v1beta1",
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "example-runtime-component"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:8e8792d973514ff1e87acbfbcaef90fa41d7dc66eac939f5e74b307946f7dd37",
      "bundle_path_digest": "sha256:8e8792d973514ff1e87acbfbcaef90fa41d7dc66eac939f5e74b307946f7dd37",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-21T13:33:58.385000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configured a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift's Certificate Manager\nThe Runtime Component Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to automatically provision TLS certificates for pods as well as routes.\nWhen creating certificates via the RuntimeComponent CR the user can specify a particular issuer name and toggle the scopes between ClusterIssuer (cluster scoped) and Issuer (namespace scoped). If not specified, these values are retrieved from a ConfigMap, with a default value of `self-signed` and `ClusterIssuer`.\nThe certificate is mounted into the container via a Secret so that it is automatically refreshed once the certificate is updated.\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with Kubernetes Application Navigator (kAppNav) and OpenShift's Topology UI\nAutomatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/), allowing your runtime component to compose an umbrella [Application](https://github.com/kubernetes-sigs/application).  This integration allows users to monitor all constituents resources of the application and receive alerts when the health status of a component changes.  From an integrated panel users can also launch day-2-operations, such as viewing the Kibana / Grafana dashboards, and enabling trace for a component.\nDuring this integration we also set the corresponding labels to support OpenShift's Developer Topology UI,which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/master/doc/) for more information.\n",
      "csv_display_name": "Runtime Component Operator",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:03:35.195000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "name": "runtime-component-operator-1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596-annotation"
        },
        {
          "digest": "sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "name": "runtime-component-operator"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "5f9038c83a93dc782c77a0ef",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1alpha1",
          "kind": "SeldonDeploy",
          "metadata": {
            "name": "example-seldondeploy",
            "namespace": "seldon"
          },
          "spec": {
            "affinity": {},
            "alibidetect": {
              "image": "registry.connect.redhat.com/seldonio/alibi-detect-server@sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c"
            },
            "argocd": {
              "url": "https://argocd-server.argocd.svc.cluster.local"
            },
            "docker": {
              "user": "unkown"
            },
            "elasticsearch": {
              "jwtSecretKey": "jwt-elastic.txt",
              "jwtSecretName": "jwt-elastic",
              "url": "https://elasticsearch.openshift-logging:9200"
            },
            "enableAppAnalytics": false,
            "enableAppAuth": false,
            "env": {
              "GITOPS_FORMAT": "json",
              "USERID_CLAIM_KEY": "name"
            },
            "external": {
              "host": "",
              "protocol": "http"
            },
            "fullnameOverride": "",
            "github": {
              "email": "",
              "token": "",
              "user": ""
            },
            "image": {
              "image": "registry.connect.redhat.com/seldonio/seldon-deploy@sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
              "pullPolicy": "Always"
            },
            "imagePullSecrets": [
              {
                "name": "regcred"
              }
            ],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart-example.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "ingressGateway": {
              "ingressNamespace": "istio-system",
              "kfServingIngressService": "kfserving-ingressgateway",
              "seldonIngressService": "istio-ingressgateway"
            },
            "kfserving": {
              "curlForm": "MODEL_NAME={{ .ModelName }}<br>\nCLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\nSERVICE_HOSTNAME=$(kubectl get inferenceservice {{ .ModelName }} -o jsonpath='{.status.url}' | cut -d \"/\" -f 3)<br>\ncurl -v -H \"Host: ${SERVICE_HOSTNAME}\" {{ .KfServingProtocol }}://$CLUSTER_IP/v1/models/$MODEL_NAME:predict -d '{{ .Payload }}'\n",
              "enabled": false,
              "explainForm": "{{ .KfServingProtocol }}://{{ .IngressServiceName }}/v1/models/{{ .ModelName }}:explain",
              "protocol": "http",
              "requestForm": "{{ .KfServingProtocol }}://{{ .IngressServiceName }}/v1/models/{{ .ModelName }}:predict"
            },
            "loadtest": {
              "image": "registry.connect.redhat.com/seldonio/seldon-loadtester@sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c"
            },
            "nameOverride": "",
            "nodeSelector": {},
            "openshiftMarketplace": {
              "cleanupClusterServiceVersions": false,
              "kubectlCleanupImage": "registry.connect.redhat.com/seldonio/kubectl@sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
              "prometheus": {
                "monitorSpecs": {
                  "create": true
                }
              },
              "seldonCore": {
                "istioGateway": {
                  "create": true,
                  "name": "seldon-gateway",
                  "namespace": "istio-system"
                },
                "subscription": {
                  "apiVersion": "operators.coreos.com/v1alpha1",
                  "channel": "alpha",
                  "create": true,
                  "istioEnabled": true,
                  "metricsPath": "/metrics",
                  "requestLoggerEndpoint": "http://default-broker.seldon-logs"
                }
              }
            },
            "prometheus": {
              "knative": {
                "url": "https://prometheus-k8s.openshift-monitoring:9091/api/v1/"
              },
              "seldon": {
                "jwtSecretKey": "jwt-elastic.txt",
                "jwtSecretName": "jwt-elastic",
                "namespaceMetricName": "namespace",
                "resourceMetricsUrl": "https://prometheus-k8s.openshift-monitoring:9091/api/v1/",
                "serviceMetricName": "exported_service",
                "url": "https://prometheus-user-workload.openshift-user-workload-monitoring:9091/api/v1/"
              }
            },
            "rbac": {
              "clusterWide": false,
              "create": true
            },
            "replicaCount": 1,
            "requestLogger": {
              "create": true,
              "elasticsearch": {
                "host": "elasticsearch.openshift-logging",
                "jwtSecretKey": "jwt-elastic.txt",
                "jwtSecretName": "jwt-elastic",
                "port": "9200",
                "protocol": "https"
              },
              "image": "registry.connect.redhat.com/seldonio/seldon-request-logger@sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
              "imagePullPolicy": "IfNotPresent",
              "namespace": {
                "create": false,
                "name": "seldon-logs"
              },
              "trigger": {
                "apiVersion": "eventing.knative.dev/v1alpha1"
              }
            },
            "resources": {},
            "seldon": {
              "curlForm": "CLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\ncurl -k -H \"Content-Type: application/json\" {{ .SeldonProtocol }}://$CLUSTER_IP/seldon/{{ .Namespace }}/{{ .ModelName }}/api/v0.1/predictions -d '{{ .Payload }}'\n",
              "enabled": true,
              "explainForm": "http://{{ .ModelName }}-{{ .Predictor }}-explainer.{{ .Namespace }}:9000/v1/models/{{ .ModelName }}:explain",
              "protocol": "http",
              "seldonRequestForm": "{{ .SeldonProtocol }}://{{ .IngressServiceName }}/seldon/{{ .Namespace }}/{{ .ModelName }}/api/v0.1/predictions",
              "tensorFlowCurlForm": "CLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\ncurl -k -H \"Content-Type: application/json\" {{ .SeldonProtocol }}://$CLUSTER_IP/seldon/{{ .Namespace }}/{{ .ModelName }}/v1/models/:predict -d '{{ .Payload }}'\n",
              "tensorflowRequestForm": "{{ .SeldonProtocol }}://{{ .IngressServiceName }}/seldon/{{ .Namespace }}/{{ .ModelName }}/v1/models/:predict"
            },
            "service": {
              "port": 80,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "create": true
            },
            "serviceAccountName": "seldon-deploy",
            "skipVerifyGit": true,
            "skipVerifyHttpCalls": true,
            "tolerations": [],
            "virtualService": {
              "create": true,
              "gateways": [
                "seldon-gateway.istio-system.svc.cluster.local"
              ],
              "prefix": "/seldon-deploy/"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-deploy-operator-bundle@sha256:7cfc289fa638ff8270cb2b5263ad6286290e912075252b66f735ccf466d66d0f",
      "bundle_path_digest": "sha256:7cfc289fa638ff8270cb2b5263ad6286290e912075252b66f735ccf466d66d0f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T13:34:00.204000+00:00",
      "csv_description": "The Seldon deploy operator allows the creation of Seldon Deploy applications to provide management, monitoring and updating of machine learning models from a range of technologies. It includes the ability to run explanations as well as outlier, drift and adversarial detection against running models. There is a full metrics and logging integration via Prometheus and ELK stacks as well as full GitOps operations to allow full auditing and recovery of updated models.",
      "csv_display_name": "Seldon Deploy Operator",
      "csv_metadata_description": "The Seldon deploy operator allows the creation of Seldon Deploy applications to provide management, monitoring and updating of machine learning models from a range of technologies. It includes the ability to run explanations as well as outlier, drift and adversarial detection against running models. There is a full metrics and logging integration via Prometheus and ELK stacks as well as full GitOps operations to allow full auditing and recovery of updated models.",
      "csv_name": "seldon-deploy-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:53:10.464000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "seldon-deploy-operator",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeploy",
          "plural": "seldondeploys",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2be9890166d6589a9a7f3b47a4dc7fbd6ccfcb5a2e5305c27eb969b28deaf0a3",
          "image": "seldonio/seldon-deploy-operator@sha256:2be9890166d6589a9a7f3b47a4dc7fbd6ccfcb5a2e5305c27eb969b28deaf0a3",
          "name": "seldon-deploy-operator-2be9890166d6589a9a7f3b47a4dc7fbd6ccfcb5a2e5305c27eb969b28deaf0a3-annotation"
        },
        {
          "digest": "sha256:fe82ee807e1246ceefa949c834fb0d052542495f03b5c61506595591e5a10933",
          "image": "registry.connect.redhat.com/seldonio/seldon-deploy-operator@sha256:fe82ee807e1246ceefa949c834fb0d052542495f03b5c61506595591e5a10933",
          "name": "seldon-deploy-operator"
        },
        {
          "digest": "sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
          "image": "registry.connect.redhat.com/seldonio/seldon-deploy@sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
          "name": "deployment"
        },
        {
          "digest": "sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c",
          "image": "registry.connect.redhat.com/seldonio/seldon-loadtester@sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c",
          "name": "loadtest"
        },
        {
          "digest": "sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c",
          "image": "registry.connect.redhat.com/seldonio/alibi-detect-server@sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c",
          "name": "alibidetect"
        },
        {
          "digest": "sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
          "image": "registry.connect.redhat.com/seldonio/seldon-request-logger@sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
          "name": "requestlogger"
        },
        {
          "digest": "sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
          "image": "registry.connect.redhat.com/seldonio/kubectl@sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
          "name": "kubectl"
        },
        {
          "digest": "sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
          "image": "registry.connect.redhat.com/seldonio/seldon-request-logger@sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
          "name": "seldon-request-logger-6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f-annotation"
        },
        {
          "digest": "sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
          "image": "registry.connect.redhat.com/seldonio/kubectl@sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
          "name": "kubectl-15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382-annotation"
        },
        {
          "digest": "sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c",
          "image": "registry.connect.redhat.com/seldonio/alibi-detect-server@sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c",
          "name": "alibi-detect-server-0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c-annotation"
        },
        {
          "digest": "sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c",
          "image": "registry.connect.redhat.com/seldonio/seldon-loadtester@sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c",
          "name": "seldon-loadtester-fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c-annotation"
        },
        {
          "digest": "sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
          "image": "registry.connect.redhat.com/seldonio/seldon-deploy@sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
          "name": "seldon-deploy-000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "5f9038c979b4f8d046342f70",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "endpoint": {
                    "type": "REST"
                  },
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "bundle_path_digest": "sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T13:34:01.523000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:52:26.343000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "seldon-core-operator-174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0-annotation"
        },
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "manager"
        },
        {
          "digest": "sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "name": "executor"
        },
        {
          "digest": "sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "name": "engine"
        },
        {
          "digest": "sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-rest@sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "name": "sklearnserver_rest"
        },
        {
          "digest": "sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-grpc@sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "name": "sklearnserver_grpc"
        },
        {
          "digest": "sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-rest@sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "name": "xgboostserver_rest"
        },
        {
          "digest": "sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-grpc@sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "name": "xgboostserver_grpc"
        },
        {
          "digest": "sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-rest@sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "name": "mlflowserver_rest"
        },
        {
          "digest": "sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-grpc@sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "name": "mlflowserver_grpc"
        },
        {
          "digest": "sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-rest@sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "name": "tfproxy_rest"
        },
        {
          "digest": "sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-grpc@sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "name": "tfproxy_grpc"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "name": "explainer"
        },
        {
          "digest": "sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "name": "mock-classifier-482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "5f9038ca4649c8502ac6aa26",
      "alm_examples": [
        {
          "api_version": "sematext.com/v1alpha1",
          "kind": "SematextAgent",
          "metadata": {
            "name": "basic-agent-deployment"
          },
          "spec": {
            "region": "EU"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sematext/sematext-operator-bundle@sha256:6261bac8dbfc9453bf59eed93a860f55e15529c564058f79246a5bfe9c6ad698",
      "bundle_path_digest": "sha256:6261bac8dbfc9453bf59eed93a860f55e15529c564058f79246a5bfe9c6ad698",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T13:34:02.455000+00:00",
      "csv_description": "The Sematext Operator for Kubernetes provides an easy way to deploy Sematext Agent.\n\nSematext Agent collects metrics about hosts (CPU, memory, disk, network, processes), containers (both Docker and rkt) and orchestrator platforms and ships that to [Sematext Cloud](https://sematext.com/cloud). Sematext Cloud is available in the US and EU regions.\n\nIt installs the Sematext Agent to all nodes in your cluster via a `DaemonSet` resource.\n\n## Settings\n\nThis operator uses all the same options as the [Sematext Agent Helm Chart](https://hub.helm.sh/charts/stable/sematext-agent), please take a look to all the options in the following table:\n\n|             Parameter            |            Description            |                  Default                  |\n|----------------------------------|-----------------------------------|-------------------------------------------|\n| `containerToken`                 | Sematext Container token          | `Nil` Provide your Container token        |\n| `logsToken`                      | Sematext Logs token               | `Nil` Provide your Logs token             |\n| `infraToken`                     | Sematext Infra token              | `Nil` Provide your Infra token            |\n| `region`                         | Sematext region                   | `US` Sematext US or EU region             |\n| `agent.image.repository`         | The image repository              | `sematext/agent`                          |\n| `agent.image.tag`                | The image tag                     | `latest`                                  |\n| `agent.image.pullPolicy`         | Image pull policy                 | `Always`                                  |\n| `agent.service.port`             | Service port                      | `80`                                      |\n| `agent.service.type`             | Service type                      | `ClusterIP`                               |\n| `agent.resources`                | Agent resources                   | `{}`                                      |\n| `logagent.image.repository`      | The image repository              | `sematext/logagent`                       |\n| `logagent.image.tag`             | The image tag                     | `latest`                                  |\n| `logagent.image.pullPolicy`      | Image pull policy                 | `Always`                                  |\n| `logagent.resources`             | Logagent resources                | `{}`                                      |\n| `logagent.extraHostVolumeMounts` | Extra mounts                      | `{}`                                      |\n| `customUrl.serverBaseUrl`        | Custom Base URL                   | `Nil`                                     |\n| `customUrl.logsReceiverUrl`      | Custom Logs receiver URL          | `Nil`                                     |\n| `customUrl.eventsRecieverUrl`    | Custom Event receiver URL         | `Nil`                                     |\n| `serviceAccount.create`          | Create a service account          | `true`                                    |\n| `serviceAccount.name`            | Service account name              | `Nil` Defaults to chart name              |\n| `rbac.create`                    | RBAC enabled                      | `true`                                    |\n| `tolerations`                    | Tolerations                       | `[]`                                      |\n| `nodeSelector`                   | Node selector                     | `{}`                                      |\n\nFor example, if you want to deploy Sematext Agent in EU region, create the following resource:\n\n```yaml\napiVersion: sematext.com/v1alpha1\nkind: SematextAgent\nmetadata:\n  name: test-sematextagent\nspec:\n  region: \"EU\"\n  containerToken: YOUR_CONTAINER_TOKEN\n  logsToken: YOUR_LOGS_TOKEN\n  infraToken: YOUR_INFRA_TOKEN\n```\n\n**NOTE:** You need to create [a new Docker app in Sematext Cloud](https://apps.sematext.com/ui/integrations/create/docker) to get relevant tokens.\n\nOnce you have created the above resource, you can apply this file with `kubectl apply -f`.",
      "csv_display_name": "Sematext Operator",
      "csv_metadata_description": "Full stack observability with Sematext Monitoring Platform!",
      "csv_name": "sematext-operator.v1.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T03:58:01.803000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sematext",
      "provided_apis": [
        {
          "group": "sematext.com",
          "kind": "SematextAgent",
          "plural": "sematextagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "image": "registry.connect.redhat.com/sematext/sematext-operator@sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "name": "sematext-operator-b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893-annotation"
        },
        {
          "digest": "sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "image": "registry.connect.redhat.com/sematext/sematext-operator@sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "name": "sematext-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.9",
      "version_original": "1.0.9"
    },
    {
      "_id": "5f9038cbd40d09f9566ac8a0",
      "alm_examples": [
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "Spark",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:69ab15464e35611399ced93804618510717be529f42c50e70da0ea6a0027a6bb",
      "bundle_path_digest": "sha256:69ab15464e35611399ced93804618510717be529f42c50e70da0ea6a0027a6bb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T13:34:03.720000+00:00",
      "csv_description": "Splunk Enterprise is a platform for operational intelligence. Our software\nlets you collect, analyze, and act upon the untapped value of big data that\nyour technology infrastructure, security systems, and business applications\ngenerate. It gives you insights to drive operational performance and\nbusiness results.\n\nPlease refer to [Splunk\nproducts](https://www.splunk.com/en_us/software.html) for more knowledge\nabout the features and capabilities of Splunk, and how you can bring it into\nyour organization.\n\nPlease see the [getting started\nguide](https://splunk.github.io/splunk-operator/) to get up and running with\nthe Splunk Operator for Kubernetes.\n\n* [Known Issues for the Splunk\nOperator](https://splunk.github.io/splunk-operator/#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk\nOperator](https://splunk.github.io/splunk-operator/#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk\nOperator](https://splunk.github.io/splunk-operator/#installing-the-splunk-operator)\n* [Creating Splunk Enterprise\nDeployments](https://splunk.github.io/splunk-operator/#creating-splunk-enterprise-deployments)\n\nCOMMUNITY SUPPORTED: Splunk Operator for Kubernetes is an open source\nproduct developed by Splunkers with contributions from the community of\npartners and customers. This unique product will be enhanced, maintained and\nsupported by the community, led by Splunkers with deep subject matter\nexpertise. The primary reason why Splunk is taking this approach is to push\nproduct development closer to those that use and depend upon it. This direct\nconnection will help us all be more successful and move at a rapid pace.\n\nFor help, please first read our [Frequently Asked\nQuestions](https://splunk.github.io/splunk-operator/FAQ.html)\n\nCommunity Support & Discussions on\n[Slack](http://splk.it/slack) channel #kubernetes\n\nFile Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)\nsplunk/splunk-operator\n",
      "csv_display_name": "Splunk Operator for Kubernetes",
      "csv_metadata_description": "The Splunk Operator for Kubernetes (SOK) makes it easy for Splunk Administrators to deploy and operate Enterprise deployments in a Kubernetes infrastructure.",
      "csv_name": "splunk.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:36:25.583000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "splunk-certified",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Spark",
          "plural": "sparks",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "image": "docker.io/splunk/splunk-operator@sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "name": "splunk-operator-4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9-annotation"
        },
        {
          "digest": "sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "image": "docker.io/splunk/splunk-operator@sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "name": "splunk-operator"
        },
        {
          "digest": "sha256:64dbb52a66a483a778890407be301fc7edfe8c224b8b524ec3cc1f322c9300a1",
          "image": "docker.io/splunk/splunk@sha256:64dbb52a66a483a778890407be301fc7edfe8c224b8b524ec3cc1f322c9300a1",
          "name": "splunk_enterprise"
        },
        {
          "digest": "sha256:4adf17b546f168a5c580b2445508793f4bfa4c84a41458a0b2fefc6522465a45",
          "image": "registry.connect.redhat.com/splunk/spark@sha256:4adf17b546f168a5c580b2445508793f4bfa4c84a41458a0b2fefc6522465a45",
          "name": "splunk_spark"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5f9038d04649c8502ac6aa28",
      "alm_examples": [
        {
          "api_version": "synopsys.com/v1",
          "kind": "OpsSight",
          "metadata": {
            "name": "opssight-test"
          },
          "spec": {
            "blackduck": {
              "blackduckPassword": "<COMMON_BLACKDUCK_PWD_OPSSIGHT_TYPE_BASE64_ENCODED>",
              "blackduckSpec": {
                "certificateName": "default",
                "exposeService": "",
                "licenseKey": "<BLACKDUCK_LICENSE_KEY>",
                "livenessProbes": false,
                "namespace": "",
                "persistentStorage": false,
                "size": "small",
                "type": "opssight",
                "version": "2019.8.1"
              },
              "connectionsEnvironmentVariableName": "blackduck.json",
              "initialCount": 0,
              "maxCount": 0,
              "tlsVerification": false
            },
            "configMapName": "blackduck",
            "defaultCPU": "300m",
            "defaultMem": "1300Mi",
            "enableMetrics": true,
            "enableSkyfire": false,
            "logLevel": "debug",
            "namespace": "opssight-test",
            "perceiver": {
              "annotationIntervalSeconds": 30,
              "dumpIntervalMinutes": 30,
              "enableImagePerceiver": false,
              "enablePodPerceiver": true,
              "imagePerceiver": {
                "image": "docker.io/blackducksoftware/opssight-image-processor@sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
                "name": "opssight-image-processor"
              },
              "podPerceiver": {
                "image": "docker.io/blackducksoftware/opssight-pod-processor@sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
                "name": "opssight-pod-processor"
              },
              "port": 3002,
              "serviceAccount": "opssight-processor"
            },
            "perceptor": {
              "checkForStalledScansPauseHours": 999999,
              "clientTimeoutMilliseconds": 100000,
              "expose": "",
              "image": "docker.io/blackducksoftware/opssight-core@sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
              "modelMetricsPauseSeconds": 15,
              "name": "opssight-core",
              "port": 3001,
              "stalledScanClientTimeoutHours": 999999,
              "unknownImagePauseMilliseconds": 15000
            },
            "prometheus": {
              "expose": "",
              "image": "docker.io/prom/prometheus@sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
              "name": "prometheus",
              "port": 9090
            },
            "scannerCPU": "300m",
            "scannerMem": "1300Mi",
            "scannerPod": {
              "imageFacade": {
                "image": "docker.io/blackducksoftware/opssight-image-getter@sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
                "imagePullerType": "skopeo",
                "internalRegistries": [],
                "name": "opssight-image-getter",
                "port": 3004,
                "serviceAccount": "opssight-scanner"
              },
              "name": "opssight-scanner",
              "replicaCount": 1,
              "scanner": {
                "clientTimeoutSeconds": 600,
                "image": "docker.io/blackducksoftware/opssight-scanner@sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
                "name": "opssight-scanner",
                "port": 3003
              }
            },
            "secretName": "blackduck",
            "skyfire": {
              "hubClientTimeoutSeconds": 120,
              "hubDumpPauseSeconds": 240,
              "image": "gcr.io/saas-hub-stg/blackducksoftware/pyfire@sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
              "kubeDumpIntervalSeconds": 60,
              "name": "skyfire",
              "perceptorDumpIntervalSeconds": 60,
              "port": 3005,
              "prometheusPort": 3006,
              "serviceAccount": "skyfire"
            }
          }
        },
        {
          "api_version": "synopsys.com/v1",
          "kind": "Blackduck",
          "metadata": {
            "name": "blackduck-ephemeral"
          },
          "spec": {
            "adminPassword": "<POSTGRES_ADMIN_USER_PASSWORD_BASE64_ENCODED>",
            "certificateName": "default",
            "exposeService": "NONE",
            "licenseKey": "<BLACKDUCK_LICENSE_KEY>",
            "livenessProbes": false,
            "namespace": "blackduck-ephemeral",
            "persistentStorage": false,
            "postgresPassword": "<POSTGRES_POSTGRES_USER_PASSWORD_BASE64_ENCODED>",
            "size": "Small",
            "type": "opssight",
            "userPassword": "<POSTGRES_BLACKDUCK_USER_PASSWORD_BASE64_ENCODED>",
            "version": "2019.8.1"
          }
        },
        {
          "api_version": "synopsys.com/v1",
          "kind": "Alert",
          "metadata": {
            "clusterName": "",
            "name": "alert-test"
          },
          "spec": {
            "alertMemory": "2560Mi",
            "cfsslMemory": "640Mi",
            "encryptionGlobalSalt": "",
            "encryptionPassword": "",
            "environs": [
              "ALERT_SERVER_PORT:8443",
              "PUBLIC_HUB_WEBSERVER_HOST:<<BLACK_DUCK_HOST>>",
              "PUBLIC_HUB_WEBSERVER_PORT:443"
            ],
            "exposeService": "",
            "namespace": "alert-test",
            "persistentStorage": false,
            "port": 8443,
            "pvcSize": "",
            "pvcStorageClass": "",
            "standAlone": true,
            "version": "5.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/blackducksoftware/synopsys-operator-bundle@sha256:46cee91fdddca9dc6d10fadd954676b7d582505418ba0eec0f2788c19ed1a72a",
      "bundle_path_digest": "sha256:46cee91fdddca9dc6d10fadd954676b7d582505418ba0eec0f2788c19ed1a72a",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T13:34:08.353000+00:00",
      "csv_description": "[Synopsys Operator](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34373652/Synopsys+Operator) is a cloud-native administration utility for Synopsys software. Synopsys Operator assists in the deployment and management of Synopsys software like Black Duck, OpsSight Connector, and Black Duck Alert, in a Kubernetes and Red Hat OpenShift environment.\n\nThe Synopsys Operator deployment can be managed by a utility called [synopsysctl](https://github.com/blackducksoftware/synopsys-operator/releases). synopsysctl makes it easy to deploy Synopsys Operator, and it eliminates the need to edit YML/JSON configuration files when deploying and managing software with Synopsys Operator. Synopsysctl provides a rich set of command-line parameters to allow for fast and highly-configurable deployments of Black Duck, OpsSight Connector, and Black Duck Alert. synopsysctl\u2019s interface mimics that of kubectl and oc, making it immediately familiar to anyone with Kubernetes and/or Red Hat OpenShift experience.\n\n## Black Duck\n[Black Duck](https://www.synopsys.com/software-integrity/security-testing/software-composition-analysis.html) is a comprehensive solution for managing security, license compliance, and code quality risks that come from the use of open source in applications and containers. Black Duck gives you unmatched visibility into third-party code, enabling you to control it across your software supply chain and throughout the application life cycle.\n\n### Supported Features\n\n* **Find and fix security vulnerabilities** at each stage in the SDLC, with detailed, vulnerability-specific remediation guidance and technical insight.\n\n* **Eliminate risk of open source license** noncompliance and safeguard your intellectual property by using the industry\u2019s largest open source knowledge base to identify which of 2,500+ licenses are relevant to the open source in your applications.\n\n* **Scan virtually any software, firmware, and source code** to generate acomprehensive bill of materials (BoM) of what\u2019s inside.\n\n* **Automatically monitor for new vulnerabilities** hat affect your BoM, with custom policies and workflow triggers to accelerate remediation and reduce your risk exposure.\n\n## OpsSight Connector\n[Synopsys Black Duck OpsSight](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34242566/OpsSight) for Red Hat OpenShift Container Platform provides automated open source identification and monitoring in all container images in a Kubernetes or OpenShift cluster to give teams visibility into, and control over, the risks associated with open source components in those images.\n\n### Supported Features\n\n* **Automated Detection** - OpsSight\u2019s automated multifactor open source detection inventories all the open source in container images as they are deployed.\n\n* **Security Intelligence** -  Black Duck Enhanced Vulnerability Data identifies all known vulnerabilities for the open source in your container images while actionable mitigation and remediation guidance helps minimize exploit risk.\n\n* **Policy Management** - OpsSight policy management allows teams to define open source use and security policies, which are evaluated with each scan and documented as metadata on your containers, allowing you to flag images that violate policies and prevent them from deploying to production.\n\n* **Continous Monitoring** - OpsSight continuously monitors for newly reported open source security vulnerabilities associated with open source in use, providing same-day alerts so teams can understand how newly discovered vulnerabilities affect their containers in production.\n\n## Black Duck Alert\nBlack Duck Alert is an additional deployment to Black Duck that enables you to see Security Vulnerability and Policy Management notifications through email, Slack or HipChat.\n\n## About Synopsys\n\n[Synopsys Software Integrity](https://www.synopsys.com/software-integrity.html) helps development teams build secure, high-quality software, minimizing risks while maximizing speed and productivity. Synopsys, a recognized leader in application security, provides static analysis, software composition analysis, and dynamic analysis solutions that enable teams to quickly find and fix vulnerabilities and defects in proprietary code, open source components, and application behavior.",
      "csv_display_name": "Synopsys Operator",
      "csv_metadata_description": "Synopsys Operator is a cloud-native administration utility for Synopsys software.",
      "csv_name": "synopsys-operator.2019.8.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:40:09.639000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "synopsys-certified",
      "provided_apis": [
        {
          "group": "synopsys.com",
          "kind": "Alert",
          "plural": "alerts",
          "version": "v1"
        },
        {
          "group": "synopsys.com",
          "kind": "Blackduck",
          "plural": "blackducks",
          "version": "v1"
        },
        {
          "group": "synopsys.com",
          "kind": "OpsSight",
          "plural": "opssights",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "image": "registry.connect.redhat.com/blackducksoftware/synopsys-operator@sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "name": "synopsys-operator-554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8-annotation"
        },
        {
          "digest": "sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "image": "registry.connect.redhat.com/blackducksoftware/synopsys-operator@sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "name": "synopsys-operator"
        },
        {
          "digest": "sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
          "image": "gcr.io/saas-hub-stg/blackducksoftware/pyfire@sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
          "name": "blackducksoftware/pyfire-266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9-annotation"
        },
        {
          "digest": "sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
          "image": "docker.io/prom/prometheus@sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
          "name": "prometheus-7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3-annotation"
        },
        {
          "digest": "sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
          "image": "docker.io/blackducksoftware/opssight-pod-processor@sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
          "name": "opssight-pod-processor-726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275-annotation"
        },
        {
          "digest": "sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
          "image": "docker.io/blackducksoftware/opssight-image-processor@sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
          "name": "opssight-image-processor-8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d-annotation"
        },
        {
          "digest": "sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
          "image": "docker.io/blackducksoftware/opssight-image-getter@sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
          "name": "opssight-image-getter-c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc-annotation"
        },
        {
          "digest": "sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
          "image": "docker.io/blackducksoftware/opssight-scanner@sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
          "name": "opssight-scanner-128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9-annotation"
        },
        {
          "digest": "sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
          "image": "docker.io/blackducksoftware/opssight-core@sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
          "name": "opssight-core-ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2019.8.4",
      "version_original": "2019.8.4"
    },
    {
      "_id": "5f9038d44649c8502ac6aa2a",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:0cb9e9a9f8294c00517d0662eb8df63dca9a5c27ff83f00443b4eab3f31626d5",
      "bundle_path_digest": "sha256:0cb9e9a9f8294c00517d0662eb8df63dca9a5c27ff83f00443b4eab3f31626d5",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T13:34:12.249000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:55:50.645000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "image": "quay.io/tigera/operator@sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "name": "operator-ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff-annotation"
        },
        {
          "digest": "sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "image": "quay.io/tigera/operator@sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.7.3",
      "version_original": "1.7.3"
    },
    {
      "_id": "5f9038d64649c8502ac6aa2c",
      "alm_examples": [
        {
          "api_version": "containo.us/v1alpha1",
          "kind": "Traefikee",
          "metadata": {
            "name": "example-traefikee",
            "namespace": "traefikee"
          },
          "spec": {
            "cluster": "traefikee",
            "controllers": 1,
            "proxies": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/containous/traefikee-operator-bundle@sha256:d8be7fb9621c8a2224d218f62926944a86d704d92db1c2344a0f3724575991b8",
      "bundle_path_digest": "sha256:d8be7fb9621c8a2224d218f62926944a86d704d92db1c2344a0f3724575991b8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T13:34:14.663000+00:00",
      "csv_description": "TraefikEE is a distributed, and highly available edge routing solution built on top of the open source Traefik and natively integrates with Openshift to:\n\n* Load balance any applications and easily scale out to meet production traffic needs\n* Secure services with end-to-end network and application encryption\n* Provide end-to-end monitoring and real-time tracing for better insight into application uptime and performance\n\n## Before You Start\n\nTo start using the operator you''ll need a license key\n\nRequest your [30-days free trial](https://info.containo.us/free-trial-traefikee-red-hat-openshift)\n\n* Create a Secret with your License key\n```\nkubectl create namespace traefikee\nkubectl create -n traefikee secret generic license --from-literal=license=${TRAEFIKEE_LICENSE_KEY}\n```\n\n* Generate the client credentials\n```\nexport CLUSTER=test\nteectl setup --cluster=\"${CLUSTER}\" --kubernetes --force\nkubectl create secret -n traefikee generic \"${CLUSTER}-mtls\" --from-file=bundle.zip=./bundle.zip\nkubectl label secret -n traefikee \"${CLUSTER}-mtls\" app=traefikee\nkubectl label secret -n traefikee \"${CLUSTER}-mtls\" release=\"${CLUSTER}\"\n```\n",
      "csv_display_name": "Traefikee Operator",
      "csv_metadata_description": "Traefik Enterprise Edition",
      "csv_name": "traefikee-redhat-certified.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:56:56.945000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "traefikee-redhat-certified",
      "provided_apis": [
        {
          "group": "containo.us",
          "kind": "Traefikee",
          "plural": "traefikees",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "traefikee-operator-2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f-annotation"
        },
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "ansible"
        },
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "operator"
        },
        {
          "digest": "sha256:86b5cce4168ed056f3d43b121ac2a4533304b857004749d80a30d6c72ede2c40",
          "image": "registry.connect.redhat.com/containous/traefikee@sha256:86b5cce4168ed056f3d43b121ac2a4533304b857004749d80a30d6c72ede2c40",
          "name": "traefikee"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "5f904a37b8167515156ac89f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:2c354e02f3ddfd9ef6ccac776b77603e60f907b10bac730e133845292500dd40",
      "bundle_path_digest": "sha256:2c354e02f3ddfd9ef6ccac776b77603e60f907b10bac730e133845292500dd40",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-21T14:48:23.197000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:36:44.055000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "5f904a37796c8e8debd8ee27",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:5825614ced508b2d168fca5dc0d53e169c0c598bf9008dd3ee0d6bf75781d3f6",
      "bundle_path_digest": "sha256:5825614ced508b2d168fca5dc0d53e169c0c598bf9008dd3ee0d6bf75781d3f6",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T14:48:23.741000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nginx-ingress-operator.v0.0.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:32:04.468000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.4",
      "version_original": "0.0.4"
    },
    {
      "_id": "5f904a383a93dc782c77a0f2",
      "alm_examples": [
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRed",
          "metadata": {
            "name": "nodered"
          },
          "spec": {
            "adminpassword": "$2a$08$V4gPANVy34NKRbnUbMv85OKTEvRmlMTdu6Qmcb2Az5LfOMT5aPA9G",
            "persistentvolume": {
              "accessmode": "ReadWriteMany",
              "enabled": true,
              "size": "100Mi",
              "storageclass": "ibmc-file-silver-gid"
            },
            "secretkey": "c2VjcmV0",
            "size": 1
          }
        },
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRedBackup",
          "metadata": {
            "name": "noderedbackup"
          },
          "spec": {
            "backup": {},
            "ibm_s3": {}
          }
        },
        {
          "api_version": "nodered.com/v1alpha1",
          "kind": "NodeRedRestore",
          "metadata": {
            "name": "noderedrestore"
          },
          "spec": {
            "ibm_s3": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/node-red-operator-bundle@sha256:0cb06a7e47db1ff13ac7542f73041f96fb8e734438db5d4b37e17a69879c0199",
      "bundle_path_digest": "sha256:0cb06a7e47db1ff13ac7542f73041f96fb8e734438db5d4b37e17a69879c0199",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T14:48:24.481000+00:00",
      "csv_description": "Node-RED is a flow-based programming tool, originally developed by IBM's Emerging Technology Services team and now a part of the JS Foundation.\n\n     **How to get the Application Images from registry?**\n-----\n- First Login to redhat catalogue webpage using your credentials.\n- Search for the Operator.\n- Click on the Operator.\n- There is a description that redirects you (upon clicking) to page that explains how to create service accounts.\n- Create a Service Account. Refer page : <https://access.redhat.com/terms-based-registry/#/accounts>\n- Once a service account is created , you can click on it and then navigate to tab Openshift Secret to get the yaml file for your ImagePullSecret.\n- Download the Secret. Create the secret using command\n```sh\n    kubectl create -f <secretfile.yml> --namespace=NAMESPACEHERE\n```\n- Use the name of the created secret in the CR file.\n- For all the application images we would need the secret name to be passed in the CR Spec.\n\n----------\n\n**Node-RED CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nsize                           | Number of instances of Node-RED\nimagePullSecrets               | Secret if the image is private\npersistentvolume.enabled       | If volume is to be mounted at /data\npersistentvolume.storageclass  | Storage class of the Persistent Volume of type ReadWriteMany \npersistentvolume.accessmode    | The accessMode of the Persistent Volume. This should be of type ReadWriteMany.\npersistentvolume.size          | Size of the volume in Mi or Gi\nadminpassword                  | To password protect the Node-RED editor and admin API. \n                               | Give the bcrypt hash of the password. \n                               | See http://nodered.org/docs/security.html#generating-the-password-hash\n                               |\nsecretkey                      | By default, credentials are encrypted in storage using a generated key. \n                               | To specify your own secret, set the following property in base64 encoding. \n                               | Note- the secret should not have a newline or whitespace. \n                               | If you want to disable encryption of credentials, set this property to 'false'.\n    \n----------\n\n\n**NOTE** For Backup feature its required that the NodeRed is deployed with a Persistent Volume of type RedWriteMany.\n\n----------\n**Node-RED Backup CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nbackup.schedule                | Set this value based on the type of backup you opt. \n                               | There are two types of backup available: \n                               | 1. One Time Backup:\n                               |    For this type of backup the value of backup.schedule should be left empty or null. \n                               | 2. Scheduled Backup:\n                               |    For this type of backup provide Cronjob schedule expression \n                               |    (e.g. \"*/30 * * * *\" to take backup after every 30 minutes) as a value for backup.schedule\n                               |\nibm_s3.bucket_name             | IBM S3 storage bucket name\nibm_s3.endpoint                | Bucket endpoint\nibm_s3.api_key                 | Bucket API Key\nibm_s3.auth_endpoint           | Bucket Authentication Endpoint\nibm_s3.resource_crn            | Bucket Rescource\n    \n----------\n\n\n**NOTE** For Restore feature its required that the NodeRed is deployed with a Persistent Volume of type RedWriteMany.\n\n----------\n\n**Node-RED Restore CR Spec Details**\n-----\n  Spec                         |            Details\n-------------------------------|-----------------------------\nrestore_file_name              | Name of the backup file in S3 bucket which needs to be restored\nibm_s3.bucket_name             | IBM S3 storage bucket name \nibm_s3.endpoint                | Bucket Endpoint\nibm_s3.api_key                 | Bucket API Key\nibm_s3.auth_endpoint           | Bucket Authentication Endpoint\nibm_s3.resource_crn            | Bucket Rescource\n    \n----------\n\n\n**Logging into the Node-RED dashboard**\n-----\n\nOnce the Node-RED pod is ready, you can access the URL to the dashboard on the route path. The credentails to dashboard is admin and the password set in the \"adminpassword\" field.\n",
      "csv_display_name": "Node-RED Operator",
      "csv_metadata_description": "Node-RED is a programming tool for wiring together hardware devices, APIs and online services in new and interesting ways.",
      "csv_name": "node-red-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:26:41.452000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "node-red-operator-certified",
      "provided_apis": [
        {
          "group": "nodered.com",
          "kind": "NodeRedRestore",
          "plural": "noderedrestores",
          "version": "v1alpha1"
        },
        {
          "group": "nodered.com",
          "kind": "NodeRed",
          "plural": "nodereds",
          "version": "v1alpha1"
        },
        {
          "group": "nodered.com",
          "kind": "NodeRedBackup",
          "plural": "noderedbackups",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:cf2f0d79843056479cb38e6a71d7f746f88e0928a897a027e7479c25c241bac5",
          "image": "registry.connect.redhat.com/ibm-edge/node-red@sha256:cf2f0d79843056479cb38e6a71d7f746f88e0928a897a027e7479c25c241bac5",
          "name": "node-red-cf2f0d79843056479cb38e6a71d7f746f88e0928a897a027e7479c25c241bac5-annotation"
        },
        {
          "digest": "sha256:74b2ec417de4678c44aaafb39b14348d56b44c0734ab7afc0f32bb2806140cf1",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-operator@sha256:74b2ec417de4678c44aaafb39b14348d56b44c0734ab7afc0f32bb2806140cf1",
          "name": "node-red-operator"
        },
        {
          "digest": "sha256:cf2f0d79843056479cb38e6a71d7f746f88e0928a897a027e7479c25c241bac5",
          "image": "registry.connect.redhat.com/ibm-edge/node-red@sha256:cf2f0d79843056479cb38e6a71d7f746f88e0928a897a027e7479c25c241bac5",
          "name": "nodered"
        },
        {
          "digest": "sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-backup-restore@sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "name": "nodered_backup"
        },
        {
          "digest": "sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "image": "registry.connect.redhat.com/ibm-edge/node-red-backup-restore@sha256:9c4ef813daee4f06b5be3200cabc8dda43cd50ec11a9ff2c49ebfac8426df9ec",
          "name": "nodered_restore"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "5f904a394649c8502ac6aa2f",
      "alm_examples": [
        {
          "api_version": "operator.nsx.vmware.com/v1",
          "kind": "NcpInstall",
          "metadata": {
            "name": "ncp-install"
          },
          "spec": {
            "ncpReplicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/nsx-ncp-operator-bundle@sha256:9c4d4a422db64d7248dc1a9823e19de2372d06670cddd6d10cefde966cf975f1",
      "bundle_path_digest": "sha256:9c4d4a422db64d7248dc1a9823e19de2372d06670cddd6d10cefde966cf975f1",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T14:48:25.585000+00:00",
      "csv_description": "An operator which provides NSX as default network for an Openshit cluster. Simplifies the process of installing and upgrading the NSX Container plugin (NCP) components running in the Openshift cluster. The operator also allows for detailed monitoring of NCP components and reacts to configuration changes.",
      "csv_display_name": "NSX Container Plugin Operator",
      "csv_metadata_description": "An operator which provides NSX as default network for an Openshift cluster. Simplifies the process of installing and upgrading the NSX Container plugin (NCP) components running in an Openshift cluster. The operator also allows for detailed monitoring of NCP components and reacts to configuration changes. This is a cluster operator and must be installed upon cluster creation; for more information please refer to install-time instructions.",
      "csv_name": "nsx-container-plugin-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:44:31.394000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nsx-container-plugin-operator",
      "provided_apis": [
        {
          "group": "operator.nsx.vmware.com",
          "kind": "NcpInstall",
          "plural": "ncpinstalls",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37",
          "image": "vmware/nsx-container-plugin-operator@sha256:3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37",
          "name": "nsx-container-plugin-operator-3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37-annotation"
        },
        {
          "digest": "sha256:3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37",
          "image": "vmware/nsx-container-plugin-operator@sha256:3b8a38dc2ab0b4ed96cd28f04828a0ef5c56d91729e8c45e1e5a353ce2b98f37",
          "name": "nsx-ncp-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5f904a3a3a93dc782c77a0f3",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ]
                },
                "sonatypeWork": "/sonatype-work"
              },
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:5a267c754632e552b700884c7dcd674df38c07db6be07890355ac23cfe321263",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:40e3e2a969464b33e9f0873628a01e01e6c14959753f9006bf79a8e558e4ea39",
      "bundle_path_digest": "sha256:40e3e2a969464b33e9f0873628a01e01e6c14959753f9006bf79a8e558e4ea39",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T14:48:26.844000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup. \nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy. \nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license \nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n    createSampleData: true\n    sonatypeWork: /sonatype-work\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.99.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:37:07.023000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5fa31d76961187a88281df75e0784494fe79a9405f7013c54a9a2ad6e95d61be",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:5fa31d76961187a88281df75e0784494fe79a9405f7013c54a9a2ad6e95d61be",
          "name": "nxiq-operator-certified-5fa31d76961187a88281df75e0784494fe79a9405f7013c54a9a2ad6e95d61be-annotation"
        },
        {
          "digest": "sha256:5fa31d76961187a88281df75e0784494fe79a9405f7013c54a9a2ad6e95d61be",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:5fa31d76961187a88281df75e0784494fe79a9405f7013c54a9a2ad6e95d61be",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:5a267c754632e552b700884c7dcd674df38c07db6be07890355ac23cfe321263",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:5a267c754632e552b700884c7dcd674df38c07db6be07890355ac23cfe321263",
          "name": "iq"
        },
        {
          "digest": "sha256:5a267c754632e552b700884c7dcd674df38c07db6be07890355ac23cfe321263",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:5a267c754632e552b700884c7dcd674df38c07db6be07890355ac23cfe321263",
          "name": "nexus-iq-server-5a267c754632e552b700884c7dcd674df38c07db6be07890355ac23cfe321263-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.99.0-1",
      "version_original": "1.99.0-1"
    },
    {
      "_id": "5f904a3ca52503de7b020736",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:e0bd5cb48d9c8520a5ff4ce7c4e9d20feb32bc569df33d6c61206268a82b48eb",
      "bundle_path_digest": "sha256:e0bd5cb48d9c8520a5ff4ce7c4e9d20feb32bc569df33d6c61206268a82b48eb",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T14:48:28.655000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nxrm-operator-certified.v3.26.1-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:47:04.330000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "3.26.1-1",
      "version_original": "3.26.1-1"
    },
    {
      "_id": "5f904a3d79b4f8d046342f73",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:8c4b0a6f8e465f5b969ea88d78cb3883a308b1c8c19f68e3c9cef2f6a0b40584",
      "bundle_path_digest": "sha256:8c4b0a6f8e465f5b969ea88d78cb3883a308b1c8c19f68e3c9cef2f6a0b40584",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T14:48:29.620000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.9.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:33:53.488000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "5f904a3e3a93dc782c77a0f4",
      "alm_examples": [
        {
          "api_version": "openliberty.io/v1beta1",
          "kind": "OpenLibertyApplication",
          "metadata": {
            "name": "demo-app"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
            "expose": true,
            "replicas": 1
          }
        },
        {
          "api_version": "openliberty.io/v1beta1",
          "kind": "OpenLibertyDump",
          "metadata": {
            "name": "example-dump"
          },
          "spec": {
            "include": [
              "heap",
              "thread"
            ],
            "podName": "Specify_Pod_Name_Here"
          }
        },
        {
          "api_version": "openliberty.io/v1beta1",
          "kind": "OpenLibertyTrace",
          "metadata": {
            "name": "example-trace"
          },
          "spec": {
            "podName": "Specify_Pod_Name_Here",
            "traceSpecification": "*=info:com.ibm.ws.webcontainer*=all"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/open-liberty-operator-bundle@sha256:66987dd9d568c2b004a358c9fbbb5c89a74a7512bd43599b2463b08cf44724a4",
      "bundle_path_digest": "sha256:66987dd9d568c2b004a358c9fbbb5c89a74a7512bd43599b2463b08cf44724a4",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-21T14:48:30.398000+00:00",
      "csv_description": "This advanced Operator can be used to deploy and manage Open Liberty applications with consistent, production-grade QoS. This operator is based on the [Runtime Component Operator](https://github.com/application-stacks/runtime-component-operator) and provides all of its capabilities in addition to Open Liberty specific features such as gathering traces and dumps (Day-2 operations) and easily configuring and managing the single sign-on information for your Open Liberty applications.\nOpen Liberty Operator enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n#### Application Lifecyle\nYou can deploy your Open Liberty application container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configured a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\nYou can also easily configure and use a single storage for serviceability related Day-2 operations, such as gatherig server traces and dumps.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n\n#### Single Sign-On (SSO)\nOpen Liberty provides capabilities to delegate authentication to external providers. Your application users can log in using their existing social media credentials from providers such as Google, Facebook, LinkedIn, Twitter, GitHub, and any OpenID Connect (OIDC) or OAuth 2.0 clients.\nOpen Liberty Operator allows to easily configure and manage the single sign-on information for your applications.\n#### Exposing metrics to Prometheus\nThe Open Liberty Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the OpenLibertyApplication's `spec.monitoring` key controlling things like the poll internal and security credentials.\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your application to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your OpenLibertyApplication CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift's Certificate Manager\nThe Open Liberty Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to automatically provision TLS certificates for pods as well as routes.\nWhen creating certificates via the OpenLibertyApplication CR the user can specify a particular issuer name and toggle the scopes between ClusterIssuer (cluster scoped) and Issuer (namespace scoped). If not specified, these values are retrieved from a ConfigMap, with a default value of `self-signed` and `ClusterIssuer`.\nThe certificate is mounted into the container via a Secret so that it is automatically refreshed once the certificate is updated.\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with Kubernetes Application Navigator (kAppNav) and OpenShift's Topology UI\nAutomatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/), allowing your runtime component to compose an umbrella [Application](https://github.com/kubernetes-sigs/application).  This integration allows users to monitor all constituents resources of the application and receive alerts when the health status of a component changes.  From an integrated panel users can also launch day-2-operations, such as viewing the Kibana / Grafana dashboards, and enabling trace for a component.\nDuring this integration we also set the corresponding labels to support OpenShift's Developer Topology UI,which allows you to visualize your entire set of deployments and how they are connected.\nSee our [**documentation**](https://github.com/OpenLiberty/open-liberty-operator/tree/master/doc/) for more information.",
      "csv_display_name": "Open Liberty Operator",
      "csv_metadata_description": "Deploy and manage applications running on Open Liberty",
      "csv_name": "open-liberty-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:46:30.907000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "open-liberty-certified",
      "provided_apis": [
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyApplication",
          "plural": "openlibertyapplications",
          "version": "v1beta1"
        },
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyDump",
          "plural": "openlibertydumps",
          "version": "v1beta1"
        },
        {
          "group": "openliberty.io",
          "kind": "OpenLibertyTrace",
          "plural": "openlibertytraces",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator@sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "name": "open-liberty-operator-7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38-annotation"
        },
        {
          "digest": "sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "image": "registry.connect.redhat.com/ibm/open-liberty-operator@sha256:7e439b96d0ab5cbf38bdbd39feffd80370fed748430807a7fd1c1ba7d1e17d38",
          "name": "open-liberty-operator"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "5f904a3f3a93dc782c77a0f5",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:b29e83b16f2f1d536f3d369964dd7e892768a6a5b439915f85770f7c055bd6e0",
      "bundle_path_digest": "sha256:b29e83b16f2f1d536f3d369964dd7e892768a6a5b439915f85770f7c055bd6e0",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-21T14:48:31.342000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "artifactory-ha-operator.v1.1.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:53:39.580000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.2",
      "version_original": "1.1.2"
    },
    {
      "_id": "5f904a41a52503de7b020737",
      "alm_examples": [
        {
          "api_version": "openunison.tremolo.io/v1",
          "kind": "OpenUnison",
          "metadata": {
            "name": "test-openunison"
          },
          "spec": {
            "dest_secret": "openunison",
            "enable_activemq": false,
            "hosts": [
              {
                "ingress_name": "openunison",
                "names": [
                  {
                    "env_var": "OU_HOST",
                    "name": "test.apps.mydomain.com"
                  }
                ]
              }
            ],
            "key_store": {
              "key_pairs": {
                "create_keypair_template": [
                  {
                    "name": "ou",
                    "value": "k8s"
                  },
                  {
                    "name": "o",
                    "value": "Tremolo Security"
                  },
                  {
                    "name": "l",
                    "value": "Alexandria"
                  },
                  {
                    "name": "st",
                    "value": "Virginia"
                  },
                  {
                    "name": "c",
                    "value": "US"
                  }
                ],
                "keys": [
                  {
                    "create_data": {
                      "ca_cert": true,
                      "key#": 2048,
                      "server_name": "test-openunison.openunison.svc.cluster.local",
                      "sign_by_k8s_ca": false,
                      "subject_alternative_names": []
                    },
                    "import_into_ks": "keypair",
                    "name": "unison-tls",
                    "tls_secret_name": "unison-tls-secret"
                  }
                ]
              },
              "static_keys": [
                {
                  "name": "session-unison",
                  "version": 1
                }
              ],
              "trusted_certificates": []
            },
            "non_secret_data": [
              {
                "name": "REG_CRED_USER",
                "value": "rh_user"
              },
              {
                "name": "TEST_USER_NAME",
                "value": "testuser"
              },
              {
                "name": "MYVD_CONFIG_PATH",
                "value": "WEB-INF/myvd.conf"
              },
              {
                "name": "unisonKeystorePath",
                "value": "/etc/openunison/unisonKeyStore.p12"
              }
            ],
            "openshift": {
              "builder_image": "registry.connect.redhat.com/tremolosecurity/openunison-s2i-10",
              "git": {
                "branch": "master",
                "dir": "/",
                "repo": "https://github.com/TremoloSecurity/openunison-qs-simple.git"
              }
            },
            "openunison_network_configuration": {
              "activemq_dir": "/tmp/amq",
              "allowed_client_names": [],
              "ciphers": [
                "TLS_RSA_WITH_RC4_128_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA",
                "TLS_RSA_WITH_AES_256_CBC_SHA",
                "TLS_RSA_WITH_3DES_EDE_CBC_SHA",
                "TLS_RSA_WITH_AES_128_CBC_SHA256",
                "TLS_RSA_WITH_AES_256_CBC_SHA256"
              ],
              "client_auth": "none",
              "force_to_secure": true,
              "open_external_port": 80,
              "open_port": 8080,
              "path_to_deployment": "/usr/local/openunison/work",
              "path_to_env_file": "/etc/openunison/ou.env",
              "quartz_dir": "/tmp/quartz",
              "secure_external_port": 443,
              "secure_key_alias": "unison-tls",
              "secure_port": 8443
            },
            "replicas": 1,
            "secret_data": [
              "unisonKeystorePassword",
              "TEST_USER_PASSWORD",
              "REG_CRED_PASSWORD"
            ],
            "source_secret": "openunison-secrets-source"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tremolosecurity/openunison-operator-bundle@sha256:bf50b128eefd6fb80e48f08aa8f6e6f3f384ca3d76641e7d2f5df73b055f6fbf",
      "bundle_path_digest": "sha256:bf50b128eefd6fb80e48f08aa8f6e6f3f384ca3d76641e7d2f5df73b055f6fbf",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-21T14:48:33.340000+00:00",
      "csv_description": "The OpenUnison operator automates the deployment of OpenUnison in OpenShift and OKD.  This operator will generate all the objects needed to run OpenUnison and keep them up-to-date.  On OpenShift OpenUnison is built and deployed via a Red Hat certified Source-to-Image (s2i) builder that generates a container based on your configuration.  The default example provided by the operator is a simple login page.  Tremolo Security offers [Orchestra for OpenShift](https://www.tremolosecurity.com/openshift/) to manage authentication, authorization and project onboarding for your OpenShift clusters.  \n\n## Before You Start\n\nBefore deploying, obtain an account for Red Hat Connect to be able to access certified images. Next create a source secret with information that shouldn't be stored in the `OpenUnison` custom resource, referenced by the `source_secret` attribute.  The minimal data in this secret should be at least:\n\n* `unisonKeystorePassword` - The password to use for the generated keystore\n* `REG_CRED_PASSWORD` - Your password for Red Hat Connect\n* `TEST_USER_PASSWORD` - The password for your test user \n\n An example of creating a secret used by the example configuration is:\n  \n```\n$ mkdir secret\n$ cd secret\n$ echo 'my_secret_password'  > unisonKeystorePassword\n$ echo 'my_rh_connect_password'  > REG_CRED_PASSWORD\n$ echo 'my_test_user_password'  > TEST_USER_PASSWORD\n$ oc create secret generic openunison-secrets-source --from-file=.\n```\n  \nYou should edit the `hosts` \\ `names` \\ `name` variable from `test.apps.mydomain.com` to whatever you want the host of your OpenUnison instance to be.  The operator will generate a `Route` based on this hostname with `reencrypt` enabled.  Also, update `key_store` \\ 'key_pairs' \\ `keys` for the `server_name` to reflect the correct `Service` name for your OpenUnison.  For instance if your `OpenUnison` CR has the name `test-openunison` and is being deployed in the `openunison` namespace this value should be `test-openunison.openunison.svc.cluster.local`.\n\n## Testing\n\nOnce deployed, point your browser to the host name you created via TLS (ie https://myapp.apps.domain.com)\n\n## Updating Keys\n\nThe operator builds a keystore for OpenUnison based on secrets referenced in the `OpenUnison` custom resource.  To regenerate self signed certificates (such as the default `unison-tls` certificate), simple delete the secret and update the custom resource.  To use certificates signed by a third party CA, create the secret and reference it in your `OpenUnison` custom resource.\n\n## New Images and Configuration\n\nThe OpenUnison Operator generates an OpenShift `BuildConfig` object and `ImageStream` objects.  The certified s2i builder image is rebuilt auotmaticlly by Red Hat as new packages are made available.  To update your deployment's container, simply tag it to your image stream.  To point to a new git repository for the configuration of OpenUnison, update the CR.",
      "csv_display_name": "OpenUnison",
      "csv_metadata_description": "OpenUnison Operator provides identity management and automation services including Single Sign-On (SSO), workflow based user provisioning, self service access management, auditing and reporting",
      "csv_name": "openunison.1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:46:02.166000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openunison-ocp-certified",
      "provided_apis": [
        {
          "group": "openunison.tremolo.io",
          "kind": "OpenUnison",
          "plural": "openunisons",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-operator@sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "name": "openunison-operator-1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db-annotation"
        },
        {
          "digest": "sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-operator@sha256:1fc3e5d2f54c0cf3668bc070450e0f0f7c5917ca36c0934ea639dbb249ac97db",
          "name": "openunison-operator"
        },
        {
          "digest": "sha256:185b4e9fae41900ccc07ce90622c9e128c832bcfe180ae1362c7b033747dcebf",
          "image": "registry.connect.redhat.com/tremolosecurity/activemq@sha256:185b4e9fae41900ccc07ce90622c9e128c832bcfe180ae1362c7b033747dcebf",
          "name": "amq"
        },
        {
          "digest": "sha256:5a91e1de68f3ce1d2fb837e09c6090da609882c42840859650e62b218904486c",
          "image": "registry.connect.redhat.com/tremolosecurity/openunison-s2i-10@sha256:5a91e1de68f3ce1d2fb837e09c6090da609882c42840859650e62b218904486c",
          "name": "s2i"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5f91cd017dfea609c170ab0c",
      "alm_examples": [
        {
          "api_version": "tufin.io/v1alpha1",
          "kind": "Orca",
          "metadata": {
            "name": "orca"
          },
          "spec": {
            "components": {
              "conntrack": true,
              "dns": false,
              "istio": false,
              "kube-network-policy": true,
              "pusher": true,
              "syslog": false,
              "watcher": true
            },
            "domain": "generic-bank",
            "endpoints": {
              "guru": "guru.tufin.io:443",
              "orca": "https://securecloud.tufin.io",
              "registry": "registry.tufin.io"
            },
            "ignored_config_maps": [
              "kube-system/ingress-gce-lock",
              "istio-system/istio-ingress-controller-leader-istio"
            ],
            "images": {
              "kite": "registry.connect.redhat.com/tufin/kite",
              "monitor": "registry.connect.redhat.com/tufin/monitor"
            },
            "kube_platform": "Openshift",
            "namespace": "tufin-system",
            "project": "openshift4"
          }
        },
        {
          "api_version": "networking.tufin.io/v1",
          "kind": "Policy",
          "metadata": {
            "name": "orca",
            "namespace": "placeholder"
          },
          "spec": {
            "mode": "learning",
            "networkPolicyAllowAll": true,
            "rules": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tufin/orca-operator-bundle@sha256:3ea67ab24efcb9b693d57ba2624de6c9dd5745c788d669dff0562c4b283d447b",
      "bundle_path_digest": "sha256:3ea67ab24efcb9b693d57ba2624de6c9dd5745c788d669dff0562c4b283d447b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-22T18:18:41.477000+00:00",
      "csv_description": "Tufin SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes clusters, containers and microservices.\nThe SecureCloud Operator installs SecureCloud resources into your cluster. These work with the SecureCloud cloud application to give the following functionality:\n* Monitor the cluster configuration: namespaces, containers, pods, services, network policies etc.\n* Learn and visualize the cluster connectivity\n* Build a connectivity policy (whitelist)\n* Generate audit reports\n* Alert on unauthorized connections\n* Enforce the connectivity policy in the cluster and on enterprise firewalls surrounding the cluster\n* Integrate into the CI/CD pipeline to learn and update the policy continuously\n* Scan images for vulnerabilities\n## Deploying the agent\n* Sign up to SecureCloud [here] (https://www.tufin.com/tufin-orchestration-suite/securecloud)\n* You will be sent an email containing your deployment parameters\n* Complete the deployment following the instructions for generating the agent's secret [here] (https://github.com/Tufin/orca-operator/blob/master/docs/install_securecloud_operator.md)",
      "csv_display_name": "Tufin SecureCloud Operator",
      "csv_metadata_description": "Installs the SecureCloud Agent on the cluster. SecureCloud is a cloud-based security monitoring and enforcement platform for Kubernetes.",
      "csv_name": "orca-operator.v1.0.197",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:47:50.594000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "orca",
      "provided_apis": [
        {
          "group": "networking.tufin.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "tufin.io",
          "kind": "Orca",
          "plural": "orcas",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator-dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f-annotation"
        },
        {
          "digest": "sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "image": "registry.connect.redhat.com/tufin/orca-operator@sha256:dfe69f95b629f1380879eee8e09dc1d51ebecf2a9cae18b254a3da6fd0f2951f",
          "name": "orca-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.197",
      "version_original": "1.0.197"
    },
    {
      "_id": "5f91cd026c4f348b547ea8d7",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/perceptilabs/perceptilabs-operator-bundle@sha256:30aed432c70f6bd3da4e6365e32da1877affa4b56458c17549b119de17eaa932",
      "bundle_path_digest": "sha256:30aed432c70f6bd3da4e6365e32da1877affa4b56458c17549b119de17eaa932",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-22T18:18:42.633000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "perceptilabs-operator.v1.0.20",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:52:12.720000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "perceptilabs-operator-package",
      "provided_apis": [
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1"
        },
        {
          "group": "perceptilabs.com",
          "kind": "PerceptiLabs",
          "plural": "perceptilabs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.20",
      "version_original": "1.0.20"
    },
    {
      "_id": "5f91f7f253a2a7b1801a59aa",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/storware/vprotect-operator-bundle@sha256:119f046b27bcf6bc70b1f04d56fe86e8d1c223c8c5ba238f323821a4c14b4bae",
      "bundle_path_digest": "sha256:119f046b27bcf6bc70b1f04d56fe86e8d1c223c8c5ba238f323821a4c14b4bae",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-22T21:21:54.739000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "vprotect-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:16:44.241000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "vprotect-operator",
      "provided_apis": [
        {
          "group": "vprotect.storware.com",
          "kind": "VProtectDBServerNode",
          "plural": "vprotectdbservernodes",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5f91f7f47dfea609c170ab0d",
      "alm_examples": [
        {
          "api_version": "wavefront.com/v1alpha1",
          "kind": "WavefrontProxy",
          "metadata": {
            "name": "example-wavefrontproxy",
            "namespace": "wavefront"
          },
          "spec": {
            "enableAutoUpgrade": false,
            "image": "registry.connect.redhat.com/wavefronthq/proxy@sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
            "openshift": true,
            "storageClaimName": "wavefront-proxy-storage",
            "token": "<TOKEN>",
            "url": "<https://YOUR_CLUSTER.wavefront.com/api/>"
          }
        },
        {
          "api_version": "wavefront.com/v1alpha1",
          "kind": "WavefrontCollector",
          "metadata": {
            "name": "wavefront-collector",
            "namespace": "wavefront"
          },
          "spec": {
            "daemon": true,
            "enableAutoUpgrade": false,
            "env": [
              {
                "name": "HOST_PROC",
                "value": "/host/proc"
              },
              {
                "name": "POD_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "POD_NAMESPACE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "image": "registry.connect.redhat.com/wavefronthq/wavefront-kubernetes-collector@sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
            "openshift": true,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node.alpha.kubernetes.io/role",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "useOpenshiftDefaultConfig": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/wavefront-operator-bundle@sha256:a1cba5d7638a711eaf477dccff47d7a1bb83490c2bb05371a950b8e593bc59f4",
      "bundle_path_digest": "sha256:a1cba5d7638a711eaf477dccff47d7a1bb83490c2bb05371a950b8e593bc59f4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-22T21:21:56.396000+00:00",
      "csv_description": "Wavefront OpenShift Operator automatically deploys Wavefront Collector for Kubernetes and Wavefront Proxy, enabling developers and OpenShift operators to get automated observability across the OpenShift environment, including containerized applications, Kubernetes, and underlying infrastructure. \n\nThis Operator deploys two Custom Resources Definitions:\n\n* **Wavefront Proxy:-** A Wavefront proxy ingests metrics and forwards them to the Wavefront service in a secure, fast, and reliable manner. After you install a proxy in your environment, it can handle thousands of simultaneous clients. Your data collection agents or custom code send data to the proxy, which consolidates points into configurable batches and sends the data to the Wavefront service.\n\n* **Wavefront Collector:-** With zero-configuration installation, the Wavefront Collector for Kubernetes auto-discovers and enables monitoring of Kubernetes, infrastructure, and Kubernetes workloads by sending full-stack - Kubernetes clusters, worker nodes, system, Kubernetes and Docker KPI, RED/USE of each layer and custom applications metrics to Wavefront.\n\n### Prerequisite\n\n* A Wavefront API token is needed to configure Wavefront Proxy.  Refer [Generating an API Token] (https://docs.wavefront.com/users_account_managing.html#generating-an-api-token) for generating a token.\n\n### Installing Wavefront Operator using default values\n\n* Create project with name *wavefront* in Openshift and install Wavefront Operator into it.  \n* Create Wavefront Proxy by providing Wavefront API token and URL in the Wavefront Proxy definition. \n* Create Wavefront Collector.\n\n### Advanced Options\n\nRefer Wavefront Operator [docs] (https://github.com/wavefrontHQ/wavefront-operator/blob/master/docs/openshift-operator.md) for configuring Wavefront Proxy and Wavefront Collector using advanced configuration parameters.\n",
      "csv_display_name": "Wavefront Operator",
      "csv_metadata_description": "Wavefront OpenShift Operator automatically deploys Wavefront Collector for Kubernetes and Wavefront Proxy.",
      "csv_name": "wavefront-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:57:42.545000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "wavefront-operator",
      "provided_apis": [
        {
          "group": "wavefront.com",
          "kind": "WavefrontCollector",
          "plural": "wavefrontcollectors",
          "version": "v1alpha1"
        },
        {
          "group": "wavefront.com",
          "kind": "WavefrontProxy",
          "plural": "wavefrontproxies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-operator@sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "name": "wavefront-operator-5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6-annotation"
        },
        {
          "digest": "sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-operator@sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "name": "wavefront-operator"
        },
        {
          "digest": "sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-kubernetes-collector@sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
          "name": "wavefront-kubernetes-collector-25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc-annotation"
        },
        {
          "digest": "sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
          "image": "registry.connect.redhat.com/wavefronthq/proxy@sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
          "name": "proxy-5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5f91f7f653a2a7b1801a59ac",
      "alm_examples": [
        {
          "api_version": "yugabyte.com/v1alpha1",
          "kind": "YBCluster",
          "metadata": {
            "name": "example-ybcluster",
            "namespace": "yb-operator"
          },
          "spec": {
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/yugabytedb/yugabyte",
              "tag": "2.1.2.0"
            },
            "master": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "masterRPCPort": 7100,
              "masterUIPort": 7000,
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              }
            },
            "replicationFactor": 3,
            "subresources": {
              "status": {}
            },
            "tls": {
              "enabled": true,
              "rootCA": {
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lVUk9vY2RNbUxZU2YwOWRkQTBPa0VWODJtTTRVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERVJNQThHQTFVRUNnd0lXWFZuWVdKNWRHVXhHekFaQmdOVkJBTU1Fa05CSUdadmNpQlpkV2RoWW5sMApaU0JFUWpBZUZ3MHhPVEE1TWpNd09URXhNalphRncweE9URXdNak13T1RFeE1qWmFNREF4RVRBUEJnTlZCQW9NCkNGbDFaMkZpZVhSbE1Sc3dHUVlEVlFRRERCSkRRU0JtYjNJZ1dYVm5ZV0o1ZEdVZ1JFSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3hMd3hMeTZjYjhZdS9laFlmU3pteWVqcEw1cjZVSnFmeApWVDF5SUJWSktzNnZPR0QzRWdhSzZaVVZkODBzOGdZU3hzbG1UREh0cnNyWXhCSVMwRXJMVFFsODZVUVd5d1lsCjkvT09FYzdGUVRoWmdsZHRDQmwxNUZSSmp4TGk0LzFJUU1xaU93TDlGM0xjQ3JobXF1bVZKWXJmVGRtNnp4YXkKY0Q3ZlNISGw5Y3phYWFGUGRRa2JZaUt0V0p2cmJ1WEx2QkhleE0rL2FhaVIwY2FBTE94RkhKRlE0N2E1cWwvVQpOcld6emJuVjFZTkRGcEJmLzY2cm95WFh5L2xGMmhWWStYampudlRNL2M0bURWRHRRcDVKVXR6UGhGZ3ZhQngyClUvL2paeFBPblc5dVU4THdFeVdzeWhPNTNWcEREN3VMSHFHYnFrZWd0OVBtTmZsT1QwMlhBZ01CQUFHakpqQWsKTUE0R0ExVWREd0VCL3dRRUF3SUM1REFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQitXS0NlS3JiYXkwaFNMdjMreUlEWEkvaEw5TEY1N3pDUzNtRU1JTEJXcUVXbUN1R25WVXNFCktSMXA0VzBPSERXbStzTWNtbm1EcUM4U1VZMHlOM2htYnVGWWViZUs5bks0R3IzQ0VtTGk2Q3dxbzJtcWZLVHkKSk9sSU5KZDFFdW1jSlVBUEtmVGNxVkdSWlpITFlHMTVsckpyNjNMaTlYbHhqajlNNEpCejJnd2dsQ3Bqa1BxMwpSazgvYnZSbHhaNVdlNVZ1RUtTckZRNForditkSS9peFpwdjQ3UHY1TTM3bHdLRlQ5amRxbW8zbE82ODNFcEljCnF6bStrclUyb2VhZUphVUFnWlRFU296VUZGb053QzUyTjR3YWlndXo0TU5pa3ZIYWtiTEpEdW9zQTRhQTBnN0sKb2s3K2UvKzlWY0hEUllSaFN5VVhkanB2SmdyVUEyeVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1M4TVM4dW5HL0dMdjNvV0gwczVzbm82UythK2xDYW44VlU5Y2lBVlNTck9yemhnCjl4SUdpdW1WRlhmTkxQSUdFc2JKWmt3eDdhN0syTVFTRXRCS3kwMEpmT2xFRnNzR0pmZnpqaEhPeFVFNFdZSlgKYlFnWmRlUlVTWThTNHVQOVNFREtvanNDL1JkeTNBcTRacXJwbFNXSzMwM1p1czhXc25BKzMwaHg1ZlhNMm1taApUM1VKRzJJaXJWaWI2MjdseTd3UjNzVFB2Mm1va2RIR2dDenNSUnlSVU9PMnVhcGYxRGExczgyNTFkV0RReGFRClgvK3VxNk1sMTh2NVJkb1ZXUGw0NDU3MHpQM09KZzFRN1VLZVNWTGN6NFJZTDJnY2RsUC80MmNUenAxdmJsUEMKOEJNbHJNb1R1ZDFhUXcrN2l4NmhtNnBIb0xmVDVqWDVUazlObHdJREFRQUJBb0lCQUJwbEd0elR1dEpEMm9Dcwp6RXpmSlBvOGtTQ3JnQ3FMMDZyMCt0RmNqQzg1TEU4WUJBSHFjb1VSSlA5c3VHa0FxUHoxRmgyaUxqSHRQeFNwCnFOT2FxZm05UVRPVmdHb3cxbnFqaEduZXAwSGxaR0taTXpMdjZQTVNENmhob3Z1ZjRTUjVXblp1ZWhTQUFNRmMKNjNtSDdvSWtkSnF0ZTBrRC9xcVlaQlZaTW5hQ053cGpsQ0dLYmZLbjlDTHpGSUxhckxiNm4zR2x6dmpRTC9nTAphd3VnNlh5WThvcTlEVjBrZkpEV0lVZFRIc1lFYXFHcGNFWkwvNWZPSlVVcTdSSzV2eWxTVmUrWFZ5OE5jZm1sCk4rQUMrcGNwVFRRR2V0SXZsZWpsT1VhUDRTU3FNckdSUVd1Zk5pSG11a1ZtWXo5bUFsN3pRQ2xyWTZEODNBOUwKQkVkMmNYa0NnWUVBMktRVmNhVDlGRFM2ZENPdHZFL2hPUDhSNVAvY21JSjFNMXhKY2hzL1IxcUdjd0RqWkZiRwp0RGFFNVNwVExidjg4d2hKb2FDbWhlbE9renFRaWIrNXNZU2tqZERVTThIUTlhWXk3aGlxT29jL3dFUlB6ZGRRCmUyelhYRHd2QWQ2VGc3OWpLV2NhOWZxcUw0azRWOVBtbHlrVjRUVDVoaHBhVkFqbi82VDZGYXNDZ1lFQTBWL1MKT0JSdzQraEIwU0JiUU1rNTcxdk1mUEdtR0dLb1BPRWRsRzBCY0RsZTF3Wk5yQ01mYVJWdUFMOFFuQ3ZOZXg2Two1UEtUN0tOeXh5Q21IOWlaQXZjeGRjbHF5aHNncHVtTDhhM0tsb1RuSU9vSHdobUVhMWxoVCtHY01QZzEvVTl4ClVqZEY2Y0tmSFFJd2FYYkNHUTVzaFhBUU0yVU5HbStYa0ZmeTQ4VUNnWUJ3d0cxOHVVOFNmaUx3b1VVaDlqMFYKQ2dRSk9IVmFWc09pMkl4TlBBc2lHdVpRNG94Mnc0Y2xjaDZXbXdHeGt0NmlxcFNQNzJuYjFrS1Q4KzRZRTFZVgpJeUQxd2xNL0lNZWRva050a2g2KzJYZC9uTTRnSnNqM2cvMU9QdkNFTzVCeENHSVd3VmZSNEFWRk9saTl0VWFWCk04ZjBienJTNWRKUFhGZEt3VlY3Z3dLQmdBak5NV1lnSGRyRzBiVjcyYm93ZTFuL2p1b1ZzbmpGOVBLU09BOGMKUWZvNHZ5N2syZkVKalBGNjhDUGg1RTNjWFlmMmNlVlgrVFh5YlFuSDZwUGVKQmlHMGJKMDVDTlkzcGVGcTlkZQpDZTBuNnh0c0d5VmlzemxjQ1lZMUlyN0FRR3pFb1N2bW5PN0Z1ckNhZmZTQkJJblBIR3JEbWpxKzNiMGx3Y1pVCm5DWk5Bb0dCQUpJYmZKSVNkbFlBalRwYnRVbVd0K2tlemNlWVdsUkxENHNOcWx2SWQ0U2JUbmEwR2FRSWRVSHIKWWU5RjhpTVgweWh1WWhzUXoraHlkZDhCVW44TXgwRVN6c2g3d0tpak5jenJpV3JUODlmYmlxVUpocFZvWUhWNwpQVExTZ1pSUDFyUU9UekpGVEkzdjMyNkg1dzFlZzJ0NUFOcnRWenFYTng4N2FOTXQwWGNQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
              }
            },
            "tserver": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              },
              "tserverRPCPort": 9100,
              "tserverUIPort": 9000,
              "ycqlPort": 9042,
              "yedisPort": 6379,
              "ysqlPort": 5433
            }
          }
        },
        {
          "api_version": "yugabyte.com/v1alpha1",
          "kind": "YBCluster",
          "metadata": {
            "name": "yb-test-1",
            "namespace": "yb-demo"
          },
          "spec": {
            "master": {
              "replicas": 3,
              "storage": {
                "size": "1Gi"
              }
            },
            "replicationFactor": 3,
            "tserver": {
              "replicas": 3,
              "storage": {
                "count": 1,
                "size": "1Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/yugabytedb/yugabyte-operator-bundle@sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "bundle_path_digest": "sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-22T21:21:58.496000+00:00",
      "csv_description": "\nYugabyteDB is distributed SQL database serving both scale-out RDBMS and internet-scale OLTP workloads with low query latency, \nextreme resilience against failures and global data distribution. YugabyteDB Kubernetes offering provides a\nkubernetes native custom resource viz. `ybclusters.yugabyte.com` for deploying and managing the YugabyteDB Clusters.\n\n### Installing YugabyteDB\n\nOnce you've installed the Operator, you can create YugabyteDB cluster using custom resource `ybcluster`. For assistance please refer to \n[deploy yugabyteDB cluster using CRD](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/)\n\n### Supported parameters\n* **Image Override** - Mention YugabyteDB Docker image attributes such as repository, tag and pullPolicy under image.\n* **Replication Factor** - The desired replication factor for YugabyteDB Cluster. Default RF-3.\n* **Master Pod Count** - The desired pod count for master. Default is 3\n* **T-server Pod Count** - The desired pod count for tserver. Default is 3.\n* **Enable TLS** - Enable TLS encryption for YugabyteDB, if desired. It is disabled by default. To enable TLS communication \n                   refer to [configuring TLS](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/#tls).\n\n\n### Getting Started\n\nHere are a few resources for getting started with YugaByte DB:\n\n* [Quick start guide](http://docs.yugabyte.com/latest/quick-start/) - install, create a local cluster and read/write from YugaByte DB.\n* [Explore core features](https://docs.yugabyte.com/latest/explore/) - automatic sharding & re-balancing, linear scalability, fault tolerance, tunable reads etc.\n* [Ecosystem integrations](https://docs.yugabyte.com/latest/develop/ecosystem-integrations/) - integrations with Apache Kafka/KSQL, Apache Spark, JanusGraph, KairosDB, Presto and more.\n* [Real world apps](https://docs.yugabyte.com/latest/develop/realworld-apps/) - sample real-world, end-to-end applications built using YugaByte DB.\n* [Architecture docs](https://docs.yugabyte.com/latest/architecture/) - to understand how YugaByte DB was designed and how it works\n\n### Help\n\nCannot find what you are looking for? Have a question? We love to hear from you - [please file a GitHub issue](https://github.com/YugaByte/yugabyte-db/issues) or talk to us live at [Slack](https://www.yugabyte.com/slack).\n",
      "csv_display_name": "Yugabyte Operator",
      "csv_metadata_description": "deploy and manage YugabyteDB clusters using kubernetes CRD ybclusters.yugabyte.com",
      "csv_name": "yugabyte-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:26:40.810000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "yugabyte-operator",
      "provided_apis": [
        {
          "group": "yugabyte.com",
          "kind": "YBCluster",
          "plural": "ybclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator-03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6-annotation"
        },
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "5f91f7f77dfea609c170ab0e",
      "alm_examples": [
        {
          "api_version": "yugabyte.com/v1alpha1",
          "kind": "YBCluster",
          "metadata": {
            "name": "example-ybcluster",
            "namespace": "yb-operator"
          },
          "spec": {
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/yugabytedb/yugabyte",
              "tag": "2.1.2.0"
            },
            "master": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "masterRPCPort": 7100,
              "masterUIPort": 7000,
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              }
            },
            "replicationFactor": 3,
            "subresources": {
              "status": {}
            },
            "tls": {
              "enabled": true,
              "rootCA": {
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lVUk9vY2RNbUxZU2YwOWRkQTBPa0VWODJtTTRVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERVJNQThHQTFVRUNnd0lXWFZuWVdKNWRHVXhHekFaQmdOVkJBTU1Fa05CSUdadmNpQlpkV2RoWW5sMApaU0JFUWpBZUZ3MHhPVEE1TWpNd09URXhNalphRncweE9URXdNak13T1RFeE1qWmFNREF4RVRBUEJnTlZCQW9NCkNGbDFaMkZpZVhSbE1Sc3dHUVlEVlFRRERCSkRRU0JtYjNJZ1dYVm5ZV0o1ZEdVZ1JFSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3hMd3hMeTZjYjhZdS9laFlmU3pteWVqcEw1cjZVSnFmeApWVDF5SUJWSktzNnZPR0QzRWdhSzZaVVZkODBzOGdZU3hzbG1UREh0cnNyWXhCSVMwRXJMVFFsODZVUVd5d1lsCjkvT09FYzdGUVRoWmdsZHRDQmwxNUZSSmp4TGk0LzFJUU1xaU93TDlGM0xjQ3JobXF1bVZKWXJmVGRtNnp4YXkKY0Q3ZlNISGw5Y3phYWFGUGRRa2JZaUt0V0p2cmJ1WEx2QkhleE0rL2FhaVIwY2FBTE94RkhKRlE0N2E1cWwvVQpOcld6emJuVjFZTkRGcEJmLzY2cm95WFh5L2xGMmhWWStYampudlRNL2M0bURWRHRRcDVKVXR6UGhGZ3ZhQngyClUvL2paeFBPblc5dVU4THdFeVdzeWhPNTNWcEREN3VMSHFHYnFrZWd0OVBtTmZsT1QwMlhBZ01CQUFHakpqQWsKTUE0R0ExVWREd0VCL3dRRUF3SUM1REFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQitXS0NlS3JiYXkwaFNMdjMreUlEWEkvaEw5TEY1N3pDUzNtRU1JTEJXcUVXbUN1R25WVXNFCktSMXA0VzBPSERXbStzTWNtbm1EcUM4U1VZMHlOM2htYnVGWWViZUs5bks0R3IzQ0VtTGk2Q3dxbzJtcWZLVHkKSk9sSU5KZDFFdW1jSlVBUEtmVGNxVkdSWlpITFlHMTVsckpyNjNMaTlYbHhqajlNNEpCejJnd2dsQ3Bqa1BxMwpSazgvYnZSbHhaNVdlNVZ1RUtTckZRNForditkSS9peFpwdjQ3UHY1TTM3bHdLRlQ5amRxbW8zbE82ODNFcEljCnF6bStrclUyb2VhZUphVUFnWlRFU296VUZGb053QzUyTjR3YWlndXo0TU5pa3ZIYWtiTEpEdW9zQTRhQTBnN0sKb2s3K2UvKzlWY0hEUllSaFN5VVhkanB2SmdyVUEyeVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1M4TVM4dW5HL0dMdjNvV0gwczVzbm82UythK2xDYW44VlU5Y2lBVlNTck9yemhnCjl4SUdpdW1WRlhmTkxQSUdFc2JKWmt3eDdhN0syTVFTRXRCS3kwMEpmT2xFRnNzR0pmZnpqaEhPeFVFNFdZSlgKYlFnWmRlUlVTWThTNHVQOVNFREtvanNDL1JkeTNBcTRacXJwbFNXSzMwM1p1czhXc25BKzMwaHg1ZlhNMm1taApUM1VKRzJJaXJWaWI2MjdseTd3UjNzVFB2Mm1va2RIR2dDenNSUnlSVU9PMnVhcGYxRGExczgyNTFkV0RReGFRClgvK3VxNk1sMTh2NVJkb1ZXUGw0NDU3MHpQM09KZzFRN1VLZVNWTGN6NFJZTDJnY2RsUC80MmNUenAxdmJsUEMKOEJNbHJNb1R1ZDFhUXcrN2l4NmhtNnBIb0xmVDVqWDVUazlObHdJREFRQUJBb0lCQUJwbEd0elR1dEpEMm9Dcwp6RXpmSlBvOGtTQ3JnQ3FMMDZyMCt0RmNqQzg1TEU4WUJBSHFjb1VSSlA5c3VHa0FxUHoxRmgyaUxqSHRQeFNwCnFOT2FxZm05UVRPVmdHb3cxbnFqaEduZXAwSGxaR0taTXpMdjZQTVNENmhob3Z1ZjRTUjVXblp1ZWhTQUFNRmMKNjNtSDdvSWtkSnF0ZTBrRC9xcVlaQlZaTW5hQ053cGpsQ0dLYmZLbjlDTHpGSUxhckxiNm4zR2x6dmpRTC9nTAphd3VnNlh5WThvcTlEVjBrZkpEV0lVZFRIc1lFYXFHcGNFWkwvNWZPSlVVcTdSSzV2eWxTVmUrWFZ5OE5jZm1sCk4rQUMrcGNwVFRRR2V0SXZsZWpsT1VhUDRTU3FNckdSUVd1Zk5pSG11a1ZtWXo5bUFsN3pRQ2xyWTZEODNBOUwKQkVkMmNYa0NnWUVBMktRVmNhVDlGRFM2ZENPdHZFL2hPUDhSNVAvY21JSjFNMXhKY2hzL1IxcUdjd0RqWkZiRwp0RGFFNVNwVExidjg4d2hKb2FDbWhlbE9renFRaWIrNXNZU2tqZERVTThIUTlhWXk3aGlxT29jL3dFUlB6ZGRRCmUyelhYRHd2QWQ2VGc3OWpLV2NhOWZxcUw0azRWOVBtbHlrVjRUVDVoaHBhVkFqbi82VDZGYXNDZ1lFQTBWL1MKT0JSdzQraEIwU0JiUU1rNTcxdk1mUEdtR0dLb1BPRWRsRzBCY0RsZTF3Wk5yQ01mYVJWdUFMOFFuQ3ZOZXg2Two1UEtUN0tOeXh5Q21IOWlaQXZjeGRjbHF5aHNncHVtTDhhM0tsb1RuSU9vSHdobUVhMWxoVCtHY01QZzEvVTl4ClVqZEY2Y0tmSFFJd2FYYkNHUTVzaFhBUU0yVU5HbStYa0ZmeTQ4VUNnWUJ3d0cxOHVVOFNmaUx3b1VVaDlqMFYKQ2dRSk9IVmFWc09pMkl4TlBBc2lHdVpRNG94Mnc0Y2xjaDZXbXdHeGt0NmlxcFNQNzJuYjFrS1Q4KzRZRTFZVgpJeUQxd2xNL0lNZWRva050a2g2KzJYZC9uTTRnSnNqM2cvMU9QdkNFTzVCeENHSVd3VmZSNEFWRk9saTl0VWFWCk04ZjBienJTNWRKUFhGZEt3VlY3Z3dLQmdBak5NV1lnSGRyRzBiVjcyYm93ZTFuL2p1b1ZzbmpGOVBLU09BOGMKUWZvNHZ5N2syZkVKalBGNjhDUGg1RTNjWFlmMmNlVlgrVFh5YlFuSDZwUGVKQmlHMGJKMDVDTlkzcGVGcTlkZQpDZTBuNnh0c0d5VmlzemxjQ1lZMUlyN0FRR3pFb1N2bW5PN0Z1ckNhZmZTQkJJblBIR3JEbWpxKzNiMGx3Y1pVCm5DWk5Bb0dCQUpJYmZKSVNkbFlBalRwYnRVbVd0K2tlemNlWVdsUkxENHNOcWx2SWQ0U2JUbmEwR2FRSWRVSHIKWWU5RjhpTVgweWh1WWhzUXoraHlkZDhCVW44TXgwRVN6c2g3d0tpak5jenJpV3JUODlmYmlxVUpocFZvWUhWNwpQVExTZ1pSUDFyUU9UekpGVEkzdjMyNkg1dzFlZzJ0NUFOcnRWenFYTng4N2FOTXQwWGNQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
              }
            },
            "tserver": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              },
              "tserverRPCPort": 9100,
              "tserverUIPort": 9000,
              "ycqlPort": 9042,
              "yedisPort": 6379,
              "ysqlPort": 5433
            }
          }
        },
        {
          "api_version": "yugabyte.com/v1alpha1",
          "kind": "YBCluster",
          "metadata": {
            "name": "yb-test-1",
            "namespace": "yb-demo"
          },
          "spec": {
            "master": {
              "replicas": 3,
              "storage": {
                "size": "1Gi"
              }
            },
            "replicationFactor": 3,
            "tserver": {
              "replicas": 3,
              "storage": {
                "count": 1,
                "size": "1Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/yugabytedb/yugabyte-operator-bundle@sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "bundle_path_digest": "sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-22T21:21:59.706000+00:00",
      "csv_description": "\nYugabyteDB is distributed SQL database serving both scale-out RDBMS and internet-scale OLTP workloads with low query latency, \nextreme resilience against failures and global data distribution. YugabyteDB Kubernetes offering provides a\nkubernetes native custom resource viz. `ybclusters.yugabyte.com` for deploying and managing the YugabyteDB Clusters.\n\n### Installing YugabyteDB\n\nOnce you've installed the Operator, you can create YugabyteDB cluster using custom resource `ybcluster`. For assistance please refer to \n[deploy yugabyteDB cluster using CRD](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/)\n\n### Supported parameters\n* **Image Override** - Mention YugabyteDB Docker image attributes such as repository, tag and pullPolicy under image.\n* **Replication Factor** - The desired replication factor for YugabyteDB Cluster. Default RF-3.\n* **Master Pod Count** - The desired pod count for master. Default is 3\n* **T-server Pod Count** - The desired pod count for tserver. Default is 3.\n* **Enable TLS** - Enable TLS encryption for YugabyteDB, if desired. It is disabled by default. To enable TLS communication \n                   refer to [configuring TLS](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/#tls).\n\n\n### Getting Started\n\nHere are a few resources for getting started with YugaByte DB:\n\n* [Quick start guide](http://docs.yugabyte.com/latest/quick-start/) - install, create a local cluster and read/write from YugaByte DB.\n* [Explore core features](https://docs.yugabyte.com/latest/explore/) - automatic sharding & re-balancing, linear scalability, fault tolerance, tunable reads etc.\n* [Ecosystem integrations](https://docs.yugabyte.com/latest/develop/ecosystem-integrations/) - integrations with Apache Kafka/KSQL, Apache Spark, JanusGraph, KairosDB, Presto and more.\n* [Real world apps](https://docs.yugabyte.com/latest/develop/realworld-apps/) - sample real-world, end-to-end applications built using YugaByte DB.\n* [Architecture docs](https://docs.yugabyte.com/latest/architecture/) - to understand how YugaByte DB was designed and how it works\n\n### Help\n\nCannot find what you are looking for? Have a question? We love to hear from you - [please file a GitHub issue](https://github.com/YugaByte/yugabyte-db/issues) or talk to us live at [Slack](https://www.yugabyte.com/slack).\n",
      "csv_display_name": "Yugabyte Operator",
      "csv_metadata_description": "deploy and manage YugabyteDB clusters using kubernetes CRD ybclusters.yugabyte.com",
      "csv_name": "yugabyte-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:41:31.758000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "yugabyte-operator",
      "provided_apis": [
        {
          "group": "yugabyte.com",
          "kind": "YBCluster",
          "plural": "ybclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator-03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6-annotation"
        },
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "5f91f7f97fbd761308fd63e2",
      "alm_examples": [
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zabbix/zabbixoperator-certified-bundle@sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "bundle_path_digest": "sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "lts",
      "creation_date": "2020-10-22T21:22:01.615000+00:00",
      "csv_description": "## About this Operator\n\nZabbix helps you to real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices.\nThe Zabbix Operator allows users to easily deploy, manage, and maintain Zabbix deployments on OpenShift. By installing this integration you will be able to deploy Zabbix server / proxies and other components with a single command.\n## Supported Features\n* **Zabbix Server** - Simple Zabbix installation with included Zabbix server, Zabbix web-interface and Zabbix Java Gateway with MySQL database support. The feature does not provide MySQL service and requires an external MySQL database. \n* **Zabbix Server (Full)** - Zabbix installation with included Zabbix server, Zabbix web-interface, Zabbix Java Gateway and MySQL server instance.\n* **Zabbix proxy (SQLite3)** - Very simple way to gain power of Zabbix proxy. The feature has  SQLite3 support for Zabbix proxies and allow to specify amount of proxies. \n* **Zabbix proxy (MySQL)** - Another option of Zabbix proxy. The option support and deliver MySQL database.\n* **Zabbix agent** - Zabbix agent can be deployed on each available node for stability and performance monitoring on remote nodes. It allows to gather metrics with full automation!\n* **Zabbix Appliance** - Zabbix appliance very simple way to test and check Zabbix features. The option provides all core components in one solution. It includes Zabbix server, Zabbix Java Gateway, Zabbix web-interface and MySQL server in deployment. It is very useful for testing Zabbix features!\n## Prerequisites\nAll deployment options are require additional information during deployment. Please, check the following instructions and provide required configuration:\n* **Zabbix Server** - MySQL database host information and MySQL database credentials in specially formatted *Secret*. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix Server (Full)** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix proxy (SQLite3)** - Zabbix server host information only.\n* **Zabbix proxy (MySQL)** - MySQL database credentials in specially formatted *Secrets* and Zabbix server host information.\n* **Zabbix agent** - Zabbix server host information only for outgoing and incoming connections. Zabbix agent uses \"privileged\" mode to monitor node resources! For example, running processes.\n* **Zabbix Appliance** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n### MySQL credentials\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-full-secrets\ndata:\n  mysql_root_password: emFiYml4X3N1cGVyX3Jvb3Q= [1]\n  mysql_zabbix_password: emFiYml4X3VzZXJfcGFzc3dvcmQ= [2]\n  mysql_zabbix_username: emFiYml4 [3]\ntype: Opaque\n```\nUsing MySQL root password (*mysqlrootpassword* [1]) Zabbix server / proxy will try to create MySQL database schema with grant permissions to *mysqlzabbixusername* [2] and *mysqlzabbixpassword* [3].\n### SSL certificates for HTTPS\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-web-sslsecret\ndata:\n  ssl.crt: >-\n   < ssl.crt data>\n  ssl.key: >-\n\t < ssl.key data >\n  dhparam.pem: >-\n   <  dhparam.pem data >\n```\nFiles *ssl.crt*, *ssl.key* and *dhparam.perm* are required for Zabbix web-interface for SSL support.\n",
      "csv_display_name": "Zabbix Operator",
      "csv_metadata_description": "Zabbix operator with multiple deployment variants and different components",
      "csv_name": "zabbix-operator-certified.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:25:57.952000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "zabbix-operator-certified",
      "provided_apis": [
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAppliance",
          "plural": "zabbixappliances",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixFull",
          "plural": "zabbixfulls",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxyMysql",
          "plural": "zabbixproxymysqls",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxySqlite",
          "plural": "zabbixproxysqlites",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixServer",
          "plural": "zabbixservers",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAgent",
          "plural": "zabbixagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "zabbixoperator-certified-c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66-annotation"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "ansible"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "operator"
        },
        {
          "digest": "sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "image": "registry.connect.redhat.com/zabbix/zabbix-server-mysql-50@sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "name": "zbx_server_mysql"
        },
        {
          "digest": "sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "image": "registry.connect.redhat.com/zabbix/zabbix-web-mysql-50@sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "name": "zbx_web_mysql"
        },
        {
          "digest": "sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "image": "registry.connect.redhat.com/zabbix/zabbix-java-gateway-50@sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "name": "zbx_java_gateway"
        },
        {
          "digest": "sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-mysql-50@sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "name": "zbx_proxy_mysql"
        },
        {
          "digest": "sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-sqlite-50@sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "name": "zbx_proxy_sqlite"
        },
        {
          "digest": "sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "image": "registry.connect.redhat.com/zabbix/zabbix-agent-50@sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "name": "zbx_agent"
        },
        {
          "digest": "sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "image": "registry.connect.redhat.com/zabbix/zabbix-appliance-50@sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "name": "zbx_appliance"
        },
        {
          "digest": "sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "name": "db_mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "5f91f7fb7fbd761308fd63e3",
      "alm_examples": [
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "AppDefinition",
          "metadata": {
            "name": "cassandra-test"
          },
          "spec": {
            "namespace": "default",
            "selector": {
              "matchLabels": {
                "app": "cassandra"
              }
            }
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "ApplicationClone",
          "metadata": {
            "name": "cassandra-2009-02-09--19-52-14-clone"
          },
          "spec": {
            "cloneConfiguration": "dr-us-west-clone"
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "ApplicationSnapshot",
          "metadata": {
            "name": "cassandra-2009-02-09--19-52-14"
          },
          "spec": {
            "apiObjects": [
              "{\"apiVersion\": \"v1\",\"items\": [{\"apiVersion\": \"v1\",\"kind\": \"ConfigMap\",\"metadata\": {...",
              "{\"apiVersion\": \"v1\",\"items\": [{\"apiVersion\": \"apps\u000b1\",\"kind\": \"Deployment\",\"metadata\": {..."
            ],
            "snapshotConfiguration": "dr-us-west-snapshot",
            "vpsas": [
              {
                "name": "example-vpsa",
                "provisioner": "csi.zadara.com",
                "snapshots": [
                  {
                    "cg": "vol-0000001"
                  }
                ]
              }
            ]
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "CloneConfiguration",
          "metadata": {
            "name": "dr-us-west-clone"
          },
          "spec": {
            "appSnapshot": {
              "name": "mysql-snap-2020-01-26"
            },
            "dryRun": false,
            "prefix": "clone-",
            "targetNamespace": "test"
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "Invoker",
          "metadata": {
            "name": "mysql-daily-backup"
          },
          "spec": {
            "snapshotConfiguration": {
              "name": "dr-us-west-snapshot"
            }
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "SnapshotConfiguration",
          "metadata": {
            "name": "dr-us-west-snapshot"
          },
          "spec": {
            "appDefinition": "cassandra-test",
            "policies": [
              "daily-snapshot-for-month",
              "weekly-snapshot-for-year"
            ]
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "SnapshotPolicy",
          "metadata": {
            "name": "daily-snapshot-for-month"
          },
          "spec": {
            "keepLast": 7,
            "schedule": "0 0 * * *"
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "Vpsa",
          "metadata": {
            "name": "example-vpsa"
          },
          "spec": {
            "csi": {
              "autoExpandSupport": true,
              "iscsiMode": "rootfs",
              "livenessProbe": {
                "httpGet": {
                  "port": 9808
                },
                "periodSeconds": 5
              },
              "provisioner": "csi.zadara.com"
            },
            "hostname": "example.vpsas.zadara.com",
            "https": true,
            "token": "EXAMPLETOKEN-1234"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zadara/zadara-operator-bundle@sha256:a7dc6b758b849f4eab38f38b5bb0c99e951d1ed5c59143337e6c5efb5973f321",
      "bundle_path_digest": "sha256:a7dc6b758b849f4eab38f38b5bb0c99e951d1ed5c59143337e6c5efb5973f321",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-22T21:22:03.215000+00:00",
      "csv_description": "The Zadara Operator provides storage and data management for K8s stateful\napplications as a cloud-native service, while leveraging Zadara's enterprise\ngrade Storage-as-a-Service VPSA for provisioning and managing persistent\nstorage.\n\nZadara Operator provides:\n* Zadara CSI driver automatic installation and management\n* Automatic K8s application discovery\n* Application protection using an intelligent and efficient snapshots mechanism.\n* Custom snapshots scheduling for application protection\n* Instant application clone\n* CLI for centralized management for Zadara's K8s assets\n\n## About Zadara\n\nZadara provides companies and service providers agile, secure\nenterprise storage as a consumption-based service. Any location, any\ndata type, any protocol. Zadara offers resource isolation, exceptional\nsecurity, and management control.\n\nMore information at: [Zadara Kubernetes Operator](https://github.com/zadarastorage/zadara-operator)\n",
      "csv_display_name": "Zadara Operator",
      "csv_metadata_description": "Zadara Operator enables storage provisioning via Zadara's CSI driver and data management capabilities for K8s applications.",
      "csv_name": "zoperator.v0.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:50:32.172000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "zoperator",
      "provided_apis": [
        {
          "group": "zadara.com",
          "kind": "Invoker",
          "plural": "invokers",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "SnapshotConfiguration",
          "plural": "snapshotconfigurations",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "SnapshotPolicy",
          "plural": "snapshotpolicies",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "Vpsa",
          "plural": "vpsas",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "AppDefinition",
          "plural": "appdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "ApplicationClone",
          "plural": "applicationclones",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "ApplicationSnapshot",
          "plural": "applicationsnapshots",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "CloneConfiguration",
          "plural": "cloneconfigurations",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "image": "registry.connect.redhat.com/zadara/zadara-operator@sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "name": "zadara-operator-54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe-annotation"
        },
        {
          "digest": "sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "image": "registry.connect.redhat.com/zadara/zadara-operator@sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "name": "zoperator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.3.6",
      "version_original": "0.3.6"
    },
    {
      "_id": "5f925a7c6c4f348b547ea8d9",
      "alm_examples": [
        {
          "api_version": "portshift.io/v1",
          "kind": "PortshiftInstaller",
          "metadata": {
            "name": "example-portshiftinstaller"
          },
          "spec": {
            "managementUrl": "console.portshift.io",
            "portshiftClusterId": "CLUSTER_ID"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portshift/operator-bundle@sha256:315706e1ed51c3543b44c0524ee717b36324d128d8dafac2388adf94107c4c48",
      "bundle_path_digest": "sha256:315706e1ed51c3543b44c0524ee717b36324d128d8dafac2388adf94107c4c48",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:22:20.240000+00:00",
      "csv_description": "### Contents\n * About\n * Requirements\n * Documentation\n * Issues and feedback\n\n### About\nThe portshift-operator is a controller that runs within a Kubernetes or Openshift cluster that provides a means to deploy and manage Portshift's runtime controller, which is a single pod (agentless admission controller) that provide comperhensive runtime security.\n\n## Use the portshift-operator to:\n\n * Deploy Portshfit controler on Kubernetes or Openshift cluster\n * Automate the registration/authentication process prior to the deployment.\n\n## Deployment Requirements\nThe Operator deploys on Kubernetes and Openshift clusters.\n\n * Kubernetes: 1.15 +\n * Openshift: 4.0 +\n\n## Documentation\nThe following documentation is provided:\n\n * [Installation](http://portshift.readme.io/)\n\n## Issues and feedback\nIf you encounter any problems or would like to give us feedback on deployments, we encourage you to raise issues here on GitHub.\n",
      "csv_display_name": "Portshift Operator",
      "csv_metadata_description": "The operator will deploy portshift agent on the cluster",
      "csv_name": "portshift-operator.v0.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:50:46.466000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portshift-controller-operator",
      "provided_apis": [
        {
          "group": "portshift.io",
          "kind": "PortshiftInstaller",
          "plural": "portshiftinstallers",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "image": "registry.connect.redhat.com/portshift/operator@sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "name": "operator-7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e-annotation"
        },
        {
          "digest": "sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "image": "registry.connect.redhat.com/portshift/operator@sha256:7676180f5fcd495ed9d3bf232e5ffc426767c7f8e9914637a3505da84ddcfc4e",
          "name": "portshift-operator"
        },
        {
          "digest": "sha256:f52b3097d049ac86920bd6cdd4dac3def7411dcd1757438b92f0d7d36fa4852e",
          "image": "registry.connect.redhat.com/portshift/portshift-k8s-agent@sha256:f52b3097d049ac86920bd6cdd4dac3def7411dcd1757438b92f0d7d36fa4852e",
          "name": "agent"
        },
        {
          "digest": "sha256:19a49c31102b8f4afa2ad8980d3037c78167da089f4c62023da059bbf2c77c87",
          "image": "registry.connect.redhat.com/portshift/k8s-upgrader@sha256:19a49c31102b8f4afa2ad8980d3037c78167da089f4c62023da059bbf2c77c87",
          "name": "agent_upgrader"
        },
        {
          "digest": "sha256:5569481578b0049f2bdc10158c50e8c76947d0b053ed4ed9add6838c52f5ddb7",
          "image": "registry.connect.redhat.com/portshift/gopassivedns@sha256:5569481578b0049f2bdc10158c50e8c76947d0b053ed4ed9add6838c52f5ddb7",
          "name": "agent_passive_dns_detector"
        },
        {
          "digest": "sha256:3c1567790f045dd646f65cdcd3287d5ed8a01ca3212db8f48bd5586675261e74",
          "image": "registry.connect.redhat.com/portshift/clair@sha256:3c1567790f045dd646f65cdcd3287d5ed8a01ca3212db8f48bd5586675261e74",
          "name": "clair"
        },
        {
          "digest": "sha256:b27d47eb7a66968d34dc8d8e9374b74cec1bcb20345926c3ef56b1c1e46d5f15",
          "image": "registry.connect.redhat.com/portshift/clair-db@sha256:b27d47eb7a66968d34dc8d8e9374b74cec1bcb20345926c3ef56b1c1e46d5f15",
          "name": "clair_db"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.6",
      "version_original": "0.1.6"
    },
    {
      "_id": "5f925a7d7dfea609c170ab10",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:46948a9049f11cab4b7896b20e29381c8c06b92fbedc2c0605480711f4786323",
      "bundle_path_digest": "sha256:46948a9049f11cab4b7896b20e29381c8c06b92fbedc2c0605480711f4786323",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:22:21.488000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "portworx-operator.v1.4.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:35:51.834000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.1",
      "version_original": "1.4.1"
    },
    {
      "_id": "5f925a7ee9c4b14b8a1a59a7",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:46948a9049f11cab4b7896b20e29381c8c06b92fbedc2c0605480711f4786323",
      "bundle_path_digest": "sha256:46948a9049f11cab4b7896b20e29381c8c06b92fbedc2c0605480711f4786323",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-23T04:22:22.757000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "portworx-operator.v1.4.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:42:27.241000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.1",
      "version_original": "1.4.1"
    },
    {
      "_id": "5f925a816c4f348b547ea8da",
      "alm_examples": [
        {
          "api_version": "api.rapidbiz.com/v1",
          "kind": "Rapidbiz",
          "metadata": {
            "labels": {
              "app.kubernetes.io/component": "server",
              "app.kubernetes.io/instance": "rapidbiz-operator",
              "app.kubernetes.io/managed-by": "ansible",
              "app.kubernetes.io/name": "rapidbiz",
              "name": "rapidbiz-operator"
            },
            "name": "example-rapidbiz"
          },
          "spec": {
            "adminpassword": "adminpwd",
            "adminuser": "admin@unknown.com",
            "company": "",
            "databasehost": "",
            "databasename": "",
            "databasepassword": "",
            "databaseport": "3306",
            "databasetype": "MySQL",
            "databaseuser": "",
            "pullpolicy": "IfNotPresent",
            "pvc": true,
            "replicas": 1,
            "resourcerequirement": {
              "limits": {
                "cpu": "8",
                "memory": "6400Mi"
              },
              "requests": {
                "cpu": "1000m",
                "memory": "1000Mi"
              }
            },
            "scalepodcpu": 75,
            "scalepodmax": 10,
            "scalepodmin": 1,
            "scalestate": false,
            "serverlicense": "",
            "serviceroute": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vacava/rapidbiz-operator-bundle@sha256:57e0e6c51ed2b9ebf5347eee1fdd3ebff795cf8cf51f83e43cad4b02ea3872ad",
      "bundle_path_digest": "sha256:57e0e6c51ed2b9ebf5347eee1fdd3ebff795cf8cf51f83e43cad4b02ea3872ad",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:22:25.434000+00:00",
      "csv_description": "RapidBIZ Ansible Operator OLM is designed to work on Open Shift version 4.2 or greater with Kuberutes version 1.14 or greater.\n\nRapidBIZ is a simple to use, integrated cloud development, and delivery environment that enables significant productivity and cost advantages - leveraging Docker Images provides enterprise level deployment management.\n\nRequires a database either external to the cluster or one installed via a database operator or docker image.\n\nSee our website [documention](https://www.vacava.com/rapidbiz/deploy) for more detailed information.",
      "csv_display_name": "RapidBIZ Operator",
      "csv_metadata_description": "RapidBIZ is a simple to use, integrated cloud development and delivery environment that enables significant productivity advantages.",
      "csv_name": "rapidbiz-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:49:59.078000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "rapidbiz-operator-certified",
      "provided_apis": [
        {
          "group": "api.rapidbiz.com",
          "kind": "Rapidbiz",
          "plural": "rapidbizs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "rapidbiz-operator-0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a-annotation"
        },
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "ansible"
        },
        {
          "digest": "sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "image": "registry.connect.redhat.com/vacava/rapidbiz-operator@sha256:0a297bf1be48f3587577ca471587601eda7cda37fd20e834aad235ab99168d1a",
          "name": "operator"
        },
        {
          "digest": "sha256:af1fbbb2e68bd736aee9b213ec4cf299dc5fd0ad228d35bee8e97e9926e4e905",
          "image": "registry.connect.redhat.com/vacava/rapidbiz@sha256:af1fbbb2e68bd736aee9b213ec4cf299dc5fd0ad228d35bee8e97e9926e4e905",
          "name": "rapidbiz"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5f925a82e9c4b14b8a1a59a8",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:c75756c5dc30ca757b7d798df0afa12877b62bd2f5602ce360c9144e7038efe3",
      "bundle_path_digest": "sha256:c75756c5dc30ca757b7d798df0afa12877b62bd2f5602ce360c9144e7038efe3",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-23T04:22:26.538000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redhat-marketplace-operator.v1.0.5",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:46:55.680000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.0.5",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "5f925a857dfea609c170ab11",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "5.4.14",
      "creation_date": "2020-10-23T04:22:29.002000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:29:56.736000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "5f925a867fbd761308fd63e6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.6",
      "creation_date": "2020-10-23T04:22:30.140000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:41:38.866000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "5f925a887dfea609c170ab12",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "production",
      "creation_date": "2020-10-23T04:22:32.362000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:50:40.553000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "5f925a8f7fbd761308fd63e9",
      "alm_examples": [
        {
          "api_version": "open.rocket.chat/v1alpha1",
          "kind": "RocketChat",
          "metadata": {
            "name": "rocketchat-quickstart"
          },
          "spec": {
            "labels": {
              "app": "rocketchat"
            },
            "memoryLimit": "512Mi",
            "mongodbDatabase": "rocketchat",
            "mongodbReplicaName": "rs0",
            "mongodbReplicas": 1,
            "mongodbSecretName": "mongodb-secret",
            "rocketchatReplicas": 1,
            "volumeCapacity": "1Gi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rocketchat/rocketchat-operator-bundle@sha256:939fd27346e704244fda2c6666cda4e6f164d541e89c0000f4a46d91296831c1",
      "bundle_path_digest": "sha256:939fd27346e704244fda2c6666cda4e6f164d541e89c0000f4a46d91296831c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-23T04:22:39.670000+00:00",
      "csv_description": "# Rocket.Chat Operator\n\nThis will launch an instance of the Rocket.Chat collaboration platform on your OpenShift cluster.\nIt is designed as a \"push-button-go\" operator, leveraging Ansible for the underlying logic.\nThe operator handles the provisioning of MongoDB from Red Hat Software Collections, and the deployment of Rocket.Chat from the Red Hat Container Catalog.\n\n## Quick Instructions\n\nTo get started, you can use the included RocketChat custom resource template (provided when installing from OperatorHub), which will launch Rocket.Chat with the following options:\n\n* 1 GiB storage volume for MongoDB\n* 512 MiB memory limit each for MongoDB and Rocket.Chat\n* Single pod instances of MongoDB and Rocket.Chat\n* Automatically generated credentials for MongoDB, stored in a Kubernetes secret\n\n## Custom Installation\n\nThe default CR template is enough to get started, but for a production environment you'll likely want to adjust your resource size accordingly.\n\nStorage, memory and pod replicas can be adjusted by changing the respective fields in the RocketChat custom resource:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbReplicas: 1\n  memoryLimit: 512Mi\n  rocketchatReplicas: 1\n  volumeCapacity: 1Gi\n```\n\nYou can also install Rocket.Chat using an ephemeral storage volume by setting the `spec.volumeCapacity` field of the CR to an empty string:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  volumeCapacity: \"\"\n```\n\nIf you would like to provide your own MongoDB credentials, you can create a Kubernetes secret with the following fields (`keyfile` is a base64 encoded, 756 character randomized string):\n\n```\nusername:\npassword:\nadmin_password:\nkeyfile:\n```\n\nThe name of the kubernetes secret you created above should be set in the RocketChat custom resource:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbSecretName: mongodb-secret-name\n```\n\nYou can customize or add labels that will be applied by the operator to all of the created objects:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  labels:\n    app: rocketchat\n    env: production\n    region: na-east\n```\n\nIf desired, you can also customize the MongoDB database and replicaset names:\n\n```\napiVersion: open.rocket.chat/v1alpha1\nkind: RocketChat\nmetadata:\n  name: rocketchat-custom\nspec:\n  mongodbDatabase: rocketchat\n  mongodbReplicaName: rs0\n```\n",
      "csv_display_name": "Rocket.Chat Operator",
      "csv_metadata_description": "Deploy Rocket.Chat Collaboration Platform on OpenShift",
      "csv_name": "rocketchat-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:41:03.849000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "rocketchat-operator-certified",
      "provided_apis": [
        {
          "group": "open.rocket.chat",
          "kind": "RocketChat",
          "plural": "rocketchats",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571",
          "image": "quay.io/rhc4tp/rocketchat-operator@sha256:e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571",
          "name": "rocketchat-operator-e556b5222ee2b12c0cbae134f3b081712df6077a5c4f8da693a07674f87fb571-annotation"
        },
        {
          "digest": "sha256:1a7796aea2d8e974df8c26de1ecf240917b0fd0c3594cc77f86d48e73c0a5ad1",
          "image": "registry.connect.redhat.com/rocketchat/rocketchat-operator@sha256:1a7796aea2d8e974df8c26de1ecf240917b0fd0c3594cc77f86d48e73c0a5ad1",
          "name": "rocketchat-operator"
        },
        {
          "digest": "sha256:856c0c3e3b7a71795262e29915bf748ee692ecc6dcef0ef3eff0dd1fdb2f85f7",
          "image": "registry.access.redhat.com/rhscl/mongodb-36-rhel7@sha256:856c0c3e3b7a71795262e29915bf748ee692ecc6dcef0ef3eff0dd1fdb2f85f7",
          "name": "mongodb"
        },
        {
          "digest": "sha256:d26a76943471e057a088acd4896eab5b7cdc478069656de0f896ee66ffa61cf7",
          "image": "registry.connect.redhat.com/rocketchat/rocketchat@sha256:d26a76943471e057a088acd4896eab5b7cdc478069656de0f896ee66ffa61cf7",
          "name": "rocketchat"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5f925a917fbd761308fd63ea",
      "alm_examples": [
        {
          "api_version": "app.stacks/v1beta1",
          "kind": "RuntimeComponent",
          "metadata": {
            "name": "example-runtime-component"
          },
          "spec": {
            "applicationImage": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/runtime-component-operator-bundle@sha256:8e8792d973514ff1e87acbfbcaef90fa41d7dc66eac939f5e74b307946f7dd37",
      "bundle_path_digest": "sha256:8e8792d973514ff1e87acbfbcaef90fa41d7dc66eac939f5e74b307946f7dd37",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-23T04:22:41.012000+00:00",
      "csv_description": "This advanced Operator is capable of deploying any runtime component image with consistent, production-grade QoS. It enables enterprise architects to govern the way their applications get deployed & managed in the cluster, while dramatically reducing the learning curve for developers to deploy into Kubernetes - allowing them to focus on writing the code!\nHere are some key features:\n#### Application Lifecyle\nYou can deploy your runtime component container by either pointing to a container image, or an OpenShift ImageStream. When using an ImageStream the Operator will watch for any updates and will re-deploy the modified image.\n\n#### Custom RBAC\nThis Operator is capable of using a custom ServiceAccount from the caller, allowing it to follow RBAC restrictions. By default it creates a ServiceAccount if one is not specified, which can also be bound with specific roles.\n\n#### Environment Configuration\nYou can configured a variety of artifacts with your deployment, such as: labels, annotations, and environment variables from a ConfigMap, a Secret or a value.\n\n#### Routing\nExpose your application to external users via a single toggle to create a Route on OpenShift or an Ingress on other Kubernetes environments. Advanced configuration, such as TLS settings, are also easily enabled.  Expiring Route certificates are re-issued.\n\n#### High Availability via Horizontal Pod Autoscaling\nRun multiple instances of your application for high availability. Either specify a static number of replicas or easily configure horizontal auto scaling to create (and delete) instances based on resource consumption.\n\n#### Persistence and advanced storage\nEnable persistence for your application by specifying simple requirements: just tell us the size of the storage and where you would like it to be mounted and We will create and manage that storage for you.\nThis toggles a StatefulSet resource instead of a Deployment resource, so your container can recover transactions and state upon a pod restart.\nWe offer an advanced mode where the user specifies a built-in PersistentVolumeClaim, allowing them to configure many details of the persistent volume, such as its storage class and access mode.\n\n#### Service Binding\nEasily bind to available services in your cluster.  Your runtime components can expose and consume other services by simply specifying the target endpoinds: we take care of the heavy lifting such as creating k8s Secrets, injecting them into your container and watching for any changes in configuration!  This way your applications can dynamically reconnect to its required services without any intervention or interruption.\n#### Exposing metrics to Prometheus\nThe Runtime Component Operator exposes the runtime container's metrics via the [Prometheus Operator](https://operatorhub.io/operator/prometheus).\nUsers can pick between a basic mode, where they simply specify the label that Prometheus is watching to scrape the metrics from the container, or they can specify the full `ServiceMonitor` spec embedded into the RuntimeComponent's `spec.monitoring` key controlling things like the poll internal and security credentials.\n#### Easily mount logs and transaction directories\nIf you need to mount the logs and transaction data from your runtime component to an external volume such as NFS (or any storage supported in your cluster), simply add the following (customizing the folder location and size) to your RuntimeComponent CR:\n``` storage: size: 2Gi mountPath: \"/logs\" ```\n\n#### Integration with OpenShift's Certificate Manager\nThe Runtime Component Operator takes advantage of the [cert-manager tool](https://cert-manager.io/), if it is installed on the cluster. This allows the operator to automatically provision TLS certificates for pods as well as routes.\nWhen creating certificates via the RuntimeComponent CR the user can specify a particular issuer name and toggle the scopes between ClusterIssuer (cluster scoped) and Issuer (namespace scoped). If not specified, these values are retrieved from a ConfigMap, with a default value of `self-signed` and `ClusterIssuer`.\nThe certificate is mounted into the container via a Secret so that it is automatically refreshed once the certificate is updated.\n#### Integration with OpenShift Serverless\nDeploy your serverless runtime component using a single toggle.  The Operator will convert all of its generated resources into [Knative](https://knative.dev) resources, allowing your pod to automatically scale to 0 when it is idle.\n\n#### Integration with Kubernetes Application Navigator (kAppNav) and OpenShift's Topology UI\nAutomatically configures the Kubernetes resources for integration with [kAppNav](https://kappnav.io/), allowing your runtime component to compose an umbrella [Application](https://github.com/kubernetes-sigs/application).  This integration allows users to monitor all constituents resources of the application and receive alerts when the health status of a component changes.  From an integrated panel users can also launch day-2-operations, such as viewing the Kibana / Grafana dashboards, and enabling trace for a component.\nDuring this integration we also set the corresponding labels to support OpenShift's Developer Topology UI,which allows you to visualize your entire set of deployments and how they are connected.\n\nSee our [**documentation**](https://github.com/application-stacks/runtime-component-operator/tree/master/doc/) for more information.\n",
      "csv_display_name": "Runtime Component Operator",
      "csv_metadata_description": "Deploys any runtime component with dynamic and auto-tuning configuration",
      "csv_name": "runtime-component-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:33:42.239000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "runtime-component-operator-certified",
      "provided_apis": [
        {
          "group": "app.stacks",
          "kind": "RuntimeComponent",
          "plural": "runtimecomponents",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "name": "runtime-component-operator-1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596-annotation"
        },
        {
          "digest": "sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "image": "registry.connect.redhat.com/ibm/runtime-component-operator@sha256:1bf98ba1e20475f591e1edbb8bbf70c86c0fe0e124a84968c339eb873e639596",
          "name": "runtime-component-operator"
        },
        {
          "digest": "sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "image": "registry.connect.redhat.com/ibm/open-liberty-samples@sha256:8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4",
          "name": "open-liberty-samples-8ea2d3405ff2829d93c5dda4dab5d695ea8ead34e804aaf6e39ea84f53a15ee4-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "5f925a927dfea609c170ab13",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1alpha1",
          "kind": "SeldonDeploy",
          "metadata": {
            "name": "example-seldondeploy",
            "namespace": "seldon"
          },
          "spec": {
            "affinity": {},
            "alibidetect": {
              "image": "registry.connect.redhat.com/seldonio/alibi-detect-server@sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c"
            },
            "argocd": {
              "url": "https://argocd-server.argocd.svc.cluster.local"
            },
            "docker": {
              "user": "unkown"
            },
            "elasticsearch": {
              "jwtSecretKey": "jwt-elastic.txt",
              "jwtSecretName": "jwt-elastic",
              "url": "https://elasticsearch.openshift-logging:9200"
            },
            "enableAppAnalytics": false,
            "enableAppAuth": false,
            "env": {
              "GITOPS_FORMAT": "json",
              "USERID_CLAIM_KEY": "name"
            },
            "external": {
              "host": "",
              "protocol": "http"
            },
            "fullnameOverride": "",
            "github": {
              "email": "",
              "token": "",
              "user": ""
            },
            "image": {
              "image": "registry.connect.redhat.com/seldonio/seldon-deploy@sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
              "pullPolicy": "Always"
            },
            "imagePullSecrets": [
              {
                "name": "regcred"
              }
            ],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [
                {
                  "host": "chart-example.local",
                  "paths": []
                }
              ],
              "tls": []
            },
            "ingressGateway": {
              "ingressNamespace": "istio-system",
              "kfServingIngressService": "kfserving-ingressgateway",
              "seldonIngressService": "istio-ingressgateway"
            },
            "kfserving": {
              "curlForm": "MODEL_NAME={{ .ModelName }}<br>\nCLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\nSERVICE_HOSTNAME=$(kubectl get inferenceservice {{ .ModelName }} -o jsonpath='{.status.url}' | cut -d \"/\" -f 3)<br>\ncurl -v -H \"Host: ${SERVICE_HOSTNAME}\" {{ .KfServingProtocol }}://$CLUSTER_IP/v1/models/$MODEL_NAME:predict -d '{{ .Payload }}'\n",
              "enabled": false,
              "explainForm": "{{ .KfServingProtocol }}://{{ .IngressServiceName }}/v1/models/{{ .ModelName }}:explain",
              "protocol": "http",
              "requestForm": "{{ .KfServingProtocol }}://{{ .IngressServiceName }}/v1/models/{{ .ModelName }}:predict"
            },
            "loadtest": {
              "image": "registry.connect.redhat.com/seldonio/seldon-loadtester@sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c"
            },
            "nameOverride": "",
            "nodeSelector": {},
            "openshiftMarketplace": {
              "cleanupClusterServiceVersions": false,
              "kubectlCleanupImage": "registry.connect.redhat.com/seldonio/kubectl@sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
              "prometheus": {
                "monitorSpecs": {
                  "create": true
                }
              },
              "seldonCore": {
                "istioGateway": {
                  "create": true,
                  "name": "seldon-gateway",
                  "namespace": "istio-system"
                },
                "subscription": {
                  "apiVersion": "operators.coreos.com/v1alpha1",
                  "channel": "alpha",
                  "create": true,
                  "istioEnabled": true,
                  "metricsPath": "/metrics",
                  "requestLoggerEndpoint": "http://default-broker.seldon-logs"
                }
              }
            },
            "prometheus": {
              "knative": {
                "url": "https://prometheus-k8s.openshift-monitoring:9091/api/v1/"
              },
              "seldon": {
                "jwtSecretKey": "jwt-elastic.txt",
                "jwtSecretName": "jwt-elastic",
                "namespaceMetricName": "namespace",
                "resourceMetricsUrl": "https://prometheus-k8s.openshift-monitoring:9091/api/v1/",
                "serviceMetricName": "exported_service",
                "url": "https://prometheus-user-workload.openshift-user-workload-monitoring:9091/api/v1/"
              }
            },
            "rbac": {
              "clusterWide": false,
              "create": true
            },
            "replicaCount": 1,
            "requestLogger": {
              "create": true,
              "elasticsearch": {
                "host": "elasticsearch.openshift-logging",
                "jwtSecretKey": "jwt-elastic.txt",
                "jwtSecretName": "jwt-elastic",
                "port": "9200",
                "protocol": "https"
              },
              "image": "registry.connect.redhat.com/seldonio/seldon-request-logger@sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
              "imagePullPolicy": "IfNotPresent",
              "namespace": {
                "create": false,
                "name": "seldon-logs"
              },
              "trigger": {
                "apiVersion": "eventing.knative.dev/v1alpha1"
              }
            },
            "resources": {},
            "seldon": {
              "curlForm": "CLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\ncurl -k -H \"Content-Type: application/json\" {{ .SeldonProtocol }}://$CLUSTER_IP/seldon/{{ .Namespace }}/{{ .ModelName }}/api/v0.1/predictions -d '{{ .Payload }}'\n",
              "enabled": true,
              "explainForm": "http://{{ .ModelName }}-{{ .Predictor }}-explainer.{{ .Namespace }}:9000/v1/models/{{ .ModelName }}:explain",
              "protocol": "http",
              "seldonRequestForm": "{{ .SeldonProtocol }}://{{ .IngressServiceName }}/seldon/{{ .Namespace }}/{{ .ModelName }}/api/v0.1/predictions",
              "tensorFlowCurlForm": "CLUSTER_IP=$(oc get route -n {{ .IngressNamespace }} {{ .IngressServiceName }} -o jsonpath='{.spec.host}')<br>\ncurl -k -H \"Content-Type: application/json\" {{ .SeldonProtocol }}://$CLUSTER_IP/seldon/{{ .Namespace }}/{{ .ModelName }}/v1/models/:predict -d '{{ .Payload }}'\n",
              "tensorflowRequestForm": "{{ .SeldonProtocol }}://{{ .IngressServiceName }}/seldon/{{ .Namespace }}/{{ .ModelName }}/v1/models/:predict"
            },
            "service": {
              "port": 80,
              "type": "ClusterIP"
            },
            "serviceAccount": {
              "create": true
            },
            "serviceAccountName": "seldon-deploy",
            "skipVerifyGit": true,
            "skipVerifyHttpCalls": true,
            "tolerations": [],
            "virtualService": {
              "create": true,
              "gateways": [
                "seldon-gateway.istio-system.svc.cluster.local"
              ],
              "prefix": "/seldon-deploy/"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-deploy-operator-bundle@sha256:7cfc289fa638ff8270cb2b5263ad6286290e912075252b66f735ccf466d66d0f",
      "bundle_path_digest": "sha256:7cfc289fa638ff8270cb2b5263ad6286290e912075252b66f735ccf466d66d0f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:22:42.180000+00:00",
      "csv_description": "The Seldon deploy operator allows the creation of Seldon Deploy applications to provide management, monitoring and updating of machine learning models from a range of technologies. It includes the ability to run explanations as well as outlier, drift and adversarial detection against running models. There is a full metrics and logging integration via Prometheus and ELK stacks as well as full GitOps operations to allow full auditing and recovery of updated models.",
      "csv_display_name": "Seldon Deploy Operator",
      "csv_metadata_description": "The Seldon deploy operator allows the creation of Seldon Deploy applications to provide management, monitoring and updating of machine learning models from a range of technologies. It includes the ability to run explanations as well as outlier, drift and adversarial detection against running models. There is a full metrics and logging integration via Prometheus and ELK stacks as well as full GitOps operations to allow full auditing and recovery of updated models.",
      "csv_name": "seldon-deploy-operator.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:45:52.165000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "seldon-deploy-operator",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeploy",
          "plural": "seldondeploys",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2be9890166d6589a9a7f3b47a4dc7fbd6ccfcb5a2e5305c27eb969b28deaf0a3",
          "image": "seldonio/seldon-deploy-operator@sha256:2be9890166d6589a9a7f3b47a4dc7fbd6ccfcb5a2e5305c27eb969b28deaf0a3",
          "name": "seldon-deploy-operator-2be9890166d6589a9a7f3b47a4dc7fbd6ccfcb5a2e5305c27eb969b28deaf0a3-annotation"
        },
        {
          "digest": "sha256:fe82ee807e1246ceefa949c834fb0d052542495f03b5c61506595591e5a10933",
          "image": "registry.connect.redhat.com/seldonio/seldon-deploy-operator@sha256:fe82ee807e1246ceefa949c834fb0d052542495f03b5c61506595591e5a10933",
          "name": "seldon-deploy-operator"
        },
        {
          "digest": "sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
          "image": "registry.connect.redhat.com/seldonio/seldon-deploy@sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
          "name": "deployment"
        },
        {
          "digest": "sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c",
          "image": "registry.connect.redhat.com/seldonio/seldon-loadtester@sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c",
          "name": "loadtest"
        },
        {
          "digest": "sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c",
          "image": "registry.connect.redhat.com/seldonio/alibi-detect-server@sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c",
          "name": "alibidetect"
        },
        {
          "digest": "sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
          "image": "registry.connect.redhat.com/seldonio/seldon-request-logger@sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
          "name": "requestlogger"
        },
        {
          "digest": "sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
          "image": "registry.connect.redhat.com/seldonio/kubectl@sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
          "name": "kubectl"
        },
        {
          "digest": "sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
          "image": "registry.connect.redhat.com/seldonio/seldon-request-logger@sha256:6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f",
          "name": "seldon-request-logger-6fd5ccf08450811949da979dfbbb4cdf325be83956ad5b5b465602eea96bf76f-annotation"
        },
        {
          "digest": "sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
          "image": "registry.connect.redhat.com/seldonio/kubectl@sha256:15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382",
          "name": "kubectl-15075893422caf0a42805f2ff53d0996471f3ececf09632caaf39402da41f382-annotation"
        },
        {
          "digest": "sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c",
          "image": "registry.connect.redhat.com/seldonio/alibi-detect-server@sha256:0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c",
          "name": "alibi-detect-server-0a5a5f4e5e0bdad7cd27b23636c091a07e879f261ce18e268a2b258a17fd210c-annotation"
        },
        {
          "digest": "sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c",
          "image": "registry.connect.redhat.com/seldonio/seldon-loadtester@sha256:fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c",
          "name": "seldon-loadtester-fd71904fa9f5f7c470fe12bfb4ebed5cdd02d6c984b26db6a228611c43eed87c-annotation"
        },
        {
          "digest": "sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
          "image": "registry.connect.redhat.com/seldonio/seldon-deploy@sha256:000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed",
          "name": "seldon-deploy-000afa8dd9ef13fbd08c62dd528463ebcfba012d6e829dbd1f5c5a1a0d765fed-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "5f925a986c4f348b547ea8db",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "endpoint": {
                    "type": "REST"
                  },
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "bundle_path_digest": "sha256:0f91afcdf6ef68f7a103834d6bf85938f457af36d3fab2fec164476ecb711cfa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:22:48.270000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:36:48.363000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "seldon-core-operator-174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0-annotation"
        },
        {
          "digest": "sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:174abdbca57a34b0c102a3bf87f8640121ae28f2857411039d2fc9729f23efc0",
          "name": "manager"
        },
        {
          "digest": "sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:f46297a51ca7b2087a7ee3d3de0312024f696474af6dec4764eeb6c2daca4247",
          "name": "executor"
        },
        {
          "digest": "sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:7560432beb443c9bcd1f72c765eff4b3c418faa6e22111eb0bb41f6e47182df6",
          "name": "engine"
        },
        {
          "digest": "sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:eb2b47a2f8c96604665b3d1a18d7e39b6a69dd5b061e0f867ab093afc294285c",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-rest@sha256:b370b068ea0ac1464e384549f45f9fb93da3b2970b60e0090829f384f5e9c5dc",
          "name": "sklearnserver_rest"
        },
        {
          "digest": "sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver-grpc@sha256:c835baa699e6fb3f6c7b0016d075758ce4827520c04429b032920efb7df27011",
          "name": "sklearnserver_grpc"
        },
        {
          "digest": "sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-rest@sha256:c8a95aae4b173db7991cbe83ca1ab1bc3165ad90fdd9de10f4998604c7dfc7a5",
          "name": "xgboostserver_rest"
        },
        {
          "digest": "sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver-grpc@sha256:3dd28690bfdf4b19d5429a26116534c3c5cd25973b12238cd0fb1dbae8c3b8ad",
          "name": "xgboostserver_grpc"
        },
        {
          "digest": "sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-rest@sha256:fa87b40b1268f12a1614762bbd83960ca13ebcf15dd4fbf0b414f33f33722719",
          "name": "mlflowserver_rest"
        },
        {
          "digest": "sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver-grpc@sha256:e085e33c822b42901dcfc9e1740126bf5432aa879b870e02c8f6ebb2195f34d7",
          "name": "mlflowserver_grpc"
        },
        {
          "digest": "sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-rest@sha256:d38464683754a4c4f01f55b4bb8942df5f08429f41711638adeda82301745361",
          "name": "tfproxy_rest"
        },
        {
          "digest": "sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "image": "registry.connect.redhat.com/seldonio/tfproxy-grpc@sha256:2d713271dfb7bd056d1011ceef218c76806313ce2e9afb8f92e22238038c1888",
          "name": "tfproxy_grpc"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:e08a45f335c2ef763ac10787e4718fb4a1067d6b69ff106e8eca298fc91c3616",
          "name": "explainer"
        },
        {
          "digest": "sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:350e900f1709c12c73fae170940b158e1d4ad6ce4ead9c884a763d8a27d770e2",
          "name": "mock_classifier"
        },
        {
          "digest": "sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e",
          "name": "mock-classifier-482ee477c344badcaa80e850f4339db41957f9c2396ae24f9e398b67bd5c184e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "5f925a996c4f348b547ea8dc",
      "alm_examples": [
        {
          "api_version": "sematext.com/v1alpha1",
          "kind": "SematextAgent",
          "metadata": {
            "name": "basic-agent-deployment"
          },
          "spec": {
            "region": "EU"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sematext/sematext-operator-bundle@sha256:6261bac8dbfc9453bf59eed93a860f55e15529c564058f79246a5bfe9c6ad698",
      "bundle_path_digest": "sha256:6261bac8dbfc9453bf59eed93a860f55e15529c564058f79246a5bfe9c6ad698",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-23T04:22:49.388000+00:00",
      "csv_description": "The Sematext Operator for Kubernetes provides an easy way to deploy Sematext Agent.\n\nSematext Agent collects metrics about hosts (CPU, memory, disk, network, processes), containers (both Docker and rkt) and orchestrator platforms and ships that to [Sematext Cloud](https://sematext.com/cloud). Sematext Cloud is available in the US and EU regions.\n\nIt installs the Sematext Agent to all nodes in your cluster via a `DaemonSet` resource.\n\n## Settings\n\nThis operator uses all the same options as the [Sematext Agent Helm Chart](https://hub.helm.sh/charts/stable/sematext-agent), please take a look to all the options in the following table:\n\n|             Parameter            |            Description            |                  Default                  |\n|----------------------------------|-----------------------------------|-------------------------------------------|\n| `containerToken`                 | Sematext Container token          | `Nil` Provide your Container token        |\n| `logsToken`                      | Sematext Logs token               | `Nil` Provide your Logs token             |\n| `infraToken`                     | Sematext Infra token              | `Nil` Provide your Infra token            |\n| `region`                         | Sematext region                   | `US` Sematext US or EU region             |\n| `agent.image.repository`         | The image repository              | `sematext/agent`                          |\n| `agent.image.tag`                | The image tag                     | `latest`                                  |\n| `agent.image.pullPolicy`         | Image pull policy                 | `Always`                                  |\n| `agent.service.port`             | Service port                      | `80`                                      |\n| `agent.service.type`             | Service type                      | `ClusterIP`                               |\n| `agent.resources`                | Agent resources                   | `{}`                                      |\n| `logagent.image.repository`      | The image repository              | `sematext/logagent`                       |\n| `logagent.image.tag`             | The image tag                     | `latest`                                  |\n| `logagent.image.pullPolicy`      | Image pull policy                 | `Always`                                  |\n| `logagent.resources`             | Logagent resources                | `{}`                                      |\n| `logagent.extraHostVolumeMounts` | Extra mounts                      | `{}`                                      |\n| `customUrl.serverBaseUrl`        | Custom Base URL                   | `Nil`                                     |\n| `customUrl.logsReceiverUrl`      | Custom Logs receiver URL          | `Nil`                                     |\n| `customUrl.eventsRecieverUrl`    | Custom Event receiver URL         | `Nil`                                     |\n| `serviceAccount.create`          | Create a service account          | `true`                                    |\n| `serviceAccount.name`            | Service account name              | `Nil` Defaults to chart name              |\n| `rbac.create`                    | RBAC enabled                      | `true`                                    |\n| `tolerations`                    | Tolerations                       | `[]`                                      |\n| `nodeSelector`                   | Node selector                     | `{}`                                      |\n\nFor example, if you want to deploy Sematext Agent in EU region, create the following resource:\n\n```yaml\napiVersion: sematext.com/v1alpha1\nkind: SematextAgent\nmetadata:\n  name: test-sematextagent\nspec:\n  region: \"EU\"\n  containerToken: YOUR_CONTAINER_TOKEN\n  logsToken: YOUR_LOGS_TOKEN\n  infraToken: YOUR_INFRA_TOKEN\n```\n\n**NOTE:** You need to create [a new Docker app in Sematext Cloud](https://apps.sematext.com/ui/integrations/create/docker) to get relevant tokens.\n\nOnce you have created the above resource, you can apply this file with `kubectl apply -f`.",
      "csv_display_name": "Sematext Operator",
      "csv_metadata_description": "Full stack observability with Sematext Monitoring Platform!",
      "csv_name": "sematext-operator.v1.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:45:21.154000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "sematext",
      "provided_apis": [
        {
          "group": "sematext.com",
          "kind": "SematextAgent",
          "plural": "sematextagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "image": "registry.connect.redhat.com/sematext/sematext-operator@sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "name": "sematext-operator-b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893-annotation"
        },
        {
          "digest": "sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "image": "registry.connect.redhat.com/sematext/sematext-operator@sha256:b0c51c0f22ce24c5bdec6e51d137d9e35237417fc217669935d5e97b81638893",
          "name": "sematext-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.9",
      "version_original": "1.0.9"
    },
    {
      "_id": "5f925a9a7dfea609c170ab14",
      "alm_examples": [
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "IndexerCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "LicenseMaster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {}
        },
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "SearchHeadCluster",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "Spark",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "replicas": 1
          }
        },
        {
          "api_version": "enterprise.splunk.com/v1alpha2",
          "kind": "Standalone",
          "metadata": {
            "finalizers": [
              "enterprise.splunk.com/delete-pvc"
            ],
            "name": "example"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/splunk/splunk-operator-bundle@sha256:69ab15464e35611399ced93804618510717be529f42c50e70da0ea6a0027a6bb",
      "bundle_path_digest": "sha256:69ab15464e35611399ced93804618510717be529f42c50e70da0ea6a0027a6bb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:22:50.792000+00:00",
      "csv_description": "Splunk Enterprise is a platform for operational intelligence. Our software\nlets you collect, analyze, and act upon the untapped value of big data that\nyour technology infrastructure, security systems, and business applications\ngenerate. It gives you insights to drive operational performance and\nbusiness results.\n\nPlease refer to [Splunk\nproducts](https://www.splunk.com/en_us/software.html) for more knowledge\nabout the features and capabilities of Splunk, and how you can bring it into\nyour organization.\n\nPlease see the [getting started\nguide](https://splunk.github.io/splunk-operator/) to get up and running with\nthe Splunk Operator for Kubernetes.\n\n* [Known Issues for the Splunk\nOperator](https://splunk.github.io/splunk-operator/#known-issues-for-the-splunk-operator)\n* [Prerequisites for the Splunk\nOperator](https://splunk.github.io/splunk-operator/#prerequisites-for-the-splunk-operator)\n* [Installing the Splunk\nOperator](https://splunk.github.io/splunk-operator/#installing-the-splunk-operator)\n* [Creating Splunk Enterprise\nDeployments](https://splunk.github.io/splunk-operator/#creating-splunk-enterprise-deployments)\n\nCOMMUNITY SUPPORTED: Splunk Operator for Kubernetes is an open source\nproduct developed by Splunkers with contributions from the community of\npartners and customers. This unique product will be enhanced, maintained and\nsupported by the community, led by Splunkers with deep subject matter\nexpertise. The primary reason why Splunk is taking this approach is to push\nproduct development closer to those that use and depend upon it. This direct\nconnection will help us all be more successful and move at a rapid pace.\n\nFor help, please first read our [Frequently Asked\nQuestions](https://splunk.github.io/splunk-operator/FAQ.html)\n\nCommunity Support & Discussions on\n[Slack](http://splk.it/slack) channel #kubernetes\n\nFile Issues or Enhancements in\n[GitHub](https://github.com/splunk/splunk-operator/issues)\nsplunk/splunk-operator\n",
      "csv_display_name": "Splunk Operator for Kubernetes",
      "csv_metadata_description": "The Splunk Operator for Kubernetes (SOK) makes it easy for Splunk Administrators to deploy and operate Enterprise deployments in a Kubernetes infrastructure.",
      "csv_name": "splunk.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:47:09.061000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "splunk-certified",
      "provided_apis": [
        {
          "group": "enterprise.splunk.com",
          "kind": "SearchHeadCluster",
          "plural": "searchheadclusters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Spark",
          "plural": "sparks",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "Standalone",
          "plural": "standalones",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "IndexerCluster",
          "plural": "indexerclusters",
          "version": "v1alpha2"
        },
        {
          "group": "enterprise.splunk.com",
          "kind": "LicenseMaster",
          "plural": "licensemasters",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "image": "docker.io/splunk/splunk-operator@sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "name": "splunk-operator-4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9-annotation"
        },
        {
          "digest": "sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "image": "docker.io/splunk/splunk-operator@sha256:4c97c5fec7e4da46a7a1bf4e13c81f4b41fb6410dbf598dd60cafead8bf060a9",
          "name": "splunk-operator"
        },
        {
          "digest": "sha256:64dbb52a66a483a778890407be301fc7edfe8c224b8b524ec3cc1f322c9300a1",
          "image": "docker.io/splunk/splunk@sha256:64dbb52a66a483a778890407be301fc7edfe8c224b8b524ec3cc1f322c9300a1",
          "name": "splunk_enterprise"
        },
        {
          "digest": "sha256:4adf17b546f168a5c580b2445508793f4bfa4c84a41458a0b2fefc6522465a45",
          "image": "registry.connect.redhat.com/splunk/spark@sha256:4adf17b546f168a5c580b2445508793f4bfa4c84a41458a0b2fefc6522465a45",
          "name": "splunk_spark"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5f925a9e6c4f348b547ea8dd",
      "alm_examples": [
        {
          "api_version": "synopsys.com/v1",
          "kind": "OpsSight",
          "metadata": {
            "name": "opssight-test"
          },
          "spec": {
            "blackduck": {
              "blackduckPassword": "<COMMON_BLACKDUCK_PWD_OPSSIGHT_TYPE_BASE64_ENCODED>",
              "blackduckSpec": {
                "certificateName": "default",
                "exposeService": "",
                "licenseKey": "<BLACKDUCK_LICENSE_KEY>",
                "livenessProbes": false,
                "namespace": "",
                "persistentStorage": false,
                "size": "small",
                "type": "opssight",
                "version": "2019.8.1"
              },
              "connectionsEnvironmentVariableName": "blackduck.json",
              "initialCount": 0,
              "maxCount": 0,
              "tlsVerification": false
            },
            "configMapName": "blackduck",
            "defaultCPU": "300m",
            "defaultMem": "1300Mi",
            "enableMetrics": true,
            "enableSkyfire": false,
            "logLevel": "debug",
            "namespace": "opssight-test",
            "perceiver": {
              "annotationIntervalSeconds": 30,
              "dumpIntervalMinutes": 30,
              "enableImagePerceiver": false,
              "enablePodPerceiver": true,
              "imagePerceiver": {
                "image": "docker.io/blackducksoftware/opssight-image-processor@sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
                "name": "opssight-image-processor"
              },
              "podPerceiver": {
                "image": "docker.io/blackducksoftware/opssight-pod-processor@sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
                "name": "opssight-pod-processor"
              },
              "port": 3002,
              "serviceAccount": "opssight-processor"
            },
            "perceptor": {
              "checkForStalledScansPauseHours": 999999,
              "clientTimeoutMilliseconds": 100000,
              "expose": "",
              "image": "docker.io/blackducksoftware/opssight-core@sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
              "modelMetricsPauseSeconds": 15,
              "name": "opssight-core",
              "port": 3001,
              "stalledScanClientTimeoutHours": 999999,
              "unknownImagePauseMilliseconds": 15000
            },
            "prometheus": {
              "expose": "",
              "image": "docker.io/prom/prometheus@sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
              "name": "prometheus",
              "port": 9090
            },
            "scannerCPU": "300m",
            "scannerMem": "1300Mi",
            "scannerPod": {
              "imageFacade": {
                "image": "docker.io/blackducksoftware/opssight-image-getter@sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
                "imagePullerType": "skopeo",
                "internalRegistries": [],
                "name": "opssight-image-getter",
                "port": 3004,
                "serviceAccount": "opssight-scanner"
              },
              "name": "opssight-scanner",
              "replicaCount": 1,
              "scanner": {
                "clientTimeoutSeconds": 600,
                "image": "docker.io/blackducksoftware/opssight-scanner@sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
                "name": "opssight-scanner",
                "port": 3003
              }
            },
            "secretName": "blackduck",
            "skyfire": {
              "hubClientTimeoutSeconds": 120,
              "hubDumpPauseSeconds": 240,
              "image": "gcr.io/saas-hub-stg/blackducksoftware/pyfire@sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
              "kubeDumpIntervalSeconds": 60,
              "name": "skyfire",
              "perceptorDumpIntervalSeconds": 60,
              "port": 3005,
              "prometheusPort": 3006,
              "serviceAccount": "skyfire"
            }
          }
        },
        {
          "api_version": "synopsys.com/v1",
          "kind": "Blackduck",
          "metadata": {
            "name": "blackduck-ephemeral"
          },
          "spec": {
            "adminPassword": "<POSTGRES_ADMIN_USER_PASSWORD_BASE64_ENCODED>",
            "certificateName": "default",
            "exposeService": "NONE",
            "licenseKey": "<BLACKDUCK_LICENSE_KEY>",
            "livenessProbes": false,
            "namespace": "blackduck-ephemeral",
            "persistentStorage": false,
            "postgresPassword": "<POSTGRES_POSTGRES_USER_PASSWORD_BASE64_ENCODED>",
            "size": "Small",
            "type": "opssight",
            "userPassword": "<POSTGRES_BLACKDUCK_USER_PASSWORD_BASE64_ENCODED>",
            "version": "2019.8.1"
          }
        },
        {
          "api_version": "synopsys.com/v1",
          "kind": "Alert",
          "metadata": {
            "clusterName": "",
            "name": "alert-test"
          },
          "spec": {
            "alertMemory": "2560Mi",
            "cfsslMemory": "640Mi",
            "encryptionGlobalSalt": "",
            "encryptionPassword": "",
            "environs": [
              "ALERT_SERVER_PORT:8443",
              "PUBLIC_HUB_WEBSERVER_HOST:<<BLACK_DUCK_HOST>>",
              "PUBLIC_HUB_WEBSERVER_PORT:443"
            ],
            "exposeService": "",
            "namespace": "alert-test",
            "persistentStorage": false,
            "port": 8443,
            "pvcSize": "",
            "pvcStorageClass": "",
            "standAlone": true,
            "version": "5.0.0"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/blackducksoftware/synopsys-operator-bundle@sha256:46cee91fdddca9dc6d10fadd954676b7d582505418ba0eec0f2788c19ed1a72a",
      "bundle_path_digest": "sha256:46cee91fdddca9dc6d10fadd954676b7d582505418ba0eec0f2788c19ed1a72a",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-23T04:22:54.640000+00:00",
      "csv_description": "[Synopsys Operator](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34373652/Synopsys+Operator) is a cloud-native administration utility for Synopsys software. Synopsys Operator assists in the deployment and management of Synopsys software like Black Duck, OpsSight Connector, and Black Duck Alert, in a Kubernetes and Red Hat OpenShift environment.\n\nThe Synopsys Operator deployment can be managed by a utility called [synopsysctl](https://github.com/blackducksoftware/synopsys-operator/releases). synopsysctl makes it easy to deploy Synopsys Operator, and it eliminates the need to edit YML/JSON configuration files when deploying and managing software with Synopsys Operator. Synopsysctl provides a rich set of command-line parameters to allow for fast and highly-configurable deployments of Black Duck, OpsSight Connector, and Black Duck Alert. synopsysctl\u2019s interface mimics that of kubectl and oc, making it immediately familiar to anyone with Kubernetes and/or Red Hat OpenShift experience.\n\n## Black Duck\n[Black Duck](https://www.synopsys.com/software-integrity/security-testing/software-composition-analysis.html) is a comprehensive solution for managing security, license compliance, and code quality risks that come from the use of open source in applications and containers. Black Duck gives you unmatched visibility into third-party code, enabling you to control it across your software supply chain and throughout the application life cycle.\n\n### Supported Features\n\n* **Find and fix security vulnerabilities** at each stage in the SDLC, with detailed, vulnerability-specific remediation guidance and technical insight.\n\n* **Eliminate risk of open source license** noncompliance and safeguard your intellectual property by using the industry\u2019s largest open source knowledge base to identify which of 2,500+ licenses are relevant to the open source in your applications.\n\n* **Scan virtually any software, firmware, and source code** to generate acomprehensive bill of materials (BoM) of what\u2019s inside.\n\n* **Automatically monitor for new vulnerabilities** hat affect your BoM, with custom policies and workflow triggers to accelerate remediation and reduce your risk exposure.\n\n## OpsSight Connector\n[Synopsys Black Duck OpsSight](https://synopsys.atlassian.net/wiki/spaces/BDLM/pages/34242566/OpsSight) for Red Hat OpenShift Container Platform provides automated open source identification and monitoring in all container images in a Kubernetes or OpenShift cluster to give teams visibility into, and control over, the risks associated with open source components in those images.\n\n### Supported Features\n\n* **Automated Detection** - OpsSight\u2019s automated multifactor open source detection inventories all the open source in container images as they are deployed.\n\n* **Security Intelligence** -  Black Duck Enhanced Vulnerability Data identifies all known vulnerabilities for the open source in your container images while actionable mitigation and remediation guidance helps minimize exploit risk.\n\n* **Policy Management** - OpsSight policy management allows teams to define open source use and security policies, which are evaluated with each scan and documented as metadata on your containers, allowing you to flag images that violate policies and prevent them from deploying to production.\n\n* **Continous Monitoring** - OpsSight continuously monitors for newly reported open source security vulnerabilities associated with open source in use, providing same-day alerts so teams can understand how newly discovered vulnerabilities affect their containers in production.\n\n## Black Duck Alert\nBlack Duck Alert is an additional deployment to Black Duck that enables you to see Security Vulnerability and Policy Management notifications through email, Slack or HipChat.\n\n## About Synopsys\n\n[Synopsys Software Integrity](https://www.synopsys.com/software-integrity.html) helps development teams build secure, high-quality software, minimizing risks while maximizing speed and productivity. Synopsys, a recognized leader in application security, provides static analysis, software composition analysis, and dynamic analysis solutions that enable teams to quickly find and fix vulnerabilities and defects in proprietary code, open source components, and application behavior.",
      "csv_display_name": "Synopsys Operator",
      "csv_metadata_description": "Synopsys Operator is a cloud-native administration utility for Synopsys software.",
      "csv_name": "synopsys-operator.2019.8.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:28:08.818000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "synopsys-certified",
      "provided_apis": [
        {
          "group": "synopsys.com",
          "kind": "Blackduck",
          "plural": "blackducks",
          "version": "v1"
        },
        {
          "group": "synopsys.com",
          "kind": "OpsSight",
          "plural": "opssights",
          "version": "v1"
        },
        {
          "group": "synopsys.com",
          "kind": "Alert",
          "plural": "alerts",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "image": "registry.connect.redhat.com/blackducksoftware/synopsys-operator@sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "name": "synopsys-operator-554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8-annotation"
        },
        {
          "digest": "sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "image": "registry.connect.redhat.com/blackducksoftware/synopsys-operator@sha256:554c0844507b8d396d24cee6316913cabe7b09a525bf968ad5a151cede8aeda8",
          "name": "synopsys-operator"
        },
        {
          "digest": "sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
          "image": "gcr.io/saas-hub-stg/blackducksoftware/pyfire@sha256:266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9",
          "name": "blackducksoftware/pyfire-266be04b6e09e5ec03664600fb2280fdf9e3aedb1d68edf37d27323ba6fafea9-annotation"
        },
        {
          "digest": "sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
          "image": "docker.io/prom/prometheus@sha256:7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3",
          "name": "prometheus-7b987901dbc44d17a88e7bda42dbbbb743c161e3152662959acd9f35aeefb9a3-annotation"
        },
        {
          "digest": "sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
          "image": "docker.io/blackducksoftware/opssight-pod-processor@sha256:726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275",
          "name": "opssight-pod-processor-726892dafbf26ab3e1a0d82ab37953d9ed0aa6de6709313919889d24acef4275-annotation"
        },
        {
          "digest": "sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
          "image": "docker.io/blackducksoftware/opssight-image-processor@sha256:8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d",
          "name": "opssight-image-processor-8e0a60e4fff96ccea7547cc9e9b11c43de9d2bd1b03b5d3682df29240dc8d68d-annotation"
        },
        {
          "digest": "sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
          "image": "docker.io/blackducksoftware/opssight-image-getter@sha256:c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc",
          "name": "opssight-image-getter-c518bf7b292fe56cd09a94a3d9373e806b31dff22c4df54f1b186d852b99f4cc-annotation"
        },
        {
          "digest": "sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
          "image": "docker.io/blackducksoftware/opssight-scanner@sha256:128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9",
          "name": "opssight-scanner-128c7223ad1ae04ddb27ba6f0c612a62d78e681c01ffb6a881ab688408749ca9-annotation"
        },
        {
          "digest": "sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
          "image": "docker.io/blackducksoftware/opssight-core@sha256:ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834",
          "name": "opssight-core-ac57efb13c8b09c64699f4bdba3c1d4242359514b886d3e461ae00b032e36834-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2019.8.4",
      "version_original": "2019.8.4"
    },
    {
      "_id": "5f925a9fe9c4b14b8a1a59aa",
      "alm_examples": [
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "sysdig-agent",
              "app.kubernetes.io/managed-by": "sysdig-operator",
              "app.kubernetes.io/name": "sysdig-agent"
            },
            "name": "sysdig-agent"
          },
          "spec": {
            "daemonset": {
              "annotations": {
                "productID": "SysdigSecureDevopsPlatform",
                "productName": "Sysdig Secure DevOps Platform",
                "productVersion": "1.8.3"
              }
            },
            "scc": {
              "create": true
            },
            "sysdig": {
              "accessKey": "XXX"
            }
          }
        },
        {
          "api_version": "sysdig.com/v1",
          "kind": "SysdigAgent",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "sysdig-agent-with-ebpf",
              "app.kubernetes.io/managed-by": "sysdig-operator",
              "app.kubernetes.io/name": "sysdig-agent-with-ebpf"
            },
            "name": "sysdig-agent-with-ebpf"
          },
          "spec": {
            "daemonset": {
              "annotations": {
                "productID": "SysdigSecureDevopsPlatform",
                "productName": "Sysdig Secure DevOps Platform",
                "productVersion": "1.8.3"
              }
            },
            "ebpf": {
              "enabled": true
            },
            "scc": {
              "create": true
            },
            "sysdig": {
              "accessKey": "XXX"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:cee924a4b045cb2c5cd0a4cadbe070a47647b03b7c52762c163f5325ca82ed17",
      "bundle_path_digest": "sha256:cee924a4b045cb2c5cd0a4cadbe070a47647b03b7c52762c163f5325ca82ed17",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-23T04:22:55.704000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\n\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n\n## Settings\n\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `10.2.0`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\n\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: 1.8.3\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\n\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n\n## Getting your Access Key\n\nTo retrieve the key and use it in the agent:\n\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n\n2. Choose Agent Installation.\n\n3. Use the Copy button to copy the access key at the top of the page.\n\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n\n## Verify Metrics in Sysdig Monitor UI\n\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n\n1. Access Sysdig Monitor:\n\n   **SaaS**: https://app.sysdigcloud.com\n\n   Log in with your Sysdig user name and password.\n\n2. Select the **Explore** tab to see if metrics are displayed.\n\n3. To verify that kube state metrics and cluster name are working correctly:\n\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n\n4. Select an individual container or pod to see details.\n\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\n\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.",
      "csv_name": "sysdig-operator.v1.8.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:50:03.806000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        },
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:95ca179c10a889c9b91ea44f69ff8db4cd56ad29a7a847277ae9a3bcd63b5ebf",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:95ca179c10a889c9b91ea44f69ff8db4cd56ad29a7a847277ae9a3bcd63b5ebf",
          "name": "sysdig-operator-95ca179c10a889c9b91ea44f69ff8db4cd56ad29a7a847277ae9a3bcd63b5ebf-annotation"
        },
        {
          "digest": "sha256:95ca179c10a889c9b91ea44f69ff8db4cd56ad29a7a847277ae9a3bcd63b5ebf",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:95ca179c10a889c9b91ea44f69ff8db4cd56ad29a7a847277ae9a3bcd63b5ebf",
          "name": "sysdig-operator"
        },
        {
          "digest": "sha256:33c7764b08bff2bdf6ad0c61b82f014d2aa61ad08a4ee49dae60f9cb56fc59cf",
          "image": "registry.connect.redhat.com/sysdig/agent@sha256:33c7764b08bff2bdf6ad0c61b82f014d2aa61ad08a4ee49dae60f9cb56fc59cf",
          "name": "daemonset"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.8.3",
      "version_original": "1.8.3"
    },
    {
      "_id": "5f925aa07dfea609c170ab15",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "tag": "7.22.9"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:8890c8329b9968a041860d9eea7685a103b6643882dc569eb634d467442c79c2",
      "bundle_path_digest": "sha256:8890c8329b9968a041860d9eea7685a103b6643882dc569eb634d467442c79c2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-23T04:22:56.887000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v7.22.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:42:47.715000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605",
          "name": "t8c-operator-b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605-annotation"
        },
        {
          "digest": "sha256:b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605",
          "image": "registry.connect.redhat.com/turbonomic/t8c-operator@sha256:b8f6fa73da944ddb7db366792b3c1b264032e267b20f3e00099b1e244e452605",
          "name": "t8c-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "7.22.9",
      "version_original": "7.22.9"
    },
    {
      "_id": "5f925aa37fbd761308fd63ec",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:0cb9e9a9f8294c00517d0662eb8df63dca9a5c27ff83f00443b4eab3f31626d5",
      "bundle_path_digest": "sha256:0cb9e9a9f8294c00517d0662eb8df63dca9a5c27ff83f00443b4eab3f31626d5",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-23T04:22:59.371000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:45:00.030000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "image": "quay.io/tigera/operator@sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "name": "operator-ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff-annotation"
        },
        {
          "digest": "sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "image": "quay.io/tigera/operator@sha256:ebe3bf3a6cd29cd2f570232e187fe95d138119e589ec8fcbd8e4e98a377d5dff",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.7.3",
      "version_original": "1.7.3"
    },
    {
      "_id": "5f925aa47dfea609c170ab16",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "example-timemachine"
          },
          "spec": {
            "size": 3
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:cf6aab0d357f8dadbbcd596c09cd847752401dd17cbec15270b8213f2fc99dd9",
      "bundle_path_digest": "sha256:cf6aab0d357f8dadbbcd596c09cd847752401dd17cbec15270b8213f2fc99dd9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:23:00.318000+00:00",
      "csv_description": "Time Machine\u00ae provides software virtual clocks that enable you to time travel your applications into the future or the past, facilitating time shift testing on your date & time sensitive application logic.\n\nTime Machine is transparent to applications and databases so no code modification is required to do time shift testing and system clock is never modified.\n\nTesters can time travel by themselves or automate time travel with test scripts without awaiting administrators to change time.\n\nVirtual clocks can be set at group, user or process level, with clock speed set to normal, frozen, accelerated or decelerated. Multiple virtual clocks in the same test environment enable concurrent testing of different date/time.\n\nTo use Time Machine with containers/pods, a host copy of Time Machine should be first installed on the main host system that serves the containers. It is a prerequisite for running of Time Machine in the containers successfully as containers share the same address space as the host.\n\nTo download the necessary Time Machine installation package for the host, please go to the following location:\n\n[ftp://ftp.solution-soft.com/pub/tm/linux/redhat/64bit/](ftp://ftp.solution-soft.com/pub/tm/linux/redhat/64bit/)\n\nIn the same location you'll find a **tmreadme.txt** file with detailed installation instructions.\n\nNo license for this host Time Machine is needed (only for Time Machine inside the container), unless time travel is also required for the host system (in addition to containers).\n\nIn case that containers will be running on multiple hosts (i.e. a cluster), each of those hosts must have Time Machine installed as well.\n\nFor more information:\n- [Time Machine Data Sheet](https://solution-soft.com/sites/default/files/wysiwyg/TMDataSheet.pdf)\n\n### Installation and Licensing of Time Machine in the Container/Pod\nTime Machine is made available as an RPM package and a shell script available in the root directory of the container/pod you'll create from the container image/operator:\n```sh\ntm_linux_2.6.up_x86_64-12.9R3.rpm\n```\n```sh\nssstm_install.sh\n```\nTo install, run as root:\n\n```sh\n$ ./ssstm_install.sh tm_linux_2.6.up_x86_64-12.9R3.rpm\n```\nOnce the installation is completed, to obtain the necessary license key(s) to run Time Machine, as root run:\n```sh\n$ /etc/ssstm/ssslicmgr -k\n\n```\nthen copy & paste the output and email the output to ***support@solution-soft.com***\n\nPlease also include the following contact information:\n- your name\n- company name\n- email address\n- phone number\n- specify that a key for the Operator is needed\n\n### Contacting Support\nIf you received any support code messages and cannot resolve the issue yourself, please make a note of the support code(s) and contact us:\n\nSolution-Soft\n\nPhone: US +1 408 346 1414\n\nEmail: <support@solution-soft.com>\n\nWeb: <www.solution-soft.com>",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine creates virtual clocks for time shift testing of applications",
      "csv_name": "time-machine-operator4.v0.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:43:11.779000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "plural": "timemachines",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:78e93bf995031edb9939daaba36f75558d481329f09a1887b8ed0e7d29f6c11d",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:78e93bf995031edb9939daaba36f75558d481329f09a1887b8ed0e7d29f6c11d",
          "name": "timemachine-operator-78e93bf995031edb9939daaba36f75558d481329f09a1887b8ed0e7d29f6c11d-annotation"
        },
        {
          "digest": "sha256:78e93bf995031edb9939daaba36f75558d481329f09a1887b8ed0e7d29f6c11d",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:78e93bf995031edb9939daaba36f75558d481329f09a1887b8ed0e7d29f6c11d",
          "name": "ansible"
        },
        {
          "digest": "sha256:78e93bf995031edb9939daaba36f75558d481329f09a1887b8ed0e7d29f6c11d",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:78e93bf995031edb9939daaba36f75558d481329f09a1887b8ed0e7d29f6c11d",
          "name": "time-machine-operator4"
        },
        {
          "digest": "sha256:3298684c71f86fef27d7ec0d9bfcb7e0ae9424d54c02c6afbfcd2dd95fcf94f2",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:3298684c71f86fef27d7ec0d9bfcb7e0ae9424d54c02c6afbfcd2dd95fcf94f2",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.4",
      "version_original": "0.0.4"
    },
    {
      "_id": "5f925aa5e9c4b14b8a1a59ab",
      "alm_examples": [
        {
          "api_version": "containo.us/v1alpha1",
          "kind": "Traefikee",
          "metadata": {
            "name": "example-traefikee",
            "namespace": "traefikee"
          },
          "spec": {
            "cluster": "traefikee",
            "controllers": 1,
            "proxies": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/containous/traefikee-operator-bundle@sha256:d8be7fb9621c8a2224d218f62926944a86d704d92db1c2344a0f3724575991b8",
      "bundle_path_digest": "sha256:d8be7fb9621c8a2224d218f62926944a86d704d92db1c2344a0f3724575991b8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-23T04:23:01.507000+00:00",
      "csv_description": "TraefikEE is a distributed, and highly available edge routing solution built on top of the open source Traefik and natively integrates with Openshift to:\n\n* Load balance any applications and easily scale out to meet production traffic needs\n* Secure services with end-to-end network and application encryption\n* Provide end-to-end monitoring and real-time tracing for better insight into application uptime and performance\n\n## Before You Start\n\nTo start using the operator you''ll need a license key\n\nRequest your [30-days free trial](https://info.containo.us/free-trial-traefikee-red-hat-openshift)\n\n* Create a Secret with your License key\n```\nkubectl create namespace traefikee\nkubectl create -n traefikee secret generic license --from-literal=license=${TRAEFIKEE_LICENSE_KEY}\n```\n\n* Generate the client credentials\n```\nexport CLUSTER=test\nteectl setup --cluster=\"${CLUSTER}\" --kubernetes --force\nkubectl create secret -n traefikee generic \"${CLUSTER}-mtls\" --from-file=bundle.zip=./bundle.zip\nkubectl label secret -n traefikee \"${CLUSTER}-mtls\" app=traefikee\nkubectl label secret -n traefikee \"${CLUSTER}-mtls\" release=\"${CLUSTER}\"\n```\n",
      "csv_display_name": "Traefikee Operator",
      "csv_metadata_description": "Traefik Enterprise Edition",
      "csv_name": "traefikee-redhat-certified.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:49:16.300000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "traefikee-redhat-certified",
      "provided_apis": [
        {
          "group": "containo.us",
          "kind": "Traefikee",
          "plural": "traefikees",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "traefikee-operator-2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f-annotation"
        },
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "ansible"
        },
        {
          "digest": "sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "image": "registry.connect.redhat.com/containous/traefikee-operator@sha256:2197c7544027a17debbe0ededc166610d42d90bf957b8ae725bcd27ccf53778f",
          "name": "operator"
        },
        {
          "digest": "sha256:86b5cce4168ed056f3d43b121ac2a4533304b857004749d80a30d6c72ede2c40",
          "image": "registry.connect.redhat.com/containous/traefikee@sha256:86b5cce4168ed056f3d43b121ac2a4533304b857004749d80a30d6c72ede2c40",
          "name": "traefikee"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "5f925aabe9c4b14b8a1a59ac",
      "alm_examples": [
        {
          "api_version": "charts.ta.cloud.ibm.com/v1",
          "kind": "TransAdv",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ta-instance",
              "app.kubernetes.io/managed-by": "helm",
              "app.kubernetes.io/name": "ta-operator",
              "release": "operator"
            },
            "name": "ta"
          },
          "spec": {
            "authentication": {
              "disabled": {
                "liberty": true,
                "ui": true
              },
              "ocp": {
                "apiEndpoint": "https://api.sample-host-name:6443",
                "authIssuerEndpoint": "https://oauth-openshift.apps.sample-host-name:443",
                "secretName": "transformation-advisor-secret"
              },
              "oidc": {
                "clientId": "your-client-id",
                "clientSecret": "your-client-secret"
              }
            },
            "commonServices": {
              "cloudpakId": "__TA_PLACEHOLDER_CLOUDPAK_ID__",
              "cloudpakName": "__TA_PLACEHOLDER_CLOUDPAK_NAME__",
              "cloudpakVersion": "__TA_PLACEHOLDER_CLOUDPAK_VERSION__"
            },
            "couchdb": {
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 60,
                "periodSeconds": 5,
                "timeoutSeconds": 3
              },
              "persistence": {
                "accessMode": "ReadWriteMany",
                "enabled": true,
                "existingClaim": "",
                "size": "8Gi",
                "storageClassName": "",
                "supplementalGroups": [],
                "useDynamicProvisioning": true
              },
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 5,
                "periodSeconds": 5,
                "timeoutSeconds": 3
              },
              "resources": {
                "limits": {
                  "cpu": "16000m",
                  "memory": "8Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1Gi"
                }
              }
            },
            "demo": {
              "enabled": false
            },
            "networkPolicy": {
              "enabled": false
            },
            "nodePortConfig": {
              "libertyPort": "",
              "routerNodeIp": "",
              "uiPort": ""
            },
            "route": {
              "enabled": true,
              "hostname": "ta.apps.sample-host-name",
              "rateLimit": {
                "enabled": true,
                "rateHttp": "200",
                "rateTcp": "200"
              }
            },
            "tls": {
              "caCert": "",
              "enabled": true
            },
            "transadv": {
              "livenessProbe": {
                "failureThreshold": 15,
                "initialDelaySeconds": 60,
                "periodSeconds": 5,
                "timeoutSeconds": 30
              },
              "logLevel": "info",
              "publicUrl": "https://ta.apps.sample-host-name",
              "readinessProbe": {
                "failureThreshold": 15,
                "initialDelaySeconds": 60,
                "periodSeconds": 5,
                "timeoutSeconds": 30
              },
              "resources": {
                "limits": {
                  "cpu": "16000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1Gi"
                }
              }
            },
            "transadvui": {
              "livenessProbe": {
                "failureThreshold": 15,
                "initialDelaySeconds": 60,
                "periodSeconds": 30,
                "timeoutSeconds": 5
              },
              "logLevel": "info",
              "readinessProbe": {
                "failureThreshold": 15,
                "initialDelaySeconds": 5,
                "periodSeconds": 30,
                "timeoutSeconds": 5
              },
              "resources": {
                "limits": {
                  "cpu": "16000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "1Gi"
                }
              },
              "useSecureCookie": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/trans-advisor-operator-bundle@sha256:36d0e065b737cfc39015d55c9c71d1aff7d26a1f3a1009fcfbf6534d9a37a4f1",
      "bundle_path_digest": "sha256:36d0e065b737cfc39015d55c9c71d1aff7d26a1f3a1009fcfbf6534d9a37a4f1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-10-23T04:23:07.690000+00:00",
      "csv_description": "[IBM Cloud Transformation Advisor](https://www.ibm.com/garage/method/practices/learn/ibm-transformation-advisor) helps you plan, prioritize, and package your on-premise workloads for modernization on OpenShift Container Platform. Documentation for the product can be found [here](https://www.ibm.com/support/knowledgecenter/SS5Q6W/welcome.html).\n\n### Prerequisites\n- Create \"ta\" project\n\n  In the top right corner of Red Hat OpenShift Container Platform dashboard, click on the \"+\" symbol to import YAML.\n  Insert following YAML definition and click \"Create\".  \n\n```\nkind: Project\napiVersion: project.openshift.io/v1\nmetadata:\n  name: ta\n```\n\n- Add cluster-admin role to ta-operator server account\n\n  In the top right corner of Red Hat OpenShift Container Platform dashboard, click on the \"+\" symbol to import YAML.\n  Insert following YAML definition and click \"Create\".\n\n```\nkind: ClusterRoleBinding\napiVersion: rbac.authorization.k8s.io/v1\nmetadata:\n  name: ta-cluster-admin\nsubjects:\n  - kind: ServiceAccount\n    name: ta-operator\n    namespace: ta\nroleRef:\n  apiGroup: rbac.authorization.k8s.io\n  kind: ClusterRole\n  name: cluster-admin\n```\n\n- Create Operator Subscription\n\n  Installing the operator, in the \"Create Operator Subscription\" page, please select \"ta\" in the \"A specific namespace on the cluster\" field.\n       \n### Persistence\nPersistence can happen via  \n\n- setting up a default storage class for the system or specifying the storage class name in \"persistence.storageClassName\". In the preinstall script it will be set to \"rook-ceph-cephfs-internal\" if this storage class exists.\n\n- setting up PV with access mode specified in \"persistence.accessMode\" (default: \"ReadWriteMany\") and size specified in \"persistence.size\" (default: 8 GB). NFS PV might require the \"persistence.supplementalGroups\" to be set to access the data folder on the NFS drive.\n\n- specifying an existing PVC in \"persistence.existingClaim\"\n\nNOTE: By default access mode for persistence is set to \"ReadWriteMany\". In an install on IBM Public Cloud, it needs to be set to \"ReadWriteOnce\".\n\n### Pulling product images from entitled registry\n\nProviding image pull secret to entitled registry will make Transformation Advisor pull images from \"cp.stg.icr.io\".   \nThe secret can be passed via those set of variables which need to be added manually:\n```\ncouchdb:\n  imagePullSecret: ta-pull-secret\n\ntransadv: \n  imagePullSecret: ta-pull-secret\n\ntransadvui: \n  imagePullSecret: ta-pull-secret\n```\n\n### Access UI\nBy default, the Transformation Advisor operator exposes the UI as a Route on OpenShift. \nGo to \"Networking\" - \"Routes\" and click on the location of the ui-route.\n### LICENSE\nThis operator may be evaluated for a period of 90 days after which it may continue to be used in conjunction with IBM Cloud Pak for Applications or IBM Cloud Pak for Integration (see [License](https://www14.software.ibm.com/cgi-bin/weblap/lap.pl?li_formnum=L-NHON-BPLCV4&title=IBM%20Cloud%20Transformation%20Advisor%202.2.0)).",
      "csv_display_name": "Transformation Advisor Operator",
      "csv_metadata_description": "IBM Cloud Transformation Advisor helps you plan, prioritize, and package your on-premise workloads for modernization on IBM Cloud and IBM Cloud Private.",
      "csv_name": "ta-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:34:47.036000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "transform-adv-operator",
      "provided_apis": [
        {
          "group": "charts.ta.cloud.ibm.com",
          "kind": "TransAdv",
          "plural": "transadvs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:793d8ca7b5cd45ab66cf0e33af3dcf6c6fec89ebca9173b04f5e3e2c9d2df0c7",
          "image": "registry.connect.redhat.com/ibm/trans-advisor-operator@sha256:793d8ca7b5cd45ab66cf0e33af3dcf6c6fec89ebca9173b04f5e3e2c9d2df0c7",
          "name": "trans-advisor-operator-793d8ca7b5cd45ab66cf0e33af3dcf6c6fec89ebca9173b04f5e3e2c9d2df0c7-annotation"
        },
        {
          "digest": "sha256:a2ada60a7fd9a335728a2caa543dbebff1061e227d7cb03c85d045a4244018b4",
          "image": "registry.connect.redhat.com/ibm/trans-advisor-operator@sha256:a2ada60a7fd9a335728a2caa543dbebff1061e227d7cb03c85d045a4244018b4",
          "name": "ta-operator"
        },
        {
          "digest": "sha256:6d6f45d9a21734c05fbf364fb1027384dfbf0a3234c016876502e75e9dad85fa",
          "image": "ibmcom/transformation-advisor-db@sha256:6d6f45d9a21734c05fbf364fb1027384dfbf0a3234c016876502e75e9dad85fa",
          "name": "couchdb"
        },
        {
          "digest": "sha256:e5bf8ee24afa5b51d9f19a4eb64f0a7b81e17520f44b3d0e2e66bd330be2eeb2",
          "image": "ibmcom/transformation-advisor-server@sha256:e5bf8ee24afa5b51d9f19a4eb64f0a7b81e17520f44b3d0e2e66bd330be2eeb2",
          "name": "liberty_server"
        },
        {
          "digest": "sha256:4003f7fbcba6d06593c409e18b911a6fa5900c77353ea098e64fc5dbd0853f8c",
          "image": "ibmcom/transformation-advisor-ui@sha256:4003f7fbcba6d06593c409e18b911a6fa5900c77353ea098e64fc5dbd0853f8c",
          "name": "ui"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "5f925aac7fbd761308fd63ed",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/trans-advisor-operator-bundle@sha256:6de704e756f6859c1090b1904a4d269f90f4a05e7140f183222af5b8815beea2",
      "bundle_path_digest": "sha256:6de704e756f6859c1090b1904a4d269f90f4a05e7140f183222af5b8815beea2",
      "capabilities": [
        ""
      ],
      "channel_name": "v2.3",
      "creation_date": "2020-10-23T04:23:08.913000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "ta-operator.v2.3.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:26:52.050000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "transform-adv-operator",
      "provided_apis": [
        {
          "group": "charts.ta.cloud.ibm.com",
          "kind": "TransAdv",
          "plural": "transadvs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": ">=2.3.0 <2.3.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.3.1",
      "version_original": "2.3.1"
    },
    {
      "_id": "5f925aae7fbd761308fd63ee",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ca/uma-operator-bundle@sha256:3a47ed5f905bef037a51e9fb1aabf4e71bdcceedbe6caa7c92352657e3e5ee09",
      "bundle_path_digest": "sha256:3a47ed5f905bef037a51e9fb1aabf4e71bdcceedbe6caa7c92352657e3e5ee09",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:23:10.009000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "uma-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:56:43.701000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "uma-operator",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "5f925ab0e9c4b14b8a1a59ae",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/storware/vprotect-operator-bundle@sha256:119f046b27bcf6bc70b1f04d56fe86e8d1c223c8c5ba238f323821a4c14b4bae",
      "bundle_path_digest": "sha256:119f046b27bcf6bc70b1f04d56fe86e8d1c223c8c5ba238f323821a4c14b4bae",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:23:12.306000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "vprotect-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:56:53.220000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "vprotect-operator",
      "provided_apis": [
        {
          "group": "vprotect.storware.com",
          "kind": "VProtectDBServerNode",
          "plural": "vprotectdbservernodes",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5f925ab1e9c4b14b8a1a59af",
      "alm_examples": [
        {
          "api_version": "wavefront.com/v1alpha1",
          "kind": "WavefrontProxy",
          "metadata": {
            "name": "example-wavefrontproxy",
            "namespace": "wavefront"
          },
          "spec": {
            "enableAutoUpgrade": false,
            "image": "registry.connect.redhat.com/wavefronthq/proxy@sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
            "openshift": true,
            "storageClaimName": "wavefront-proxy-storage",
            "token": "<TOKEN>",
            "url": "<https://YOUR_CLUSTER.wavefront.com/api/>"
          }
        },
        {
          "api_version": "wavefront.com/v1alpha1",
          "kind": "WavefrontCollector",
          "metadata": {
            "name": "wavefront-collector",
            "namespace": "wavefront"
          },
          "spec": {
            "daemon": true,
            "enableAutoUpgrade": false,
            "env": [
              {
                "name": "HOST_PROC",
                "value": "/host/proc"
              },
              {
                "name": "POD_NODE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "spec.nodeName"
                  }
                }
              },
              {
                "name": "POD_NAMESPACE_NAME",
                "valueFrom": {
                  "fieldRef": {
                    "apiVersion": "v1",
                    "fieldPath": "metadata.namespace"
                  }
                }
              }
            ],
            "image": "registry.connect.redhat.com/wavefronthq/wavefront-kubernetes-collector@sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
            "openshift": true,
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node.alpha.kubernetes.io/role",
                "operator": "Exists"
              },
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ],
            "useOpenshiftDefaultConfig": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/wavefront-operator-bundle@sha256:a1cba5d7638a711eaf477dccff47d7a1bb83490c2bb05371a950b8e593bc59f4",
      "bundle_path_digest": "sha256:a1cba5d7638a711eaf477dccff47d7a1bb83490c2bb05371a950b8e593bc59f4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:23:13.832000+00:00",
      "csv_description": "Wavefront OpenShift Operator automatically deploys Wavefront Collector for Kubernetes and Wavefront Proxy, enabling developers and OpenShift operators to get automated observability across the OpenShift environment, including containerized applications, Kubernetes, and underlying infrastructure. \n\nThis Operator deploys two Custom Resources Definitions:\n\n* **Wavefront Proxy:-** A Wavefront proxy ingests metrics and forwards them to the Wavefront service in a secure, fast, and reliable manner. After you install a proxy in your environment, it can handle thousands of simultaneous clients. Your data collection agents or custom code send data to the proxy, which consolidates points into configurable batches and sends the data to the Wavefront service.\n\n* **Wavefront Collector:-** With zero-configuration installation, the Wavefront Collector for Kubernetes auto-discovers and enables monitoring of Kubernetes, infrastructure, and Kubernetes workloads by sending full-stack - Kubernetes clusters, worker nodes, system, Kubernetes and Docker KPI, RED/USE of each layer and custom applications metrics to Wavefront.\n\n### Prerequisite\n\n* A Wavefront API token is needed to configure Wavefront Proxy.  Refer [Generating an API Token] (https://docs.wavefront.com/users_account_managing.html#generating-an-api-token) for generating a token.\n\n### Installing Wavefront Operator using default values\n\n* Create project with name *wavefront* in Openshift and install Wavefront Operator into it.  \n* Create Wavefront Proxy by providing Wavefront API token and URL in the Wavefront Proxy definition. \n* Create Wavefront Collector.\n\n### Advanced Options\n\nRefer Wavefront Operator [docs] (https://github.com/wavefrontHQ/wavefront-operator/blob/master/docs/openshift-operator.md) for configuring Wavefront Proxy and Wavefront Collector using advanced configuration parameters.\n",
      "csv_display_name": "Wavefront Operator",
      "csv_metadata_description": "Wavefront OpenShift Operator automatically deploys Wavefront Collector for Kubernetes and Wavefront Proxy.",
      "csv_name": "wavefront-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:55:04.952000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "wavefront-operator",
      "provided_apis": [
        {
          "group": "wavefront.com",
          "kind": "WavefrontCollector",
          "plural": "wavefrontcollectors",
          "version": "v1alpha1"
        },
        {
          "group": "wavefront.com",
          "kind": "WavefrontProxy",
          "plural": "wavefrontproxies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-operator@sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "name": "wavefront-operator-5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6-annotation"
        },
        {
          "digest": "sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-operator@sha256:5ddd6c4cd765f5fe1eb5aac46013ca7b925e3ca99ae63681cab068fa3cbac8a6",
          "name": "wavefront-operator"
        },
        {
          "digest": "sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
          "image": "registry.connect.redhat.com/wavefronthq/wavefront-kubernetes-collector@sha256:25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc",
          "name": "wavefront-kubernetes-collector-25d54158557692b21b56f546b321601301cd470f33f560559f6b9620c1231efc-annotation"
        },
        {
          "digest": "sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
          "image": "registry.connect.redhat.com/wavefronthq/proxy@sha256:5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3",
          "name": "proxy-5f3e0e9e3768942d6ad0c264213ae5a68d699ad3ca3e8014aed6832b8fb5efc3-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "5f925ab47fbd761308fd63f0",
      "alm_examples": [
        {
          "api_version": "yugabyte.com/v1alpha1",
          "kind": "YBCluster",
          "metadata": {
            "name": "example-ybcluster",
            "namespace": "yb-operator"
          },
          "spec": {
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/yugabytedb/yugabyte",
              "tag": "2.1.2.0"
            },
            "master": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "masterRPCPort": 7100,
              "masterUIPort": 7000,
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              }
            },
            "replicationFactor": 3,
            "subresources": {
              "status": {}
            },
            "tls": {
              "enabled": true,
              "rootCA": {
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lVUk9vY2RNbUxZU2YwOWRkQTBPa0VWODJtTTRVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERVJNQThHQTFVRUNnd0lXWFZuWVdKNWRHVXhHekFaQmdOVkJBTU1Fa05CSUdadmNpQlpkV2RoWW5sMApaU0JFUWpBZUZ3MHhPVEE1TWpNd09URXhNalphRncweE9URXdNak13T1RFeE1qWmFNREF4RVRBUEJnTlZCQW9NCkNGbDFaMkZpZVhSbE1Sc3dHUVlEVlFRRERCSkRRU0JtYjNJZ1dYVm5ZV0o1ZEdVZ1JFSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3hMd3hMeTZjYjhZdS9laFlmU3pteWVqcEw1cjZVSnFmeApWVDF5SUJWSktzNnZPR0QzRWdhSzZaVVZkODBzOGdZU3hzbG1UREh0cnNyWXhCSVMwRXJMVFFsODZVUVd5d1lsCjkvT09FYzdGUVRoWmdsZHRDQmwxNUZSSmp4TGk0LzFJUU1xaU93TDlGM0xjQ3JobXF1bVZKWXJmVGRtNnp4YXkKY0Q3ZlNISGw5Y3phYWFGUGRRa2JZaUt0V0p2cmJ1WEx2QkhleE0rL2FhaVIwY2FBTE94RkhKRlE0N2E1cWwvVQpOcld6emJuVjFZTkRGcEJmLzY2cm95WFh5L2xGMmhWWStYampudlRNL2M0bURWRHRRcDVKVXR6UGhGZ3ZhQngyClUvL2paeFBPblc5dVU4THdFeVdzeWhPNTNWcEREN3VMSHFHYnFrZWd0OVBtTmZsT1QwMlhBZ01CQUFHakpqQWsKTUE0R0ExVWREd0VCL3dRRUF3SUM1REFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQitXS0NlS3JiYXkwaFNMdjMreUlEWEkvaEw5TEY1N3pDUzNtRU1JTEJXcUVXbUN1R25WVXNFCktSMXA0VzBPSERXbStzTWNtbm1EcUM4U1VZMHlOM2htYnVGWWViZUs5bks0R3IzQ0VtTGk2Q3dxbzJtcWZLVHkKSk9sSU5KZDFFdW1jSlVBUEtmVGNxVkdSWlpITFlHMTVsckpyNjNMaTlYbHhqajlNNEpCejJnd2dsQ3Bqa1BxMwpSazgvYnZSbHhaNVdlNVZ1RUtTckZRNForditkSS9peFpwdjQ3UHY1TTM3bHdLRlQ5amRxbW8zbE82ODNFcEljCnF6bStrclUyb2VhZUphVUFnWlRFU296VUZGb053QzUyTjR3YWlndXo0TU5pa3ZIYWtiTEpEdW9zQTRhQTBnN0sKb2s3K2UvKzlWY0hEUllSaFN5VVhkanB2SmdyVUEyeVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1M4TVM4dW5HL0dMdjNvV0gwczVzbm82UythK2xDYW44VlU5Y2lBVlNTck9yemhnCjl4SUdpdW1WRlhmTkxQSUdFc2JKWmt3eDdhN0syTVFTRXRCS3kwMEpmT2xFRnNzR0pmZnpqaEhPeFVFNFdZSlgKYlFnWmRlUlVTWThTNHVQOVNFREtvanNDL1JkeTNBcTRacXJwbFNXSzMwM1p1czhXc25BKzMwaHg1ZlhNMm1taApUM1VKRzJJaXJWaWI2MjdseTd3UjNzVFB2Mm1va2RIR2dDenNSUnlSVU9PMnVhcGYxRGExczgyNTFkV0RReGFRClgvK3VxNk1sMTh2NVJkb1ZXUGw0NDU3MHpQM09KZzFRN1VLZVNWTGN6NFJZTDJnY2RsUC80MmNUenAxdmJsUEMKOEJNbHJNb1R1ZDFhUXcrN2l4NmhtNnBIb0xmVDVqWDVUazlObHdJREFRQUJBb0lCQUJwbEd0elR1dEpEMm9Dcwp6RXpmSlBvOGtTQ3JnQ3FMMDZyMCt0RmNqQzg1TEU4WUJBSHFjb1VSSlA5c3VHa0FxUHoxRmgyaUxqSHRQeFNwCnFOT2FxZm05UVRPVmdHb3cxbnFqaEduZXAwSGxaR0taTXpMdjZQTVNENmhob3Z1ZjRTUjVXblp1ZWhTQUFNRmMKNjNtSDdvSWtkSnF0ZTBrRC9xcVlaQlZaTW5hQ053cGpsQ0dLYmZLbjlDTHpGSUxhckxiNm4zR2x6dmpRTC9nTAphd3VnNlh5WThvcTlEVjBrZkpEV0lVZFRIc1lFYXFHcGNFWkwvNWZPSlVVcTdSSzV2eWxTVmUrWFZ5OE5jZm1sCk4rQUMrcGNwVFRRR2V0SXZsZWpsT1VhUDRTU3FNckdSUVd1Zk5pSG11a1ZtWXo5bUFsN3pRQ2xyWTZEODNBOUwKQkVkMmNYa0NnWUVBMktRVmNhVDlGRFM2ZENPdHZFL2hPUDhSNVAvY21JSjFNMXhKY2hzL1IxcUdjd0RqWkZiRwp0RGFFNVNwVExidjg4d2hKb2FDbWhlbE9renFRaWIrNXNZU2tqZERVTThIUTlhWXk3aGlxT29jL3dFUlB6ZGRRCmUyelhYRHd2QWQ2VGc3OWpLV2NhOWZxcUw0azRWOVBtbHlrVjRUVDVoaHBhVkFqbi82VDZGYXNDZ1lFQTBWL1MKT0JSdzQraEIwU0JiUU1rNTcxdk1mUEdtR0dLb1BPRWRsRzBCY0RsZTF3Wk5yQ01mYVJWdUFMOFFuQ3ZOZXg2Two1UEtUN0tOeXh5Q21IOWlaQXZjeGRjbHF5aHNncHVtTDhhM0tsb1RuSU9vSHdobUVhMWxoVCtHY01QZzEvVTl4ClVqZEY2Y0tmSFFJd2FYYkNHUTVzaFhBUU0yVU5HbStYa0ZmeTQ4VUNnWUJ3d0cxOHVVOFNmaUx3b1VVaDlqMFYKQ2dRSk9IVmFWc09pMkl4TlBBc2lHdVpRNG94Mnc0Y2xjaDZXbXdHeGt0NmlxcFNQNzJuYjFrS1Q4KzRZRTFZVgpJeUQxd2xNL0lNZWRva050a2g2KzJYZC9uTTRnSnNqM2cvMU9QdkNFTzVCeENHSVd3VmZSNEFWRk9saTl0VWFWCk04ZjBienJTNWRKUFhGZEt3VlY3Z3dLQmdBak5NV1lnSGRyRzBiVjcyYm93ZTFuL2p1b1ZzbmpGOVBLU09BOGMKUWZvNHZ5N2syZkVKalBGNjhDUGg1RTNjWFlmMmNlVlgrVFh5YlFuSDZwUGVKQmlHMGJKMDVDTlkzcGVGcTlkZQpDZTBuNnh0c0d5VmlzemxjQ1lZMUlyN0FRR3pFb1N2bW5PN0Z1ckNhZmZTQkJJblBIR3JEbWpxKzNiMGx3Y1pVCm5DWk5Bb0dCQUpJYmZKSVNkbFlBalRwYnRVbVd0K2tlemNlWVdsUkxENHNOcWx2SWQ0U2JUbmEwR2FRSWRVSHIKWWU5RjhpTVgweWh1WWhzUXoraHlkZDhCVW44TXgwRVN6c2g3d0tpak5jenJpV3JUODlmYmlxVUpocFZvWUhWNwpQVExTZ1pSUDFyUU9UekpGVEkzdjMyNkg1dzFlZzJ0NUFOcnRWenFYTng4N2FOTXQwWGNQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
              }
            },
            "tserver": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              },
              "tserverRPCPort": 9100,
              "tserverUIPort": 9000,
              "ycqlPort": 9042,
              "yedisPort": 6379,
              "ysqlPort": 5433
            }
          }
        },
        {
          "api_version": "yugabyte.com/v1alpha1",
          "kind": "YBCluster",
          "metadata": {
            "name": "yb-test-1",
            "namespace": "yb-demo"
          },
          "spec": {
            "master": {
              "replicas": 3,
              "storage": {
                "size": "1Gi"
              }
            },
            "replicationFactor": 3,
            "tserver": {
              "replicas": 3,
              "storage": {
                "count": 1,
                "size": "1Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/yugabytedb/yugabyte-operator-bundle@sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "bundle_path_digest": "sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:23:16.067000+00:00",
      "csv_description": "\nYugabyteDB is distributed SQL database serving both scale-out RDBMS and internet-scale OLTP workloads with low query latency, \nextreme resilience against failures and global data distribution. YugabyteDB Kubernetes offering provides a\nkubernetes native custom resource viz. `ybclusters.yugabyte.com` for deploying and managing the YugabyteDB Clusters.\n\n### Installing YugabyteDB\n\nOnce you've installed the Operator, you can create YugabyteDB cluster using custom resource `ybcluster`. For assistance please refer to \n[deploy yugabyteDB cluster using CRD](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/)\n\n### Supported parameters\n* **Image Override** - Mention YugabyteDB Docker image attributes such as repository, tag and pullPolicy under image.\n* **Replication Factor** - The desired replication factor for YugabyteDB Cluster. Default RF-3.\n* **Master Pod Count** - The desired pod count for master. Default is 3\n* **T-server Pod Count** - The desired pod count for tserver. Default is 3.\n* **Enable TLS** - Enable TLS encryption for YugabyteDB, if desired. It is disabled by default. To enable TLS communication \n                   refer to [configuring TLS](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/#tls).\n\n\n### Getting Started\n\nHere are a few resources for getting started with YugaByte DB:\n\n* [Quick start guide](http://docs.yugabyte.com/latest/quick-start/) - install, create a local cluster and read/write from YugaByte DB.\n* [Explore core features](https://docs.yugabyte.com/latest/explore/) - automatic sharding & re-balancing, linear scalability, fault tolerance, tunable reads etc.\n* [Ecosystem integrations](https://docs.yugabyte.com/latest/develop/ecosystem-integrations/) - integrations with Apache Kafka/KSQL, Apache Spark, JanusGraph, KairosDB, Presto and more.\n* [Real world apps](https://docs.yugabyte.com/latest/develop/realworld-apps/) - sample real-world, end-to-end applications built using YugaByte DB.\n* [Architecture docs](https://docs.yugabyte.com/latest/architecture/) - to understand how YugaByte DB was designed and how it works\n\n### Help\n\nCannot find what you are looking for? Have a question? We love to hear from you - [please file a GitHub issue](https://github.com/YugaByte/yugabyte-db/issues) or talk to us live at [Slack](https://www.yugabyte.com/slack).\n",
      "csv_display_name": "Yugabyte Operator",
      "csv_metadata_description": "deploy and manage YugabyteDB clusters using kubernetes CRD ybclusters.yugabyte.com",
      "csv_name": "yugabyte-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:55:56.751000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "yugabyte-operator",
      "provided_apis": [
        {
          "group": "yugabyte.com",
          "kind": "YBCluster",
          "plural": "ybclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator-03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6-annotation"
        },
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "5f925ab56c4f348b547ea8de",
      "alm_examples": [
        {
          "api_version": "yugabyte.com/v1alpha1",
          "kind": "YBCluster",
          "metadata": {
            "name": "example-ybcluster",
            "namespace": "yb-operator"
          },
          "spec": {
            "image": {
              "pullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/yugabytedb/yugabyte",
              "tag": "2.1.2.0"
            },
            "master": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "masterRPCPort": 7100,
              "masterUIPort": 7000,
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              }
            },
            "replicationFactor": 3,
            "subresources": {
              "status": {}
            },
            "tls": {
              "enabled": true,
              "rootCA": {
                "cert": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lVUk9vY2RNbUxZU2YwOWRkQTBPa0VWODJtTTRVd0RRWUpLb1pJaHZjTkFRRUwKQlFBd01ERVJNQThHQTFVRUNnd0lXWFZuWVdKNWRHVXhHekFaQmdOVkJBTU1Fa05CSUdadmNpQlpkV2RoWW5sMApaU0JFUWpBZUZ3MHhPVEE1TWpNd09URXhNalphRncweE9URXdNak13T1RFeE1qWmFNREF4RVRBUEJnTlZCQW9NCkNGbDFaMkZpZVhSbE1Sc3dHUVlEVlFRRERCSkRRU0JtYjNJZ1dYVm5ZV0o1ZEdVZ1JFSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3hMd3hMeTZjYjhZdS9laFlmU3pteWVqcEw1cjZVSnFmeApWVDF5SUJWSktzNnZPR0QzRWdhSzZaVVZkODBzOGdZU3hzbG1UREh0cnNyWXhCSVMwRXJMVFFsODZVUVd5d1lsCjkvT09FYzdGUVRoWmdsZHRDQmwxNUZSSmp4TGk0LzFJUU1xaU93TDlGM0xjQ3JobXF1bVZKWXJmVGRtNnp4YXkKY0Q3ZlNISGw5Y3phYWFGUGRRa2JZaUt0V0p2cmJ1WEx2QkhleE0rL2FhaVIwY2FBTE94RkhKRlE0N2E1cWwvVQpOcld6emJuVjFZTkRGcEJmLzY2cm95WFh5L2xGMmhWWStYampudlRNL2M0bURWRHRRcDVKVXR6UGhGZ3ZhQngyClUvL2paeFBPblc5dVU4THdFeVdzeWhPNTNWcEREN3VMSHFHYnFrZWd0OVBtTmZsT1QwMlhBZ01CQUFHakpqQWsKTUE0R0ExVWREd0VCL3dRRUF3SUM1REFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VCTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQitXS0NlS3JiYXkwaFNMdjMreUlEWEkvaEw5TEY1N3pDUzNtRU1JTEJXcUVXbUN1R25WVXNFCktSMXA0VzBPSERXbStzTWNtbm1EcUM4U1VZMHlOM2htYnVGWWViZUs5bks0R3IzQ0VtTGk2Q3dxbzJtcWZLVHkKSk9sSU5KZDFFdW1jSlVBUEtmVGNxVkdSWlpITFlHMTVsckpyNjNMaTlYbHhqajlNNEpCejJnd2dsQ3Bqa1BxMwpSazgvYnZSbHhaNVdlNVZ1RUtTckZRNForditkSS9peFpwdjQ3UHY1TTM3bHdLRlQ5amRxbW8zbE82ODNFcEljCnF6bStrclUyb2VhZUphVUFnWlRFU296VUZGb053QzUyTjR3YWlndXo0TU5pa3ZIYWtiTEpEdW9zQTRhQTBnN0sKb2s3K2UvKzlWY0hEUllSaFN5VVhkanB2SmdyVUEyeVYKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                "key": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBc1M4TVM4dW5HL0dMdjNvV0gwczVzbm82UythK2xDYW44VlU5Y2lBVlNTck9yemhnCjl4SUdpdW1WRlhmTkxQSUdFc2JKWmt3eDdhN0syTVFTRXRCS3kwMEpmT2xFRnNzR0pmZnpqaEhPeFVFNFdZSlgKYlFnWmRlUlVTWThTNHVQOVNFREtvanNDL1JkeTNBcTRacXJwbFNXSzMwM1p1czhXc25BKzMwaHg1ZlhNMm1taApUM1VKRzJJaXJWaWI2MjdseTd3UjNzVFB2Mm1va2RIR2dDenNSUnlSVU9PMnVhcGYxRGExczgyNTFkV0RReGFRClgvK3VxNk1sMTh2NVJkb1ZXUGw0NDU3MHpQM09KZzFRN1VLZVNWTGN6NFJZTDJnY2RsUC80MmNUenAxdmJsUEMKOEJNbHJNb1R1ZDFhUXcrN2l4NmhtNnBIb0xmVDVqWDVUazlObHdJREFRQUJBb0lCQUJwbEd0elR1dEpEMm9Dcwp6RXpmSlBvOGtTQ3JnQ3FMMDZyMCt0RmNqQzg1TEU4WUJBSHFjb1VSSlA5c3VHa0FxUHoxRmgyaUxqSHRQeFNwCnFOT2FxZm05UVRPVmdHb3cxbnFqaEduZXAwSGxaR0taTXpMdjZQTVNENmhob3Z1ZjRTUjVXblp1ZWhTQUFNRmMKNjNtSDdvSWtkSnF0ZTBrRC9xcVlaQlZaTW5hQ053cGpsQ0dLYmZLbjlDTHpGSUxhckxiNm4zR2x6dmpRTC9nTAphd3VnNlh5WThvcTlEVjBrZkpEV0lVZFRIc1lFYXFHcGNFWkwvNWZPSlVVcTdSSzV2eWxTVmUrWFZ5OE5jZm1sCk4rQUMrcGNwVFRRR2V0SXZsZWpsT1VhUDRTU3FNckdSUVd1Zk5pSG11a1ZtWXo5bUFsN3pRQ2xyWTZEODNBOUwKQkVkMmNYa0NnWUVBMktRVmNhVDlGRFM2ZENPdHZFL2hPUDhSNVAvY21JSjFNMXhKY2hzL1IxcUdjd0RqWkZiRwp0RGFFNVNwVExidjg4d2hKb2FDbWhlbE9renFRaWIrNXNZU2tqZERVTThIUTlhWXk3aGlxT29jL3dFUlB6ZGRRCmUyelhYRHd2QWQ2VGc3OWpLV2NhOWZxcUw0azRWOVBtbHlrVjRUVDVoaHBhVkFqbi82VDZGYXNDZ1lFQTBWL1MKT0JSdzQraEIwU0JiUU1rNTcxdk1mUEdtR0dLb1BPRWRsRzBCY0RsZTF3Wk5yQ01mYVJWdUFMOFFuQ3ZOZXg2Two1UEtUN0tOeXh5Q21IOWlaQXZjeGRjbHF5aHNncHVtTDhhM0tsb1RuSU9vSHdobUVhMWxoVCtHY01QZzEvVTl4ClVqZEY2Y0tmSFFJd2FYYkNHUTVzaFhBUU0yVU5HbStYa0ZmeTQ4VUNnWUJ3d0cxOHVVOFNmaUx3b1VVaDlqMFYKQ2dRSk9IVmFWc09pMkl4TlBBc2lHdVpRNG94Mnc0Y2xjaDZXbXdHeGt0NmlxcFNQNzJuYjFrS1Q4KzRZRTFZVgpJeUQxd2xNL0lNZWRva050a2g2KzJYZC9uTTRnSnNqM2cvMU9QdkNFTzVCeENHSVd3VmZSNEFWRk9saTl0VWFWCk04ZjBienJTNWRKUFhGZEt3VlY3Z3dLQmdBak5NV1lnSGRyRzBiVjcyYm93ZTFuL2p1b1ZzbmpGOVBLU09BOGMKUWZvNHZ5N2syZkVKalBGNjhDUGg1RTNjWFlmMmNlVlgrVFh5YlFuSDZwUGVKQmlHMGJKMDVDTlkzcGVGcTlkZQpDZTBuNnh0c0d5VmlzemxjQ1lZMUlyN0FRR3pFb1N2bW5PN0Z1ckNhZmZTQkJJblBIR3JEbWpxKzNiMGx3Y1pVCm5DWk5Bb0dCQUpJYmZKSVNkbFlBalRwYnRVbVd0K2tlemNlWVdsUkxENHNOcWx2SWQ0U2JUbmEwR2FRSWRVSHIKWWU5RjhpTVgweWh1WWhzUXoraHlkZDhCVW44TXgwRVN6c2g3d0tpak5jenJpV3JUODlmYmlxVUpocFZvWUhWNwpQVExTZ1pSUDFyUU9UekpGVEkzdjMyNkg1dzFlZzJ0NUFOcnRWenFYTng4N2FOTXQwWGNQCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
              }
            },
            "tserver": {
              "enableLoadBalancer": true,
              "gflags": [
                {
                  "key": "default_memory_limit_to_ram_ratio",
                  "value": "0.85"
                },
                {
                  "key": "use_node_to_node_encryption",
                  "value": "true"
                }
              ],
              "podManagementPolicy": "Parallel",
              "replicas": 3,
              "resources": {
                "limits": {
                  "cpu": 2,
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": 1,
                  "memory": "2Gi"
                }
              },
              "storage": {
                "count": 1,
                "size": "50Gi",
                "storageClass": "standard"
              },
              "tserverRPCPort": 9100,
              "tserverUIPort": 9000,
              "ycqlPort": 9042,
              "yedisPort": 6379,
              "ysqlPort": 5433
            }
          }
        },
        {
          "api_version": "yugabyte.com/v1alpha1",
          "kind": "YBCluster",
          "metadata": {
            "name": "yb-test-1",
            "namespace": "yb-demo"
          },
          "spec": {
            "master": {
              "replicas": 3,
              "storage": {
                "size": "1Gi"
              }
            },
            "replicationFactor": 3,
            "tserver": {
              "replicas": 3,
              "storage": {
                "count": 1,
                "size": "1Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/yugabytedb/yugabyte-operator-bundle@sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "bundle_path_digest": "sha256:75af634b49ff92fa9cad7a20a9d6d86689624b15bed4c84889b677c288b8c036",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2020-10-23T04:23:17.147000+00:00",
      "csv_description": "\nYugabyteDB is distributed SQL database serving both scale-out RDBMS and internet-scale OLTP workloads with low query latency, \nextreme resilience against failures and global data distribution. YugabyteDB Kubernetes offering provides a\nkubernetes native custom resource viz. `ybclusters.yugabyte.com` for deploying and managing the YugabyteDB Clusters.\n\n### Installing YugabyteDB\n\nOnce you've installed the Operator, you can create YugabyteDB cluster using custom resource `ybcluster`. For assistance please refer to \n[deploy yugabyteDB cluster using CRD](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/)\n\n### Supported parameters\n* **Image Override** - Mention YugabyteDB Docker image attributes such as repository, tag and pullPolicy under image.\n* **Replication Factor** - The desired replication factor for YugabyteDB Cluster. Default RF-3.\n* **Master Pod Count** - The desired pod count for master. Default is 3\n* **T-server Pod Count** - The desired pod count for tserver. Default is 3.\n* **Enable TLS** - Enable TLS encryption for YugabyteDB, if desired. It is disabled by default. To enable TLS communication \n                   refer to [configuring TLS](https://docs.yugabyte.com/latest/deploy/kubernetes/single-zone/oss/yugabyte-operator/#tls).\n\n\n### Getting Started\n\nHere are a few resources for getting started with YugaByte DB:\n\n* [Quick start guide](http://docs.yugabyte.com/latest/quick-start/) - install, create a local cluster and read/write from YugaByte DB.\n* [Explore core features](https://docs.yugabyte.com/latest/explore/) - automatic sharding & re-balancing, linear scalability, fault tolerance, tunable reads etc.\n* [Ecosystem integrations](https://docs.yugabyte.com/latest/develop/ecosystem-integrations/) - integrations with Apache Kafka/KSQL, Apache Spark, JanusGraph, KairosDB, Presto and more.\n* [Real world apps](https://docs.yugabyte.com/latest/develop/realworld-apps/) - sample real-world, end-to-end applications built using YugaByte DB.\n* [Architecture docs](https://docs.yugabyte.com/latest/architecture/) - to understand how YugaByte DB was designed and how it works\n\n### Help\n\nCannot find what you are looking for? Have a question? We love to hear from you - [please file a GitHub issue](https://github.com/YugaByte/yugabyte-db/issues) or talk to us live at [Slack](https://www.yugabyte.com/slack).\n",
      "csv_display_name": "Yugabyte Operator",
      "csv_metadata_description": "deploy and manage YugabyteDB clusters using kubernetes CRD ybclusters.yugabyte.com",
      "csv_name": "yugabyte-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:38:58.394000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "yugabyte-operator",
      "provided_apis": [
        {
          "group": "yugabyte.com",
          "kind": "YBCluster",
          "plural": "ybclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator-03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6-annotation"
        },
        {
          "digest": "sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "image": "registry.connect.redhat.com/yugabytedb/yugabyte-operator@sha256:03c1977bb1e9392120e761fea2e6291750a49c0f0eacf5c065d59781358ff3f6",
          "name": "yugabyte-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "5f925ab67dfea609c170ab17",
      "alm_examples": [
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAgent",
          "metadata": {
            "labels": {
              "app": "agent",
              "vendor": "zabbix"
            },
            "name": "zabbix-agent"
          },
          "spec": {
            "active_allow": true,
            "activeservers": "",
            "allow_key": "",
            "allow_privileged": true,
            "buffer#": 100,
            "buffer_send": 5,
            "debug_level": 3,
            "deny_key": "system.run[*]",
            "host_interface": "",
            "host_interface_item": "",
            "hostname": "",
            "hostname_item": "system.hostname",
            "load_module": "",
            "log_remote_commands": true,
            "max_lines_per_second": 20,
            "metadata": "",
            "metadata_item": "",
            "passive_allow": true,
            "passive_servers": "",
            "refresh_active_checks": 120,
            "server_host": "zabbix-server",
            "start_agents": 3,
            "timeout": 3,
            "tls_accept": "unencrypted",
            "tls_ca_file_name": "",
            "tls_cert_file_name": "",
            "tls_cipher_all": "",
            "tls_cipher_cert_13": "",
            "tls_cipher_psk": "",
            "tls_cipherall_13": "",
            "tls_connect": "unencrypted",
            "tls_crl_file_name": "",
            "tls_key_file_name": "",
            "tls_psk_file_name": "",
            "tls_psk_identity": "",
            "tls_server_cert_issuer": "",
            "tls_server_cert_subject": "",
            "tlsciphercert": "",
            "tlscipherpsk13": "",
            "unsafe_user_parameters": false
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixServer",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-server"
          },
          "spec": {
            "db_server_host": "mysql-server",
            "db_server_port": 3306,
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix",
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxySqlite",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-sqlite"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "proxy#": 1
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixProxyMysql",
          "metadata": {
            "labels": {
              "app": "proxy",
              "vendor": "zabbix"
            },
            "name": "zabbix-proxy-mysql"
          },
          "spec": {
            "db_server_port": 3306,
            "internal_db": true,
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "mysql_database": "zabbix_proxy",
            "proxy": {
              "cache#": "8M",
              "config_frequency": 3600,
              "data_sender_frequency": 1,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "enable_remote_commands": false,
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "hostname": "",
              "hostname_item": "system.hostname",
              "housekeeping_frequency": 1,
              "log_remote_commands": true,
              "log_slow_queries": 0,
              "proxy_heartbeat_frequency": 60,
              "proxy_local_buffer": 0,
              "proxy_mode": 0,
              "proxy_offline_buffer": 1,
              "server_host": "zabbix-server",
              "server_port": 10051,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "timeout": 4,
              "tls_accept": "unencrypted",
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_connect": "unencrypted",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tls_psk_file_name": "",
              "tls_psk_identity": "",
              "tls_server_cert_issuer": "",
              "tls_server_cert_subject": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "zabbix-mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixFull",
          "metadata": {
            "labels": {
              "app": "server",
              "vendor": "zabbix"
            },
            "name": "zabbix-full"
          },
          "spec": {
            "history_storage_url": "",
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "java_gateway#": 1,
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_cipher_all": "",
              "tls_cipher_cert_13": "",
              "tls_cipher_psk": "",
              "tls_cipherall_13": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlsciphercert": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_cipher_list": "",
              "db_double_ieee754": true,
              "db_encryption": false,
              "db_verify_host": false,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web#": 2,
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        },
        {
          "api_version": "kubernetes.zabbix.com/v1alpha1",
          "kind": "ZabbixAppliance",
          "metadata": {
            "labels": {
              "app": "appliance",
              "vendor": "zabbix"
            },
            "name": "zabbix-appliance"
          },
          "spec": {
            "java_gateway": {
              "debug_level": "info",
              "start_pollers": 5,
              "timeout": 3
            },
            "server": {
              "cache#": "8M",
              "cache_update_frequency": 60,
              "db_tls_cipher": "",
              "db_tls_cipher13": "",
              "db_tls_cipher_13": "",
              "db_tls_connect": "",
              "debug_level": 3,
              "export_file#": "",
              "history_cache#": "16M",
              "history_index_cache#": "4M",
              "history_storage_date_index": true,
              "history_storage_types": "",
              "housekeeping_frequency": 1,
              "load_module": "",
              "log_slow_queries": 0,
              "max_housekeeper_delete": 5000,
              "proxy_config_frequency": 3600,
              "proxy_data_frequency": 1,
              "start_alerters": 3,
              "start_db_syncers": 4,
              "start_discoverers": 1,
              "start_escalators": 1,
              "start_http_pollers": 1,
              "start_ipmi_pollers": 0,
              "start_java_pollers": 5,
              "start_lld_processors": 2,
              "start_pingers": 1,
              "start_pollers": 5,
              "start_pollers_unreachable": 1,
              "start_preprocessors": 3,
              "start_proxy_pollers": 0,
              "start_timers": 1,
              "start_trappers": 5,
              "start_vmware_collectors": 0,
              "stats_allowed_ip": "",
              "timeout": 4,
              "tls_ca_file_name": "",
              "tls_cert_file_name": "",
              "tls_crl_file_name": "",
              "tls_key_file_name": "",
              "tlscipherall": "",
              "tlscipherall13": "",
              "tlsciphercert": "",
              "tlsciphercert13": "",
              "tlscipherpsk": "",
              "tlscipherpsk13": "",
              "trapper_timeout": 300,
              "trend_cache#": "4M",
              "unavailable_delay": 60,
              "unreachable_delay": 15,
              "unreachable_period": 45,
              "value_cache#": "8M",
              "vmware_cache#": "8M",
              "vmware_frequency": 60,
              "vmware_perf_frequency": 60,
              "vmware_timeout": 10
            },
            "web": {
              "db_double_ieee754": true,
              "deny_gui_access": false,
              "enable_web_access_log": true,
              "gui_access_ip_range": "",
              "gui_warning_msg": "Zabbix is under maintenance.",
              "history_storage_types": "",
              "max_execution_time": 300,
              "max_input_time": 300,
              "memory_limit": "128M",
              "post_max#": "16M",
              "server_name": "Kubernetes installation",
              "session_name": "zbx_sessionid",
              "sso_settings": "",
              "timezone": "Europe/Riga",
              "upload_max_filesize": "2M"
            },
            "web_enable_route": true,
            "zabbix_mysql_volumeclaim": "mysql-volume-claim",
            "zabbix_mysqlsecret": "mysql-secrets"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zabbix/zabbixoperator-certified-bundle@sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "bundle_path_digest": "sha256:236d7cc772634f20540dc153f9a7fc66357d7d4852962c5c7b5daff61c99e5c8",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "lts",
      "creation_date": "2020-10-23T04:23:18.652000+00:00",
      "csv_description": "## About this Operator\n\nZabbix helps you to real-time monitoring of millions of metrics collected from tens of thousands of servers, virtual machines and network devices.\nThe Zabbix Operator allows users to easily deploy, manage, and maintain Zabbix deployments on OpenShift. By installing this integration you will be able to deploy Zabbix server / proxies and other components with a single command.\n## Supported Features\n* **Zabbix Server** - Simple Zabbix installation with included Zabbix server, Zabbix web-interface and Zabbix Java Gateway with MySQL database support. The feature does not provide MySQL service and requires an external MySQL database. \n* **Zabbix Server (Full)** - Zabbix installation with included Zabbix server, Zabbix web-interface, Zabbix Java Gateway and MySQL server instance.\n* **Zabbix proxy (SQLite3)** - Very simple way to gain power of Zabbix proxy. The feature has  SQLite3 support for Zabbix proxies and allow to specify amount of proxies. \n* **Zabbix proxy (MySQL)** - Another option of Zabbix proxy. The option support and deliver MySQL database.\n* **Zabbix agent** - Zabbix agent can be deployed on each available node for stability and performance monitoring on remote nodes. It allows to gather metrics with full automation!\n* **Zabbix Appliance** - Zabbix appliance very simple way to test and check Zabbix features. The option provides all core components in one solution. It includes Zabbix server, Zabbix Java Gateway, Zabbix web-interface and MySQL server in deployment. It is very useful for testing Zabbix features!\n## Prerequisites\nAll deployment options are require additional information during deployment. Please, check the following instructions and provide required configuration:\n* **Zabbix Server** - MySQL database host information and MySQL database credentials in specially formatted *Secret*. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix Server (Full)** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n* **Zabbix proxy (SQLite3)** - Zabbix server host information only.\n* **Zabbix proxy (MySQL)** - MySQL database credentials in specially formatted *Secrets* and Zabbix server host information.\n* **Zabbix agent** - Zabbix server host information only for outgoing and incoming connections. Zabbix agent uses \"privileged\" mode to monitor node resources! For example, running processes.\n* **Zabbix Appliance** - MySQL database credentials in specially formatted *Secret*. MySQL database volume name information. Additionally it is possible to specify SSL certificates for HTTPS support in *Secret*.\n### MySQL credentials\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-full-secrets\ndata:\n  mysql_root_password: emFiYml4X3N1cGVyX3Jvb3Q= [1]\n  mysql_zabbix_password: emFiYml4X3VzZXJfcGFzc3dvcmQ= [2]\n  mysql_zabbix_username: emFiYml4 [3]\ntype: Opaque\n```\nUsing MySQL root password (*mysqlrootpassword* [1]) Zabbix server / proxy will try to create MySQL database schema with grant permissions to *mysqlzabbixusername* [2] and *mysqlzabbixpassword* [3].\n### SSL certificates for HTTPS\n```\nkind: Secret\napiVersion: v1\nmetadata:\n  name: zabbix-web-sslsecret\ndata:\n  ssl.crt: >-\n   < ssl.crt data>\n  ssl.key: >-\n\t < ssl.key data >\n  dhparam.pem: >-\n   <  dhparam.pem data >\n```\nFiles *ssl.crt*, *ssl.key* and *dhparam.perm* are required for Zabbix web-interface for SSL support.\n",
      "csv_display_name": "Zabbix Operator",
      "csv_metadata_description": "Zabbix operator with multiple deployment variants and different components",
      "csv_name": "zabbix-operator-certified.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:40:13.427000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "zabbix-operator-certified",
      "provided_apis": [
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixFull",
          "plural": "zabbixfulls",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxyMysql",
          "plural": "zabbixproxymysqls",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixProxySqlite",
          "plural": "zabbixproxysqlites",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixServer",
          "plural": "zabbixservers",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAgent",
          "plural": "zabbixagents",
          "version": "v1alpha1"
        },
        {
          "group": "kubernetes.zabbix.com",
          "kind": "ZabbixAppliance",
          "plural": "zabbixappliances",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "zabbixoperator-certified-c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66-annotation"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "ansible"
        },
        {
          "digest": "sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "image": "registry.connect.redhat.com/zabbix/zabbixoperator-certified@sha256:c2dee633a667191d3272bf1652412ac1077455f18b90168ddcaa2ac8882f0c66",
          "name": "operator"
        },
        {
          "digest": "sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "image": "registry.connect.redhat.com/zabbix/zabbix-server-mysql-50@sha256:2f76e7cbece9d9366b613bcb1079b030ddbcc5e97b2f133b73bd0131f0869725",
          "name": "zbx_server_mysql"
        },
        {
          "digest": "sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "image": "registry.connect.redhat.com/zabbix/zabbix-web-mysql-50@sha256:9f3ba82445ea3d9754f016e21b2ea1c99c1958da928f49aee1b18377af78d365",
          "name": "zbx_web_mysql"
        },
        {
          "digest": "sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "image": "registry.connect.redhat.com/zabbix/zabbix-java-gateway-50@sha256:a216de448dc10b2797a70f4fc6664c2bd611840b7b6c26f066635d48c606bf06",
          "name": "zbx_java_gateway"
        },
        {
          "digest": "sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-mysql-50@sha256:054ad28ade616642fb50fd38a48df2d00a9c0c6a57df1e367caeceb6469f6c42",
          "name": "zbx_proxy_mysql"
        },
        {
          "digest": "sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "image": "registry.connect.redhat.com/zabbix/zabbix-proxy-sqlite-50@sha256:713a6223a01ee57efb719d6f491ef779d74104a1bc1b8599eade8b3f4a3318ed",
          "name": "zbx_proxy_sqlite"
        },
        {
          "digest": "sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "image": "registry.connect.redhat.com/zabbix/zabbix-agent-50@sha256:229562a27ed45319ef17397fe81cac81129c84eccd2c14f6085531a86ef9b87d",
          "name": "zbx_agent"
        },
        {
          "digest": "sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "image": "registry.connect.redhat.com/zabbix/zabbix-appliance-50@sha256:7236c68c494f572edf64ced85c3a083b7eafff1c6562e95bdc50e50c37e3e3bf",
          "name": "zbx_appliance"
        },
        {
          "digest": "sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:e7541d9fbcb7a71ac8a68cc4efc1806bab74023961c7d3fb562ded320df90c43",
          "name": "db_mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "5f925ab8e9c4b14b8a1a59b0",
      "alm_examples": [
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "AppDefinition",
          "metadata": {
            "name": "cassandra-test"
          },
          "spec": {
            "namespace": "default",
            "selector": {
              "matchLabels": {
                "app": "cassandra"
              }
            }
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "ApplicationClone",
          "metadata": {
            "name": "cassandra-2009-02-09--19-52-14-clone"
          },
          "spec": {
            "cloneConfiguration": "dr-us-west-clone"
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "ApplicationSnapshot",
          "metadata": {
            "name": "cassandra-2009-02-09--19-52-14"
          },
          "spec": {
            "apiObjects": [
              "{\"apiVersion\": \"v1\",\"items\": [{\"apiVersion\": \"v1\",\"kind\": \"ConfigMap\",\"metadata\": {...",
              "{\"apiVersion\": \"v1\",\"items\": [{\"apiVersion\": \"apps\u000b1\",\"kind\": \"Deployment\",\"metadata\": {..."
            ],
            "snapshotConfiguration": "dr-us-west-snapshot",
            "vpsas": [
              {
                "name": "example-vpsa",
                "provisioner": "csi.zadara.com",
                "snapshots": [
                  {
                    "cg": "vol-0000001"
                  }
                ]
              }
            ]
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "CloneConfiguration",
          "metadata": {
            "name": "dr-us-west-clone"
          },
          "spec": {
            "appSnapshot": {
              "name": "mysql-snap-2020-01-26"
            },
            "dryRun": false,
            "prefix": "clone-",
            "targetNamespace": "test"
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "Invoker",
          "metadata": {
            "name": "mysql-daily-backup"
          },
          "spec": {
            "snapshotConfiguration": {
              "name": "dr-us-west-snapshot"
            }
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "SnapshotConfiguration",
          "metadata": {
            "name": "dr-us-west-snapshot"
          },
          "spec": {
            "appDefinition": "cassandra-test",
            "policies": [
              "daily-snapshot-for-month",
              "weekly-snapshot-for-year"
            ]
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "SnapshotPolicy",
          "metadata": {
            "name": "daily-snapshot-for-month"
          },
          "spec": {
            "keepLast": 7,
            "schedule": "0 0 * * *"
          }
        },
        {
          "api_version": "zadara.com/v1alpha1",
          "kind": "Vpsa",
          "metadata": {
            "name": "example-vpsa"
          },
          "spec": {
            "csi": {
              "autoExpandSupport": true,
              "iscsiMode": "rootfs",
              "livenessProbe": {
                "httpGet": {
                  "port": 9808
                },
                "periodSeconds": 5
              },
              "provisioner": "csi.zadara.com"
            },
            "hostname": "example.vpsas.zadara.com",
            "https": true,
            "token": "EXAMPLETOKEN-1234"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zadara/zadara-operator-bundle@sha256:a7dc6b758b849f4eab38f38b5bb0c99e951d1ed5c59143337e6c5efb5973f321",
      "bundle_path_digest": "sha256:a7dc6b758b849f4eab38f38b5bb0c99e951d1ed5c59143337e6c5efb5973f321",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-23T04:23:20.551000+00:00",
      "csv_description": "The Zadara Operator provides storage and data management for K8s stateful\napplications as a cloud-native service, while leveraging Zadara's enterprise\ngrade Storage-as-a-Service VPSA for provisioning and managing persistent\nstorage.\n\nZadara Operator provides:\n* Zadara CSI driver automatic installation and management\n* Automatic K8s application discovery\n* Application protection using an intelligent and efficient snapshots mechanism.\n* Custom snapshots scheduling for application protection\n* Instant application clone\n* CLI for centralized management for Zadara's K8s assets\n\n## About Zadara\n\nZadara provides companies and service providers agile, secure\nenterprise storage as a consumption-based service. Any location, any\ndata type, any protocol. Zadara offers resource isolation, exceptional\nsecurity, and management control.\n\nMore information at: [Zadara Kubernetes Operator](https://github.com/zadarastorage/zadara-operator)\n",
      "csv_display_name": "Zadara Operator",
      "csv_metadata_description": "Zadara Operator enables storage provisioning via Zadara's CSI driver and data management capabilities for K8s applications.",
      "csv_name": "zoperator.v0.3.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:56:06.136000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "zoperator",
      "provided_apis": [
        {
          "group": "zadara.com",
          "kind": "Vpsa",
          "plural": "vpsas",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "AppDefinition",
          "plural": "appdefinitions",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "ApplicationClone",
          "plural": "applicationclones",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "ApplicationSnapshot",
          "plural": "applicationsnapshots",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "CloneConfiguration",
          "plural": "cloneconfigurations",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "Invoker",
          "plural": "invokers",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "SnapshotConfiguration",
          "plural": "snapshotconfigurations",
          "version": "v1alpha1"
        },
        {
          "group": "zadara.com",
          "kind": "SnapshotPolicy",
          "plural": "snapshotpolicies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "image": "registry.connect.redhat.com/zadara/zadara-operator@sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "name": "zadara-operator-54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe-annotation"
        },
        {
          "digest": "sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "image": "registry.connect.redhat.com/zadara/zadara-operator@sha256:54c23abbf75ee85939e9b87c813258b88a376586643bae6e96235590e3c8babe",
          "name": "zoperator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.3.6",
      "version_original": "0.3.6"
    },
    {
      "_id": "5f92f0a6621bea00657ea8d7",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:730800366a7127b70c07c8298d9ecbdbf32c248ad09198388fe1a0f03b3ee4cf",
      "bundle_path_digest": "sha256:730800366a7127b70c07c8298d9ecbdbf32c248ad09198388fe1a0f03b3ee4cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.3",
      "creation_date": "2020-10-23T15:03:02.455000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:50:08.542000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "name": "couchdb-operator-488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d-annotation"
        },
        {
          "digest": "sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "name": "couchdb-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.3.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "5f93105a6a42685898f724df",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:730800366a7127b70c07c8298d9ecbdbf32c248ad09198388fe1a0f03b3ee4cf",
      "bundle_path_digest": "sha256:730800366a7127b70c07c8298d9ecbdbf32c248ad09198388fe1a0f03b3ee4cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.3",
      "creation_date": "2020-10-23T17:18:18.425000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:37:33.273000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "name": "couchdb-operator-488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d-annotation"
        },
        {
          "digest": "sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:488be91257da4dd2a911f47df47f24daaaaac750c2135695d670b4d69214196d",
          "name": "couchdb-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.3.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.1",
      "version_original": "1.3.1"
    },
    {
      "_id": "5f9322b4dc3b9c8e62ad6f9e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2020-10-23T18:36:36.471000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T05:06:51.379000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "5f96efef1b42c061bf1a59a9",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2020-10-26T15:49:03.811000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T01:39:52.145000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "5f9b5f51286158684a4669f3",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftPipeline",
          "metadata": {
            "name": "openshiftpipeline"
          },
          "spec": {
            "pipelines": {
              "global": {
                "postgresql": {
                  "database": "OVERRIDE",
                  "host": "OVERRIDE",
                  "password": "OVERRIDE",
                  "port": "OVERRIDE",
                  "ssl": "false",
                  "user": "OVERRIDE"
                }
              },
              "imageRegistry": "registry.connect.redhat.com",
              "initContainer": {
                "image": "registry.connect.redhat.com/jfrog/pipelines-init@sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
                "pullPolicy": "Always"
              },
              "pipelines": {
                "accessControlAllowOrigins_0": "OVERRIDE",
                "accessControlAllowOrigins_1": "OVERRIDE",
                "api": {
                  "externalUrl": "OVERRIDE",
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-api"
                  }
                },
                "cron": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "extensionSync": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "hookHandler": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "jfrogUrl": "OVERRIDE",
                "jfrogUrlUI": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "logup": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "marshaller": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "masterKey": "OVERRIDE",
                "msg": {
                  "uiUser": "OVERRIDE",
                  "uiUserPassword": "OVERRIDE"
                },
                "nexec": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "pipelineSync": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "pipelinesInit": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-installer"
                  }
                },
                "router": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-router"
                  }
                },
                "runTrigger": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "stepTrigger": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "version": "1.8.0",
                "www": {
                  "externalUrl": "OVERRIDE",
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-www"
                  }
                }
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "enabled": true,
                "externalUrl": "OVERRIDE",
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/pipelines-rabbitmq",
                  "tag": "3.8.9"
                }
              },
              "redis": {
                "enabled": true,
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/redis-5",
                  "tag": "1-98"
                },
                "master": {
                  "command": "container-entrypoint run-redis"
                }
              },
              "securityContext": {
                "enabled": true,
                "gid": "1000721117",
                "uid": "1000721117"
              },
              "vault": {
                "disablemlock": false,
                "enabled": true,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/pipelines-vault",
                  "tag": "1.8.0"
                },
                "init": {
                  "pullPolicy": "Always",
                  "repository": "jfrog/pipelines-vault-init"
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/pipelines-operator-bundle@sha256:319b188f70a139c3f5e1a64533280a60388365a5585465d55c6a4e1db98fca28",
      "bundle_path_digest": "sha256:319b188f70a139c3f5e1a64533280a60388365a5585465d55c6a4e1db98fca28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-30T00:33:21.354000+00:00",
      "csv_description": "## Overview\n\nOpenshift Operator to deploy JFrog Pipelines into your Openshift cluster.\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Pipeline Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Pipeline Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Xray\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\npipelines.global.postgresql.host=<postgresql_host> pipelines.global.postgresql.port=<postgresql_port> pipelines.global.postgresql.database=<postgresql_dbname> pipelines.global.postgresql.user=<postgresql_user> pipelines.global.postgresql.password=<postgresql_password>\n```\n\nJFROG_URL is the external ip or DNS of your Artifactory to connect Pipelines to. Artifactory is required to use this operator.\nYou will need to specify your JFROG_URL in the follow locations:\nUse the cluster DNS name of the service for most operator deployments this will be: http://openshiftartifactoryha-nginx\n``` pipelines.pipelines.jfrogUrl=<JFROG_URL> pipelines.pipelines.jfrogUrlUI=<JFROG_URL> pipelines.pipelines.accessControlAllowOrigins_0=<JFROG_URL> pipelines.pipelines.accessControlAllowOrigins_1=<JFROG_URL> ```\nSetup a unique master key and use the same join key you used when creating Artifactory:\n``` pipelines.pipelines.masterKey=$MASTER_KEY pipelines.pipelines.joinKey=$JOIN_KEY ```\nSetup a unique username and password for Rabbitmq user:\n``` pipelines.pipelines.msg.uiUser=monitor pipelines.pipelines.msg.uiUserPassword=monitor ```\nSpecify external urls that will be your Openshift routes if desired:\n``` pipelines.rabbitmq.externalUrl=amqps://pipelines-rabbit.example.com pipelines.pipelines.api.externalUrl=http://pipelines-api.example.com pipelines.pipelines.www.externalUrl=http://pipelines-www.example.com ```\nDeploy JFrog Pipelines into your cluster.\n## Build Plane Usage\nTo use the pipelines build plane you can either use your Openshift cluster or a 3rd party cloud provider like AWS.\nSetup the Pipelines build plane.\n## Sync issue fix\nTo resolve the known host issue when syncing from a new site for now users can rsh into the pod or open the terminal into the pod in the Openshift web console.\nOnce inside the container `pipelinesync` run the follow command:\n``` /pipelineSync/clone.sh ```\nType yes to accept the host verification and then re-sync your pipeline. ",
      "csv_display_name": "JFrog Pipeline Operator",
      "csv_metadata_description": "JFrog Pipeline Enterprise deploys Pipeline CI/CD Openshift (Requires Jfrog Artifactory)",
      "csv_name": "pipeline-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:44:12.596000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "openshiftpipeline-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftPipeline",
          "plural": "openshiftpipelines",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "image": "registry.connect.redhat.com/jfrog/pipelines-operator@sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "name": "pipelines-operator-2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4-annotation"
        },
        {
          "digest": "sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "image": "registry.connect.redhat.com/jfrog/pipelines-operator@sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "name": "pipeline-operator"
        },
        {
          "digest": "sha256:27baf3f2d50482984f7550d856c51c02bdad013facc53165d246305ab4ba11d2",
          "image": "registry.connect.redhat.com/jfrog/pipelines-api@sha256:27baf3f2d50482984f7550d856c51c02bdad013facc53165d246305ab4ba11d2",
          "name": "pipeline_api_image_repository"
        },
        {
          "digest": "sha256:30898def831fec6a779a3f809e2098a2421ac56a7d383fae26f972749b4d585c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-router@sha256:30898def831fec6a779a3f809e2098a2421ac56a7d383fae26f972749b4d585c",
          "name": "pipeline_router_image_repository"
        },
        {
          "digest": "sha256:bd0857fb811972c412eca139104e754e095f5beb53fe88bdcc7ea683ece5b4e0",
          "image": "registry.connect.redhat.com/jfrog/pipelines-www@sha256:bd0857fb811972c412eca139104e754e095f5beb53fe88bdcc7ea683ece5b4e0",
          "name": "pipeline_www_image_repository"
        },
        {
          "digest": "sha256:0587b685cc7abeb73e4529a9885a2bd56c4d63fa3801dd5ea61d8495f9b260cd",
          "image": "registry.connect.redhat.com/jfrog/pipelines-micro@sha256:0587b685cc7abeb73e4529a9885a2bd56c4d63fa3801dd5ea61d8495f9b260cd",
          "name": "pipeline_micro_image_repository"
        },
        {
          "digest": "sha256:16c1cb3729dc52851d7af512f8d7d7151b3231f2445c10c04784a69bcf027c3c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-installer@sha256:16c1cb3729dc52851d7af512f8d7d7151b3231f2445c10c04784a69bcf027c3c",
          "name": "pipeline_installer_image_repository"
        },
        {
          "digest": "sha256:54dce2f3707794a16bcb9a385035454f3ae0a7861551b4c54f682a9894772f79",
          "image": "registry.connect.redhat.com/jfrog/pipelines-rabbitmq@sha256:54dce2f3707794a16bcb9a385035454f3ae0a7861551b4c54f682a9894772f79",
          "name": "pipeline_rabbitmq_image_repository"
        },
        {
          "digest": "sha256:c4302979defaaa396e1df57ad2adb7949f06d7c4c7c2904c445d4bb9111e9b1e",
          "image": "registry.redhat.io/rhel8/redis-5@sha256:c4302979defaaa396e1df57ad2adb7949f06d7c4c7c2904c445d4bb9111e9b1e",
          "name": "pipeline_redis_image_repository"
        },
        {
          "digest": "sha256:fefea387baefffaf3c3636e61f39fb5ea1fb09119af34a944f522341d50c6a1f",
          "image": "registry.connect.redhat.com/jfrog/pipelines-vault-init@sha256:fefea387baefffaf3c3636e61f39fb5ea1fb09119af34a944f522341d50c6a1f",
          "name": "pipeline_vault_init_image_repository"
        },
        {
          "digest": "sha256:acdaab7820f42244cc83ef31091d57f349488619fbf37a08c90700f88a7ba98c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-vault@sha256:acdaab7820f42244cc83ef31091d57f349488619fbf37a08c90700f88a7ba98c",
          "name": "pipeline_vault_image_repository"
        },
        {
          "digest": "sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
          "image": "registry.connect.redhat.com/jfrog/pipelines-init@sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
          "name": "pipelines-init-9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "5f9b5f8b286158684a4669f4",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftPipeline",
          "metadata": {
            "name": "openshiftpipeline"
          },
          "spec": {
            "pipelines": {
              "global": {
                "postgresql": {
                  "database": "OVERRIDE",
                  "host": "OVERRIDE",
                  "password": "OVERRIDE",
                  "port": "OVERRIDE",
                  "ssl": "false",
                  "user": "OVERRIDE"
                }
              },
              "imageRegistry": "registry.connect.redhat.com",
              "initContainer": {
                "image": "registry.connect.redhat.com/jfrog/pipelines-init@sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
                "pullPolicy": "Always"
              },
              "pipelines": {
                "accessControlAllowOrigins_0": "OVERRIDE",
                "accessControlAllowOrigins_1": "OVERRIDE",
                "api": {
                  "externalUrl": "OVERRIDE",
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-api"
                  }
                },
                "cron": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "extensionSync": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "hookHandler": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "jfrogUrl": "OVERRIDE",
                "jfrogUrlUI": "OVERRIDE",
                "joinKey": "OVERRIDE",
                "logup": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "marshaller": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "masterKey": "OVERRIDE",
                "msg": {
                  "uiUser": "OVERRIDE",
                  "uiUserPassword": "OVERRIDE"
                },
                "nexec": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "pipelineSync": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "pipelinesInit": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-installer"
                  }
                },
                "router": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-router"
                  }
                },
                "runTrigger": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "stepTrigger": {
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-micro"
                  }
                },
                "version": "1.8.0",
                "www": {
                  "externalUrl": "OVERRIDE",
                  "image": {
                    "pullPolicy": "Always",
                    "repository": "jfrog/pipelines-www"
                  }
                }
              },
              "postgresql": {
                "enabled": false
              },
              "rabbitmq": {
                "enabled": true,
                "externalUrl": "OVERRIDE",
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/pipelines-rabbitmq",
                  "tag": "3.8.9"
                }
              },
              "redis": {
                "enabled": true,
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/redis-5",
                  "tag": "1-98"
                },
                "master": {
                  "command": "container-entrypoint run-redis"
                }
              },
              "securityContext": {
                "enabled": true,
                "gid": "1000721117",
                "uid": "1000721117"
              },
              "vault": {
                "disablemlock": false,
                "enabled": true,
                "image": {
                  "repository": "registry.connect.redhat.com/jfrog/pipelines-vault",
                  "tag": "1.8.0"
                },
                "init": {
                  "pullPolicy": "Always",
                  "repository": "jfrog/pipelines-vault-init"
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/pipelines-operator-bundle@sha256:319b188f70a139c3f5e1a64533280a60388365a5585465d55c6a4e1db98fca28",
      "bundle_path_digest": "sha256:319b188f70a139c3f5e1a64533280a60388365a5585465d55c6a4e1db98fca28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-10-30T00:34:19.314000+00:00",
      "csv_description": "## Overview\n\nOpenshift Operator to deploy JFrog Pipelines into your Openshift cluster.\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Pipeline Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Pipeline Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Xray\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\npipelines.global.postgresql.host=<postgresql_host> pipelines.global.postgresql.port=<postgresql_port> pipelines.global.postgresql.database=<postgresql_dbname> pipelines.global.postgresql.user=<postgresql_user> pipelines.global.postgresql.password=<postgresql_password>\n```\n\nJFROG_URL is the external ip or DNS of your Artifactory to connect Pipelines to. Artifactory is required to use this operator.\nYou will need to specify your JFROG_URL in the follow locations:\nUse the cluster DNS name of the service for most operator deployments this will be: http://openshiftartifactoryha-nginx\n``` pipelines.pipelines.jfrogUrl=<JFROG_URL> pipelines.pipelines.jfrogUrlUI=<JFROG_URL> pipelines.pipelines.accessControlAllowOrigins_0=<JFROG_URL> pipelines.pipelines.accessControlAllowOrigins_1=<JFROG_URL> ```\nSetup a unique master key and use the same join key you used when creating Artifactory:\n``` pipelines.pipelines.masterKey=$MASTER_KEY pipelines.pipelines.joinKey=$JOIN_KEY ```\nSetup a unique username and password for Rabbitmq user:\n``` pipelines.pipelines.msg.uiUser=monitor pipelines.pipelines.msg.uiUserPassword=monitor ```\nSpecify external urls that will be your Openshift routes if desired:\n``` pipelines.rabbitmq.externalUrl=amqps://pipelines-rabbit.example.com pipelines.pipelines.api.externalUrl=http://pipelines-api.example.com pipelines.pipelines.www.externalUrl=http://pipelines-www.example.com ```\nDeploy JFrog Pipelines into your cluster.\n## Build Plane Usage\nTo use the pipelines build plane you can either use your Openshift cluster or a 3rd party cloud provider like AWS.\nSetup the Pipelines build plane.\n## Sync issue fix\nTo resolve the known host issue when syncing from a new site for now users can rsh into the pod or open the terminal into the pod in the Openshift web console.\nOnce inside the container `pipelinesync` run the follow command:\n``` /pipelineSync/clone.sh ```\nType yes to accept the host verification and then re-sync your pipeline. ",
      "csv_display_name": "JFrog Pipeline Operator",
      "csv_metadata_description": "JFrog Pipeline Enterprise deploys Pipeline CI/CD Openshift (Requires Jfrog Artifactory)",
      "csv_name": "pipeline-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:32:01.105000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftpipeline-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftPipeline",
          "plural": "openshiftpipelines",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "image": "registry.connect.redhat.com/jfrog/pipelines-operator@sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "name": "pipelines-operator-2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4-annotation"
        },
        {
          "digest": "sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "image": "registry.connect.redhat.com/jfrog/pipelines-operator@sha256:2acce47191cd20b2a73fb01f97976ee030a091ed57bbd57f3fa5a316a71614a4",
          "name": "pipeline-operator"
        },
        {
          "digest": "sha256:27baf3f2d50482984f7550d856c51c02bdad013facc53165d246305ab4ba11d2",
          "image": "registry.connect.redhat.com/jfrog/pipelines-api@sha256:27baf3f2d50482984f7550d856c51c02bdad013facc53165d246305ab4ba11d2",
          "name": "pipeline_api_image_repository"
        },
        {
          "digest": "sha256:30898def831fec6a779a3f809e2098a2421ac56a7d383fae26f972749b4d585c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-router@sha256:30898def831fec6a779a3f809e2098a2421ac56a7d383fae26f972749b4d585c",
          "name": "pipeline_router_image_repository"
        },
        {
          "digest": "sha256:bd0857fb811972c412eca139104e754e095f5beb53fe88bdcc7ea683ece5b4e0",
          "image": "registry.connect.redhat.com/jfrog/pipelines-www@sha256:bd0857fb811972c412eca139104e754e095f5beb53fe88bdcc7ea683ece5b4e0",
          "name": "pipeline_www_image_repository"
        },
        {
          "digest": "sha256:0587b685cc7abeb73e4529a9885a2bd56c4d63fa3801dd5ea61d8495f9b260cd",
          "image": "registry.connect.redhat.com/jfrog/pipelines-micro@sha256:0587b685cc7abeb73e4529a9885a2bd56c4d63fa3801dd5ea61d8495f9b260cd",
          "name": "pipeline_micro_image_repository"
        },
        {
          "digest": "sha256:16c1cb3729dc52851d7af512f8d7d7151b3231f2445c10c04784a69bcf027c3c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-installer@sha256:16c1cb3729dc52851d7af512f8d7d7151b3231f2445c10c04784a69bcf027c3c",
          "name": "pipeline_installer_image_repository"
        },
        {
          "digest": "sha256:54dce2f3707794a16bcb9a385035454f3ae0a7861551b4c54f682a9894772f79",
          "image": "registry.connect.redhat.com/jfrog/pipelines-rabbitmq@sha256:54dce2f3707794a16bcb9a385035454f3ae0a7861551b4c54f682a9894772f79",
          "name": "pipeline_rabbitmq_image_repository"
        },
        {
          "digest": "sha256:c4302979defaaa396e1df57ad2adb7949f06d7c4c7c2904c445d4bb9111e9b1e",
          "image": "registry.redhat.io/rhel8/redis-5@sha256:c4302979defaaa396e1df57ad2adb7949f06d7c4c7c2904c445d4bb9111e9b1e",
          "name": "pipeline_redis_image_repository"
        },
        {
          "digest": "sha256:fefea387baefffaf3c3636e61f39fb5ea1fb09119af34a944f522341d50c6a1f",
          "image": "registry.connect.redhat.com/jfrog/pipelines-vault-init@sha256:fefea387baefffaf3c3636e61f39fb5ea1fb09119af34a944f522341d50c6a1f",
          "name": "pipeline_vault_init_image_repository"
        },
        {
          "digest": "sha256:acdaab7820f42244cc83ef31091d57f349488619fbf37a08c90700f88a7ba98c",
          "image": "registry.connect.redhat.com/jfrog/pipelines-vault@sha256:acdaab7820f42244cc83ef31091d57f349488619fbf37a08c90700f88a7ba98c",
          "name": "pipeline_vault_image_repository"
        },
        {
          "digest": "sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
          "image": "registry.connect.redhat.com/jfrog/pipelines-init@sha256:9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b",
          "name": "pipelines-init-9c54e5ed032653b6d70ca0fe293ca4a23d082f5790f7dbbfac499a08573a663b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "5f9c207ed2aaa46332bdb9e6",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "admisnPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:0bf222bc4a737f1c9c20a8d6129177cf3dd2bd7d52bb08834518a6e81ecdf0af",
      "bundle_path_digest": "sha256:0bf222bc4a737f1c9c20a8d6129177cf3dd2bd7d52bb08834518a6e81ecdf0af",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2020-10-30T14:17:34.893000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:54:05.734000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "name": "couchdb-operator-b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb-annotation"
        },
        {
          "digest": "sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "name": "couchdb-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.4.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.2",
      "version_original": "1.4.2"
    },
    {
      "_id": "5f9c208462ed9fe4b14a7c39",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "admisnPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:0bf222bc4a737f1c9c20a8d6129177cf3dd2bd7d52bb08834518a6e81ecdf0af",
      "bundle_path_digest": "sha256:0bf222bc4a737f1c9c20a8d6129177cf3dd2bd7d52bb08834518a6e81ecdf0af",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2020-10-30T14:17:40.674000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-03T04:06:52.545000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "name": "couchdb-operator-b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb-annotation"
        },
        {
          "digest": "sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:b02b2addc64e09514e61fd27d713453be7b122a7cea862b291511167df69cedb",
          "name": "couchdb-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.4.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.4.2",
      "version_original": "1.4.2"
    },
    {
      "_id": "5fa1c1d8e0baaee8c318e327",
      "alm_examples": [
        {
          "api_version": "spinnaker.armory.io/v1alpha2",
          "kind": "SpinnakerService",
          "metadata": {
            "name": "spinnaker"
          },
          "spec": {
            "expose": {
              "service": {
                "type": "LoadBalancer"
              },
              "type": "service"
            },
            "spinnakerConfig": {
              "config": {
                "persistentStorage": {
                  "persistentStoreType": "s3",
                  "s3": {
                    "bucket": "mybucket",
                    "rootFolder": "front50"
                  }
                },
                "version": "2.21.4-ubi"
              }
            },
            "validation": {
              "persistentStorage": {
                "s3": {
                  "enabled": false
                }
              },
              "providers": {
                "docker": {
                  "enabled": false
                },
                "kubernetes": {
                  "enabled": false
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/armory/armory-operator-bundle@sha256:f652675af906bff73b5658d588070328aa9c3fd1f460c35c72e12de504a3050e",
      "bundle_path_digest": "sha256:f652675af906bff73b5658d588070328aa9c3fd1f460c35c72e12de504a3050e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1alpha2",
      "creation_date": "2020-11-03T20:47:20.930000+00:00",
      "csv_description": "## Overview\n\nOperator-based Armory installation. Spinnaker is an open sourced Continuous Delivery (CD) platform. It works as a workflow engine to build out pipelines to deploy your workloads to your OpenShift and other cloud environments. Armory is the enterprise distribution of Spinnaker provided by Armory, Inc with Pipelines as Code, Terraform Integration, Policy Engine, and Secrets Management.\n\nArmory gives your developers the power to deploy, instantly and to any cloud, with built-in guardrails to ensure best practices, resiliency, security, and compliance.\n\n## Features and benefits\n\n### Armory Pipeline as Code\n\nPipeline as Code (Dinghy) allows you to store Spinnaker pipelines in Github and manage them like you would manage code, including version control, templatization, and modularization. Spinnaker pipelines are flexible and customizable series of deployment stages. Combine all these to rapidly and repeatably scale pipelines in your Spinnaker deployment. \u2022 Dynamically create and store Spinnaker pipelines (in JSON, HashiCorp Configuration Language or YAML) in a Git repository \u2022 Enables version control, templates, and modularization in your pipelines as well as repeatable, scalable pipelines by avoiding the need to use the Spinnaker user interface (UI).\n\n### Policy Engine\n\nPolicy Engine helps you meet compliance requirements based on custom policies you set. You can configure the Policy Engine to verify that your pipelines meet certain requirements at save time or at runtime. \u2022 Codify and automate your security & compliance requirements and best practices \u2022 Execution features allow policies to be run before and after pipeline stages.\n\n### Terraform Integration\n\nTerraform integration allows you to use your existing Terraform scripts to plan and create infrastructure as part a Spinnaker pipeline. You can deploy your application and infrastructure all in a single pipeline. \u2022 Seamless integration of Spinnaker with Terraform \u2022 Run Terraform plan, apply, destroy, and output stages as part of your Spinnaker pipeline to fully align your infrastructure with your deployments\n\n### Pipelines as CRD (PaCRD)\n\nPipelines as CRD (PaCRD) is a Kubernetes controller that manages the lifecycle of Armory applications and pipelines as objects within your cluster. PaCRD extends Kubernetes functionality to support Spinnaker Application and Pipeline objects that can be observed for changes through a mature lifecycle management API.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "csv_display_name": "Armory Operator",
      "csv_metadata_description": "Armory provides an enterprise-grade distribution of Spinnaker, the world\u2019s leading continuous delivery platform.",
      "csv_name": "armory-operator.v1.2.0-ubi",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:49:11.932000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "armory-operator",
      "provided_apis": [
        {
          "group": "spinnaker.armory.io",
          "kind": "SpinnakerService",
          "plural": "spinnakerservices",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "image": "registry.connect.redhat.com/armory/armory-operator@sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "name": "armory-operator-213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd-annotation"
        },
        {
          "digest": "sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "image": "registry.connect.redhat.com/armory/armory-operator@sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "name": "spinnaker-operator"
        },
        {
          "digest": "sha256:8732281f5df995dc535dbc1114068453c9c43972b0ffe2f0f3b8043ef9481e11",
          "image": "registry.connect.redhat.com/armory/halyard-armory@sha256:8732281f5df995dc535dbc1114068453c9c43972b0ffe2f0f3b8043ef9481e11",
          "name": "halyard"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.0-ubi",
      "version_original": "1.2.0-ubi"
    },
    {
      "_id": "5fa1c24218b8e2c8aec7cd84",
      "alm_examples": [
        {
          "api_version": "spinnaker.armory.io/v1alpha2",
          "kind": "SpinnakerService",
          "metadata": {
            "name": "spinnaker"
          },
          "spec": {
            "expose": {
              "service": {
                "type": "LoadBalancer"
              },
              "type": "service"
            },
            "spinnakerConfig": {
              "config": {
                "persistentStorage": {
                  "persistentStoreType": "s3",
                  "s3": {
                    "bucket": "mybucket",
                    "rootFolder": "front50"
                  }
                },
                "version": "2.21.4-ubi"
              }
            },
            "validation": {
              "persistentStorage": {
                "s3": {
                  "enabled": false
                }
              },
              "providers": {
                "docker": {
                  "enabled": false
                },
                "kubernetes": {
                  "enabled": false
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/armory/armory-operator-bundle@sha256:f652675af906bff73b5658d588070328aa9c3fd1f460c35c72e12de504a3050e",
      "bundle_path_digest": "sha256:f652675af906bff73b5658d588070328aa9c3fd1f460c35c72e12de504a3050e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1alpha2",
      "creation_date": "2020-11-03T20:49:06.531000+00:00",
      "csv_description": "## Overview\n\nOperator-based Armory installation. Spinnaker is an open sourced Continuous Delivery (CD) platform. It works as a workflow engine to build out pipelines to deploy your workloads to your OpenShift and other cloud environments. Armory is the enterprise distribution of Spinnaker provided by Armory, Inc with Pipelines as Code, Terraform Integration, Policy Engine, and Secrets Management.\n\nArmory gives your developers the power to deploy, instantly and to any cloud, with built-in guardrails to ensure best practices, resiliency, security, and compliance.\n\n## Features and benefits\n\n### Armory Pipeline as Code\n\nPipeline as Code (Dinghy) allows you to store Spinnaker pipelines in Github and manage them like you would manage code, including version control, templatization, and modularization. Spinnaker pipelines are flexible and customizable series of deployment stages. Combine all these to rapidly and repeatably scale pipelines in your Spinnaker deployment. \u2022 Dynamically create and store Spinnaker pipelines (in JSON, HashiCorp Configuration Language or YAML) in a Git repository \u2022 Enables version control, templates, and modularization in your pipelines as well as repeatable, scalable pipelines by avoiding the need to use the Spinnaker user interface (UI).\n\n### Policy Engine\n\nPolicy Engine helps you meet compliance requirements based on custom policies you set. You can configure the Policy Engine to verify that your pipelines meet certain requirements at save time or at runtime. \u2022 Codify and automate your security & compliance requirements and best practices \u2022 Execution features allow policies to be run before and after pipeline stages.\n\n### Terraform Integration\n\nTerraform integration allows you to use your existing Terraform scripts to plan and create infrastructure as part a Spinnaker pipeline. You can deploy your application and infrastructure all in a single pipeline. \u2022 Seamless integration of Spinnaker with Terraform \u2022 Run Terraform plan, apply, destroy, and output stages as part of your Spinnaker pipeline to fully align your infrastructure with your deployments\n\n### Pipelines as CRD (PaCRD)\n\nPipelines as CRD (PaCRD) is a Kubernetes controller that manages the lifecycle of Armory applications and pipelines as objects within your cluster. PaCRD extends Kubernetes functionality to support Spinnaker Application and Pipeline objects that can be observed for changes through a mature lifecycle management API.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
      "csv_display_name": "Armory Operator",
      "csv_metadata_description": "Armory provides an enterprise-grade distribution of Spinnaker, the world\u2019s leading continuous delivery platform.",
      "csv_name": "armory-operator.v1.2.0-ubi",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:56:07.362000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "armory-operator",
      "provided_apis": [
        {
          "group": "spinnaker.armory.io",
          "kind": "SpinnakerService",
          "plural": "spinnakerservices",
          "version": "v1alpha2"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "image": "registry.connect.redhat.com/armory/armory-operator@sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "name": "armory-operator-213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd-annotation"
        },
        {
          "digest": "sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "image": "registry.connect.redhat.com/armory/armory-operator@sha256:213dd75d10a5141573c447d784725d934b33102a8dc1b11a46f5dcd0d1659acd",
          "name": "spinnaker-operator"
        },
        {
          "digest": "sha256:8732281f5df995dc535dbc1114068453c9c43972b0ffe2f0f3b8043ef9481e11",
          "image": "registry.connect.redhat.com/armory/halyard-armory@sha256:8732281f5df995dc535dbc1114068453c9c43972b0ffe2f0f3b8043ef9481e11",
          "name": "halyard"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.0-ubi",
      "version_original": "1.2.0-ubi"
    },
    {
      "_id": "5fa57b15f0de7651d429352f",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "TwistlockConsole",
          "metadata": {
            "name": "example-twistlockconsole"
          },
          "spec": {
            "COMMUNICATION_PORT": "8084",
            "CONSOLE_CN": "",
            "DATA_FOLDER": "/var/lib/twistlock",
            "DATA_RECOVERY_ENABLED": "true",
            "DATA_RECOVERY_VOLUME": "/var/lib/twistlock-backup",
            "DEFENDER_CN": "",
            "DEFENDER_LISTENER_TYPE": "",
            "DOCKER_SOCKET": "",
            "DOCKER_TWISTLOCK_TAG": "_20_04_169",
            "HIGH_AVAILABILITY_ENABLED": "false",
            "HIGH_AVAILABILITY_PORT": "8086",
            "HIGH_AVAILABILITY_STATE": "PRIMARY",
            "MANAGEMENT_PORT_HTTP": "8081",
            "MANAGEMENT_PORT_HTTPS": "8083",
            "READ_ONLY_FS": "true",
            "RUN_CONSOLE_AS_ROOT": "",
            "SCAP_ENABLED": "",
            "SELINUX_LABEL": "disable",
            "SYSTEMD_ENABLED": "",
            "consoleImageName": "registry-auth.twistlock.com/tw_<REPLACE_TWISTLOCK_TOKEN>/twistlock/console:console_20_04_169",
            "namespace": "twistlock",
            "openshift": false,
            "persistentVolumeDataFolder": "var/lib/twistlock",
            "persistentVolumeDataRecoveryFolder": "var/lib/twistlock-backup",
            "persistentVolumeStorage": "100Gi",
            "privileged": false,
            "secrets": [],
            "selinux-type": "",
            "serviceType": "LoadBalancer",
            "twistlock_cfg": "\"#  _____          _     _   _            _    \\n# |_   _|_      _(_)___| |_| | ___   ___| | __  \\n#   | | \\\\ \\\\ /\\\\ / / / __| __| |/ _ \\\\ / __| |/ /      \\n#   | |  \\\\ V  V /| \\\\__ \\\\ |_| | (_) | (__|   <       \\n#   |_|   \\\\_/\\\\_/ |_|___/\\\\__|_|\\\\___/ \\\\___|_|\\\\_\\\\\\\\     \\n\\n# This configuration file contains the setup parameters for Prisma Cloud Compute (Twistlock)\\n# This file is typically stored in the same directory as the installation script (twistlock.sh)\\n# To reconfigure settings, update this configuration file and re-run twistlock.sh; state and unchanged settings will persist\\n\\n\\n\\n#############################################\\n#     Network configuration\\n#############################################\\n# Each port must be set to a unique value (multiple services cannot share the same port)\\n###### Management console ports #####\\n# Sets the ports that the Twistlock management website listens on\\n# The system that you use to configure Twistlock must be able to connect to the Twistlock Console on these ports\\n# To disable the HTTP listner, leave the value empty (e.g. MANAGEMENT_PORT_HTTP=)\\nMANAGEMENT_PORT_HTTP=${MANAGEMENT_PORT_HTTP-8081}\\nMANAGEMENT_PORT_HTTPS=8083\\n\\n##### Inter-system communication port ##### \\n# Sets the port for communication between the Defender(s) and the Console\\nCOMMUNICATION_PORT=8084\\n\\n##### Certificate common names (optional) #####\\n# Determines how to construct the CN in the Console's certificate\\n# This value should not be modified unless instructed to by Twistlock Support\\nCONSOLE_CN=$(hostname --fqdn 2>/dev/null); if [[ $? == 1 ]]; then CONSOLE_CN=$(hostname); fi\\n# Determines how to construct the CN in the Defenders' certificates\\n# Each Defender authenticates to the Console with this certificate and each cert must have a unique CN\\n# These values should not be modified unless instructed to by Twistlock Support\\nDEFENDER_CN=${DEFENDER_CN:-}\\n\\n#############################################\\n#     Twistlock system configuration\\n#############################################\\n###### Data recovery #####\\n# Data recovery automatically exports the full Twistlock configuration to the specified path every 24 hours\\n# Daily, weekly, and monthly snapshots are retained\\n# The exported configuration can be stored on durable storage or backed up remotely with other tools\\n# Sets data recovery state (enabled or disabled)\\nDATA_RECOVERY_ENABLED=true\\n# Sets the directory to which Twistlock data is exported\\nDATA_RECOVERY_VOLUME=/var/lib/twistlock-backup\\n\\n##### Read only containers #####\\n# Sets Twistlock containers file-system to read-only\\nREAD_ONLY_FS=true\\n\\n##### Storage paths #####\\n# Sets the base directory to store Twistlock local data (db and log files)\\nDATA_FOLDER=/var/lib/twistlock\\n\\n##### Docker socket #####\\n# Sets the location of the Docker socket file\\nDOCKER_SOCKET=${DOCKER_SOCKET:-/var/run/docker.sock}\\n# Sets the type of the docker listener (TCP or NONE)\\nDEFENDER_LISTENER_TYPE=${DEFENDER_LISTENER_TYPE:-NONE}\\n\\n#### SCAP (XCCDF) configuration ####\\n# Sets SCAP state (enabled or disabled)\\nSCAP_ENABLED=${SCAP_ENABLED:-false}\\n\\n#### systemd configuration ####\\n# Installs Twistlock as systemd service\\nSYSTEMD_ENABLED=${SYSTEMD_ENABLED:-false}\\n\\n#### userid configuration ####\\n# Run Twistlock console processes as root (default, twistlock user account)\\nRUN_CONSOLE_AS_ROOT=${RUN_CONSOLE_AS_ROOT:-false}\\n\\n#### selinux configuration ####\\n# If SELINUX is enabled in dockerd, enable running Twistlock console and defender with a dedicated SELINUX label\\n# See https://docs.docker.com/engine/reference/run/#security-configuration\\nSELINUX_LABEL=disable\\n\\n#############################################\\n#      High availability settings\\n#############################################\\n# Only to be used when the Console is deployed outside of a Kubernetes cluster\\n# This native HA capability uses Mongo clustering and requires 3 or more instances\\nHIGH_AVAILABILITY_ENABLED=false\\nHIGH_AVAILABILITY_STATE=PRIMARY\\nHIGH_AVAILABILITY_PORT=8086\\n\\n\\n\\n#############################################\\n#      Twistlock repository configuration\\n#############################################\\n# Sets the version tag of the Twistlock containers\\n# Do not modify unless instructed to by Twistlock Support\\nDOCKER_TWISTLOCK_TAG=_20_04_169\\n\""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/prismacloud/compute-console-operator-bundle@sha256:81b134cf7e21acac8c2a80ec733745a4bd17229fcd7aaddffc4a18a89865dc2c",
      "bundle_path_digest": "sha256:81b134cf7e21acac8c2a80ec733745a4bd17229fcd7aaddffc4a18a89865dc2c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "latest",
      "creation_date": "2020-11-06T16:34:29.553000+00:00",
      "csv_description": "This guide walks through using the [Prisma Cloud Compute (Twistlock)](https://docs.paloaltonetworks.com/prisma/prisma-cloud/20-04/prisma-cloud-compute-edition-admin.html) Console operator \n\npowered by Helm using tools and libraries provided by the Operator SDK.\n\n\nThe operator runs as a container that has the Prisma Cloud Compute (Twistlock) Console\n\nhelm charts on board and can watch to see if the components are present. If they're not,\n\nthe operator will use Helm to install the Twistlock Console correctly without any user interaction!\n\n\nAll you have to to do is tell your cluster about the new TwistlockConsole custom resource\n\nby applying the included Custom Resource Definition (CRD). Then deploy the operator\n\ncontainer into the cluster and let it do its thing.\n\n\nLet's get down to it. All we need from you is the Twistlock registry/docs token that came \n\nwith your license. All of the yaml files you need to deploy are listed below.\n\nPre requisite - Create a configmap named 'twistlock-token' in the namespace (\"twistlock\") where the operator has to be installed.\n                Provide the 'token' value in data section and update the version for the console with the latest version available in docs.twistlock.com \n\n```\napiVersion: v1\nkind: ConfigMap\ndata:\n  token: <REPLACE_TWISTLOCK_TOKEN>\n  version: <Update with latest version from docs.twistlock.com. example: 20_09_345>\nmetadata:\n  name: twistlock-token\n  namespace: twistlock\n  \n```\n\n##  Here's the plan:\n\n\n```sh\n# Let the cluster know about our new custom resource, TwistlockConsole\n\nkubectl apply -f deploy/0_8_crds/0_charts_v1alpha1_twistlockconsole_crd.yaml\n\n# Create the 'twistlock' namespace\n\nkubectl apply -f deploy/1_namespace.yaml\n\n# Create necessary user and permissions to make things happen\n\nkubectl apply -f deploy/2_service_account.yaml \n\nkubectl apply -f deploy/3_role.yaml\n\nkubectl apply -f deploy/4_role_binding.yaml\n\nkubectl apply -f deploy/5_clusterrole.yaml\n\nkubectl apply -f deploy/6_clusterrole_binding.yaml\n\n# Deploy the operator container as a pod\n\nkubectl apply -f deploy/7_operator.yaml\n\n# Add your token and apply. For more detail, before you apply the CR, read\nthe note below\n\nkubectl apply -f deploy/0_8_crds/8_charts_v1alpha1_twistlockconsole_cr.yaml\n\n``` \n\n\n\n### Understanding the Twistlock Customer Resource (CR) spec\n\n\nHelm uses a concept called [values](https://helm.sh/docs/chart_template_guide/values_files/) to provide customizations\n\nto a Helm chart's defaults, which are defined in the Helm chart's\n`values.yaml`\n\nfile.\n\n\nOverriding these defaults is as simple as setting the desired values in the\nCR\n\nspec. With a Twistlock token from your license you can replace this\nplaceholder \n\n`<REPLACE_TWISTLOCK_TOKEN>` with your token.\n\n\n```sh\n\nconsoleImageName:\nregistry-auth.twistlock.com/tw_<REPLACE_TWISTLOCK_TOKEN>/twistlock/console:console_20_04_169\n\n``` \n\n\nThe other option to choose is whether we're on OpenShift, since Kubernetes\nis the default. If on OpenShift, be sure \n\nto add these lines to your CR spec as well:\n\n\n```sh\n\nopenshift: true\n\nserviceType: NodePort\n\n```\n",
      "csv_display_name": "Prisma Cloud Compute (Twistlock) Console Operator",
      "csv_metadata_description": "Deploy Prisma Cloud Compute (Twistlock) cloud native security in Kubernetes.",
      "csv_name": "prisma-cloud-compute-console-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:36:49.546000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "prisma-cloud-compute-console-operator.v2.0.1",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "TwistlockConsole",
          "plural": "twistlockconsoles",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:09de8da2f467a6a8b8495a76b857776395524021a4f203d3b4148149faedc02b",
          "image": "prismacloud/compute-console-operator@sha256:09de8da2f467a6a8b8495a76b857776395524021a4f203d3b4148149faedc02b",
          "name": "compute-console-operator-09de8da2f467a6a8b8495a76b857776395524021a4f203d3b4148149faedc02b-annotation"
        },
        {
          "digest": "sha256:a3e08b618a200609feff723b8dc91eede32d6dd4477b435c4789cb754af60b84",
          "image": "registry.connect.redhat.com/prismacloud/compute-console-operator@sha256:a3e08b618a200609feff723b8dc91eede32d6dd4477b435c4789cb754af60b84",
          "name": "prisma-cloud-compute-console-helm-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5facefd6c8efd5ec89d113a1",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "cic"
          },
          "spec": {
            "adcCredentialSecret": "",
            "cicSettings": {
              "cicConfig": {
                "NS_COOKIE_VERSION": "0",
                "NS_HTTP2_SERVER_SIDE": "OFF"
              },
              "required": false
            },
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:e888198f9457aa53d42ef5448ef7e195f00b362c337227aa04a05f75dfe7a063",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false
            },
            "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:36673b92a9bd709341e86ce0c5e5b64b96c1d43ef655622f6473f2c010b22218",
            "ingressClass": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": "No"
            },
            "logLevel": "INFO",
            "logProxy": "",
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsIP": "x.x.x.x",
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsVIP": "",
            "openshift": true,
            "pullPolicy": "IfNotPresent",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceClass": "",
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:5c6ac2080d44359c7021411443e7ab038414fc7d9e66b8f5d89a8c525d1682b6",
      "bundle_path_digest": "sha256:5c6ac2080d44359c7021411443e7ab038414fc7d9e66b8f5d89a8c525d1682b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-11-12T08:18:30.179000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.10.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:55:42.681000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:12c929de4ae1da2a94d4a87b43c08611693f56a85258561904d70ba817b30f8f",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:12c929de4ae1da2a94d4a87b43c08611693f56a85258561904d70ba817b30f8f",
          "name": "citrix-k8s-ingress-controller-12c929de4ae1da2a94d4a87b43c08611693f56a85258561904d70ba817b30f8f-annotation"
        },
        {
          "digest": "sha256:cf649dd62748abba55d26130275f8237411ea7899b860f46459f1e84a5fad919",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:cf649dd62748abba55d26130275f8237411ea7899b860f46459f1e84a5fad919",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:12c929de4ae1da2a94d4a87b43c08611693f56a85258561904d70ba817b30f8f",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:12c929de4ae1da2a94d4a87b43c08611693f56a85258561904d70ba817b30f8f",
          "name": "manager"
        },
        {
          "digest": "sha256:36673b92a9bd709341e86ce0c5e5b64b96c1d43ef655622f6473f2c010b22218",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:36673b92a9bd709341e86ce0c5e5b64b96c1d43ef655622f6473f2c010b22218",
          "name": "cic"
        },
        {
          "digest": "sha256:e888198f9457aa53d42ef5448ef7e195f00b362c337227aa04a05f75dfe7a063",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:e888198f9457aa53d42ef5448ef7e195f00b362c337227aa04a05f75dfe7a063",
          "name": "exporter"
        },
        {
          "digest": "sha256:e888198f9457aa53d42ef5448ef7e195f00b362c337227aa04a05f75dfe7a063",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:e888198f9457aa53d42ef5448ef7e195f00b362c337227aa04a05f75dfe7a063",
          "name": "citrix-adc-metrics-exporter-e888198f9457aa53d42ef5448ef7e195f00b362c337227aa04a05f75dfe7a063-annotation"
        },
        {
          "digest": "sha256:36673b92a9bd709341e86ce0c5e5b64b96c1d43ef655622f6473f2c010b22218",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:36673b92a9bd709341e86ce0c5e5b64b96c1d43ef655622f6473f2c010b22218",
          "name": "citrix-ingress-controller-36673b92a9bd709341e86ce0c5e5b64b96c1d43ef655622f6473f2c010b22218-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.10.2",
      "version_original": "1.10.2"
    },
    {
      "_id": "5faef7e8fb3e53a018cc6058",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:6c37c211385ffad721637ea1a6bcda46e4aa9aa46efdbeec6f75e9b9bd7ff75d",
      "bundle_path_digest": "sha256:6c37c211385ffad721637ea1a6bcda46e4aa9aa46efdbeec6f75e9b9bd7ff75d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2020-11-13T21:17:28.984000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T05:01:21.733000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "name": "densify-operator-47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada-annotation"
        },
        {
          "digest": "sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "name": "densify"
        },
        {
          "digest": "sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "name": "container-data-collection-forwarder-d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.2 <1.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5faef80ffb3e53a018cc6059",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:6c37c211385ffad721637ea1a6bcda46e4aa9aa46efdbeec6f75e9b9bd7ff75d",
      "bundle_path_digest": "sha256:6c37c211385ffad721637ea1a6bcda46e4aa9aa46efdbeec6f75e9b9bd7ff75d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2020-11-13T21:18:07.801000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:46:46.288000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "name": "densify-operator-47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada-annotation"
        },
        {
          "digest": "sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "name": "densify"
        },
        {
          "digest": "sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "name": "container-data-collection-forwarder-d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=0.0.2 <1.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "5fb6a1b3ab63df5a7c83e652",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "replicaCount": 1,
              "resources": {},
              "service": {
                "licenseName": "AutoPilotWMQ_MQM.lic"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "dbPort": 3306,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud",
              "type": "ClusterIP"
            },
            "navigator": {
              "replicaCount": 1,
              "resources": {}
            },
            "nsqcm": {
              "replicaCount": 1,
              "resources": {}
            },
            "wgs-mysql": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:17379d5697c673b059a79f9accf2ef897da7330a973448ff1e4c58ea00518dfa",
      "bundle_path_digest": "sha256:17379d5697c673b059a79f9accf2ef897da7330a973448ff1e4c58ea00518dfa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-11-19T16:47:47.153000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100105.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:48:57.171000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "name": "navigator-operator-f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1-annotation"
        },
        {
          "digest": "sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "name": "domain"
        },
        {
          "digest": "sha256:96ec72e3bea96f8b392db44161a22115f9740dddbc294573a96fef46044eb5de",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:96ec72e3bea96f8b392db44161a22115f9740dddbc294573a96fef46044eb5de",
          "name": "cm"
        },
        {
          "digest": "sha256:13ce4945a40b4cff7f1f32dfdac99edb4afe1ec5c14164d9bc073586fdc74b4f",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:13ce4945a40b4cff7f1f32dfdac99edb4afe1ec5c14164d9bc073586fdc74b4f",
          "name": "wgs"
        },
        {
          "digest": "sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "name": "navigator"
        },
        {
          "digest": "sha256:08c0c76b4fad8e2defb0eacb15d53c19a3bcef2d72e862aeb4f0a7f166fd5727",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:08c0c76b4fad8e2defb0eacb15d53c19a3bcef2d72e862aeb4f0a7f166fd5727",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100105.1",
      "version_original": "1.100105.1"
    },
    {
      "_id": "5fb6a1bba1440dae32e7b2a3",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "replicaCount": 1,
              "resources": {},
              "service": {
                "licenseName": "AutoPilotWMQ_MQM.lic"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "dbPort": 3306,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud",
              "type": "ClusterIP"
            },
            "navigator": {
              "replicaCount": 1,
              "resources": {}
            },
            "nsqcm": {
              "replicaCount": 1,
              "resources": {}
            },
            "wgs-mysql": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:17379d5697c673b059a79f9accf2ef897da7330a973448ff1e4c58ea00518dfa",
      "bundle_path_digest": "sha256:17379d5697c673b059a79f9accf2ef897da7330a973448ff1e4c58ea00518dfa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2020-11-19T16:47:55.358000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100105.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:11:14.586000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "name": "navigator-operator-f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1-annotation"
        },
        {
          "digest": "sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "name": "domain"
        },
        {
          "digest": "sha256:96ec72e3bea96f8b392db44161a22115f9740dddbc294573a96fef46044eb5de",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:96ec72e3bea96f8b392db44161a22115f9740dddbc294573a96fef46044eb5de",
          "name": "cm"
        },
        {
          "digest": "sha256:13ce4945a40b4cff7f1f32dfdac99edb4afe1ec5c14164d9bc073586fdc74b4f",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:13ce4945a40b4cff7f1f32dfdac99edb4afe1ec5c14164d9bc073586fdc74b4f",
          "name": "wgs"
        },
        {
          "digest": "sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "name": "navigator"
        },
        {
          "digest": "sha256:08c0c76b4fad8e2defb0eacb15d53c19a3bcef2d72e862aeb4f0a7f166fd5727",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:08c0c76b4fad8e2defb0eacb15d53c19a3bcef2d72e862aeb4f0a7f166fd5727",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100105.1",
      "version_original": "1.100105.1"
    },
    {
      "_id": "5fb6a8c3f9ea96c2aa9231d5",
      "alm_examples": [
        {
          "api_version": "tungsten.atsgen.com/v1alpha1",
          "kind": "SDN",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "datapathConfig": {
              "useVrouter": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/atsgen/tf-operator-bundle@sha256:4377e3814893d2071e277b284c633d42586631ef8077a1b31b8d81058fce1380",
      "bundle_path_digest": "sha256:4377e3814893d2071e277b284c633d42586631ef8077a1b31b8d81058fce1380",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-11-19T17:17:55.257000+00:00",
      "csv_description": "## About the managed application\nTungsten Fabric is a software-defined network and security fabric built for rapid deployment at scale. It provides a highly scalable virtual networking and security platform that works with a variety of virtual machine and container orchestrators, integrating them with physical networking and compute infrastructure. It is designed to support multi-tenant networks in the largest environments while supporting multiple orchestrators simultaneously.\n\nTungsten Fabric enables usage of the same controller and forwarding components for every deployment, providing a consistent interface for managing connectivity in all the environments it supports, and is able to provide seamless connectivity between workloads managed by different orchestrators, whether virtual machines or containers, and to destinations in external networks.\n## About this Operator\nTungsten Fabric Operators is intended to simplify the lifecycle management of Tungsten Fabric SDN\n",
      "csv_display_name": "Atsgen Tungsten Fabric Operator",
      "csv_metadata_description": "Atsgen Tungsten Fabric Operator for lifecycle management of Tungsten Fabric SDN",
      "csv_name": "tf-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:57:23.597000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tf-operator",
      "provided_apis": [
        {
          "group": "tungsten.atsgen.com",
          "kind": "SDN",
          "plural": "sdns",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "image": "registry.connect.redhat.com/atsgen/tf-operator@sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "name": "tf-operator-9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633-annotation"
        },
        {
          "digest": "sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "image": "registry.connect.redhat.com/atsgen/tf-operator@sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "name": "tf-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5fb6a8e44ed9fa568812368c",
      "alm_examples": [
        {
          "api_version": "tungsten.atsgen.com/v1alpha1",
          "kind": "SDN",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "datapathConfig": {
              "useVrouter": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/atsgen/tf-operator-bundle@sha256:4377e3814893d2071e277b284c633d42586631ef8077a1b31b8d81058fce1380",
      "bundle_path_digest": "sha256:4377e3814893d2071e277b284c633d42586631ef8077a1b31b8d81058fce1380",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-11-19T17:18:28.362000+00:00",
      "csv_description": "## About the managed application\nTungsten Fabric is a software-defined network and security fabric built for rapid deployment at scale. It provides a highly scalable virtual networking and security platform that works with a variety of virtual machine and container orchestrators, integrating them with physical networking and compute infrastructure. It is designed to support multi-tenant networks in the largest environments while supporting multiple orchestrators simultaneously.\n\nTungsten Fabric enables usage of the same controller and forwarding components for every deployment, providing a consistent interface for managing connectivity in all the environments it supports, and is able to provide seamless connectivity between workloads managed by different orchestrators, whether virtual machines or containers, and to destinations in external networks.\n## About this Operator\nTungsten Fabric Operators is intended to simplify the lifecycle management of Tungsten Fabric SDN\n",
      "csv_display_name": "Atsgen Tungsten Fabric Operator",
      "csv_metadata_description": "Atsgen Tungsten Fabric Operator for lifecycle management of Tungsten Fabric SDN",
      "csv_name": "tf-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:49:30.934000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tf-operator",
      "provided_apis": [
        {
          "group": "tungsten.atsgen.com",
          "kind": "SDN",
          "plural": "sdns",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "image": "registry.connect.redhat.com/atsgen/tf-operator@sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "name": "tf-operator-9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633-annotation"
        },
        {
          "digest": "sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "image": "registry.connect.redhat.com/atsgen/tf-operator@sha256:9cac80ee42af0658fe220c94719768b41d70c8f978060056c21bccc26199a633",
          "name": "tf-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "5fc681af2e003c4d64d29e5e",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:ea73bbd83541c454567acf9dbfc348fb7d72d97eaeeb584f2a452cf379621189",
      "bundle_path_digest": "sha256:ea73bbd83541c454567acf9dbfc348fb7d72d97eaeeb584f2a452cf379621189",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-01T17:47:27.804000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.5.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.5.0\n\n### Supported Platforms\n\n* OpenShift v4.4, v4.5, v4.6\n\n### Supported Operating Systems\n\n* RHEL 7.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:40:18.380000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "plural": "hspcs",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2054d5c5dd8b81185dc2cf189be633096507cef887504931be342944e1232c3e",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:2054d5c5dd8b81185dc2cf189be633096507cef887504931be342944e1232c3e",
          "name": "hspc-operator-2054d5c5dd8b81185dc2cf189be633096507cef887504931be342944e1232c3e-annotation"
        },
        {
          "digest": "sha256:2054d5c5dd8b81185dc2cf189be633096507cef887504931be342944e1232c3e",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:2054d5c5dd8b81185dc2cf189be633096507cef887504931be342944e1232c3e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "5fc8f3f89c7e6b3a6899c91d",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.5.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:64b7bbd99fa305eee77225a1d19c351817eff13bd018a95caf13c06749ff0491",
      "bundle_path_digest": "sha256:64b7bbd99fa305eee77225a1d19c351817eff13bd018a95caf13c06749ff0491",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-03T14:19:36.278000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T01:38:03.923000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70",
          "name": "seldon-core-operator-371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70-annotation"
        },
        {
          "digest": "sha256:371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70",
          "name": "manager"
        },
        {
          "digest": "sha256:5005003f0c88bdf192f79613a90396dbc59b55d7b78c459a0e08535f6129039a",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:5005003f0c88bdf192f79613a90396dbc59b55d7b78c459a0e08535f6129039a",
          "name": "executor"
        },
        {
          "digest": "sha256:00b4bfaee81bb8cf3e23ebd65730ebca383e68541a72ac7b2daf1f8953f0aa7b",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:00b4bfaee81bb8cf3e23ebd65730ebca383e68541a72ac7b2daf1f8953f0aa7b",
          "name": "engine"
        },
        {
          "digest": "sha256:2ae9edbacb42d78728cfd6048d1ecabda7621652422a3a3a9b6fd15026c7b97e",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:2ae9edbacb42d78728cfd6048d1ecabda7621652422a3a3a9b6fd15026c7b97e",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:9081f0aa35d4dff393c38a86db2b34d1058c0bbef819c1094ae288f856818eb1",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:9081f0aa35d4dff393c38a86db2b34d1058c0bbef819c1094ae288f856818eb1",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:2bd58fa4399c4b0c9b3f78cc1f620552aac7b3f37ad92f691e649a17be8d3947",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:2bd58fa4399c4b0c9b3f78cc1f620552aac7b3f37ad92f691e649a17be8d3947",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:4f114581fa108f8ae77a99eaa368fca09257548cd314d69a34f8dd56592158ce",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:4f114581fa108f8ae77a99eaa368fca09257548cd314d69a34f8dd56592158ce",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:dd64bf3f825ce31594c66c3c6e315629711393777f27f795626c0862d8caf058",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:dd64bf3f825ce31594c66c3c6e315629711393777f27f795626c0862d8caf058",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:d4471a2ebaf2227c2a12aba41ab5d3a319c28533b3221a7e8e23c5d5ff99b5be",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:d4471a2ebaf2227c2a12aba41ab5d3a319c28533b3221a7e8e23c5d5ff99b5be",
          "name": "explainer"
        },
        {
          "digest": "sha256:d6c3f2aca49b5cbb7860264ccd87979122c014be6dd1fce9db3b1a4b312f1960",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:d6c3f2aca49b5cbb7860264ccd87979122c014be6dd1fce9db3b1a4b312f1960",
          "name": "mock_classifier"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "5fc93a901aee7c1e72238dfd",
      "alm_examples": [
        {
          "api_version": "machinelearning.seldon.io/v1",
          "kind": "SeldonDeployment",
          "metadata": {
            "labels": {
              "app": "seldon",
              "app.kubernetes.io/instance": "seldon1",
              "app.kubernetes.io/name": "seldon",
              "app.kubernetes.io/version": "v0.5"
            },
            "name": "seldon-model"
          },
          "spec": {
            "name": "test-deployment",
            "predictors": [
              {
                "componentSpecs": [
                  {
                    "spec": {
                      "containers": [
                        {
                          "image": "seldonio/mock_classifier:1.5.0",
                          "name": "classifier"
                        }
                      ]
                    }
                  }
                ],
                "graph": {
                  "children": [],
                  "name": "classifier",
                  "type": "MODEL"
                },
                "name": "example",
                "replicas": 1
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:64b7bbd99fa305eee77225a1d19c351817eff13bd018a95caf13c06749ff0491",
      "bundle_path_digest": "sha256:64b7bbd99fa305eee77225a1d19c351817eff13bd018a95caf13c06749ff0491",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2020-12-03T19:20:48.336000+00:00",
      "csv_description": "The Seldon operator enables for native operation of production machine learning workloads, including monitoring and operations of language-agnostic models with the benefits of real-time metrics and log analysis.\n   \n## Overview\nSeldon Core is an open source platform for deploying machine learning models on a Kubernetes cluster.\n\n* Deploy machine learning models in the cloud or on-premise.\n* Get metrics and ensure proper governance and compliance for your running machine learning models.\n* Create powerful inference graphs made up of multiple components.\n* Provide a consistent serving layer for models built using heterogeneous ML toolkits.\n\nYou can get started by following the guides in our documentation at https://docs.seldon.io/projects/seldon-core/en/latest/workflow/README.html\n",
      "csv_display_name": "Seldon Operator",
      "csv_metadata_description": "The Seldon operator for management, monitoring and operations of machine learning systems through the Seldon Engine. Once installed, the Seldon Operator provides multiple functions which facilitate the productisation, monitoring and maintenance of machine learning systems at scale.",
      "csv_name": "seldon-operator.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-03T04:21:34.447000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70",
          "name": "seldon-core-operator-371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70-annotation"
        },
        {
          "digest": "sha256:371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-operator@sha256:371cbca7869a8cd44a03a6c65d302cf4987e86311b73bebfd36dfcf95cd02e70",
          "name": "manager"
        },
        {
          "digest": "sha256:5005003f0c88bdf192f79613a90396dbc59b55d7b78c459a0e08535f6129039a",
          "image": "registry.connect.redhat.com/seldonio/seldon-core-executor@sha256:5005003f0c88bdf192f79613a90396dbc59b55d7b78c459a0e08535f6129039a",
          "name": "executor"
        },
        {
          "digest": "sha256:00b4bfaee81bb8cf3e23ebd65730ebca383e68541a72ac7b2daf1f8953f0aa7b",
          "image": "registry.connect.redhat.com/seldonio/seldon-engine@sha256:00b4bfaee81bb8cf3e23ebd65730ebca383e68541a72ac7b2daf1f8953f0aa7b",
          "name": "engine"
        },
        {
          "digest": "sha256:2ae9edbacb42d78728cfd6048d1ecabda7621652422a3a3a9b6fd15026c7b97e",
          "image": "registry.connect.redhat.com/seldonio/storage-initializer@sha256:2ae9edbacb42d78728cfd6048d1ecabda7621652422a3a3a9b6fd15026c7b97e",
          "name": "storage_initializer"
        },
        {
          "digest": "sha256:9081f0aa35d4dff393c38a86db2b34d1058c0bbef819c1094ae288f856818eb1",
          "image": "registry.connect.redhat.com/seldonio/sklearnserver@sha256:9081f0aa35d4dff393c38a86db2b34d1058c0bbef819c1094ae288f856818eb1",
          "name": "sklearnserver"
        },
        {
          "digest": "sha256:2bd58fa4399c4b0c9b3f78cc1f620552aac7b3f37ad92f691e649a17be8d3947",
          "image": "registry.connect.redhat.com/seldonio/xgboostserver@sha256:2bd58fa4399c4b0c9b3f78cc1f620552aac7b3f37ad92f691e649a17be8d3947",
          "name": "xgboostserver"
        },
        {
          "digest": "sha256:4f114581fa108f8ae77a99eaa368fca09257548cd314d69a34f8dd56592158ce",
          "image": "registry.connect.redhat.com/seldonio/mlflowserver@sha256:4f114581fa108f8ae77a99eaa368fca09257548cd314d69a34f8dd56592158ce",
          "name": "mlflowserver"
        },
        {
          "digest": "sha256:dd64bf3f825ce31594c66c3c6e315629711393777f27f795626c0862d8caf058",
          "image": "registry.connect.redhat.com/seldonio/tfproxy@sha256:dd64bf3f825ce31594c66c3c6e315629711393777f27f795626c0862d8caf058",
          "name": "tfproxy"
        },
        {
          "digest": "sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "image": "registry.connect.redhat.com/seldonio/tensorflow-serving@sha256:1dc53edc5c8d1b151782f8386c0770d0358c6397eaf42ec55ebd18f331c5ef9e",
          "name": "tensorflow"
        },
        {
          "digest": "sha256:d4471a2ebaf2227c2a12aba41ab5d3a319c28533b3221a7e8e23c5d5ff99b5be",
          "image": "registry.connect.redhat.com/seldonio/alibiexplainer@sha256:d4471a2ebaf2227c2a12aba41ab5d3a319c28533b3221a7e8e23c5d5ff99b5be",
          "name": "explainer"
        },
        {
          "digest": "sha256:d6c3f2aca49b5cbb7860264ccd87979122c014be6dd1fce9db3b1a4b312f1960",
          "image": "registry.connect.redhat.com/seldonio/mock-classifier@sha256:d6c3f2aca49b5cbb7860264ccd87979122c014be6dd1fce9db3b1a4b312f1960",
          "name": "mock_classifier"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.5.0",
      "version_original": "1.5.0"
    }
  ],
  "page": 1,
  "page_size": 100,
  "total": 4532
}

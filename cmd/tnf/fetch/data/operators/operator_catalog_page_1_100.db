{
  "data": [
    {
      "_id": "6163dc8e04fd1c67039dbd6d",
      "alm_examples": [
        {
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-isilon:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "dellemc/csipowermax-reverseproxy:v1.4.0",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "dellemc/csi-unity:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "dellemc/sdc:3.6",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:5beda9cc9f2eb457e127b281b8c45280baa13d02720ac6886bb3655e21641d28",
      "bundle_path_digest": "sha256:5beda9cc9f2eb457e127b281b8c45280baa13d02720ac6886bb3655e21641d28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-10-11T06:41:18.674000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:06:27.783000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "image": "dellemc/dell-csi-operator@sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "name": "dell-csi-operator-b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05-annotation"
        },
        {
          "digest": "sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "image": "dellemc/dell-csi-operator@sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "image": "docker.io/busybox@sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "name": "config-copy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "6163dcfb5ac6c125049020df",
      "alm_examples": [
        {
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-isilon:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "dellemc/csipowermax-reverseproxy:v1.4.0",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "dellemc/csi-unity:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "dellemc/sdc:3.6",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:5beda9cc9f2eb457e127b281b8c45280baa13d02720ac6886bb3655e21641d28",
      "bundle_path_digest": "sha256:5beda9cc9f2eb457e127b281b8c45280baa13d02720ac6886bb3655e21641d28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-10-11T06:43:07.304000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:34.786000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "image": "dellemc/dell-csi-operator@sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "name": "dell-csi-operator-b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05-annotation"
        },
        {
          "digest": "sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "image": "dellemc/dell-csi-operator@sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "image": "docker.io/busybox@sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "name": "config-copy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "6169d0fd9ae8a002db3fa451",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "bundle_path_digest": "sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-15T19:05:33.783000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:11:35.323000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "plural": "xcrypts",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "6169d1fa006137aac6d7eac5",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "bundle_path_digest": "sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-15T19:09:46.660000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:16:20.105000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "6169d4c13a0de52f2c36285c",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "bundle_path_digest": "sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-15T19:21:37.088000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:02:53.033000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "plural": "xcrypts",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "6169d7779ae8a002db3fa457",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "bundle_path_digest": "sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-15T19:33:11.633000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:02:32.811000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "61a51db027e166330707d94e",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:6036066bfb0ce4b8983f58b085ccf6c724d2d8c8dc141ddd24baa66d88f9557e",
      "bundle_path_digest": "sha256:6036066bfb0ce4b8983f58b085ccf6c724d2d8c8dc141ddd24baa66d88f9557e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-29T18:36:32.538000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.0.0000\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v8.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:00.765000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "name": "manager"
        },
        {
          "digest": "sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "name": "pre-manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.0",
      "version_original": "8.0.0"
    },
    {
      "_id": "61a51df6bfd4a5234d5960b6",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:6036066bfb0ce4b8983f58b085ccf6c724d2d8c8dc141ddd24baa66d88f9557e",
      "bundle_path_digest": "sha256:6036066bfb0ce4b8983f58b085ccf6c724d2d8c8dc141ddd24baa66d88f9557e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-29T18:37:42.929000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.0.0000\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v8.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:54.660000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "name": "manager"
        },
        {
          "digest": "sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:f45746ae4fc2fe57f0c0d1d50fc184a5aa06ca6bc2970b25e10b70fe373c566a",
          "name": "pre-manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.0",
      "version_original": "8.0.0"
    },
    {
      "_id": "61a57b153e9240fca360f54d",
      "alm_examples": [
        {
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:28703523a1c160570fc23fb1236d2a02108b97e4423d42b0d3cde98c94d351cb",
      "bundle_path_digest": "sha256:28703523a1c160570fc23fb1236d2a02108b97e4423d42b0d3cde98c94d351cb",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:15:01.229000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:26:26.452000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "plural": "anzos",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "name": "anzo-operator-563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0-annotation"
        },
        {
          "digest": "sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:563e964f5771b9bfd860ea993b6e0936a54504908f5b2d1dff6f99ade74bb7a0",
          "name": "manager"
        },
        {
          "digest": "sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "name": "anzo"
        },
        {
          "digest": "sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8",
          "name": "anzo-d1c2d54ca205d669c5ea1bb6aae105afe2385cc5695cecd78423ffa1d98929f8-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "61a57b1ebfd4a5234d5960cd",
      "alm_examples": [
        {
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "bundle_path_digest": "sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:15:10.124000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:26:29.661000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "anzograph-operator-a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732-annotation"
        },
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "manager"
        },
        {
          "digest": "sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph-frontend-c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3-annotation"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph-db-8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61a57b26c17162a20c1c687f",
      "alm_examples": [
        {
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "bundle_path_digest": "sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:15:18.637000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:26:32.848000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "plural": "anzounstructureds",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "unstructured-operator-a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04-annotation"
        },
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "manager"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo-microservices-leader-0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286-annotation"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo-unstructured-worker-4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "61a57c523e9240fca360f556",
      "alm_examples": [
        {
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:20:18.247000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:28:56.647000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "61a57c79c17162a20c1c688a",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:aa898cb65de29ecae7075b30fd3b79ff5f2bedf6f6224fd104ad930be7e82dcd",
      "bundle_path_digest": "sha256:aa898cb65de29ecae7075b30fd3b79ff5f2bedf6f6224fd104ad930be7e82dcd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:20:57.340000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.0.0000\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v7.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:29:11.151000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "name": "manager"
        },
        {
          "digest": "sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "name": "pre-manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "7.9.1",
      "version_original": "7.9.1"
    },
    {
      "_id": "61a57c9b27e166330707d965",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/iomesh/iomesh@sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "bundle_path_digest": "sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:21:31.836000+00:00",
      "csv_description": "IOMesh (https://www.iomesh.com/) is a cloud-native storage product specifically designed and developed for Kubernetes. It takes ZBS as its core, a \u201cproduction-ready\u201d distributed storage system developed independently by SmartX, to provide production-level high performance and reliable persistent storage for business-critical applications such as MySQL, Cassandra, MongoDB, etc., contributing to the containerized transformation of stateful applications.      \n## Pre-Requisites\n* According to https://docs.iomesh.com/deploy/prerequisites, make sure that your openshift cluster meets the \"Installation Requirements\" and set up the worker nodes correctly according to the \"Setup Worker Node\" chapter.\n* Run IOMesh Operator pre-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install the dependencies of IOMesh Operator and specific IOMesh settings for the openshift cluster:\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-pre-install-openshift.sh | sh -\n```\n## Install IOMesh Operator and IOMesh Cluster\n* Click install button on the current web page to install IOMesh Operator\n* On the **Installed Operators** -> **IOMesh Operator** -> **Create instance** -> **YAML view**, fill in an IOMesh Custom Resources according https://iomesh.run/iomesh.yaml, change the `spec.*.dataCIDR` to your own data network CIDR:\n## Post Install\n* Run IOMesh Operator post-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install IOMesh CSI Driver\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-post-install-openshift.sh | sh -\n```\n## Getting Started\n* Try to quickstart setup and use IOMesh: https://docs.iomesh.com/deploy/setup-iomesh\n",
      "csv_display_name": "IOMesh Operator",
      "csv_metadata_description": "",
      "csv_name": "iomesh-operator.0.10.1-rc4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:49:54.985000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "iomesh-operator",
      "provided_apis": [
        {
          "group": "iomesh.com",
          "kind": "IOMeshCluster",
          "plural": "iomeshclusters",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator-52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3-annotation"
        },
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.10.1-rc4",
      "version_original": "0.10.1-rc4"
    },
    {
      "_id": "61a57cea3e9240fca360f55c",
      "alm_examples": [
        {
          "kind": "LinstorController",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerImage": "",
            "dbConnectionURL": "etcd://linstor-etcd:2379",
            "drbdRepoCred": "",
            "priorityClassName": ""
          }
        },
        {
          "kind": "LinstorCSIDriver",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerEndpoint": "http://linstor:3370",
            "controllerReplicas": 1,
            "csiControllerServiceAccountName": "csi-controller",
            "csiNodeServiceAccountName": "csi-node",
            "imagePullSecret": "",
            "linstorPluginImage": ""
          }
        },
        {
          "kind": "LinstorSatelliteSet",
          "metadata": {
            "name": "linstor-satellites"
          },
          "spec": {
            "automaticStorageType": "None",
            "controllerEndpoint": "http://linstor:3370",
            "drbdRepoCred": "",
            "kernelModuleInjectionMode": "ShippedModules",
            "priorityClassName": "",
            "satelliteImage": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/linbit/linstor-operator-bundle@sha256:20c0b821db27ef8f551212d14ba508f88a116f92a9f9a214e79709744b96678b",
      "bundle_path_digest": "sha256:20c0b821db27ef8f551212d14ba508f88a116f92a9f9a214e79709744b96678b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:22:50.595000+00:00",
      "csv_description": "LINSTOR is a configuration management system for storage on Linux systems.\nIt manages LVM logical volumes and/or ZFS ZVOLs on a cluster of nodes.\nIt leverages DRBD for replication between different nodes and to provide block\nstorage devices to users and applications. It manages snapshots, encryption and\ncaching of HDD backed data in SSDs via bcache.\n\nLINBIT provides a certified LINSTOR operator to ease deployment of LINSTOR\non Openshift by installing DRBD, managing Satellite and Controller pods,\nand integrating with Openshift to provision persistent storage for your workloads.\n\nFor detailed instructions and more configuration options, see our [user guide].\n\n[user guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#ch-openshift\n\n## Install\n\nUnlike deployment via the helm chart, the certified Openshift\noperator does not deploy the needed etcd cluster. You must deploy this\nyourself ahead of time. We do this via the etcd operator available in the\nOperatorHub.\n\nIMPORTANT: It is advised that the etcd deployment uses persistent\nstorage of some type. Either use an existing storage provisioner with\na default `StorageClass` or simply use `hostPath` volumes.\n\n### Installing the operator\n\nHit \"Install\", select the stable update channel and a namespace for the\noperator. Use of a new namespace is recommended.\n\nHit \"Install\" again. At this point you should have just one pod, the\noperator pod, running. Next we needs to configure the remaining provided APIs.\n\n#### A note on operator namespaces\nThe LINSTOR operator can only watch for events and manage\ncustom resources that are within the same namespace it is deployed\nwithin (OwnNamsespace). This means the LINSTOR Controller, LINSTOR\nSatellites, and LINSTOR CSI Driver pods all need to be deployed in the\nsame namsepace as the LINSTOR Operator pod.\n\n### Deploying the LINSTOR Controller\n\nNavigate to the left-hand control pane of the Openshift Web\nConsole. Expand the \"Operators\" section, selecting \"Installed Operators\".\nFind the entry for the \"Linstor Operator\", then select the \"LinstorController\"\nfrom the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorController\". Click the \"Create LinstorController\" button.\n\nHere you will be presented with options to configure the LINSTOR\nController. Either via the web-form view or the YAML View. Regardless\nof which view you select, make sure that the `dbConnectionURL` matches\nthe endpoint provided from your etcd deployment. Otherwise, the\ndefaults are usually fine for most purposes.\n\nLastly hit \"Create\", you should now see a linstor-controller pod\nrunning.\n\n### Deploying the LINSTOR Satellites\n\nNext we need to deploy the Satellites Set. Just as before navigate\nto the left-hand control pane of the Openshift Web Console. Expand the\n\"Operators\" section, but this time select \"Installed Operators\". Find\nthe entry for the \"Linstor Operator\", then select the\n\"LinstorSatelliteSet\" from the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorSatelliteSet\". Click the \"Create LinstorSatelliteSet\" button.\n\nHere you will be presented with the options to configure the LINSTOR\nSatellites. The defaults should be enough to get you started.\nMake sure the `controllerEndpoint` matches what is available in the\nopenshift endpoints. The default is usually correct here.\n\nYou can edit the `storagePools` section to configure LINSTOR storage pools,\nincluding preparing the backing devices. See our [storage guide].\n\n[storage guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-storage\n\nBelow is an example manifest:\n\n```yaml\napiVersion: linstor.linbit.com/v1\nkind: LinstorSatelliteSet\nmetadata:\n  name: linstor-satellites\nspec:\n  satelliteImage: ''\n  automaticStorageType: None\n  storagePools:\n    lvmThinPools:\n    - name: openshift-pool\n      volumeGroup: \"\"\n      thinVolume: openshift\n      devicePaths:\n      - /dev/vdb\n  drbdRepoCred: ''\n  kernelModuleInjectionMode: ShippedModules\n  controllerEndpoint: 'http://linstor:3370'\n  priorityClassName: ''\n```\n\nLastly hit \"Create\", you should now see a linstor-node pod\nrunning on every worker node.\n\n### Deploying the LINSTOR CSI driver\n\nLast bit left is the CSI pods to bridge the layer between the CSI and\nLINSTOR. Just as before navigate to the left-hand control pane of the\nOpenshift Web Console. Expand the \"Operators\" section, but this time\nselect \"Installed Operators\". Find the entry for the \"Linstor Operator\",\nthen select the \"LinstorCSIDriver\" from the \"Provided APIs\" column on the\nright.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorCSIDriver\". Click the \"Create LinstorCSIDriver\" button.\n\nAgain, you will be presented with the options. Make sure that the\n`controllerEndpoint` is correct. Otherwise the defaults are fine for\nmost use cases.\n\nLastly hit \"Create\". You will now see a single \"linstor-csi-controller\" pod,\nas well as a \"linstor-csi-node\" pod on all worker nodes.\n\n## Interacting with LINSTOR in Openshift.\n\nThe Controller pod includes a LINSTOR Client, making it easy to interact directly with LINSTOR.\nFor instance:\n\n```\noc exec deployment/linstor-cs-controller -- linstor storage-pool list\n```\n\nThis should only be necessary for investigating problems and accessing advanced functionality.\nRegular operation such as creating volumes should be achieved via the [Openshift/Kubernetes integration].\n\n[Openshift/Kubernetes integration]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-basic-configuration-and-deployment",
      "csv_display_name": "Linstor Operator",
      "csv_metadata_description": "LINSTOR Kubernetes Operator",
      "csv_name": "linstor-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:29:50.668000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "linstor-operator",
      "provided_apis": [
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorCSIDriver",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorSatelliteSet",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorController",
          "version": "v1"
        }
      ],
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "61a57cf2bfd4a5234d5960d8",
      "alm_examples": [
        {
          "kind": "LinstorController",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerImage": "",
            "dbConnectionURL": "etcd://linstor-etcd:2379",
            "drbdRepoCred": "",
            "priorityClassName": ""
          }
        },
        {
          "kind": "LinstorCSIDriver",
          "metadata": {
            "name": "linstor"
          },
          "spec": {
            "controllerEndpoint": "http://linstor:3370",
            "controllerReplicas": 1,
            "csiControllerServiceAccountName": "csi-controller",
            "csiNodeServiceAccountName": "csi-node",
            "imagePullSecret": "",
            "linstorPluginImage": ""
          }
        },
        {
          "kind": "LinstorSatelliteSet",
          "metadata": {
            "name": "linstor-satellites"
          },
          "spec": {
            "automaticStorageType": "None",
            "controllerEndpoint": "http://linstor:3370",
            "drbdRepoCred": "",
            "kernelModuleInjectionMode": "ShippedModules",
            "priorityClassName": "",
            "satelliteImage": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/linbit/linstor-operator-bundle@sha256:20c0b821db27ef8f551212d14ba508f88a116f92a9f9a214e79709744b96678b",
      "bundle_path_digest": "sha256:20c0b821db27ef8f551212d14ba508f88a116f92a9f9a214e79709744b96678b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:22:58.728000+00:00",
      "csv_description": "LINSTOR is a configuration management system for storage on Linux systems.\nIt manages LVM logical volumes and/or ZFS ZVOLs on a cluster of nodes.\nIt leverages DRBD for replication between different nodes and to provide block\nstorage devices to users and applications. It manages snapshots, encryption and\ncaching of HDD backed data in SSDs via bcache.\n\nLINBIT provides a certified LINSTOR operator to ease deployment of LINSTOR\non Openshift by installing DRBD, managing Satellite and Controller pods,\nand integrating with Openshift to provision persistent storage for your workloads.\n\nFor detailed instructions and more configuration options, see our [user guide].\n\n[user guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#ch-openshift\n\n## Install\n\nUnlike deployment via the helm chart, the certified Openshift\noperator does not deploy the needed etcd cluster. You must deploy this\nyourself ahead of time. We do this via the etcd operator available in the\nOperatorHub.\n\nIMPORTANT: It is advised that the etcd deployment uses persistent\nstorage of some type. Either use an existing storage provisioner with\na default `StorageClass` or simply use `hostPath` volumes.\n\n### Installing the operator\n\nHit \"Install\", select the stable update channel and a namespace for the\noperator. Use of a new namespace is recommended.\n\nHit \"Install\" again. At this point you should have just one pod, the\noperator pod, running. Next we needs to configure the remaining provided APIs.\n\n#### A note on operator namespaces\nThe LINSTOR operator can only watch for events and manage\ncustom resources that are within the same namespace it is deployed\nwithin (OwnNamsespace). This means the LINSTOR Controller, LINSTOR\nSatellites, and LINSTOR CSI Driver pods all need to be deployed in the\nsame namsepace as the LINSTOR Operator pod.\n\n### Deploying the LINSTOR Controller\n\nNavigate to the left-hand control pane of the Openshift Web\nConsole. Expand the \"Operators\" section, selecting \"Installed Operators\".\nFind the entry for the \"Linstor Operator\", then select the \"LinstorController\"\nfrom the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorController\". Click the \"Create LinstorController\" button.\n\nHere you will be presented with options to configure the LINSTOR\nController. Either via the web-form view or the YAML View. Regardless\nof which view you select, make sure that the `dbConnectionURL` matches\nthe endpoint provided from your etcd deployment. Otherwise, the\ndefaults are usually fine for most purposes.\n\nLastly hit \"Create\", you should now see a linstor-controller pod\nrunning.\n\n### Deploying the LINSTOR Satellites\n\nNext we need to deploy the Satellites Set. Just as before navigate\nto the left-hand control pane of the Openshift Web Console. Expand the\n\"Operators\" section, but this time select \"Installed Operators\". Find\nthe entry for the \"Linstor Operator\", then select the\n\"LinstorSatelliteSet\" from the \"Provided APIs\" column on the right.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorSatelliteSet\". Click the \"Create LinstorSatelliteSet\" button.\n\nHere you will be presented with the options to configure the LINSTOR\nSatellites. The defaults should be enough to get you started.\nMake sure the `controllerEndpoint` matches what is available in the\nopenshift endpoints. The default is usually correct here.\n\nYou can edit the `storagePools` section to configure LINSTOR storage pools,\nincluding preparing the backing devices. See our [storage guide].\n\n[storage guide]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-storage\n\nBelow is an example manifest:\n\n```yaml\napiVersion: linstor.linbit.com/v1\nkind: LinstorSatelliteSet\nmetadata:\n  name: linstor-satellites\nspec:\n  satelliteImage: ''\n  automaticStorageType: None\n  storagePools:\n    lvmThinPools:\n    - name: openshift-pool\n      volumeGroup: \"\"\n      thinVolume: openshift\n      devicePaths:\n      - /dev/vdb\n  drbdRepoCred: ''\n  kernelModuleInjectionMode: ShippedModules\n  controllerEndpoint: 'http://linstor:3370'\n  priorityClassName: ''\n```\n\nLastly hit \"Create\", you should now see a linstor-node pod\nrunning on every worker node.\n\n### Deploying the LINSTOR CSI driver\n\nLast bit left is the CSI pods to bridge the layer between the CSI and\nLINSTOR. Just as before navigate to the left-hand control pane of the\nOpenshift Web Console. Expand the \"Operators\" section, but this time\nselect \"Installed Operators\". Find the entry for the \"Linstor Operator\",\nthen select the \"LinstorCSIDriver\" from the \"Provided APIs\" column on the\nright.\n\nFrom here you should see a page that says \"No Operands Found\" and will\nfeature a large button on the right which says \"Create\nLinstorCSIDriver\". Click the \"Create LinstorCSIDriver\" button.\n\nAgain, you will be presented with the options. Make sure that the\n`controllerEndpoint` is correct. Otherwise the defaults are fine for\nmost use cases.\n\nLastly hit \"Create\". You will now see a single \"linstor-csi-controller\" pod,\nas well as a \"linstor-csi-node\" pod on all worker nodes.\n\n## Interacting with LINSTOR in Openshift.\n\nThe Controller pod includes a LINSTOR Client, making it easy to interact directly with LINSTOR.\nFor instance:\n\n```\noc exec deployment/linstor-cs-controller -- linstor storage-pool list\n```\n\nThis should only be necessary for investigating problems and accessing advanced functionality.\nRegular operation such as creating volumes should be achieved via the [Openshift/Kubernetes integration].\n\n[Openshift/Kubernetes integration]: https://www.linbit.com/drbd-user-guide/linstor-guide-1_0-en/#s-kubernetes-basic-configuration-and-deployment",
      "csv_display_name": "Linstor Operator",
      "csv_metadata_description": "LINSTOR Kubernetes Operator",
      "csv_name": "linstor-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:29:56.762000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "linstor-operator",
      "provided_apis": [
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorCSIDriver",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorSatelliteSet",
          "version": "v1"
        },
        {
          "group": "linstor.linbit.com",
          "kind": "LinstorController",
          "version": "v1"
        }
      ],
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "61a57d50c17162a20c1c689c",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:72c1ec043ba8bba57e710d1cabac54374612a18cbce05caca9b14310942faa8d",
      "bundle_path_digest": "sha256:72c1ec043ba8bba57e710d1cabac54374612a18cbce05caca9b14310942faa8d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:24:32.229000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:30:47.708000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "plural": "pmemcsideployments",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "name": "pmem-csi-driver-os-09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a-annotation"
        },
        {
          "digest": "sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "name": "pmem-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61a57d5827e166330707d96a",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:72c1ec043ba8bba57e710d1cabac54374612a18cbce05caca9b14310942faa8d",
      "bundle_path_digest": "sha256:72c1ec043ba8bba57e710d1cabac54374612a18cbce05caca9b14310942faa8d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:24:40.141000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:30:49.732000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "plural": "pmemcsideployments",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "name": "pmem-csi-driver-os-09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a-annotation"
        },
        {
          "digest": "sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:09c98a6588f3d9227f8ae8fc175b533b38590048b79cbdf367eeaa140926010a",
          "name": "pmem-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61a57d8bbfd4a5234d5960e0",
      "alm_examples": [
        {
          "kind": "SANStorageCSI",
          "metadata": {
            "name": "sanstoragecsi"
          },
          "spec": {
            "driverName": "san.csi.nec.com",
            "images": {
              "csiDriver": "",
              "externalAttacher": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
              "externalProvisioner": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
              "livenessProbe": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
              "nodeRegistrar": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0"
            },
            "parameters": {
              "controller": {
                "logLevel": 5
              },
              "node": {
                "livenessProbePort": 9808,
                "logLevel": 5,
                "maxVolumesPerNode": 1024
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/sanstoragecsi-operator-bundle@sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "bundle_path_digest": "sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T01:25:31.457000+00:00",
      "csv_description": "This operator deploys the NEC Storage M Series CSI Driver on OpenShift Container Platform.\n\nNEC Storage M Series CSI Driver provides persistent storage for stateful applications using NEC Storage M Series.\nPlease refer to the documentation of the NEC Storage M Series CSI Driver for detail information about supported NEC Storage Platforms and supported CSI features.\n",
      "csv_display_name": "NEC Storage M Series CSI Operator",
      "csv_metadata_description": "An operator for managing the NEC Storage M Series CSI Driver",
      "csv_name": "sanstoragecsi-operator-bundle.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:31:14.826000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sanstoragecsi-operator-bundle",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "SANStorageCSI",
          "plural": "sanstoragecsis",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "image": "registry.connect.redhat.com/nec/sanstoragecsi-operator@sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "name": "sanstoragecsi-operator-bundle"
        },
        {
          "digest": "sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "name": "ose-csi-node-driver-registrar-dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0-annotation"
        },
        {
          "digest": "sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "name": "ose-csi-livenessprobe-241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe-annotation"
        },
        {
          "digest": "sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "name": "ose-csi-external-provisioner-faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715-annotation"
        },
        {
          "digest": "sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "name": "ose-csi-external-attacher-92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61a57dd4c17162a20c1c68aa",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "bundle_path_digest": "sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-11-30T01:26:44.838000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:32:09.967000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "plural": "xcrypts",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "61a6b905bfd4a5234d5963a9",
      "alm_examples": [
        {
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "v2.5"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:79319e01b6f760d6a494bae31e8dfad3adfddc5d63f4c4d03424618b742b0279",
      "bundle_path_digest": "sha256:79319e01b6f760d6a494bae31e8dfad3adfddc5d63f4c4d03424618b742b0279",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-11-30T23:51:33.094000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:41.073000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "name": "ionir-operator-5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525-annotation"
        },
        {
          "digest": "sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.7",
      "version_original": "1.0.7"
    },
    {
      "_id": "61a6bc42bfd4a5234d5963ab",
      "alm_examples": [
        {
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "ilan-certification-test"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:f54f915f843f9372f447cec692d4076a963668cecacf11f66fd85439b069558e",
      "bundle_path_digest": "sha256:f54f915f843f9372f447cec692d4076a963668cecacf11f66fd85439b069558e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T00:05:22.643000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:49.100000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "name": "ionir-operator-3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1-annotation"
        },
        {
          "digest": "sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.6",
      "version_original": "1.0.6"
    },
    {
      "_id": "61a762cc27e166330707dc78",
      "alm_examples": [
        {
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "v2.5"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:79319e01b6f760d6a494bae31e8dfad3adfddc5d63f4c4d03424618b742b0279",
      "bundle_path_digest": "sha256:79319e01b6f760d6a494bae31e8dfad3adfddc5d63f4c4d03424618b742b0279",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T11:55:56.591000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:01:00.332000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "name": "ionir-operator-5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525-annotation"
        },
        {
          "digest": "sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:5b28c9559e65d15fdeb13c62e893e05e8090de7658c10e06feb18c69fd8a5525",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.7",
      "version_original": "1.0.7"
    },
    {
      "_id": "61a762f53e9240fca360f976",
      "alm_examples": [
        {
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "ilan-certification-test"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:f54f915f843f9372f447cec692d4076a963668cecacf11f66fd85439b069558e",
      "bundle_path_digest": "sha256:f54f915f843f9372f447cec692d4076a963668cecacf11f66fd85439b069558e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-12-01T11:56:37.123000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See details in [Ionir Deployment Requirements - OCP](https://github.com/ionir-cloud/deployments/blob/main/documents/Ionir%20Deployment%20Requirements%20-%20OCP.pdf)\n* Review Ionir [EULA] (https://ionir.com/legal/eula/)\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\nNote: Storage classes with Ionir provisioner should be deleted manually\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:45:38.850000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "name": "ionir-operator-3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1-annotation"
        },
        {
          "digest": "sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:3c6c05ea8feb356bb9f90c652bd05a94edeb33248be09eedf4f9f21e80de6ef1",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.6",
      "version_original": "1.0.6"
    },
    {
      "_id": "61d328c78093b97ef52e1b42",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:69ba6ea88e09e1fdf823bf4b53fa8c9aa38cedf4f1bd332800ee2537ae7839cf",
      "bundle_path_digest": "sha256:69ba6ea88e09e1fdf823bf4b53fa8c9aa38cedf4f1bd332800ee2537ae7839cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:48:07.032000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.1\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:02.723000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "infoscale-operator-dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.1",
      "version_original": "8.0.1"
    },
    {
      "_id": "61d328ca8093b97ef52e1b43",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:f05e531495fcf80fa65b325d0a74e00003bbfb4474f6e597c59fdda986f8153f",
      "bundle_path_digest": "sha256:f05e531495fcf80fa65b325d0a74e00003bbfb4474f6e597c59fdda986f8153f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-03T16:48:10.023000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.1\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:05.667000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "infoscale-operator-dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.2",
      "version_original": "8.0.2"
    },
    {
      "_id": "61d3ffcdc6d6ba37322fdd1d",
      "alm_examples": [
        {
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.8.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.8.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.3.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v2.2.2"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.3.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v3.0.3"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.3.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-addons-replicator",
                "repository": "quay.io/csiaddons/volumereplication-operator",
                "tag": "v0.2.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.4.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:51596e6e185f88dc3c2f3fb1800dc126f8a1247bb02352e5a7534ef771ac3581",
      "bundle_path_digest": "sha256:51596e6e185f88dc3c2f3fb1800dc126f8a1247bb02352e5a7534ef771ac3581",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T08:05:33.038000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\n\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n\nFor compatibility, prerequisites, release notes, and other user information, see [IBM block storage CSI driver documentation](https://www.ibm.com/docs/en/stg-block-csi-driver).\n",
      "csv_display_name": "IBM block storage CSI driver operator",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:52:07.865000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5",
          "name": "ibm-block-csi-operator"
        },
        {
          "digest": "sha256:df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5",
          "name": "ibm-block-csi-operator-df209e133fb5f25aa6d28afe12537a8e963a1ab9fbb2452d4314913ca9a5dde5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "61d3ffe18093b97ef52e1e2e",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:69ba6ea88e09e1fdf823bf4b53fa8c9aa38cedf4f1bd332800ee2537ae7839cf",
      "bundle_path_digest": "sha256:69ba6ea88e09e1fdf823bf4b53fa8c9aa38cedf4f1bd332800ee2537ae7839cf",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T08:05:53.284000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.1\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:35.015000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "infoscale-operator-dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.1",
      "version_original": "8.0.1"
    },
    {
      "_id": "61d423bed467cd4ec03ef7fb",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:f05e531495fcf80fa65b325d0a74e00003bbfb4474f6e597c59fdda986f8153f",
      "bundle_path_digest": "sha256:f05e531495fcf80fa65b325d0a74e00003bbfb4474f6e597c59fdda986f8153f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T10:38:54.324000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.1\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:07.459000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132",
          "name": "infoscale-operator-dbb7d15302dafe9bbde82bfe3fd9f3fa3cc014e18143ef22f5dd568b0c1ae132-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.2",
      "version_original": "8.0.2"
    },
    {
      "_id": "61d4315c8093b97ef52e1fdc",
      "alm_examples": [
        {
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T11:37:00.953000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:57:36.204000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d438798093b97ef52e1fde",
      "alm_examples": [
        {
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T12:07:21.751000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:50:47.497000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "plural": "hpeezmeralcsidrivers",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "plural": "hpeezmeralnfscsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d438bed467cd4ec03ef974",
      "alm_examples": [
        {
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T12:08:30.684000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:32.806000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "plural": "hpeezmeralcsidrivers",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "plural": "hpeezmeralnfscsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d44277d467cd4ec03ef975",
      "alm_examples": [
        {
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T12:49:59.481000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:12:14.639000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "plural": "hpeezmeralcsidrivers",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "plural": "hpeezmeralnfscsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61d44a82d467cd4ec03ef98a",
      "alm_examples": [
        {
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "bundle_path_digest": "sha256:78c606d805d196915a282b66ac05258c6205515498887f3d02c3e1b67e459bae",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-04T13:24:18.531000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:07:03.254000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "plural": "hpeezmeralcsidrivers",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "plural": "hpeezmeralnfscsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.8",
      "version_original": "1.0.8"
    },
    {
      "_id": "61dd4efa9ea53314a92f9042",
      "alm_examples": [
        {
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.4-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "bundle_path_digest": "sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-11T09:33:46.017000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:55:33.382000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "name": "hxcsi-helm-bundle-3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee-annotation"
        },
        {
          "digest": "sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.4",
      "version_original": "1.2.4"
    },
    {
      "_id": "61dda4a712abd998d20743d4",
      "alm_examples": [
        {
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.4-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "bundle_path_digest": "sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-11T15:39:19.938000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:13:27.422000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "name": "hxcsi-helm-bundle-3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee-annotation"
        },
        {
          "digest": "sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.4",
      "version_original": "1.2.4"
    },
    {
      "_id": "61dda6c012abd998d20743d5",
      "alm_examples": [
        {
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.1-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.4-latest",
              "provisioner": "hxcsi-csi-provisioner:2.2.1-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.2.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.2.0-cisco1",
              "tag": ""
            },
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "bundle_path_digest": "sha256:3906d0837e6745f0024a8819f1cc6d93da7d1289ed9db9ccd47552918c11e9f4",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-11T15:48:16.163000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20, 1.21 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach\n- Block access support\n- CHAP support for iSCSI sessions\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:27:07.442000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        },
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee",
          "name": "hxcsi-helm-bundle-3539d2e9746e6c007b32ba49de8dcb5e04546779cd43ddb3b2412beb44dacfee-annotation"
        },
        {
          "digest": "sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f000432f07cd187469f0310e3ed9dcf9a5db2be14b8bab9c5293dd1ee8518176",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:76551da5c57ea629f1b6cf8b05b90bfa6dbc6b4e1cd886b9374fa6adb52f877d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.4",
      "version_original": "1.2.4"
    },
    {
      "_id": "61e84cf5cd79f05770030cc3",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T17:40:05.327000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:31:21.177000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e84e963c729b08979b7854",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T17:47:02.972000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:03.837000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e84f27a864921968a3da20",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T17:49:27.726000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:01:26.565000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e84fd1cd79f05770030cc4",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T17:52:17.417000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:48:17.266000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e85277cd79f05770030cc7",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-19T18:03:35.389000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:18:44.841000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "61e99560ed74b2ffb22ac2d9",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:01:20.608000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:31:23.466000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61e9965d81c433814d21708c",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:05:33.635000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:01:28.514000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61e996a4384a3eb3319925af",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:06:44.729000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:28.873000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61e99a8981c433814d2171f6",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:23:21.718000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:39.693000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61e99ac1384a3eb331992706",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-20T17:24:17.865000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:06:49.336000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "plural": "sysdigagents",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "61ea38ea81c433814d217b0a",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.20"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:0bc4ca37d6eccf674b67271f5006c57133073606a4e09445e65f590c1f635636",
      "bundle_path_digest": "sha256:0bc4ca37d6eccf674b67271f5006c57133073606a4e09445e65f590c1f635636",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T04:39:06.052000+00:00",
      "csv_description": "# InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.20\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:07.607000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "manager"
        },
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "infoscale-operator-fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.20",
      "version_original": "8.0.20"
    },
    {
      "_id": "61ea39bc384a3eb331992fda",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.20"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:0bc4ca37d6eccf674b67271f5006c57133073606a4e09445e65f590c1f635636",
      "bundle_path_digest": "sha256:0bc4ca37d6eccf674b67271f5006c57133073606a4e09445e65f590c1f635636",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T04:42:36.799000+00:00",
      "csv_description": "# InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.20\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-operator.v8.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:17:21.338000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "manager"
        },
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d",
          "name": "infoscale-operator-fe0e2a93ca7b9f92fa1eb77543b207576d3bef7581999963f1531158458f361d-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.0.20",
      "version_original": "8.0.20"
    },
    {
      "_id": "61ea62f5ed74b2ffb22acd1c",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "bundle_path_digest": "sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T07:38:29.120000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification.\n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.\n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps\nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments\n* Negligible performance impact\n* Transparent to developers and administrators\n* Works with AWS, Google, and Azure\n* Unique encryption key per container volume\n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift\n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift?\nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment.\n### Use cases include:\n* Transitioning from DevOps to DevSecOps\n* Ensuring data protection in OpenShift container environments with negligible performance impact\n* Achieving compliance in regulated industries like healthcare and finance\n\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n## Other Information",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:02:34.684000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "host-manager"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "certificate-authority"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "license-server"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi-driver"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator-1-592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f-annotation"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61ea63e5384a3eb331992fe9",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "bundle_path_digest": "sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T07:42:29.309000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification.\n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.\n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps\nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments\n* Negligible performance impact\n* Transparent to developers and administrators\n* Works with AWS, Google, and Azure\n* Unique encryption key per container volume\n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift\n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift?\nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment.\n### Use cases include:\n* Transitioning from DevOps to DevSecOps\n* Ensuring data protection in OpenShift container environments with negligible performance impact\n* Achieving compliance in regulated industries like healthcare and finance\n\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n## Other Information",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:06.340000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "plural": "xcrypts",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "host-manager"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "certificate-authority"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "license-server"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi-driver"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator-1-592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f-annotation"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61ea643933f211c454076df8",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "bundle_path_digest": "sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T07:43:53.321000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification.\n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.\n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps\nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments\n* Negligible performance impact\n* Transparent to developers and administrators\n* Works with AWS, Google, and Azure\n* Unique encryption key per container volume\n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift\n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift?\nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment.\n### Use cases include:\n* Transitioning from DevOps to DevSecOps\n* Ensuring data protection in OpenShift container environments with negligible performance impact\n* Achieving compliance in regulated industries like healthcare and finance\n\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n## Other Information",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:54:24.354000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "plural": "xcrypts",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "host-manager"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "certificate-authority"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "license-server"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi-driver"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator-1-592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f-annotation"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61ea64e2384a3eb331992fea",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "bundle_path_digest": "sha256:d437cee5092b604054ce4b09341fa0287e7fe75bcb3ea0486e4067ac45459478",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T07:46:42.818000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification.\n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.\n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps\nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments\n* Negligible performance impact\n* Transparent to developers and administrators\n* Works with AWS, Google, and Azure\n* Unique encryption key per container volume\n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift\n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift?\nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment.\n### Use cases include:\n* Transitioning from DevOps to DevSecOps\n* Ensuring data protection in OpenShift container environments with negligible performance impact\n* Achieving compliance in regulated industries like healthcare and finance\n\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n## Other Information",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:20.332000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "host-manager"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "certificate-authority"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "license-server"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi-driver"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "xcrypt-operator-1-592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f-annotation"
        },
        {
          "digest": "sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:592d8522747cebcc101dd6b6a67e352474c85559e04a690f9b2695b9222cdd5f",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:2c69f887b431d6ebc89cb44ac9f2b27bd5625e99fbc63e937c2b0b723999f9e1",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "61eab45381c433814d21a40d",
      "alm_examples": [
        {
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "bundle_path_digest": "sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T13:25:39.486000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:00:06.460000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator-067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58-annotation"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "manager"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo-53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61eab475384a3eb331995996",
      "alm_examples": [
        {
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "bundle_path_digest": "sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T13:26:13.529000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:23.376000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator-067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58-annotation"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "manager"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo-53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61eab573384a3eb3319959f8",
      "alm_examples": [
        {
          "kind": "Anzo",
          "metadata": {
            "name": "agent01"
          },
          "spec": {
            "nodeConfig": {
              "spec": {
                "replicas": 1,
                "selector": {
                  "matchLabels": {
                    "app": "anzo"
                  }
                },
                "serviceName": "anzo-agent01",
                "template": {
                  "metadata": {
                    "labels": {
                      "app": "anzo"
                    }
                  },
                  "spec": {
                    "containers": [
                      {
                        "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
                        "name": "anzo",
                        "resources": {
                          "limits": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          },
                          "requests": {
                            "cpu": "4000m",
                            "memory": "12Gi"
                          }
                        }
                      }
                    ],
                    "serviceAccountName": "anzo-operator"
                  }
                }
              }
            },
            "role": "AnzoAgent"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-operator-bundle@sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "bundle_path_digest": "sha256:bb64ea12a7c351a015dbb2486d2d9c6c7e9b2b64b8c5a3c235e2af36bccf6f63",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-21T13:30:27.220000+00:00",
      "csv_description": "The Anzo Operator provides the way to install and configure an anzo agent setup on Red Hat K8S environment.\nCurrently, this is supported only through when deployed as an Anzo Agent as part of an Anzo Unstructured deployment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Operator",
      "csv_metadata_description": "kubernetes operator for Anzo",
      "csv_name": "anzo-operator",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:33.341000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "anzo-operator",
      "provided_apis": [
        {
          "group": "anzo.cambridgesemantics.com",
          "kind": "Anzo",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "anzo-operator-067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58-annotation"
        },
        {
          "digest": "sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-operator@sha256:067ee3e5f5dec2b23f593214f5fb65f809588a0e5ff5b55431ead0276092ad58",
          "name": "manager"
        },
        {
          "digest": "sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo@sha256:53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a",
          "name": "anzo-53fc4327aea46524697f4df9cfc58ae6282dfdaea406a418b8e612e553f80e6a-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "61f19154f7e6620075bb4c92",
      "alm_examples": [
        {
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "bundle_path_digest": "sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-26T18:22:12.418000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:13.577000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "csi-driver-operator-1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a-annotation"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "61f1939ff7e6620075bb4c94",
      "alm_examples": [
        {
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "bundle_path_digest": "sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-26T18:31:59.730000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:51:06.920000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "csi-driver-operator-1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a-annotation"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "61f196fbc7fa5a460cf512e4",
      "alm_examples": [
        {
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "bundle_path_digest": "sha256:24d41aebe29568ac868059d453cde61e31864617870231f7b654029d841b4697",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-01-26T18:46:19.415000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:34.166000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "csi-driver-operator-1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a-annotation"
        },
        {
          "digest": "sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "image": "quay.io/hpestorage/csi-driver-operator@sha256:1e37726a1cb75df400746d4a747341150061fe78c63b797f77dde36ea0aed93a",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "62015cfbebdcecb025356252",
      "alm_examples": [
        {
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "bundle_path_digest": "sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T17:55:07.822000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.103",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:14.220000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "plural": "anzographs",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator-9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72-annotation"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "manager"
        },
        {
          "digest": "sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend-71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5-annotation"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db-77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.103",
      "version_original": "2.0.103"
    },
    {
      "_id": "6201637f662a49da7c60b742",
      "alm_examples": [
        {
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "bundle_path_digest": "sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T18:22:55.224000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.103",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:08:31.241000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "plural": "anzographs",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator-9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72-annotation"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "manager"
        },
        {
          "digest": "sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend-71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5-annotation"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db-77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.103",
      "version_original": "2.0.103"
    },
    {
      "_id": "620163b46f7520a59798cd4d",
      "alm_examples": [
        {
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "bundle_path_digest": "sha256:7b93cd550bbcb4c2b4d1c72ad60e132b8948f34feee38d18d20a89b579da4c1d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-07T18:23:48.541000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.103",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:22:04.981000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "plural": "anzographs",
          "version": "v2"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "anzograph-operator-9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72-annotation"
        },
        {
          "digest": "sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:9776b24bbb6146e367234c4963b5dfabfba9bcda8d7eb7e6cb42f9adbe2fbd72",
          "name": "manager"
        },
        {
          "digest": "sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:4e9acbbb33fd4761894b1c0583824a119f2ec8b07c5942bdc42d61e02607c743",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5",
          "name": "anzograph-frontend-71dcb8dbda542cc9a932ca4bad87725134a31c908fc4c2f6bfdb6215c3a8b4f5-annotation"
        },
        {
          "digest": "sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e",
          "name": "anzograph-db-77d7abe14d2cdefb5d5dac24b5a2236c6eb09bf78773eac1f5452ba7b2bbbf8e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.103",
      "version_original": "2.0.103"
    },
    {
      "_id": "620257106f7520a59798cdb8",
      "alm_examples": [
        {
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "bundle_path_digest": "sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-08T11:42:08.570000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:15:18.687000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator-adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd-annotation"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "manager"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader-c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd-annotation"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker-b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "620257eb662a49da7c60b7c4",
      "alm_examples": [
        {
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "bundle_path_digest": "sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-08T11:45:47.932000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:12:34.616000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator-adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd-annotation"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "manager"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader-c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd-annotation"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker-b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "62025a75662a49da7c60b7cb",
      "alm_examples": [
        {
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "bundle_path_digest": "sha256:0bd00c5177b5ebd4f857bc16ba666f8cc28984fe58b67855a1a0199ed8f98aca",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-08T11:56:37.475000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.1/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:10:25.670000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "unstructured-operator-adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd-annotation"
        },
        {
          "digest": "sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:adbd86d40e49ab5e70240f6a2c68bd7a9fc3ef465f13f0d338f0dc8c9b2cb8bd",
          "name": "manager"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd",
          "name": "anzo-microservices-leader-c77e738270c498f0e215022dee5de89ee89dd9dd347f387c100fd51a14e13bdd-annotation"
        },
        {
          "digest": "sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783",
          "name": "anzo-unstructured-worker-b2cc6bb877c77c3db795ea35266cd6faedb52b132681138b65038286f4837783-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "621c6e6b207e0eb391807ca4",
      "alm_examples": [
        {
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "bundle_path_digest": "sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T06:40:43.604000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:09:32.893000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "csi-driver-operator-437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104-annotation"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.3",
      "version_original": "2.1.3"
    },
    {
      "_id": "621c6f275c4460caf3123f0a",
      "alm_examples": [
        {
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "bundle_path_digest": "sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T06:43:51.121000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:06.603000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "csi-driver-operator-437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104-annotation"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.3",
      "version_original": "2.1.3"
    },
    {
      "_id": "621c6fec83933ad10b40b47f",
      "alm_examples": [
        {
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "bundle_path_digest": "sha256:41964cfe3e810688188aee733dfba7367adac8fe7cda8a90ba4fc1b6aaf2121d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T06:47:08.890000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.1.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:30.011000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "plural": "hpecsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator-image"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "csi-driver-operator-437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104-annotation"
        },
        {
          "digest": "sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:437fd93f6120cdd60b3d143bd6c6ae2eea7d694920d5ff784513563d739f0104",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.3",
      "version_original": "2.1.3"
    },
    {
      "_id": "621d2ecd9206cd6accd155ef",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:21:33.219000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:29:40.030000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d2ece5c46c6464085f8b2",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:21:34.090000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:58:32.683000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d32869206cd6accd155f0",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:37:26.854000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:08.369000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d33511a79457bc0d50d98",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:40:49.565000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:50:20.288000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621d370d5c46c6464085f8b5",
      "alm_examples": [
        {
          "kind": "License",
          "metadata": {
            "name": "tvk-license-one",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target",
            "namespace": "openshift-marketplace"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        },
        {
          "kind": "BackupPlan",
          "metadata": {
            "name": "tvk-backupplan"
          },
          "spec": {
            "backupConfig": {
              "retentionPolicy": {
                "name": "retention-policy",
                "namespace": "openshift-marketplace"
              },
              "schedulePolicy": {
                "fullBackupPolicy": {
                  "name": "full-bp-policy",
                  "namespace": "openshift-marketplace"
                },
                "incrementalBackupPolicy": {
                  "name": "inc-bp-policy",
                  "namespace": "openshift-marketplace"
                }
              },
              "target": {
                "name": "triliovault-target",
                "namespace": "openshift-marketplace"
              }
            },
            "backupPlanComponents": {
              "custom": [
                {
                  "matchLabels": {
                    "app": "nginx"
                  }
                }
              ],
              "helmReleases": [
                "sample-release"
              ],
              "operators": [
                {
                  "applicationResourceSelector": [
                    {
                      "matchLabels": {
                        "app": "etcd"
                      }
                    }
                  ],
                  "customResources": [
                    {
                      "groupVersionKind": {
                        "group": "etcd.database.coreos.com",
                        "kind": "EtcdCluster",
                        "version": "v1beta2"
                      },
                      "objects": [
                        "demo-etcd-cluster"
                      ]
                    }
                  ],
                  "operatorId": "demo-etcd-cluster",
                  "operatorResourceSelector": [
                    {
                      "matchLabels": {
                        "release": "demo-etcd-operator"
                      }
                    }
                  ]
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "ppc64le"
      ],
      "bundle_path": "registry.connect.redhat.com/trilio/k8s-triliovault-ibm@sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "bundle_path_digest": "sha256:85bdda572f98163d5e84adddb0ca47fb183ecd2cbeaa2ff0e905387c4d8f3d2d",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-02-28T20:56:45.689000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-ibm-stable.2.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:21:49.656000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault-ibm",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterRestore",
          "plural": "clusterrestores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackupPlan",
          "plural": "clusterbackupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "ClusterBackup",
          "plural": "clusterbackups",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "control-plane-1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a-annotation"
        },
        {
          "digest": "sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "image": "eu.gcr.io/amazing-chalice-243510/control-plane@sha256:1eea5404a92bf1a408559d3b7f7ac700f4df5559ce5e4737db866804930d720a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "image": "eu.gcr.io/amazing-chalice-243510/analyzer@sha256:8a1f8d4ef507034e9210f49cf6d20a42e18a480bff9974ac73efd35438610ba8",
          "name": "k8s-triliovault-analyzer"
        },
        {
          "digest": "sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-admission-webhook@sha256:b1318b3e0ee719ae183a48a1876f158862f958e9c85fadb672ccab3de5593311",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "image": "eu.gcr.io/amazing-chalice-243510/exporter@sha256:3900293f0afbd3c594136768b89b3233611b115918ede5834eb8eab7ac5c3f70",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "image": "eu.gcr.io/amazing-chalice-243510/web@sha256:0c0691485ff10b2318ce378fcb37a77130db556d8cba9f895a6bf6814774b604",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "image": "eu.gcr.io/amazing-chalice-243510/web-backend@sha256:c66c43fde40f9bf910b56c519d09cea3509de03973c6962ae57ceb3e924a9542",
          "name": "triliovault-web-backend"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "triliovault-dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "dex-init"
        },
        {
          "digest": "sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "image": "eu.gcr.io/amazing-chalice-243510/metamover@sha256:dc868ce5d6aa0f0fb194af84951f3e22922aa523f17ca1d7174441d72022cb77",
          "name": "metamover"
        },
        {
          "digest": "sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "image": "eu.gcr.io/amazing-chalice-243510/datamover@sha256:222b9317935dd19e9a333520bdf0b1f68d9768880bce6f482cb1b2250806da76",
          "name": "datamover"
        },
        {
          "digest": "sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "image": "eu.gcr.io/amazing-chalice-243510/datastore-attacher@sha256:806090cc5ac8a65fcc5e90d82143dc7df230f742c29ff1c21e685bb49879aaa7",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-scheduler@sha256:8b3f03459aedfb7829dad4c2e9f731d2f11abf9ba38319c3d2f0d8303a642c5e",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-cleaner@sha256:e687443babeb3b9850aa3050b6c6935976358bcdea66666fb79b487ee35c5c25",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "image": "eu.gcr.io/amazing-chalice-243510/backup-retention@sha256:3eb71f17b6b04a7207f3cc921f29cd070993402d951aa940a6c0be61733fe958",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "image": "eu.gcr.io/amazing-chalice-243510/target-browser@sha256:6729338fadd130c21e830fc9c5dacb4efae3ffb37427c415d377ee7c8f152872",
          "name": "target_browser"
        },
        {
          "digest": "sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "image": "eu.gcr.io/amazing-chalice-243510/hook-executor@sha256:7a76cad51eab8ceb492426507cf6c92ed90047184ae2a8d0ce6c2e1a57762078",
          "name": "hook"
        },
        {
          "digest": "sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "image": "eu.gcr.io/amazing-chalice-243510/resource-cleaner@sha256:08b4bb891506388fe6bc96490c3ee8117a2c4b7f99919e2e8a5333d2bc12ee5d",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "image": "eu.gcr.io/amazing-chalice-243510/minio@sha256:6015efd6fe0f935ee77588573d1f1e8c4a4d453d27e6925ef1c89fbab0aa1068",
          "name": "minio"
        },
        {
          "digest": "sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "image": "eu.gcr.io/amazing-chalice-243510/dex@sha256:040caf348ac11511b63271dd473bf31bf1d96d3e0fcbfc40e6d1bf4df2bb0f76",
          "name": "dex"
        },
        {
          "digest": "sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "image": "eu.gcr.io/amazing-chalice-243510/trilio-init@sha256:73dd29b19b61a8fea3c4b94c7e479a5bc4546abf00deb35d47341b83246abf62",
          "name": "tvk_init"
        }
      ],
      "replaces": null,
      "skip_range": "<2.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.7.0",
      "version_original": "2.7.0"
    },
    {
      "_id": "621e1ca283933ad10b40bb07",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T13:16:18.551000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:00:28.194000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e1ca283933ad10b40bb08",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T13:16:18.749000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:00:30.180000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e2075207e0eb39180835f",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T13:32:37.657000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:14:57.694000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e20765c4460caf3124560",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T13:32:38.195000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:21:30.017000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e221f207e0eb391808369",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T13:39:43.109000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:10:53.443000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e221f207e0eb39180836a",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T13:39:43.724000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-05T11:19:04.490000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e22955c4460caf312456e",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-01T13:41:41.694000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T15:02:37.447000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "621e22955c4460caf312456f",
      "alm_examples": [
        {
          "kind": "PmemCSIDeployment",
          "metadata": {
            "name": "pmem-csi.intel.com"
          },
          "spec": {
            "deviceMode": "lvm",
            "nodeSelector": {
              "feature.node.kubernetes.io/memory-nv.dax": "true"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/pmem-csi-operator-os@sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "bundle_path_digest": "sha256:d1a141da228dcc7499bd8a984ee1f9489a9fa8718f17ff00c38b5034e4e9f300",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-01T13:41:41.944000+00:00",
      "csv_description": "\nIntel PMEM-CSI is a [CSI](https://github.com/container-storage-interface/spec)\nstorage driver for container orchestrators like Kubernetes. It makes local\npersistent memory ([PMEM](https://pmem.io/)) available as a filesystem volume to\ncontainer applications. This is the operator to deploy and manage the\n[PMEM-CSI](https://intel.github.io/pmem-csi/1.0/README.html)\ndriver on a Kubernetes cluster.\n\nRefer to the [PMEM-CSI documentation](https://intel.github.io/pmem-csi/1.0/README.html)\nfor more details on deploying and using the PMEM-CSI driver.\n",
      "csv_display_name": "Operator for PMEM-CSI driver",
      "csv_metadata_description": "An operator for deploying and managing the PMEM-CSI driver",
      "csv_name": "pmem-csi-operator-os.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:06:44.044000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pmem-csi-operator-os",
      "provided_apis": [
        {
          "group": "pmem-csi.intel.com",
          "kind": "PmemCSIDeployment",
          "version": "v1beta1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-driver-os-6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576-annotation"
        },
        {
          "digest": "sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "image": "registry.connect.redhat.com/intel/pmem-csi-driver-os@sha256:6d24fd56c756ada2ef760d6395cafb9d8a49e84b9c96d2bb2b7238ad98cfd576",
          "name": "pmem-csi-operator-os"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "6230ef9e6ff50428c193a16c",
      "alm_examples": [
        {
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:6274c3e2de0c75d9cfa1d7b600cf6c4bdbfc2ea724bf82476395508485f5ba4d",
      "bundle_path_digest": "sha256:6274c3e2de0c75d9cfa1d7b600cf6c4bdbfc2ea724bf82476395508485f5ba4d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-15T19:57:18.193000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:56:27.515000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "name": "dell-csi-operator-92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849-annotation"
        },
        {
          "digest": "sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
          "name": "csi-vxflexos-9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1-annotation"
        },
        {
          "digest": "sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
          "image": "docker.io/dellemc/csi-unity@sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
          "name": "csi-unity-55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad-annotation"
        },
        {
          "digest": "sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
          "image": "docker.io/dellemc/csi-powerstore@sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
          "name": "csi-powerstore-c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a-annotation"
        },
        {
          "digest": "sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "name": "csipowermax-reverseproxy-c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7-annotation"
        },
        {
          "digest": "sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
          "image": "docker.io/dellemc/csi-powermax@sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
          "name": "csi-powermax-58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4-annotation"
        },
        {
          "digest": "sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
          "image": "docker.io/dellemc/csi-isilon@sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
          "name": "csi-isilon-5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.5.0 <1.6.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "6230f0e1f506970211844557",
      "alm_examples": [
        {
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:6274c3e2de0c75d9cfa1d7b600cf6c4bdbfc2ea724bf82476395508485f5ba4d",
      "bundle_path_digest": "sha256:6274c3e2de0c75d9cfa1d7b600cf6c4bdbfc2ea724bf82476395508485f5ba4d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-15T20:02:41.272000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:20:28.126000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "name": "dell-csi-operator-92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849-annotation"
        },
        {
          "digest": "sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
          "name": "csi-vxflexos-9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1-annotation"
        },
        {
          "digest": "sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
          "image": "docker.io/dellemc/csi-unity@sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
          "name": "csi-unity-55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad-annotation"
        },
        {
          "digest": "sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
          "image": "docker.io/dellemc/csi-powerstore@sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
          "name": "csi-powerstore-c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a-annotation"
        },
        {
          "digest": "sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "name": "csipowermax-reverseproxy-c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7-annotation"
        },
        {
          "digest": "sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
          "image": "docker.io/dellemc/csi-powermax@sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
          "name": "csi-powermax-58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4-annotation"
        },
        {
          "digest": "sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
          "image": "docker.io/dellemc/csi-isilon@sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
          "name": "csi-isilon-5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.5.0 <1.6.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "6231e43955e2d467ca134767",
      "alm_examples": [
        {
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "bundle_path_digest": "sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-16T13:20:57.340000+00:00",
      "csv_description": "# Overview \n \nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a Nutanix system secret\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: ntnx-system\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n2. Create storage classes\n\n- volume mode example\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:00:00.570000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator"
        },
        {
          "digest": "sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "name": "ntnx-csi-os"
        },
        {
          "digest": "sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "csi-provisioner"
        },
        {
          "digest": "sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "name": "csi-node-driver-registrar"
        },
        {
          "digest": "sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "name": "csi-resizer"
        },
        {
          "digest": "sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "name": "csi-snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "csi-snapshotter-beta"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator-1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131-annotation"
        },
        {
          "digest": "sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.5.2",
      "version_original": "2.5.2"
    },
    {
      "_id": "6231e53f5f071f8d039e3c7f",
      "alm_examples": [
        {
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "bundle_path_digest": "sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-16T13:25:19.399000+00:00",
      "csv_description": "# Overview \n \nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a Nutanix system secret\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: ntnx-system\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n2. Create storage classes\n\n- volume mode example\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:16:23.104000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator"
        },
        {
          "digest": "sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "name": "ntnx-csi-os"
        },
        {
          "digest": "sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "csi-provisioner"
        },
        {
          "digest": "sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "name": "csi-node-driver-registrar"
        },
        {
          "digest": "sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "name": "csi-resizer"
        },
        {
          "digest": "sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "name": "csi-snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "csi-snapshotter-beta"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator-1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131-annotation"
        },
        {
          "digest": "sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.5.2",
      "version_original": "2.5.2"
    },
    {
      "_id": "6231e6454b7f7a37109311af",
      "alm_examples": [
        {
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "bundle_path_digest": "sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-16T13:29:41.492000+00:00",
      "csv_description": "# Overview \n \nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a Nutanix system secret\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: ntnx-system\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n2. Create storage classes\n\n- volume mode example\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:57.097000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator"
        },
        {
          "digest": "sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "name": "ntnx-csi-os"
        },
        {
          "digest": "sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "csi-provisioner"
        },
        {
          "digest": "sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "name": "csi-node-driver-registrar"
        },
        {
          "digest": "sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "name": "csi-resizer"
        },
        {
          "digest": "sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "name": "csi-snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "csi-snapshotter-beta"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator-1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131-annotation"
        },
        {
          "digest": "sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.5.2",
      "version_original": "2.5.2"
    },
    {
      "_id": "62321e7b99b2bd346a063a99",
      "alm_examples": [
        {
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "bundle_path_digest": "sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-16T17:29:31.475000+00:00",
      "csv_description": "# Overview \n \nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a Nutanix system secret\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: ntnx-system\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n2. Create storage classes\n\n- volume mode example\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T15:08:43.382000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator"
        },
        {
          "digest": "sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "name": "ntnx-csi-os"
        },
        {
          "digest": "sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "csi-provisioner"
        },
        {
          "digest": "sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "name": "csi-node-driver-registrar"
        },
        {
          "digest": "sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "name": "csi-resizer"
        },
        {
          "digest": "sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "name": "csi-snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "csi-snapshotter-beta"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator-1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131-annotation"
        },
        {
          "digest": "sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.5.2",
      "version_original": "2.5.2"
    },
    {
      "_id": "6232e1405f071f8d039e3cfc",
      "alm_examples": [
        {
          "kind": "HPEEzmeralCSIDriver",
          "metadata": {
            "name": "hpeezmeralcsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
            "pullPolicy": "Always"
          }
        },
        {
          "kind": "HPEEzmeralNFSCSIDriver",
          "metadata": {
            "name": "hpeezmeralnfscsidriver"
          },
          "spec": {
            "controllerImage": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
            "nodeImage": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
            "pullPolicy": "Always"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator-bundle@sha256:b23ef079d0bcbeaa227a0d759c900c103f97310ad2e00a566a74b100f95a37ff",
      "bundle_path_digest": "sha256:b23ef079d0bcbeaa227a0d759c900c103f97310ad2e00a566a74b100f95a37ff",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-17T07:20:32.162000+00:00",
      "csv_description": "The HPE Ezmeral CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE Ezmeral CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE Ezmeral Data Fabric platform.\nThe HPE Ezmeral CSI Driver for Kubernetes leverages HPE Ezmeral Data Fabric platform to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_overview.html) for full list of supported CSI features.\n## Installation\nRefer to the HPE Ezmeral CSI Operator for Kubernetes [documentation](https://docs.datafabric.hpe.com/home/CSIdriver/csi_installing_operator.html)\n",
      "csv_display_name": "HPE Ezmeral Data Fabric CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE Ezmeral Data Fabric platform. The CSI driver allows you to use HPE Ezmeral Data Fabric with your preferred container orchestrator.",
      "csv_name": "hpe-ezmeral-csi-operator.v1.0.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:28:59.405000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "hpe-ezmeral-csi-operator",
      "provided_apis": [
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralCSIDriver",
          "plural": "hpeezmeralcsidrivers",
          "version": "v1"
        },
        {
          "group": "ezmeral.hpe.com",
          "kind": "HPEEzmeralNFSCSIDriver",
          "plural": "hpeezmeralnfscsidrivers",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator-82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f-annotation"
        },
        {
          "digest": "sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "image": "registry.connect.redhat.com/maprtech/hpe-ezmeral-csi-operator@sha256:82f52179dcd59a1e16f249bcd21f7aae22c09e84f24b479a923fef2adee45c7f",
          "name": "hpe-ezmeral-csi-operator"
        },
        {
          "digest": "sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "image": "registry.connect.redhat.com/maprtech/csi-nfsplugin@sha256:35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822",
          "name": "csi-nfsplugin-35c275363a6949fed56b8ddfe3886ed42a6267fb07271494d8367abbd4d8c822-annotation"
        },
        {
          "digest": "sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfprovisioner@sha256:89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42",
          "name": "csi-kdfprovisioner-89a397c26960ba05542ac069e3a47059bced2bc958cfff4aa0f1eb081fab5d42-annotation"
        },
        {
          "digest": "sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "image": "registry.connect.redhat.com/maprtech/csi-kdfplugin@sha256:480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef",
          "name": "csi-kdfplugin-480b6fb8b2501caa76013c94feac91bef7f9b5ae6ad0b286ec621fd6a9ce4bef-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.9",
      "version_original": "1.0.9"
    },
    {
      "_id": "6232e14055defc084591b81d",
      "alm_examples": [
        {
          "kind": "NutanixCsiStorage",
          "metadata": {
            "name": "nutanixcsistorage"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "csi",
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nutanix/nutanix-csi-operator-bundle@sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "bundle_path_digest": "sha256:0f14d11c27b353bf122ad29611929399824a8a009b8af400d67472d60835ca37",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-17T07:20:32.635000+00:00",
      "csv_description": "# Overview \n \nThe Nutanix CSI Operator for Kubernetes packages, deploys, manages, upgrades the Nutanix CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on Nutanix Enterprise Cloud platform.\n\nThe Nutanix Container Storage Interface (CSI) Driver for Kubernetes leverages Nutanix Volumes and Nutanix Files to provide scalable and persistent storage for stateful applications.\n\nWith the Nutanix CSI Provider you can:\n\n*  **Provide persistent storage to your containers**\n    * Leverage PVC resources to consume dynamically Nutanix storage\n    * With Files storage classes, applications on multiple pods can access the same storage, and also have the benefit of multi-pod read and write access. \n\n## Warning\n\nIf you upgrade from a previous version take care to validate your existing StorageClass parameters against the corresponding [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5).\n\n## Supported Access mode\n\n| Storage Class mode | ReadWriteOnce | ReadOnlyMany | ReadWriteMany |\n|--------------------|---------------|--------------|---------------|\n| Nutanix Volumes    | yes           | yes          | no            |\n| Nutanix Files      | yes           | yes          | yes           |\n\n\n## Supported orchestration platforms\nThe following table details orchestration platforms suitable for deployment of the Nutanix CSI driver.\n\n| Orchestration platform | Version | Architecture |\n|------------------------|---------|--------------|\n| Red Hat OpenShift      | 4.6     | x86          |\n| Red Hat OpenShift      | 4.7     | x86          |\n| Red Hat OpenShift      | 4.8     | x86          |\n| Red Hat OpenShift      | 4.9     | x86          |\n| Red Hat OpenShift      | 4.10    | x86          |\n\n## Configuring k8s secret and storage class\nIn order to use this driver, deploy your NutanixCsiStorage instance and create the relevant storage classes and secrets, by following the [documentation](https://portal.nutanix.com/page/documents/details?targetId=CSI-Volume-Driver-v2_5:CSI-Volume-Driver-v2_5) or the example in below section:\n\n1. Create a Nutanix system secret\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: ntnx-secret\n  namespace: ntnx-system\nstringData:\n  # prism-ip:prism-port:username:password.\n  key: 10.0.0.14:9440:admin:password\n```\n\n2. Create storage classes\n\n- volume mode example\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n  name: nutanix-volume\nprovisioner: csi.nutanix.com\nparameters:\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  csi.storage.k8s.io/fstype: ext4\n  storageContainer: default-container\n  storageType: NutanixVolumes\n  #description: \"description added to each storage object created by the driver\"\n  #isSegmentedIscsiNetwork: \"false\"\n  #whitelistIPMode: ENABLED\n  #chapAuth: ENABLED\n  #isLVMVolume: \"false\"\n  #numLVMDisks: 4\nallowVolumeExpansion: true\nreclaimPolicy: Delete\n```\n\n- dynamic files mode example\n\n```\nkind: StorageClass\napiVersion: storage.k8s.io/v1\nmetadata:\n    name: nutanix-dynfiles\nprovisioner: csi.nutanix.com\nparameters:\n  dynamicProv: ENABLED\n  nfsServerName: fs\n  csi.storage.k8s.io/provisioner-secret-name: ntnx-secret\n  csi.storage.k8s.io/provisioner-secret-namespace: ntnx-system\n  csi.storage.k8s.io/node-publish-secret-name: ntnx-secret\n  csi.storage.k8s.io/node-publish-secret-namespace: ntnx-system\n  csi.storage.k8s.io/controller-expand-secret-name: ntnx-secret\n  csi.storage.k8s.io/controller-expand-secret-namespace: ntnx-system\n  storageType: NutanixFiles\n  #description: \"description added to each storage object created by the driver\"\nallowVolumeExpansion: true\n```",
      "csv_display_name": "Nutanix CSI Operator",
      "csv_metadata_description": "An Operator for deploying and managing the Nutanix CSI Driver",
      "csv_name": "nutanixcsioperator.v2.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:30:34.308000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nutanixcsioperator",
      "provided_apis": [
        {
          "group": "crd.nutanix.com",
          "kind": "NutanixCsiStorage",
          "plural": "nutanixcsistorages",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator"
        },
        {
          "digest": "sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "image": "registry.connect.redhat.com/nutanix/ntnx-csi-os@sha256:66693da887ba2d9388aff5c4459a16a717246127c07bebdf36c573095a3e2118",
          "name": "ntnx-csi-os"
        },
        {
          "digest": "sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "image": "k8s.gcr.io/sig-storage/livenessprobe@sha256:1b7c978a792a8fa4e96244e8059bd71bb49b07e2e5a897fb0c867bdc6db20d5d",
          "name": "livenessprobe"
        },
        {
          "digest": "sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:04c55b93a032ad8075cae540d60fc740a72c31006590dbdb61ad4ab9813959d0",
          "name": "csi-provisioner"
        },
        {
          "digest": "sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:2dee3fe5fe861bb66c3a4ac51114f3447a4cd35870e0f2e2b558c7a400d89589",
          "name": "csi-node-driver-registrar"
        },
        {
          "digest": "sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:36c31f7e1f433c9634d24f876353e8646246d81a03c4e351202c2644daff1620",
          "name": "csi-resizer"
        },
        {
          "digest": "sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:818f35653f2e214db81d655063e81995de9073328a3430498624c140881026a3",
          "name": "csi-snapshotter"
        },
        {
          "digest": "sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:9af9bf28430b00a0cedeb2ec29acadce45e6afcecd8bdf31c793c624cfa75fa7",
          "name": "csi-snapshotter-beta"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "nutanix-csi-operator-1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131-annotation"
        },
        {
          "digest": "sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:f75cd86e7377bf3d9479234edf5f2c2d6aed968e623af3d42ba607e0ccd360c9",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "image": "registry.connect.redhat.com/nutanix/nutanix-csi-operator@sha256:1d79dffaf6d45aeee807034155b37517fc0a3668e0276a57a839f6d39fdd3131",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<2.5.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.5.2",
      "version_original": "2.5.2"
    },
    {
      "_id": "62338c367bd6ce5a69d76f5c",
      "alm_examples": [
        {
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.9.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.9.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v3.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.4.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v5.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.4.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-addons-replicator",
                "repository": "quay.io/csiaddons/volumereplication-operator",
                "tag": "v0.2.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.6.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:090e8752c1b86dbfad2c3e9249a0517d21f07d7922eec870ea913e27b7716aa6",
      "bundle_path_digest": "sha256:090e8752c1b86dbfad2c3e9249a0517d21f07d7922eec870ea913e27b7716aa6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-17T19:29:58.848000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\n\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n\nFor compatibility, prerequisites, release notes, and other user information, see [IBM block storage CSI driver documentation](https://www.ibm.com/docs/en/stg-block-csi-driver).\n",
      "csv_display_name": "IBM block storage CSI driver operator",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-04T14:29:06.193000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "plural": "ibmblockcsis",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "name": "ibm-block-csi-operator"
        },
        {
          "digest": "sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "name": "ibm-block-csi-operator-49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.6.0 <1.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "62338e307bd6ce5a69d76f5d",
      "alm_examples": [
        {
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.9.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.9.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v3.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.4.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v5.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.4.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-addons-replicator",
                "repository": "quay.io/csiaddons/volumereplication-operator",
                "tag": "v0.2.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.6.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:090e8752c1b86dbfad2c3e9249a0517d21f07d7922eec870ea913e27b7716aa6",
      "bundle_path_digest": "sha256:090e8752c1b86dbfad2c3e9249a0517d21f07d7922eec870ea913e27b7716aa6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-17T19:38:24.760000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\n\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n\nFor compatibility, prerequisites, release notes, and other user information, see [IBM block storage CSI driver documentation](https://www.ibm.com/docs/en/stg-block-csi-driver).\n",
      "csv_display_name": "IBM block storage CSI driver operator",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T10:57:47.395000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "name": "ibm-block-csi-operator"
        },
        {
          "digest": "sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "name": "ibm-block-csi-operator-49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.6.0 <1.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "62338f019abee742b66cf8eb",
      "alm_examples": [
        {
          "kind": "IBMBlockCSI",
          "metadata": {
            "name": "ibm-block-csi"
          },
          "spec": {
            "controller": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-controller",
              "tag": "1.9.0"
            },
            "node": {
              "affinity": {
                "nodeAffinity": {
                  "requiredDuringSchedulingIgnoredDuringExecution": {
                    "nodeSelectorTerms": [
                      {
                        "matchExpressions": [
                          {
                            "key": "kubernetes.io/arch",
                            "operator": "In",
                            "values": [
                              "amd64"
                            ]
                          }
                        ]
                      }
                    ]
                  }
                }
              },
              "imagePullPolicy": "IfNotPresent",
              "repository": "ibmcom/ibm-block-csi-driver-node",
              "tag": "1.9.0"
            },
            "sidecars": [
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-node-driver-registrar",
                "repository": "k8s.gcr.io/sig-storage/csi-node-driver-registrar",
                "tag": "v2.5.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-provisioner",
                "repository": "k8s.gcr.io/sig-storage/csi-provisioner",
                "tag": "v3.1.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-attacher",
                "repository": "k8s.gcr.io/sig-storage/csi-attacher",
                "tag": "v3.4.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-snapshotter",
                "repository": "k8s.gcr.io/sig-storage/csi-snapshotter",
                "tag": "v5.0.1"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-resizer",
                "repository": "k8s.gcr.io/sig-storage/csi-resizer",
                "tag": "v1.4.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "csi-addons-replicator",
                "repository": "quay.io/csiaddons/volumereplication-operator",
                "tag": "v0.2.0"
              },
              {
                "imagePullPolicy": "IfNotPresent",
                "name": "livenessprobe",
                "repository": "k8s.gcr.io/sig-storage/livenessprobe",
                "tag": "v2.6.0"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-block-csi-operator-bundle@sha256:090e8752c1b86dbfad2c3e9249a0517d21f07d7922eec870ea913e27b7716aa6",
      "bundle_path_digest": "sha256:090e8752c1b86dbfad2c3e9249a0517d21f07d7922eec870ea913e27b7716aa6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-17T19:41:53.055000+00:00",
      "csv_description": "The Container Storage Interface (CSI) Driver for IBM block storage systems enables container orchestrators such as Kubernetes to manage the life cycle of persistent storage.\n\nThis is the official operator to deploy and manage IBM block storage CSI driver.\n\nFor compatibility, prerequisites, release notes, and other user information, see [IBM block storage CSI driver documentation](https://www.ibm.com/docs/en/stg-block-csi-driver).\n",
      "csv_display_name": "IBM block storage CSI driver operator",
      "csv_metadata_description": "Run IBM block storage CSI driver on OpenShift.",
      "csv_name": "ibm-block-csi-operator.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:19:47.320000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "ibm-block-csi-operator",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "IBMBlockCSI",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "name": "ibm-block-csi-operator"
        },
        {
          "digest": "sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "image": "registry.connect.redhat.com/ibm/ibm-block-csi-operator@sha256:49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277",
          "name": "ibm-block-csi-operator-49e631f495b2a66f96141da71ffc15cde67c3493fce31bdfd86544ef5c854277-annotation"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.6.0 <1.9.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "62345f6c5593ce895a7b534d",
      "alm_examples": [
        {
          "kind": "HPECSIDriver",
          "metadata": {
            "name": "csi-driver"
          },
          "spec": {
            "cspClientTimeout": 60,
            "disable": {
              "alletra6000": false,
              "alletra9000": false,
              "nimble": false,
              "primera": false
            },
            "disableNodeConformance": false,
            "disableNodeGetVolumeStats": false,
            "imagePullPolicy": "IfNotPresent",
            "iscsi": {
              "chapPassword": "",
              "chapUser": ""
            },
            "kubeletRootDir": "/var/lib/kubelet/",
            "logLevel": "info",
            "registry": "quay.io"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hpestorage/csi-driver-operator-bundle@sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "bundle_path_digest": "sha256:24d8008a3b72f61d720a20f0f12eecc5b13fdc0916edcb7cb0ae99498c012c9b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-18T10:31:08.813000+00:00",
      "csv_description": "The HPE CSI Operator for Kubernetes packages, deploys, manages, upgrades the HPE CSI Driver on Kubernetes and OpenShift for dynamic provisioning of persistent volumes on HPE storage systems.\nThe HPE CSI Driver for Kubernetes leverages HPE storage platforms to provide scalable and persistent storage for stateful applications. Please refer to our CSI driver [documentation](https://scod.hpedev.io/csi_driver/index.html) for supported HPE platforms and full list of supported CSI features.\n## Installation\nRefer to the HPE CSI Operator for Kubernetes [documentation](https://scod.hpedev.io/csi_driver/deployment.html#operator).\n",
      "csv_display_name": "HPE CSI Operator for Kubernetes",
      "csv_metadata_description": "A Container Storage Interface (CSI) driver for HPE storage platforms. The CSI driver allows you to use HPE storage with your preferred container orchestrator.",
      "csv_name": "hpe-csi-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:40:23.022000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "hpe-csi-operator",
      "provided_apis": [
        {
          "group": "storage.hpe.com",
          "kind": "HPECSIDriver",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "csi-driver-operator-e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771-annotation"
        },
        {
          "digest": "sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "image": "registry.connect.redhat.com/hpestorage/csi-driver-operator@sha256:e397fc7820775a2667e28a8f5ce59860ffc802968f1752e1672319c6e2e8e771",
          "name": "hpe-csi-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62345fad314381d2b0756b33",
      "alm_examples": [
        {
          "kind": "XCrypt",
          "metadata": {
            "name": "zts-masterset"
          },
          "spec": {
            "status": {
              "podNames": "zts-ca",
              "replicas": "1,"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/zts/xcrypt-operator-1-bundle@sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "bundle_path_digest": "sha256:c3913778f986ae4f3a7d94da2a9d0157233dbb676e3c1eecacbdbc02a864685a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-03-18T10:32:13.847000+00:00",
      "csv_description": "Zettaset\u2019s RedHat Certified XCrypt Operator allows users to deploy multiple XCrypt components on OpenShift with just a few simple commands. The XCrypt Operator deployment provides software-defined encryption that transparently protects container data throughout your OpenShift environment.\n\n## Core Features\n* **Automated XCrypt provisioning** - Deploying a Zettaset XCrypt has never been easier. Adjust cluster specific configuration and let the Zettaset Operator take care of provisioning XCrypt services and setting up the XCrypt encryption to your exact specification. \n* **CSI Driver deployment**: Zettaset XCrypt Operator automatically deploys Zettaset XCrypt CSI Driver in order to provide automated and transparent data-at-rest  encryption functionality compatible with Openshift and any other container orchestrator. Once the Operator is provisioned, the driver runs fine tuned and ready to work with other XCrypt components.\n* **Multi-node topology**: Encrypt as many nodes and volumes as you need to. XCrypt components can be installed on multiple nodes across the cluster. This is defined by two labels: zts-master and zts-worker. Normally zts-master node is a single node that runs Zettaset XCrypt major services required for the product operation. Multiple nodes can be marked as zts-worker and those are the nodes that can have encrypted volumes.\n* **Seamless Encrypted Volume mount**: Volumes are not only being encrypted, but also are mounted/unmounted to containers with Persistent Volume Claims. This happens as seamlessly as regular volumes provision and mount/unmount.\n* **Robust failover**: A node failure doesn\u2019t affect XCrypt operations on other nodes of the cluster. Encryption on a restarted/recovered node gets back to normal functioning if the node stays healthy and data hasn\u2019t been corrupted during the restart\n\n## About Zettaset XCrypt Kubernetes Encryption for OpenShift\nXCrypt Kubernetes Encryption for OpenShift is a software-only solution that enables encryption of data at rest stored in Red Hat OpenShift container environments without slowing down the DevSecOps process. In addition to providing a transparent and high-performance layer of security that flexibly protects container data across on-premise, in hybrid, and multi-cloud environments, it also helps your organization efficiently transition from DevOps to DevSecOps.  \n\nMore information about Zettaset XCrypt Kubernetes Encryption for OpenShift can be found in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)\n\n## RedHat OpenShift + Zettaset: The next generation of secure enterprise infrastructure for DevSecOps  \nBy combining RedHat\u2019s Container Platform with Zettaset\u2019s certified software-defined encryption, you can create the next generation of secure enterprise infrastructure that DevSecOps requires. Together they create the stable, consistent, and supported base that your organization needs to develop applications faster, simplify updates, drive innovation, and reduce the risk of potential security breaches and data theft.\n### Core Features\n* Software-only for simple and scalable deployments \n* Negligible performance impact\n* Transparent to developers and administrators \n* Works with AWS, Google, and Azure \n* Unique encryption key per container volume \n* Encrypted volumes are only available when in use\n* Direct integration with OpenShift \n* Automated encryption policy management Secure erase of volumes\n* Ability to securely decommission a node\n\n## How does XCrypt Kubernetes Encryption fit into OpenShift? \nXCrypt XCrypt Kubernetes Encryption for OpenShift Encryption makes it incredibly easy to protect container data in your OpenShift environment. \n### Use cases include:\n* Transitioning from DevOps to DevSecOps \n* Ensuring data protection in OpenShift container environments with negligible performance impact \n* Achieving compliance in regulated industries like healthcare and finance\n\n## Other Information\nRole-based access control needs to be configured prior to the Operator installation. Please find details in the [Deployment and Administration Guide](https://1f2aca073706bb52f501-133f3466c38fdb0417539cdf095d8336.ssl.cf1.rackcdn.com/ZettasetXCryptContainerEncryption.8.5.0.Final.pdf)    ",
      "csv_display_name": "Zettaset XCrypt Operator",
      "csv_metadata_description": "XCrypt Operator deploys Zettaset XCrypt Container Encryption  - the only software-defined solution that offers transparent high performance data-at-rest encryption of critical data in container environments.",
      "csv_name": "zts-xcrypt-operator.v0.0.17",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:39:06.582000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "xcrypt-operator",
      "provided_apis": [
        {
          "group": "xcrypt.zettaset.com",
          "kind": "XCrypt",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "xcrypt-operator-1-7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac-annotation"
        },
        {
          "digest": "sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "image": "registry.connect.redhat.com/zts/xcrypt-operator-1@sha256:7e6316a6c41dd71c4d9025bd958a475929369284eee1a02d9e870e883acfd9ac",
          "name": "zts-xcrypt-operator"
        },
        {
          "digest": "sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "image": "registry.connect.redhat.com/zts/xcrypt-ca-1@sha256:9f1015dfb459b69f5dbf449efa0517452095a6cf4f20826ebae278f9f800ffe7",
          "name": "ca"
        },
        {
          "digest": "sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "image": "registry.connect.redhat.com/zts/xcrypt-kmip-server-1@sha256:9af5d21dd748dfbf4e107f27a5f10fa3c0ba928ade9b989a744b620ce34ec757",
          "name": "kmip"
        },
        {
          "digest": "sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "image": "registry.connect.redhat.com/zts/xcrypt-license-server-1@sha256:bc5486892a41e70f5dc4c4e1d82fca8db2149598fb8b5950ba5da1ee2d9d245d",
          "name": "ls"
        },
        {
          "digest": "sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "image": "registry.connect.redhat.com/zts/xcrypt-host-manager-1@sha256:9faa4b597eb74df412761dffa057b64fb69dbf9fa016414962eb2099a343e734",
          "name": "hm"
        },
        {
          "digest": "sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "image": "registry.connect.redhat.com/zts/zts-csi-driver-1@sha256:c15fa9a7cc40891103f426206663dcebe1210c8ee3ab6037cbf64e1f86b9c7e5",
          "name": "csi_driver"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.0.17",
      "version_original": "0.0.17"
    },
    {
      "_id": "62345fb0314381d2b0756b34",
      "alm_examples": [
        {
          "kind": "AnzoUnstructured",
          "metadata": {
            "name": "au01"
          },
          "spec": {
            "auWorker": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-w",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
                          "name": "w",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            },
            "msLeader": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app": "anzounstructured"
                    }
                  },
                  "serviceName": "au-au01-ms",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app": "anzounstructured"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
                          "name": "ms",
                          "resources": {
                            "limits": {
                              "cpu": "2",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "unstructured-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-operator-bundle@sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "bundle_path_digest": "sha256:800c686058a8b80d2c082741019db9d35535b2ba2b59007cbde0c2dffa143e82",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-18T10:32:16.545000+00:00",
      "csv_description": "The Anzo Unstructured Operator provides the way to install and configure an anzo unstructured setup on Red Hat K8S environment.\nCurrently, this is possible only through existing Anzo installation.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzo-unstructured/blob/v2.0.0/README.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzo/userdoc/cloud-deployments.htm )\n\n### Support\n\nWe offer Support to our customers through [ Cambridge Semantics Customer Center ]( https://customercenter.cambridgesemantics.com/ ).",
      "csv_display_name": "Anzo Unstructured Operator",
      "csv_metadata_description": "Kubernetes Operator for Anzo Unstructured",
      "csv_name": "anzounstructured-operator.v2.0.101",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:39:36.048000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "anzounstructured-operator",
      "provided_apis": [
        {
          "group": "anzounstructured.clusters.cambridgesemantics.com",
          "kind": "AnzoUnstructured",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "unstructured-operator-a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04-annotation"
        },
        {
          "digest": "sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "image": "registry.connect.redhat.com/cambridgesemantics/unstructured-operator@sha256:a47af068a7aa55c12be84c80d263feeed5597ecc434986b4f2fff782b568bb04",
          "name": "manager"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo_microservices_leader"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo_unstructured_worker"
        },
        {
          "digest": "sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-microservices-leader@sha256:0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286",
          "name": "anzo-microservices-leader-0579fd97e81e436eaff3b58c5395f13aa924940a3d51f0bdea5163d327620286-annotation"
        },
        {
          "digest": "sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzo-unstructured-worker@sha256:4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2",
          "name": "anzo-unstructured-worker-4db61bdf6dc8b42824a06d2f8d8aeecddde765d123b40a63a7bbf87845719fb2-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "62345fb2314381d2b0756b35",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/iomesh/iomesh@sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "bundle_path_digest": "sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-18T10:32:18.838000+00:00",
      "csv_description": "IOMesh (https://www.iomesh.com/) is a cloud-native storage product specifically designed and developed for Kubernetes. It takes ZBS as its core, a \u201cproduction-ready\u201d distributed storage system developed independently by SmartX, to provide production-level high performance and reliable persistent storage for business-critical applications such as MySQL, Cassandra, MongoDB, etc., contributing to the containerized transformation of stateful applications.      \n## Pre-Requisites\n* According to https://docs.iomesh.com/deploy/prerequisites, make sure that your openshift cluster meets the \"Installation Requirements\" and set up the worker nodes correctly according to the \"Setup Worker Node\" chapter.\n* Run IOMesh Operator pre-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install the dependencies of IOMesh Operator and specific IOMesh settings for the openshift cluster:\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-pre-install-openshift.sh | sh -\n```\n## Install IOMesh Operator and IOMesh Cluster\n* Click install button on the current web page to install IOMesh Operator\n* On the **Installed Operators** -> **IOMesh Operator** -> **Create instance** -> **YAML view**, fill in an IOMesh Custom Resources according https://iomesh.run/iomesh.yaml, change the `spec.*.dataCIDR` to your own data network CIDR:\n## Post Install\n* Run IOMesh Operator post-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install IOMesh CSI Driver\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-post-install-openshift.sh | sh -\n```\n## Getting Started\n* Try to quickstart setup and use IOMesh: https://docs.iomesh.com/deploy/setup-iomesh\n",
      "csv_display_name": "IOMesh Operator",
      "csv_metadata_description": "",
      "csv_name": "iomesh-operator.0.10.1-rc4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-16T16:38:20.736000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "iomesh-operator",
      "provided_apis": [
        {
          "group": "iomesh.com",
          "kind": "IOMeshCluster",
          "version": "v1alpha1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator-52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3-annotation"
        },
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.10.1-rc4",
      "version_original": "0.10.1-rc4"
    },
    {
      "_id": "62345ff3314381d2b0756b3d",
      "alm_examples": [
        {
          "kind": "SANStorageCSI",
          "metadata": {
            "name": "sanstoragecsi"
          },
          "spec": {
            "driverName": "san.csi.nec.com",
            "images": {
              "csiDriver": "",
              "externalAttacher": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
              "externalProvisioner": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
              "livenessProbe": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
              "nodeRegistrar": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0"
            },
            "parameters": {
              "controller": {
                "logLevel": 5
              },
              "node": {
                "livenessProbePort": 9808,
                "logLevel": 5,
                "maxVolumesPerNode": 1024
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/sanstoragecsi-operator-bundle@sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "bundle_path_digest": "sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-18T10:33:23.610000+00:00",
      "csv_description": "This operator deploys the NEC Storage M Series CSI Driver on OpenShift Container Platform.\n\nNEC Storage M Series CSI Driver provides persistent storage for stateful applications using NEC Storage M Series.\nPlease refer to the documentation of the NEC Storage M Series CSI Driver for detail information about supported NEC Storage Platforms and supported CSI features.\n",
      "csv_display_name": "NEC Storage M Series CSI Operator",
      "csv_metadata_description": "An operator for managing the NEC Storage M Series CSI Driver",
      "csv_name": "sanstoragecsi-operator-bundle.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:39:34.134000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "sanstoragecsi-operator-bundle",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "SANStorageCSI",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "image": "registry.connect.redhat.com/nec/sanstoragecsi-operator@sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "name": "sanstoragecsi-operator-bundle"
        },
        {
          "digest": "sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "name": "ose-csi-node-driver-registrar-dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0-annotation"
        },
        {
          "digest": "sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "name": "ose-csi-livenessprobe-241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe-annotation"
        },
        {
          "digest": "sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "name": "ose-csi-external-provisioner-faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715-annotation"
        },
        {
          "digest": "sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "name": "ose-csi-external-attacher-92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "62345ff5670f4cadbafad2aa",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "bundle_path_digest": "sha256:4f4f1bf24be82a2879596c353daf28425bdaccb2323869412fecb4eef2086d2f",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-18T10:33:25.448000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.43",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:40:49.977000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.12.43",
      "version_original": "1.12.43"
    },
    {
      "_id": "62345ff75593ce895a7b535e",
      "alm_examples": [
        {
          "kind": "SysdigAgent",
          "metadata": {
            "name": "sysdigagent-sample"
          },
          "spec": {
            "sysdig": {
              "accessKey": "REPLACE ME",
              "disableCaptures": false,
              "existingAccessKeySecret": "",
              "settings": {}
            },
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sysdig/sysdig-operator-bundle@sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "bundle_path_digest": "sha256:72fa8220017452583ffaeba2fc0c57f9c1b218adf1aeeb4fbbd0e63c427312c6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-18T10:33:27.686000+00:00",
      "csv_description": "[Sysdig](https://www.sysdig.com/) is a unified platform for container and\nmicroservices monitoring, troubleshooting, security and forensics. Sysdig\nplatform has been built on top of\n[Sysdig tool](https://sysdig.com/opensource/sysdig/) and\n[Sysdig Inspect](https://sysdig.com/blog/sysdig-inspect/) open-source\ntechnologies.\nThis operator installs the Sysdig Agent for\n[Sysdig Monitor](https://sysdig.com/product/monitor/) and\n[Sysdig Secure](https://sysdig.com/product/secure/) to all nodes in your\ncluster via a DaemonSet.\n## Settings\nThis operator, uses the same options than the\n[Helm Chart](https://hub.helm.sh/charts/stable/sysdig), please take a look\nto all the options in the following table:\n| Parameter                         | Description                                                            | Default                                     |\n| ---                               | ---                                                                    | ---                                         |\n| `image.registry`                  | Sysdig agent image registry                                            | `docker.io`                                 |\n| `image.repository`                | The image repository to pull from                                      | `sysdig/agent`                              |\n| `image.tag`                       | The image tag to pull                                                  | `REPLACE_AGENT_VERSION`                                     |\n| `image.pullPolicy`                | The Image pull policy                                                  | `IfNotPresent`                              |\n| `image.pullSecrets`               | Image pull secrets                                                     | `nil`                                       |\n| `resources.requests.cpu`          | CPU requested for being run in a node                                  | `600m`                                      |\n| `resources.requests.memory`       | Memory requested for being run in a node                               | `512Mi`                                     |\n| `resources.limits.cpu`            | CPU limit                                                              | `2000m`                                     |\n| `resources.limits.memory`         | Memory limit                                                           | `1536Mi`                                    |\n| `rbac.create`                     | If true, create & use RBAC resources                                   | `true`                                      |\n| `serviceAccount.create`           | Create serviceAccount                                                  | `true`                                      |\n| `serviceAccount.name`             | Use this value as serviceAccountName                                   | ` `                                         |\n| `daemonset.updateStrategy.type`   | The updateStrategy for updating the daemonset                          | `RollingUpdate`                             |\n| `daemonset.affinity`              | Node affinities                                                        | `nil`                                       |\n| `daemonset.annotations`           | Custom annotations for daemonset                                       | `{}`                                        |\n| `slim.enabled`                    | Use the slim based Sysdig Agent image                                  | `false`                                     |\n| `slim.kmoduleImage.repository`    | The kernel module image builder repository to pull from                | `sysdig/agent-kmodule`                      |\n| `slim.resources.requests.cpu`     | CPU requested for building the kernel module                           | `1000m`                                     |\n| `slim.resources.requests.memory`  | Memory requested for building the kernel module                        | `348Mi`                                     |\n| `slim.resources.limits.memory`    | Memory limit for building the kernel module                            | `512Mi`                                     |\n| `ebpf.enabled`                    | Enable eBPF support for Sysdig instead of `sysdig-probe` kernel module | `false`                                     |\n| `ebpf.settings.mountEtcVolume`    | Needed to detect which kernel version are running in Google COS        | `true`                                      |\n| `sysdig.accessKey`                | Your Sysdig Monitor Access Key                                         | `Nil` You must provide your own key         |\n| `sysdig.settings`                 | Settings for agent's configuration file                                | ` `                                         |\n| `secure.enabled`                  | Enable Sysdig Secure                                                   | `true`                                      |\n| `auditLog.enabled`                | Enable K8s audit log support for Sysdig Secure                         | `false`                                     |\n| `auditLog.auditServerUrl`         | The URL where Sysdig Agent listens for K8s audit log events            | `0.0.0.0`                                   |\n| `auditLog.auditServerPort`        | Port where Sysdig Agent listens for K8s audit log events               | `7765`                                      |\n| `auditLog.dynamicBackend.enabled` | Deploy the Audit Sink where Sysdig listens for K8s audit log events    | `false`                                     |\n| `customAppChecks`                 | The custom app checks deployed with your agent                         | `{}`                                        |\n| `tolerations`                     | The tolerations for scheduling                                         | `node-role.kubernetes.io/master:NoSchedule` |\n| `scc.create`                      | Create OpenShift's Security Context Constraint                         | `false`                                     |\nFor example, if you want to deploy a DaemonSet with eBPF and with Sysdig Secure\nenabled:\n```yaml\napiVersion: sysdig.com/v1\nkind: SysdigAgent\nmetadata:\n  name: agent-with-ebpf-and-secure\nspec:\n  ebpf:\n    enabled: true\n  daemonset:\n    annotations:\n      productID: SysdigSecureDevopsPlatform\n      productName: Sysdig Secure DevOps Platform\n      productVersion: REPLACE_VERSION\n  scc:\n    create: true\n  sysdig:\n    accessKey: XXX\n```\nPlease, notice that `sysdig.accessKey` is **mandatory**. Once you have provided\nthe accessKey, you can apply this file with `kubectl apply -f`\n## Getting your Access Key\nTo retrieve the key and use it in the agent:\n1. Log in to Sysdig Monitor or Sysdig Secure (maybe as administrator) and\n   select **Settings**.\n2. Choose Agent Installation.\n3. Use the Copy button to copy the access key at the top of the page.\nIf you need more help, you can read more about this process in the [Agent Installation: Overview and Key](\nhttps://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/213352719/Agent+Installation+Overview+and+Key)\ndocumentation page.\n## Verify Metrics in Sysdig Monitor UI\nOnce you have deployed the Sysdig Agent, it's time to verify that everything is\nworking as expected. So, we are going to log in Sysdig Monitor to do the check.\n1. Access Sysdig Monitor:\n   **SaaS**: https://app.sysdigcloud.com\n   Log in with your Sysdig user name and password.\n2. Select the **Explore** tab to see if metrics are displayed.\n3. To verify that kube state metrics and cluster name are working correctly:\n   Select the **Explore tab** and create a grouping by `kubernetes.cluster.name` and `kubernetes.pod.name`.\n4. Select an individual container or pod to see details.\nDon't rush about getting Kubernetes metadata. Pods, deployments ... appear a\nminute or two later than the nodes/containers themselves; if pod names do not\nappear immediately, wait and retry the Explore view.\nYou can read more about verification in the [Verify Metrics in Sysdig Monitor UI section](https://sysdigdocs.atlassian.net/wiki/spaces/Platform/pages/256475257/GKE+Installation+Steps#GKEInstallationSteps-VerifyMetricsinSysdigMonitorUI)\nin the documentation pages.",
      "csv_display_name": "Sysdig Agent Operator",
      "csv_metadata_description": "Sysdig is a unified platform for container and microservices monitoring, troubleshooting, security and forensics. Sysdig platform has been built on top of Sysdig tool and Sysdig Inspect open-source technologies.\n",
      "csv_name": "sysdig-certified.v1.12.44",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:40:51.863000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "sysdig-certified",
      "provided_apis": [
        {
          "group": "sysdig.com",
          "kind": "SysdigAgent",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "sysdig-operator-f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d-annotation"
        },
        {
          "digest": "sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "image": "registry.connect.redhat.com/sysdig/sysdig-operator@sha256:f367e4888fa2094bd3815e204dbf1a179a06e44b9be2863df339573e8dc6299d",
          "name": "manager"
        },
        {
          "digest": "sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8b4f814c112d7b91dc5e7904d4f3c684f3d77227344d2b553a84d4a1bc2829d3",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.12.44",
      "version_original": "1.12.44"
    },
    {
      "_id": "62346008314381d2b0756b3f",
      "alm_examples": [
        {
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "nodeName": null
              },
              {
                "nodeName": null
              }
            ],
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:aa898cb65de29ecae7075b30fd3b79ff5f2bedf6f6224fd104ad930be7e82dcd",
      "bundle_path_digest": "sha256:aa898cb65de29ecae7075b30fd3b79ff5f2bedf6f6224fd104ad930be7e82dcd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-03-18T10:33:44.240000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n## InfoScale Cluster custom resource\n\n```\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.0.0000\"\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  licenseServer: < Optional - License server name/IP address >\n  licensePort: < Optional - License port number >\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v7.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-04-05T11:38:50.021000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "version": "v1"
        }
      ],
      "related_images": [
        {
          "digest": "sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "name": "manager"
        },
        {
          "digest": "sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:686f4fa379400e1c2151f5086276625241b5674ed91e90f1b328c510ca1034f0",
          "name": "pre-manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "7.9.1",
      "version_original": "7.9.1"
    }
  ],
  "page": 1,
  "page_size": 100,
  "total": 221
}

{
  "data": [
    {
      "_id": "611fbdd5bd674341b5c5f132",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.9.0"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "quay.io/rhc4tp/artifactory-operator-bundle@sha256:95fd797214f4a3f2580d108287f225c1982af2741e4a96ffa787e29692073d20",
      "bundle_path_digest": "sha256:95fd797214f4a3f2580d108287f225c1982af2741e4a96ffa787e29692073d20",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:36:05.878000+00:00",
      "csv_description": "## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n``` # Create a key export JOIN_KEY=$(openssl rand -hex 32) echo ${JOIN_KEY} ```\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:43:31.966000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": "JFrog",
      "related_images": [
        {
          "digest": "sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "name": "artifactory-operator-376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6-annotation"
        },
        {
          "digest": "sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:376f2922911113a0e217614e1f0d26672d62258170b7ae1dcad0fdd596e035a6",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:f0b061c4126f58b70ddaf39a3c5cc009be21b75ac4530ec5088a40d1e6f50e3e",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:f0b061c4126f58b70ddaf39a3c5cc009be21b75ac4530ec5088a40d1e6f50e3e",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:0ba76a7b26e5ffb95b4354243337ac2b3ff84ae8637c0782631084d1b2f99a33",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:0ba76a7b26e5ffb95b4354243337ac2b3ff84ae8637c0782631084d1b2f99a33",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5",
          "name": "init-197f5a1e7a3dd934e72a03a106f0de83e992e6926a774e26483c06fa46faeee5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "611fbdf6bd674341b5c5f140",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "bundle_path_digest": "sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-08-20T14:36:38.242000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:49:19.191000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.3.2-pr4",
      "version_original": "6.3.2-pr4"
    },
    {
      "_id": "611fbe2adece23122b7a78cb",
      "alm_examples": [
        {
          "api_version": "csi.nec.com/v1",
          "kind": "SANStorageCSI",
          "metadata": {
            "name": "sanstoragecsi"
          },
          "spec": {
            "driverName": "san.csi.nec.com",
            "images": {
              "csiDriver": "",
              "externalAttacher": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
              "externalProvisioner": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
              "livenessProbe": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
              "nodeRegistrar": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0"
            },
            "parameters": {
              "controller": {
                "logLevel": 5
              },
              "node": {
                "livenessProbePort": 9808,
                "logLevel": 5,
                "maxVolumesPerNode": 1024
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/sanstoragecsi-operator-bundle@sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "bundle_path_digest": "sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:37:30.777000+00:00",
      "csv_description": "This operator deploys the NEC Storage M Series CSI Driver on OpenShift Container Platform.\n\nNEC Storage M Series CSI Driver provides persistent storage for stateful applications using NEC Storage M Series.\nPlease refer to the documentation of the NEC Storage M Series CSI Driver for detail information about supported NEC Storage Platforms and supported CSI features.\n",
      "csv_display_name": "NEC Storage M Series CSI Operator",
      "csv_metadata_description": "An operator for managing the NEC Storage M Series CSI Driver",
      "csv_name": "sanstoragecsi-operator-bundle.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:07:15.594000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "sanstoragecsi-operator-bundle",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "SANStorageCSI",
          "plural": "sanstoragecsis",
          "version": "v1"
        }
      ],
      "provider": "NEC",
      "related_images": [
        {
          "digest": "sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "image": "registry.connect.redhat.com/nec/sanstoragecsi-operator@sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "name": "sanstoragecsi-operator-bundle"
        },
        {
          "digest": "sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "name": "ose-csi-node-driver-registrar-dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0-annotation"
        },
        {
          "digest": "sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "name": "ose-csi-livenessprobe-241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe-annotation"
        },
        {
          "digest": "sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "name": "ose-csi-external-provisioner-faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715-annotation"
        },
        {
          "digest": "sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "name": "ose-csi-external-attacher-92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "611fbe5dbd674341b5c5f16e",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixCpxWithIngressController",
          "metadata": {
            "name": "cpx-cic"
          },
          "spec": {
            "ADMSettings": {
              "ADMFingerPrint": "",
              "ADMIP": "",
              "bandWidth": "",
              "bandWidthLicense": false,
              "cpxCores": "",
              "licenseServerIP": "",
              "licenseServerPort": 27000,
              "loginSecret": "",
              "vCPULicense": false
            },
            "aws": false,
            "azure": false,
            "bgpSettings": {
              "bgpConfig": [
                {
                  "bgpRouter": {
                    "localAS": 100,
                    "neighbor": [
                      {
                        "ASOriginationInterval": 10,
                        "address": "",
                        "advertisementInterval": 10,
                        "remoteAS": 100
                      }
                    ]
                  }
                }
              ],
              "required": false
            },
            "cic": {
              "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
              "pullPolicy": "Always",
              "required": true
            },
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 5563
              },
              "transactions": {
                "enable": false,
                "port": 5557
              }
            },
            "cpxBgpRouter": false,
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "Always",
              "required": false
            },
            "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
            "ingressClass": "",
            "ingressIP": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "mgmtHttpPort": 9080,
            "mgmtHttpsPort": 9443,
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nsCookieVersion": "0",
            "nsGateway": "192.168.1.1",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "192.168.1.2",
            "nsProtocol": "http",
            "openshift": true,
            "pullPolicy": "Always",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceAnnotations": {
              "aws": {
                "backendProtocol": "",
                "negotiationPolicy": "",
                "proxyProtocol": false,
                "resourcesTags": "",
                "sslCert": "",
                "sslPorts": ""
              },
              "azure": {
                "internalLoadBalancer": false
              }
            },
            "serviceType": {
              "loadBalancer": {
                "enabled": false,
                "externalTrafficPolicy": "Local"
              },
              "nodePort": {
                "enabled": false,
                "httpPort": "",
                "httpsPort": ""
              }
            },
            "setAsDefaultIngressClass": false,
            "sslCertManagedByAWS": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-bundle@sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "bundle_path_digest": "sha256:58f15e99628043753fefa5c8df190cc90e82a6bd3b00aed3c52f0fbf69d81039",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:38:21.727000+00:00",
      "csv_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an OpenShift environment.",
      "csv_display_name": "Citrix ADC CPX with Ingress Controller",
      "csv_metadata_description": "Citrix ADC CPX is a container-based application delivery controller that can be provisioned on a Docker host. Citrix ADC CPX enables customers to leverage Docker engine capabilities and use NetScaler load balancing and traffic management features for container-based applications. Citrix Ingress Controller which will be running in side-car mode with Citrix ADC CPX will automatically configures Citrix ADC CPX based on the Ingress resource configuration. This operator can be used deploy Citrix ADC CPX with Citrix ingress controller in an Openshift environment.",
      "csv_name": "citrix-cpx-with-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:45:46.577000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "citrix-cpx-with-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixCpxWithIngressController",
          "plural": "citrixcpxwithingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "citrix",
      "related_images": [
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "citrix-k8s-cpx-ingress-controller-4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a-annotation"
        },
        {
          "digest": "sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:10252238f921d720b8af7e2ca8e90be6e8516efefc1633697aa048a74041f1c3",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-cpx-ingress-controller@sha256:4ca00f777a37e3070cfa2651685ba284623a78b55e2f81143ec8b58e967f163a",
          "name": "manager"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "image": "registry.connect.redhat.com/citrix/cpx-13-0@sha256:54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d",
          "name": "cpx-13-0-54c57fa80f0d12d987c8e1fb2cb118539446f1114997e671dfd1604fab24d23d-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "611fbe6e9f14588c41ebe990",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.dcgm-exporter": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.device-plugin": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "affinity": {},
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": ""
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead"
            },
            "gfd": {
              "affinity": {},
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.gpu-feature-discovery": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "affinity": {},
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.mig-manager": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "affinity": {},
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.container-toolkit": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8"
            },
            "validator": {
              "affinity": {},
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "nodeSelector": {
                "nvidia.com/gpu.deploy.operator-validator": "true"
              },
              "podSecurityContext": {},
              "priorityClassName": "system-node-critical",
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:380392c15740edd8853ea65b1e19f3b9bd3afea04612f204c244bf5a23b328ce",
      "bundle_path_digest": "sha256:380392c15740edd8853ea65b1e19f3b9bd3afea04612f204c244bf5a23b328ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.7",
      "creation_date": "2021-08-20T14:38:38.562000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.7.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:51:03.933000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:3a812cf113f416baca9262fa8423f36141f35696eb6e7a51a7abb40f5ccd5f8c",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:8af02463a8b60b21202d0bf69bc1ee0bb12f684fa367f903d138df6cacc2d0ac",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:ffa284f1f359d70f0e1d6d8e7752d7c92ef7445b0d74965a8682775de37febf8",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "image": "nvcr.io/nvidia/driver@sha256:09ba3eca64a80fab010a9fcd647a2675260272a8c3eb515dfed6dc38a2d31ead",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:495ed3b42e0541590c537ab1b33bda772aad530d3ef6a4f9384d3741a59e2bf8",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:aa1f7bd526ae132c46f3ebe6ecfabe675889e240776ccc2155e31e0c48cc659e",
          "name": "gpu-operator-validator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.7.1",
      "version_original": "1.7.1"
    },
    {
      "_id": "611fbe929f14588c41ebe999",
      "alm_examples": [
        {
          "api_version": "anzograph.clusters.cambridgesemantics.com/v2",
          "kind": "AnzoGraph",
          "metadata": {
            "name": "azg01"
          },
          "spec": {
            "db": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_data": "anzograph-data-grpc",
                      "app_mgmt": "anzograph-mgmt-grpc"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_data": "anzograph-data-grpc",
                        "app_mgmt": "anzograph-mgmt-grpc"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
                          "name": "db",
                          "resources": {
                            "limits": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            },
                            "requests": {
                              "cpu": "8000m",
                              "memory": "8Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            },
            "deployFrontend": false,
            "frontend": {
              "nodeConfig": {
                "spec": {
                  "replicas": 1,
                  "selector": {
                    "matchLabels": {
                      "app_mgmt": "anzograph-frontend"
                    }
                  },
                  "serviceName": "anzograph-azg01",
                  "template": {
                    "metadata": {
                      "labels": {
                        "app_mgmt": "anzograph-frontend"
                      }
                    },
                    "spec": {
                      "containers": [
                        {
                          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
                          "name": "frontend",
                          "resources": {
                            "limits": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            },
                            "requests": {
                              "cpu": "2000m",
                              "memory": "4Gi"
                            }
                          }
                        }
                      ],
                      "serviceAccountName": "anzograph-operator"
                    }
                  }
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator-bundle@sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "bundle_path_digest": "sha256:9418a3505873ac387f2b5455ec7e696739a2bb6f03232f8c0f59489c605b96f2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-20T14:39:14.376000+00:00",
      "csv_description": "The AnzoGraph Operator provides the way to install and configure an AnzoGraph\ncluster on Red Hat K8S environment.\n\n### Installation\n Refer [installation instructions]( https://github.com/cambridgesemantics/csi-k8s-operator-anzograph/blob/v2.0.1/README_openshift_marketplace.md )\n\n### Documentation\n\nYou can find our documentation [here.]( https://docs.cambridgesemantics.com/anzograph/userdoc/ )\n\n### Support\n\nWe offer Support to our customers with the AnzoGraph db Enterprise Edition License [here]( https://customercenter.cambridgesemantics.com/ ). For AnzoGraph db Free Edition questions, get help from our Anzograph User Community at Stack Overflow. When submitting a question, include the tag 'anzograph'.",
      "csv_display_name": "AnzoGraph Operator",
      "csv_metadata_description": "kubernetes operator for AnzoGraph DB",
      "csv_name": "anzograph-operator.v2.0.102",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:42:47.423000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "anzograph-operator",
      "provided_apis": [
        {
          "group": "anzograph.clusters.cambridgesemantics.com",
          "kind": "AnzoGraph",
          "version": "v2"
        }
      ],
      "provider": "Cambridge Semantics Inc.",
      "related_images": [
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "anzograph-operator-a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732-annotation"
        },
        {
          "digest": "sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-operator@sha256:a5b212558f748ddc8156541b546290320b656506e039a18903ad9fa6e638e732",
          "name": "manager"
        },
        {
          "digest": "sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph@sha256:e3bdddf811b5ba69f388d023aea1ba538edd00e9f415c33ec555321d39129a36",
          "name": "anzograph_allinone"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph_db"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph_frontend"
        },
        {
          "digest": "sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-frontend@sha256:c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3",
          "name": "anzograph-frontend-c1443bcdc8e998fc699f61980a665f1a083350adf2d3d1d55a7cb55e31ca50b3-annotation"
        },
        {
          "digest": "sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "image": "registry.connect.redhat.com/cambridgesemantics/anzograph-db@sha256:8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5",
          "name": "anzograph-db-8a5bd26551990929fdb776d6b421a9713cb84e03b19c18f81b625582f7f41af5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "611fbee0dece23122b7a790f",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "bundle_path_digest": "sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-20T14:40:32.523000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:49:14.344000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.3.2-pr2",
      "version_original": "6.3.2-pr2"
    },
    {
      "_id": "612318869f14588c41ebe9ec",
      "alm_examples": [
        {
          "api_version": "ako.vmware.com/v1alpha1",
          "kind": "AKOConfig",
          "metadata": {
            "name": "ako-sample",
            "namespace": "avi-system"
          },
          "spec": {
            "akoSettings": {
              "apiServerPort": 8080,
              "clusterName": "my-cluster",
              "cniPlugin": "",
              "deleteConfig": false,
              "disableStaticRouteSync": false,
              "enableEVH": false,
              "fullSyncFrequency": "1800",
              "layer7Only": false,
              "logLevel": "INFO",
              "servicesAPI": false
            },
            "controllerSettings": {
              "cloudName": "Default-Cloud",
              "controllerIP": "",
              "controllerVersion": "20.1.5",
              "serviceEngineGroupName": "Default-Group"
            },
            "imagePullPolicy": "IfNotPresent",
            "imageRepository": "projects.registry.vmware.com/ako/amko",
            "l4Settings": {
              "advancedL4": false,
              "autoFQDN": "default",
              "defaultDomain": ""
            },
            "l7Settings": {
              "defaultIngController": true,
              "noPGForSNI": false,
              "passthroughShardSize": "SMALL",
              "serviceType": "ClusterIP",
              "shardVSSize": "LARGE"
            },
            "logFile": "avi.log",
            "mountPath": "/log",
            "networkSettings": {
              "subnetIP": "",
              "subnetPrefix": "",
              "vipNetworkList": [
                {
                  "networkName": ""
                }
              ]
            },
            "nodePortSelector": {
              "key": "",
              "value": ""
            },
            "resources": {
              "limits": {
                "cpu": "250m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/wavefronthq/ako-operator-bundle@sha256:6a41ad6e74de7e5c94af7781a001c4501fae4b7b5505dcbfd75b04053af1e1ce",
      "bundle_path_digest": "sha256:6a41ad6e74de7e5c94af7781a001c4501fae4b7b5505dcbfd75b04053af1e1ce",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-23T03:39:50.214000+00:00",
      "csv_description": "Operator to manage the artifacts of the AKO Controller",
      "csv_display_name": "AKO Operator",
      "csv_metadata_description": "",
      "csv_name": "ako-operator.v1.4.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:34:49.295000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ako-operator",
      "provided_apis": [
        {
          "group": "ako.vmware.com",
          "kind": "AKOConfig",
          "plural": "akoconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "ako.vmware.com",
          "kind": "AviInfraSetting",
          "plural": "aviinfrasettings",
          "version": "v1alpha1"
        },
        {
          "group": "ako.vmware.com",
          "kind": "HostRule",
          "plural": "hostrules",
          "version": "v1alpha1"
        },
        {
          "group": "ako.vmware.com",
          "kind": "HTTPRule",
          "plural": "httprules",
          "version": "v1alpha1"
        },
        {
          "group": "networking.x-k8s.io",
          "kind": "GatewayClass",
          "plural": "gatewayclasses",
          "version": "v1alpha1"
        },
        {
          "group": "networking.x-k8s.io",
          "kind": "Gateway",
          "plural": "gateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "VMware",
      "related_images": [
        {
          "digest": "sha256:3840a444c7a9e8f799e251779dca616fddc412712084da2620178b705117c493",
          "image": "projects.registry.vmware.com/ako/ako-operator@sha256:3840a444c7a9e8f799e251779dca616fddc412712084da2620178b705117c493",
          "name": "ako-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.2",
      "version_original": "1.4.2"
    },
    {
      "_id": "6125de5fbd674341b5c5f476",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "ccmNodeAgent": {
                "pullPolicy": "Always",
                "repository": "fortanix/ccm-node-agent-ubi7",
                "tag": "3.5.475"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "sgxSoftwareInstaller": {
                "pullPolicy": "Always",
                "repository": "fortanix/sgx-software-installer-ubi7",
                "tag": "3.5.475"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-operator-bundle@sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "bundle_path_digest": "sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-25T06:08:31.549000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities.\n\n## Installation\n* Choose a namespace to install the Operator. Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent Operator",
      "csv_metadata_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes",
      "csv_name": "ccm-node-agent-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:44:03.343000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ccm-node-agent-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "plural": "ccmnodeagents",
          "version": "v1"
        }
      ],
      "provider": "Fortanix Inc.",
      "related_images": [
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "ccm-node-agent-operator-73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4-annotation"
        },
        {
          "digest": "sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6125dedceb34b736524930f0",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "ccmNodeAgent": {
                "pullPolicy": "Always",
                "repository": "fortanix/ccm-node-agent-ubi7",
                "tag": "3.5.475"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "sgxSoftwareInstaller": {
                "pullPolicy": "Always",
                "repository": "fortanix/sgx-software-installer-ubi7",
                "tag": "3.5.475"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-operator-bundle@sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "bundle_path_digest": "sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-25T06:10:36.462000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities.\n\n## Installation\n* Choose a namespace to install the Operator. Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent Operator",
      "csv_metadata_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes",
      "csv_name": "ccm-node-agent-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:26:58.730000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ccm-node-agent-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "plural": "ccmnodeagents",
          "version": "v1"
        }
      ],
      "provider": "Fortanix Inc.",
      "related_images": [
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "ccm-node-agent-operator-73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4-annotation"
        },
        {
          "digest": "sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "612608dedece23122b7a7e84",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "ccmNodeAgent": {
                "pullPolicy": "Always",
                "repository": "fortanix/ccm-node-agent-ubi7",
                "tag": "3.5.475"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "sgxSoftwareInstaller": {
                "pullPolicy": "Always",
                "repository": "fortanix/sgx-software-installer-ubi7",
                "tag": "3.5.475"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-operator-bundle@sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "bundle_path_digest": "sha256:8c697c066566c5bf5c0d4c776ec0f7950a6bba26565d20c58a0bca26dd15f3e6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-08-25T09:09:50.757000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities.\n\n## Installation\n* Choose a namespace to install the Operator. Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent Operator",
      "csv_metadata_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes",
      "csv_name": "ccm-node-agent-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:12:22.886000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ccm-node-agent-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "plural": "ccmnodeagents",
          "version": "v1"
        }
      ],
      "provider": "Fortanix Inc.",
      "related_images": [
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "ccm-node-agent-operator-73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4-annotation"
        },
        {
          "digest": "sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:e30f7835cf52dbce9afdbaf55e5a93d8baf9c4b3a3ae488d1d42c1adba7f46af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "image": "fortanix/ccm-node-agent-operator@sha256:73309ff8e2ba77ec474dcfd19a29b624572bea6595990c64e6325e7987180ec4",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6127be69dece23122b7a8369",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ]
                },
                "sonatypeWork": "/sonatype-work"
              },
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:16ebccbf15157c2f7ba6d0873eead210f0c10fb4bce32e9f3fedcd1704fe7f30",
      "bundle_path_digest": "sha256:16ebccbf15157c2f7ba6d0873eead210f0c10fb4bce32e9f3fedcd1704fe7f30",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-26T16:16:41.332000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup. \nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy. \nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license \nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n    createSampleData: true\n    sonatypeWork: /sonatype-work\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.121.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:26:30.810000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc",
          "name": "nxiq-operator-certified-f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc-annotation"
        },
        {
          "digest": "sha256:f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:f397acba37cb3a04cd7815491e0dff2f34d99f13cce82dc7c9522f5e26705ebc",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "name": "iq"
        },
        {
          "digest": "sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "name": "nexus-iq-server-ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.121.0-1",
      "version_original": "1.121.0-1"
    },
    {
      "_id": "6127d9b3dece23122b7a8392",
      "alm_examples": [
        {
          "api_version": "modelbuilder.com/v1alpha1",
          "kind": "Modelbuilder",
          "metadata": {
            "name": "modelbuilder-sample"
          },
          "spec": {
            "backup_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "env_type": "prod",
            "in_memory_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "license": {
              "accept": false
            },
            "metadata_storage": {
              "storage#": "20G",
              "storage_class": "ibmc-block-bronze"
            },
            "photo_storage": {
              "storage#": "500G",
              "storage_class": "ibmc-file-gold-gid"
            },
            "vm_request_method": "dynamic"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/modelbuilder-bundle@sha256:cf8245accfa24c18ad9d27792b5bd2379fa476cc1f221c749e10f1b0f770f8ff",
      "bundle_path_digest": "sha256:cf8245accfa24c18ad9d27792b5bd2379fa476cc1f221c749e10f1b0f770f8ff",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-26T18:13:07.816000+00:00",
      "csv_description": "IBM Services Software Model Builder for Vision is an AI training platform that can use the capabilities of IBM Cloud and its GPUs to quickly train computer vision models for compatible mobile apps. IBM Services Software Inspection Workbench iOS and iPadOS app will be used as the exclusive UI for labeling and training. Specifically, IBM Model Builder for Vision will train computer vision models that can then be deployed for use on the IBM Services Software Inspector Portable , IBM Services Software Inspector Wearable and the IBM Maximo Visual Inspection Mobile apps.",
      "csv_display_name": "IBM Model Builder for Vision",
      "csv_metadata_description": "",
      "csv_name": "ibm-modelbuilder-for-vision.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:44:39.264000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "model-builder-for-vision-certified",
      "provided_apis": [
        {
          "group": "modelbuilder.com",
          "kind": "Modelbuilder",
          "plural": "modelbuilders",
          "version": "v1alpha1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8",
          "name": "modelbuilder-operator-7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8-annotation"
        },
        {
          "digest": "sha256:7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-operator@sha256:7839f12f1bd45ff5df207a30e254996701ec4a3034b3f29f0e89abe30b89e5e8",
          "name": "modelbuilder"
        },
        {
          "digest": "sha256:8ce51f160748de50a023e6fe8c2a50f3f0088988e1244e25de9d27594f4c0b2e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:8ce51f160748de50a023e6fe8c2a50f3f0088988e1244e25de9d27594f4c0b2e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:0c5350728fd5f7739eacaee7f32456d02cf1a2465f9d7fc48bacdcf73dcfa142",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:0c5350728fd5f7739eacaee7f32456d02cf1a2465f9d7fc48bacdcf73dcfa142",
          "name": "postgres_cli"
        },
        {
          "digest": "sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "image": "registry.connect.redhat.com/crunchydata/pgo-deployer@sha256:4c5f605669edc2125a6aea31c66c89cef524b57284eac302f35bbfa4680d1467",
          "name": "pgo_deploy"
        },
        {
          "digest": "sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-pgo-util@sha256:7d7ac1726d07e5c0cce79fa2b7d6ea7dfac3b94a1873ceeac84a90b2f5a0273d",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:2454f6ee74033c8c6ad55868cee4509c78b6da523110ce28ceaa6b99ed06e582",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-augmentor@sha256:2454f6ee74033c8c6ad55868cee4509c78b6da523110ce28ceaa6b99ed06e582",
          "name": "coreml_augmentor"
        },
        {
          "digest": "sha256:50389b84e5857dfb512740192c151896bc538e1afc037dc823b48fd002419d68",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-image-server@sha256:50389b84e5857dfb512740192c151896bc538e1afc037dc823b48fd002419d68",
          "name": "nginx"
        },
        {
          "digest": "sha256:0f3f57dd27aa346b030bb0b6d5e8ffe3f225e4f89c1187c6b00803d320a60898",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-auth-service@sha256:0f3f57dd27aa346b030bb0b6d5e8ffe3f225e4f89c1187c6b00803d320a60898",
          "name": "mb_auth_coreml"
        },
        {
          "digest": "sha256:e3bbe7f8dd13da47271e98c8e897ceae14ec34a2b18c377d560fbabfbd52d2c6",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-cv-training-service@sha256:e3bbe7f8dd13da47271e98c8e897ceae14ec34a2b18c377d560fbabfbd52d2c6",
          "name": "mb_service_coreml"
        },
        {
          "digest": "sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "image": "registry.redhat.io/rhel8/redis-6@sha256:e43443f9b8a5c0c4f228c23f302b37444f74b55539b6fd5f7ca4d6ebc9d5e0f1",
          "name": "redis"
        },
        {
          "digest": "sha256:f28f53451464900701cc711a88b86372dab2b6d6f59cc40ad302f8e9f462c1b7",
          "image": "registry.connect.redhat.com/ibm/modelbuilder-util@sha256:f28f53451464900701cc711a88b86372dab2b6d6f59cc40ad302f8e9f462c1b7",
          "name": "util"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61295ccdeb34b73652493666",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ]
                },
                "sonatypeWork": "/sonatype-work"
              },
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:8a3a9689f37c693a1a87bbe2c1f794df9d577fb048c3e4ef74d88e3d5328b594",
      "bundle_path_digest": "sha256:8a3a9689f37c693a1a87bbe2c1f794df9d577fb048c3e4ef74d88e3d5328b594",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-08-27T21:44:45.783000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup. \nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy. \nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license \nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n    createSampleData: true\n    sonatypeWork: /sonatype-work\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.121.0-2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:25:21.313000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3",
          "name": "nxiq-operator-certified-866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3-annotation"
        },
        {
          "digest": "sha256:866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:866afa870edc9e18d904c287b8c52daefdac775c01fbbaa4ed8b68e4aba64ed3",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "name": "iq"
        },
        {
          "digest": "sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790",
          "name": "nexus-iq-server-ce08dbabd686ab02f246b43dccb708e2c4d81d656a091965dd3b73123091f790-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.121.0-2",
      "version_original": "1.121.0-2"
    },
    {
      "_id": "613017c5dc2dfaaae870540f",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:62250d515fa374b29f57381fea8f4f9a56ff6e00056b38476e629c91606c7369",
      "bundle_path_digest": "sha256:62250d515fa374b29f57381fea8f4f9a56ff6e00056b38476e629c91606c7369",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-02T00:16:05.959000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:39:55.705000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.3.1",
      "version_original": "8.3.1"
    },
    {
      "_id": "6133af63c61b370d4fd4cca6",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v1",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "hxcsidriver-sample"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "",
              "clusteruuid": "",
              "dockerRegistryName": "",
              "iscsiUrl": "",
              "token": "exampletoken",
              "url": ""
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.0-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.1-619",
              "provisioner": "hxcsi-csi-provisioner:2.1.2-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.1.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.1.0-cisco1",
              "tag": ""
            },
            "imagePullSecrets": [],
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 1,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:fec9c6052c842ebe55a3a758d846ad533afb0baaee88aba60f3110358cf4dde6",
      "bundle_path_digest": "sha256:fec9c6052c842ebe55a3a758d846ad533afb0baaee88aba60f3110358cf4dde6",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-04T17:39:47.735000+00:00",
      "csv_description": "This is a HELM based Operator to deploy HXCSI driver to a RedHat OpenShift cluster",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:27:00.680000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        }
      ],
      "provider": "Cisco Systems Inc",
      "related_images": [
        {
          "digest": "sha256:10492e703c017eaa4c95e847477a3a7b7e3a512c5a0679a7d67dd01813223d5a",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:10492e703c017eaa4c95e847477a3a7b7e3a512c5a0679a7d67dd01813223d5a",
          "name": "hxcsi-helm-bundle-10492e703c017eaa4c95e847477a3a7b7e3a512c5a0679a7d67dd01813223d5a-annotation"
        },
        {
          "digest": "sha256:518f5e036a6c67257c2926d9cad073e46ba0663c1386b97aadbf51d3a27ab559",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:518f5e036a6c67257c2926d9cad073e46ba0663c1386b97aadbf51d3a27ab559",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4b75276a513a5f1f68ffc84e0b99d086f428846e2e5ef93860c646e9760c241d",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:4b75276a513a5f1f68ffc84e0b99d086f428846e2e5ef93860c646e9760c241d",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.1",
      "version_original": "1.2.1"
    },
    {
      "_id": "6135659f539c8cedbde1d2a4",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:939b68f8608acee4650257aab96f9eb46f3e6aa80ccc6ea1aeb5c37ae7cce66b",
      "bundle_path_digest": "sha256:939b68f8608acee4650257aab96f9eb46f3e6aa80ccc6ea1aeb5c37ae7cce66b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-06T00:49:35.163000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.7.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.7.0\n\n### Supported Platforms\n\n* OpenShift v4.5, v4.6, v4.7\n\n### Supported Operating Systems\n\n* RHEL 7.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:48:35.979000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "version": "v1"
        }
      ],
      "provider": "Hitachi",
      "related_images": [
        {
          "digest": "sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "name": "hspc-operator-5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72-annotation"
        },
        {
          "digest": "sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.7.0",
      "version_original": "1.7.0"
    },
    {
      "_id": "61383f2e89213684728b27b2",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": "1",
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": " ",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be \n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,vci,pgaudit,pg_prewarm'\nsession_preload_libraries='vci,pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be \n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n\n# vci parameters in default fep installation\nvci.enable = on\nvci.maintenance_work_mem = 256MB\nvci.max_local_ros = 64MB\nvci.force_max_parallelism = off\n\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\n\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'DISALLOW_TO_FAILOVER'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nconnect_timeout = 10000\nsr_check_period = 0\nsr_check_user = ' postgres '\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = off\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = master\n\n",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "toFEPcluster": "new-fep-2"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-bundle@sha256:8b801772768fe15c3098890ef53fc8bbd434e80cfdfbd2b2dae8d516fa61f972",
      "bundle_path_digest": "sha256:8b801772768fe15c3098890ef53fc8bbd434e80cfdfbd2b2dae8d516fa61f972",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-08T04:42:22.935000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 12 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution\nof PostgreSQL to support enterprise-level workloads and provide improved deployment and management,\navailability, performance, data governance and security.\n\nAvailable as a multi-architecture container built for both amd64 and s390x.\n\nUse of the product is subject to Fujitsu evaluation license located at:\nhttps://www.fast.fujitsu.com/fujitsu-enterprise-postgres-trial-version-software-evaluation-license-agreement\nand the license period is 90 days after the download\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 12 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 12",
      "csv_name": "fujitsu-enterprise-operator.v2.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:27:38.359000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "fep-ansible-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "name": "fujitsu-enterprise-postgres-12-operator-618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d-annotation"
        },
        {
          "digest": "sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:618b61707b38fe8a9636766261a5ea70b45f4c2549dde769c5b20a8ebca8f59d",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:a9edcb9a3464c19bd6e7d772a084f05452b893b9ae3dc1dbf30da35dcb681ee3",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:a9edcb9a3464c19bd6e7d772a084f05452b893b9ae3dc1dbf30da35dcb681ee3",
          "name": "fep"
        },
        {
          "digest": "sha256:953833154e75d79b15f96790368ad38fb20f05a48bf1b75be1968632fd5bdb40",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:953833154e75d79b15f96790368ad38fb20f05a48bf1b75be1968632fd5bdb40",
          "name": "backup"
        },
        {
          "digest": "sha256:0bdff064fcebea38f4d796ddbf0de211e4ba6bb297e42dc514d5ef44980ee313",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:0bdff064fcebea38f4d796ddbf0de211e4ba6bb297e42dc514d5ef44980ee313",
          "name": "restore"
        },
        {
          "digest": "sha256:2ecd8feb1a9fec0ed015908a5c53a8d4df405703068d0de21effdb3f3d33a8df",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:2ecd8feb1a9fec0ed015908a5c53a8d4df405703068d0de21effdb3f3d33a8df",
          "name": "pgpool2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.2.2",
      "version_original": "2.2.2"
    },
    {
      "_id": "613841292c743eb28fafda89",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:939b68f8608acee4650257aab96f9eb46f3e6aa80ccc6ea1aeb5c37ae7cce66b",
      "bundle_path_digest": "sha256:939b68f8608acee4650257aab96f9eb46f3e6aa80ccc6ea1aeb5c37ae7cce66b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-08T04:50:49.373000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.7.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.7.0\n\n### Supported Platforms\n\n* OpenShift v4.5, v4.6, v4.7\n\n### Supported Operating Systems\n\n* RHEL 7.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:41:33.369000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "plural": "hspcs",
          "version": "v1"
        }
      ],
      "provider": "Hitachi",
      "related_images": [
        {
          "digest": "sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "name": "hspc-operator-5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72-annotation"
        },
        {
          "digest": "sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:5a8fce133552bd933fd51663cc37a139b461ea6b9b34fb84224fba2747579e72",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.7.0",
      "version_original": "1.7.0"
    },
    {
      "_id": "6138a23e2c743eb28fafdb31",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "DynaKube",
          "metadata": {
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "image": ""
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "classicFullStack": {
              "enabled": true,
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master",
                  "operator": "Exists"
                }
              ]
            },
            "kubernetesMonitoring": {
              "enabled": true
            },
            "oneAgent": {
              "image": ""
            },
            "routing": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "bundle_path_digest": "sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-08T11:45:02.456000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle of various Dynatrace components in Kubernetes and OpenShift.\n\nAs of launch, the Dynatrace Operator can be used to deploy a containerized ActiveGate for Kubernetes API monitoring. New capabilities will be added to the Dynatrace Operator over time including metric routing, and API monitoring for AWS, Azure, GCP, and vSphere.\n\nWith v0.2.0 we added the classicFullStack functionality which allows rolling out the OneAgent to your Kubernetes cluster.\nFurthermore, the Dynatrace Operator is now capable of rolling out a containerized ActiveGate for routing the OneAgent traffic.\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\n#### Kubernetes Monitoring\n* **Kubernetes Monitoring** - when enabled the Dynatrace Operator will create a containerized ActiveGate with the capability to monitor your OpenShift cluster\n* **Replicas** - defines how many replicas of the containerized ActiveGate should be created\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace ActiveGate on, based on labels\n* **Environment variables** - define environment variables for the ActiveGate container\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:18:51.815000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "version": "v1alpha1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator-afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3-annotation"
        },
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "613dc3dcc9bc35f21dc4a26e",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "bundle_path_digest": "sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-12T09:09:48.718000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:14:02.965000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        }
      ],
      "provider": "AppDynamics LLC",
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.6.11",
      "version_original": "0.6.11"
    },
    {
      "_id": "613ee1f2d63f43cf6ee374ea",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "bundle_path_digest": "sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T05:30:26.281000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:28:14.556000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [],
      "provider": "AppDynamics LLC",
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.6.11",
      "version_original": "0.6.11"
    },
    {
      "_id": "613ee24fa5ebcd070d163d7c",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "DynaKube",
          "metadata": {
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "image": ""
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "classicFullStack": {
              "enabled": true,
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master",
                  "operator": "Exists"
                }
              ]
            },
            "kubernetesMonitoring": {
              "enabled": true
            },
            "oneAgent": {
              "image": ""
            },
            "routing": {
              "enabled": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "bundle_path_digest": "sha256:1a3898915535373eed8f860b8eb906fa2ecaebbb95c4e2d74488e12ca1540f9b",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T05:31:59.788000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle of various Dynatrace components in Kubernetes and OpenShift.\n\nAs of launch, the Dynatrace Operator can be used to deploy a containerized ActiveGate for Kubernetes API monitoring. New capabilities will be added to the Dynatrace Operator over time including metric routing, and API monitoring for AWS, Azure, GCP, and vSphere.\n\nWith v0.2.0 we added the classicFullStack functionality which allows rolling out the OneAgent to your Kubernetes cluster.\nFurthermore, the Dynatrace Operator is now capable of rolling out a containerized ActiveGate for routing the OneAgent traffic.\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\n#### Kubernetes Monitoring\n* **Kubernetes Monitoring** - when enabled the Dynatrace Operator will create a containerized ActiveGate with the capability to monitor your OpenShift cluster\n* **Replicas** - defines how many replicas of the containerized ActiveGate should be created\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace ActiveGate on, based on labels\n* **Environment variables** - define environment variables for the ActiveGate container\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:31:09.568000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator-afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3-annotation"
        },
        {
          "digest": "sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:afac1c0f4035ac032a0224f1214e12ab58fb6262f90e630598482abbfdccbac3",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:3975446f23bfd4cab0930d3cba62a795893f9085084e6887121ceaa94391c849",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "613ee336a5ebcd070d163d7d",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:f77759337cc4364cc169b25af560ba93386cd2516fbfe022b2dfc8305405bdba",
      "bundle_path_digest": "sha256:f77759337cc4364cc169b25af560ba93386cd2516fbfe022b2dfc8305405bdba",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T05:35:50.115000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:29:53.286000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "613ee419c9bc35f21dc4a278",
      "alm_examples": [
        {
          "api_version": "kpow.io/v1beta1",
          "kind": "Kpow",
          "metadata": {
            "name": "kpow-sample"
          },
          "spec": {
            "bootstrap": "",
            "data_policy_configuration": {
              "data_policy_configuration_file": ""
            },
            "environment_name": "change me",
            "github_sso_options": {
              "auth_provider_type": "",
              "openid_api_uri": "",
              "openid_auth_uri": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": "",
              "openid_token_uri": ""
            },
            "global_access_configuration": {
              "allow_broker_edit": "",
              "allow_connect_create": "",
              "allow_connect_edit": "",
              "allow_group_edit": "",
              "allow_schema_create": "",
              "allow_schema_edit": "",
              "allow_topic_create": "",
              "allow_topic_delete": "",
              "allow_topic_edit": "",
              "allow_topic_inspect": "",
              "allow_topic_produce": ""
            },
            "https_configuration": {
              "enable_https": false,
              "https_keystore": "",
              "https_keystore_password": "",
              "https_keystore_type": "",
              "https_truststore": "",
              "https_truststore_password": "",
              "https_truststore_type": ""
            },
            "kafka_cluster_configuration": {
              "sasl_jaas_config": "",
              "sasl_login_callback_handler_class": "",
              "sasl_mechanism": "",
              "security_protocol": "",
              "ssl_cipher_suites": "",
              "ssl_enabled_protocols": "",
              "ssl_endpoint_identification_algorithm": "",
              "ssl_key_password": "",
              "ssl_keymanager_algorithm": "",
              "ssl_keystore_location": "",
              "ssl_keystore_password": "",
              "ssl_keystore_type": "",
              "ssl_protocol": "",
              "ssl_provider": "",
              "ssl_secure_random_implementation": "",
              "ssl_trustmanager_algorithm": "",
              "ssl_truststore_location": "",
              "ssl_truststore_password": "",
              "ssl_truststore_type": ""
            },
            "kafka_connect_configuration": {
              "connect_auth": "",
              "connect_basic_auth_pass": "",
              "connect_basic_auth_user": "",
              "connect_group_id": "",
              "connect_offset_storage_topic": "",
              "connect_rest_url": ""
            },
            "license_configuration": {
              "license_code": "your-licence-code",
              "license_expiry": "your-license-expiry",
              "license_id": "your-license-id",
              "license_signature": "e.g. aa8ac6df95...",
              "licensee": "your-org"
            },
            "live_mode_configuration": {
              "live_mode_enabled": "",
              "live_mode_interval_ms": "",
              "live_mode_max_concurrent_users": "",
              "live_mode_period_ms": ""
            },
            "okta_sso_options": {
              "auth_provider_type": "",
              "okta_organisation": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": ""
            },
            "prometheus_egress": false,
            "rbac_configuration": {
              "rbac_configuration_file": ""
            },
            "saml_sso_options": {
              "auth_provider_type": "",
              "saml_acs_url": "",
              "saml_cert": "",
              "saml_metadata_file": "",
              "saml_relying_party_identifier": ""
            },
            "schema_registry_configuration": {
              "schema_registry_auth": "",
              "schema_registry_name": "",
              "schema_registry_password": "",
              "schema_registry_url": "",
              "schema_registry_user": ""
            },
            "serdis_configuration": {
              "available_key_serdes": "",
              "available_value_serdes": "",
              "custom_serdes": "",
              "default_key_serdes": "",
              "default_value_serdes": ""
            },
            "slack_integration": {
              "slack_webhook_url": ""
            },
            "system_configuration": {
              "http_port": "",
              "replication_factor": "",
              "show_splash": "",
              "snapshot_parallelism": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/operatr-io/kpow-operator-bundle@sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "bundle_path_digest": "sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T05:39:37.241000+00:00",
      "csv_description": "\nUse kPow to monitor and manage your Kafka Clusters, Schema Registries, and Connect Clusters.\n\nThe minimum required configuration to run kPow is **license details and a bootstrap URL**.\n\nIf you have a Red Hat Marketplace subscription to kPow you will receive a license directly.\n\nSign-up online to receive a [free 30-day trial license](https://kpow.io/try) in minutes.\n\nkPow is compatible with Red Hat AMQ Streams.\n\n----\n\n##kPow CR Spec Details\n\nAfter you have installed the KPow operator, create a CR to get an instance of KPow. You can setup a Kpow instance with custom configuration using the specifications given in the CR. Refer below table to understand the available specifications for custom configuration of KPow. Set the required value for specifications while creating the CR.\n\n-----\n\nRequired Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**License Details**               | If you need a license, start a [free 30-day trial today](https://kpow.io/try).\n`license_id`                      | a620baa9-956e-43bf-9bc5-adf635533c4a\n`license_code`                      | RH_MARKETPLACE\n`licensee`                          | Your Organisation\n`license_expiry`                    | \"2022-28-12\" - quoted to ensure expiry field interpreted as a string, not a date.\n`license_signature`                 | 8094DEC9...\n**Minimum Configuration**         | kPow will start with only license details and a Kafka bootstrap URL.\n`bootstrap`                        | The Bootstrap URL of your Kafka Cluster\n\nOptional Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**System Options**                | General system configuration\n`environment_name`                  | A meaningful name for this installation, e.g. \"Trade Book (Staging)\"\n`http_port`                         | The port that kPow will serve its UI (default: 3000)\n`show_splash`                       | Show the kPow splash screen for each new user session (default: true)\n[**System HTTPS Options**](https://docs.kpow.io/features/https-connections) | the kPow UI can be served over HTTPS\n`enable_https`                      | default: false \n`https_keystore_location`           | e.g. \"/ssl/https.keystore.jks\"\n`https_keystore_type`               | e.g. JKS\n`https_keystore_password`           | e.g. \"ssl-key-pass\"\n`https_truststore_location`         | e.g. \"/ssl/https.truststore.jks\"\n`https_truststore_type`             | e.g. JKS\n`https_truststore_password`         | e.g. \"ssl-trust-pass\"\n[**Kafka Cluster Options**](https://kafka.apache.org/documentation/#adminclientconfigs) | kPow uses the same Kafka Cluster connection options as a standard consumer, producer, or admin client.\n`security_protocol`                 | e.g. SASL_SSL\n`sasl_mechanism`                    | e.g. PLAIN\n`sasl_jaas_config`                  | e.g. \"org.apache.kafka.common.security.plain.Plain..\"\n`sasl_login_callback_handler_class` | e.g. \"com.corp.kafka.security.sasl.oauth.KafkaBrokerTokenCreator\"\n`ssl_keystore_location`             | e.g. \"/ssl/kafka.keystore.jks\"\n`ssl_keystore_password`             | e.g. \"keystore-pass-123\"\n`ssl_key_password`                  | e.g. \"key-pass-123\"\n`ssl_keystore_type`                 | e.g. JKS\n`ssl_keymanager_algorithm`          | e.g. SunX509\n`ssl_truststore_location`           | e.g. \"/ssl/kafka.truststore.jks\"\n`ssl_truststore_password`           | e.g. \"trust-pass-123\"\n`ssl_truststore_type`               | e.g. JKS\n`ssl_trustmanager_algorithm`        | e.g. PKIX\n`ssl_endpoint_identification_algorithm` | e.g. https\n`ssl_provider`                      | e.g. \"default\"\n`ssl_cipher_suites`                 | e.g. \"default: \n`ssl_protocol`                      | e.g. TLS\n`ssl_enabled_protocols`             | e.g. \"TLSv.12,TLSv1.1,TLSv1\"\n`ssl_secure_random_implementation`  | e.g. SHA1PRNG\n[**Schema Registry**](https://docs.kpow.io/config/schema-registry) | Monitor and manage a Schema Registry connected to your Kafka Cluster\n`schema_registry_url`               | e.g. \"https://registry-host\"\n`schema_registry_auth`              | e.g. USER_INFO\n`schema_registry_user`              | e.g. registry-user\n`schema_registry_password`          | e.g. registry-pass\n[**Kafka Connect**](https://docs.kpow.io/config/kafka-connect) | Monitor and manage a Kafka Connect Cluster connected to your Kafka Cluster\n`connect_rest_url`                  | e.g. http://localhost:8083\n`connect_auth`                      | e.g. BASIC\n`connect_basic_auth_user`           | e.g. connect-user\n`connect_basic_auth_pass`           | e.g. connect-pass\n`connect_group_id`                  | e.g. connect-group-id\n`connect_offset_storage_topic`      | e.g. connect-topic\n[**Live Mode**](https://docs.kpow.io/features/live-mode) | View and monitor your Kafka resources in near-realtime\n`live_mode_enabled`                 | default: true\n`live_mode_period_ms`               | The duration of a live mode session, default: 60000ms / one minute\n`live_mode_interval`                | The duration between live mode snapshot gathering, default: 5000ms / five seconds\n`live_mode_max_concurrent_users`    | The number of concurrent live mode sessions that may be active, default: 2\n**Data Inspect**                  | Provide custom serdes, set default serdes, or restrict serdes available to users\n[custom_serdes](https://docs.kpow.io/features/data-inspect/serdes#custom-serdes) | e.g. \"io.kpow.SerdeOne,io.kpow.SerdeTwo\"\n`default_key_serdes`                | e.g. \"JSON\"\n`default_value_serdes`              | e.g. \"AVRO\"\n`available_key_serdes`              | e.g. \"JSON,String,Transit / JSON\"\n`available_value_serdes`            | e.g. \"JSON,String,io.kpow.SerdeOne\"\n[**Prometheus Endpoints**](https://docs.kpow.io/features/prometheus) | kPow provides metrics and offsets via Prometheus Endpoints for scraping into your enterprise monitoring system of choice.\n`prometheus_egress`                 | default: false\n[**Slack Integration**](https://docs.kpow.io/features/slack-integration) | kPow can send audit log records to a slack channel of your choosing\n`slack_webhook_url`                 | e.g \"https://hooks.slack.com/services/...\"\n[**Simple Access Control**](https://docs.kpow.io/user-authorization/simple-access-control) | kPow supports simple control of users actions via global access controls\n`allow_topic_create`                | default: false - Users may create new topics\n`allow_topic_delete`                | default: false - Users may delete existing topics\n`allow_topic_inspect`               | default: false - Users may view topic key and value content\n`allow_topic_produce`              | default: false - Users may produce new messages to topics\n`allow_topic_edit`                  | default: false - Users may edit topic configuration\n`allow_broker_edit`                 | default: false - Users may edit broker configuration\n`allow_group_edit`                  | default: false - Users may edit and delete consumer groups and group offsets\n`allow_schema_edit`                 | default: false - Users may edit schemas and subjects\n`allow_schema_create`               | default: false - Users may create new schemas and subjects\n`allow_connect_create`              | default: false - Users may create new connectors and tasks\n`allow_connect_edit`                | default: false - Users may edit, pause, delete, and restart connectors and tasks\n[**Role Based Access Control**](https://docs.kpow.io/user-authorization/role-based-access-control) | kPow supports Role Based Access Control when used in conjunction with User Authentication\n`rbac_configuration_file`           | e.g. \"/path/to/rbac-config.yaml\"\n[**Data Policies**](https://docs.kpow.io/features/data-policies) | kPow supports masking and redaction of sensitive data in Data Inspect and kREPL results\n`data_policy_configuration_file`       | e.g. \"/path/to/masking/config.yaml\"\n[**User Authentication**](https://docs.kpow.io/user-authentication/overview) | kPow supports a number of methods of User Authentication including SAML, Okta, and OpenID\n[**Okta SSO**](https://docs.kpow.io/user-authentication/openid/okta) | Authenticate users with Okta \n`auth_provider_type`                | \"okta\"\n`okta_organisation`                 | e.g. \"your-organisation\"\n`openid_client_id`                  | The 'Client ID' found in the \"Client Credentials\" section of your Okta integration\n`openid_client_secret`              | The 'Client Secret' found in the \"Client Credentials\" section of your Okta integration\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com\"\n[**Github SSO**](https://docs.kpow.io/user-authentication/openid/github) | Authenticate users with Github (including Github Enterprise)\n`auth_provider_type`                | \"github\"\n`openid_token_id`                   | e.g. \"https://github.com/login/oauth/access_token\" or \"[GHE Server URL]/login/oauth/access_token\"\n`openid_auth_uri`                   | e.g. \"https://github.com/login/oauth/authorize\" or \"[GHE Server URL]/login/oauth/authorize\"\n`openid_api_uri`                    | e.g. \"https://api.github.com/user\" or, \"[GHE Server URL]/api/v3/user\"\n`openid_client_id`                  | e.g. The 'Client ID' found in your configured Github Oath App\n`openid_client_secret`              | The 'Client Secret' found in your configured Github Oath App\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com/\"\n[**SAML SSO**](https://docs.kpow.io/user-authentication/saml) | Authenticate users with SAML (custom, Azure AD, AWS SSO, Okta, etc)\n`auth_provider_type`                | \"saml\"\n`saml_relying_party_identifier`     | e.g. \"kpow.io\"\n`saml_asc_url`                      | e.g. \"https://kpow.corp.com/saml\"\n`saml_metadata_file`                | e.g. \"/opt/kpow/aws-metadata.xml\" (optional)\n`saml_cert`                         | e.g. \"/var/certs/saml-cert.cer\"\n\n----\n\n## Providing Configuration Files to kPow\n\nSome of the configuration above is provided as files (e.g. YAML or Keystores). You will need to provide these iles in the form of secrets or configmaps.\n\nFor Example the specification ```https_keystore_location``` needs a keystore file in location *\"/ssl/https.keystore.jks\"*.\n\nThe Operator expectes the file in the form of a secret to be available in the namespace where its installed. \n\nPlease follow below instructions to know how to create the Secret or configmap for such CR Specifications listed above:\n\n**Command to Create ConfigMaps from a file:**\n\n```\n  oc create configmap <name of configmap> --from-file <file name> -n <project-name>\n```\n\n**Command to create secrets from a file:**\n\n```\n  oc create secret generic <name of secret> --from-file <file name> -n <project-name>\n```\n\n  **NOTE**:The configmaps and secrets must be created prior to running the operator and must adhere to the names mentioned below.\t\n  \n----    \nCR Spec          \t  \t\t\t\t\t\t\t    \t|       CR Value\t\t\t|  Creation command\n--------------------------------------------------------|---------------------------|-----------------------------\n`rbac_configuration.rbac_configuration_file`\t\t\t\t|/opt/kpow/rbac-config.yaml\t|oc create rbac-configuration --from-file rbac-config.yaml -n <project-name\\>\n`data_policy_configuration. data_policy_configuration_file`|/opt/kpow/data-config.yml\t|oc create data-policy-configuration --from-file data-config.yml -n <project-name\\>\n`kafka_cluster_configuration.ssl_keystore_location`\t\t|/ssl/kafka.keystore.jks\t|oc create secret generic kafka-keystore --from-file kafka.keystore.jks -n <project-name\\>\n`kafka_cluster_configuration.ssl_truststore_location`\t\t|/ssl/kafka.truststore.jks\t|oc create secret generic kafka-truststore --from-file kafka.truststore.jks -n <project-name\\>\n`https_configuration.https_keystore`\t\t\t\t\t\t|/ssl/https.keystore.jks\t|oc create secret generic https-keystore --from-file https.keystore.jks -n <project-name\\>\n`https_configuration.https_truststore`\t\t\t\t\t|/ssl/https.truststore.jks\t|oc create secret generic https-truststore --from-file https.truststore.jks -n   <project-name\\>\n`saml_sso_options.saml_metadata_file`\t\t\t\t\t\t|/opt/kpow/aws-metadata.xml\t|oc create saml-metadata --from-file aws-metadata.xml -n <project-name\\>\n`saml_sso_options.saml_cert`\t\t\t\t\t\t\t\t|/var/certs/saml-cert.cer\t|oc create secret generic saml-cert --from-file saml-cert.cer -n <project-name\\>\n",
      "csv_display_name": "kPow for Apache Kafka",
      "csv_metadata_description": "kPow is a toolkit for engineers who build, manage, and maintain systems powered by Apache Kafka",
      "csv_name": "kpow-io.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:53:45.174000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kpow-io-certified",
      "provided_apis": [],
      "provider": "Operatr.IO, Inc.",
      "related_images": [
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow-9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185-annotation"
        },
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "image": "registry.connect.redhat.com/operatr-io/kpow-operator@sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "name": "manager"
        },
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "613ee473c9bc35f21dc4a279",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:f77759337cc4364cc169b25af560ba93386cd2516fbfe022b2dfc8305405bdba",
      "bundle_path_digest": "sha256:f77759337cc4364cc169b25af560ba93386cd2516fbfe022b2dfc8305405bdba",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-13T05:41:07.839000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:25:37.116000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "613f28f8d63f43cf6ee37505",
      "alm_examples": [
        {
          "api_version": "kpow.io/v1beta1",
          "kind": "Kpow",
          "metadata": {
            "name": "kpow-sample"
          },
          "spec": {
            "bootstrap": "",
            "data_policy_configuration": {
              "data_policy_configuration_file": ""
            },
            "environment_name": "change me",
            "github_sso_options": {
              "auth_provider_type": "",
              "openid_api_uri": "",
              "openid_auth_uri": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": "",
              "openid_token_uri": ""
            },
            "global_access_configuration": {
              "allow_broker_edit": "",
              "allow_connect_create": "",
              "allow_connect_edit": "",
              "allow_group_edit": "",
              "allow_schema_create": "",
              "allow_schema_edit": "",
              "allow_topic_create": "",
              "allow_topic_delete": "",
              "allow_topic_edit": "",
              "allow_topic_inspect": "",
              "allow_topic_produce": ""
            },
            "https_configuration": {
              "enable_https": false,
              "https_keystore": "",
              "https_keystore_password": "",
              "https_keystore_type": "",
              "https_truststore": "",
              "https_truststore_password": "",
              "https_truststore_type": ""
            },
            "kafka_cluster_configuration": {
              "sasl_jaas_config": "",
              "sasl_login_callback_handler_class": "",
              "sasl_mechanism": "",
              "security_protocol": "",
              "ssl_cipher_suites": "",
              "ssl_enabled_protocols": "",
              "ssl_endpoint_identification_algorithm": "",
              "ssl_key_password": "",
              "ssl_keymanager_algorithm": "",
              "ssl_keystore_location": "",
              "ssl_keystore_password": "",
              "ssl_keystore_type": "",
              "ssl_protocol": "",
              "ssl_provider": "",
              "ssl_secure_random_implementation": "",
              "ssl_trustmanager_algorithm": "",
              "ssl_truststore_location": "",
              "ssl_truststore_password": "",
              "ssl_truststore_type": ""
            },
            "kafka_connect_configuration": {
              "connect_auth": "",
              "connect_basic_auth_pass": "",
              "connect_basic_auth_user": "",
              "connect_group_id": "",
              "connect_offset_storage_topic": "",
              "connect_rest_url": ""
            },
            "license_configuration": {
              "license_code": "your-licence-code",
              "license_expiry": "your-license-expiry",
              "license_id": "your-license-id",
              "license_signature": "e.g. aa8ac6df95...",
              "licensee": "your-org"
            },
            "live_mode_configuration": {
              "live_mode_enabled": "",
              "live_mode_interval_ms": "",
              "live_mode_max_concurrent_users": "",
              "live_mode_period_ms": ""
            },
            "okta_sso_options": {
              "auth_provider_type": "",
              "okta_organisation": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": ""
            },
            "prometheus_egress": false,
            "rbac_configuration": {
              "rbac_configuration_file": ""
            },
            "saml_sso_options": {
              "auth_provider_type": "",
              "saml_acs_url": "",
              "saml_cert": "",
              "saml_metadata_file": "",
              "saml_relying_party_identifier": ""
            },
            "schema_registry_configuration": {
              "schema_registry_auth": "",
              "schema_registry_name": "",
              "schema_registry_password": "",
              "schema_registry_url": "",
              "schema_registry_user": ""
            },
            "serdis_configuration": {
              "available_key_serdes": "",
              "available_value_serdes": "",
              "custom_serdes": "",
              "default_key_serdes": "",
              "default_value_serdes": ""
            },
            "slack_integration": {
              "slack_webhook_url": ""
            },
            "system_configuration": {
              "http_port": "",
              "replication_factor": "",
              "show_splash": "",
              "snapshot_parallelism": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/operatr-io/kpow-operator-bundle@sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "bundle_path_digest": "sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T10:33:28.374000+00:00",
      "csv_description": "\nUse kPow to monitor and manage your Kafka Clusters, Schema Registries, and Connect Clusters.\n\nThe minimum required configuration to run kPow is **license details and a bootstrap URL**.\n\nIf you have a Red Hat Marketplace subscription to kPow you will receive a license directly.\n\nSign-up online to receive a [free 30-day trial license](https://kpow.io/try) in minutes.\n\nkPow is compatible with Red Hat AMQ Streams.\n\n----\n\n##kPow CR Spec Details\n\nAfter you have installed the KPow operator, create a CR to get an instance of KPow. You can setup a Kpow instance with custom configuration using the specifications given in the CR. Refer below table to understand the available specifications for custom configuration of KPow. Set the required value for specifications while creating the CR.\n\n-----\n\nRequired Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**License Details**               | If you need a license, start a [free 30-day trial today](https://kpow.io/try).\n`license_id`                      | a620baa9-956e-43bf-9bc5-adf635533c4a\n`license_code`                      | RH_MARKETPLACE\n`licensee`                          | Your Organisation\n`license_expiry`                    | \"2022-28-12\" - quoted to ensure expiry field interpreted as a string, not a date.\n`license_signature`                 | 8094DEC9...\n**Minimum Configuration**         | kPow will start with only license details and a Kafka bootstrap URL.\n`bootstrap`                        | The Bootstrap URL of your Kafka Cluster\n\nOptional Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**System Options**                | General system configuration\n`environment_name`                  | A meaningful name for this installation, e.g. \"Trade Book (Staging)\"\n`http_port`                         | The port that kPow will serve its UI (default: 3000)\n`show_splash`                       | Show the kPow splash screen for each new user session (default: true)\n[**System HTTPS Options**](https://docs.kpow.io/features/https-connections) | the kPow UI can be served over HTTPS\n`enable_https`                      | default: false \n`https_keystore_location`           | e.g. \"/ssl/https.keystore.jks\"\n`https_keystore_type`               | e.g. JKS\n`https_keystore_password`           | e.g. \"ssl-key-pass\"\n`https_truststore_location`         | e.g. \"/ssl/https.truststore.jks\"\n`https_truststore_type`             | e.g. JKS\n`https_truststore_password`         | e.g. \"ssl-trust-pass\"\n[**Kafka Cluster Options**](https://kafka.apache.org/documentation/#adminclientconfigs) | kPow uses the same Kafka Cluster connection options as a standard consumer, producer, or admin client.\n`security_protocol`                 | e.g. SASL_SSL\n`sasl_mechanism`                    | e.g. PLAIN\n`sasl_jaas_config`                  | e.g. \"org.apache.kafka.common.security.plain.Plain..\"\n`sasl_login_callback_handler_class` | e.g. \"com.corp.kafka.security.sasl.oauth.KafkaBrokerTokenCreator\"\n`ssl_keystore_location`             | e.g. \"/ssl/kafka.keystore.jks\"\n`ssl_keystore_password`             | e.g. \"keystore-pass-123\"\n`ssl_key_password`                  | e.g. \"key-pass-123\"\n`ssl_keystore_type`                 | e.g. JKS\n`ssl_keymanager_algorithm`          | e.g. SunX509\n`ssl_truststore_location`           | e.g. \"/ssl/kafka.truststore.jks\"\n`ssl_truststore_password`           | e.g. \"trust-pass-123\"\n`ssl_truststore_type`               | e.g. JKS\n`ssl_trustmanager_algorithm`        | e.g. PKIX\n`ssl_endpoint_identification_algorithm` | e.g. https\n`ssl_provider`                      | e.g. \"default\"\n`ssl_cipher_suites`                 | e.g. \"default: \n`ssl_protocol`                      | e.g. TLS\n`ssl_enabled_protocols`             | e.g. \"TLSv.12,TLSv1.1,TLSv1\"\n`ssl_secure_random_implementation`  | e.g. SHA1PRNG\n[**Schema Registry**](https://docs.kpow.io/config/schema-registry) | Monitor and manage a Schema Registry connected to your Kafka Cluster\n`schema_registry_url`               | e.g. \"https://registry-host\"\n`schema_registry_auth`              | e.g. USER_INFO\n`schema_registry_user`              | e.g. registry-user\n`schema_registry_password`          | e.g. registry-pass\n[**Kafka Connect**](https://docs.kpow.io/config/kafka-connect) | Monitor and manage a Kafka Connect Cluster connected to your Kafka Cluster\n`connect_rest_url`                  | e.g. http://localhost:8083\n`connect_auth`                      | e.g. BASIC\n`connect_basic_auth_user`           | e.g. connect-user\n`connect_basic_auth_pass`           | e.g. connect-pass\n`connect_group_id`                  | e.g. connect-group-id\n`connect_offset_storage_topic`      | e.g. connect-topic\n[**Live Mode**](https://docs.kpow.io/features/live-mode) | View and monitor your Kafka resources in near-realtime\n`live_mode_enabled`                 | default: true\n`live_mode_period_ms`               | The duration of a live mode session, default: 60000ms / one minute\n`live_mode_interval`                | The duration between live mode snapshot gathering, default: 5000ms / five seconds\n`live_mode_max_concurrent_users`    | The number of concurrent live mode sessions that may be active, default: 2\n**Data Inspect**                  | Provide custom serdes, set default serdes, or restrict serdes available to users\n[custom_serdes](https://docs.kpow.io/features/data-inspect/serdes#custom-serdes) | e.g. \"io.kpow.SerdeOne,io.kpow.SerdeTwo\"\n`default_key_serdes`                | e.g. \"JSON\"\n`default_value_serdes`              | e.g. \"AVRO\"\n`available_key_serdes`              | e.g. \"JSON,String,Transit / JSON\"\n`available_value_serdes`            | e.g. \"JSON,String,io.kpow.SerdeOne\"\n[**Prometheus Endpoints**](https://docs.kpow.io/features/prometheus) | kPow provides metrics and offsets via Prometheus Endpoints for scraping into your enterprise monitoring system of choice.\n`prometheus_egress`                 | default: false\n[**Slack Integration**](https://docs.kpow.io/features/slack-integration) | kPow can send audit log records to a slack channel of your choosing\n`slack_webhook_url`                 | e.g \"https://hooks.slack.com/services/...\"\n[**Simple Access Control**](https://docs.kpow.io/user-authorization/simple-access-control) | kPow supports simple control of users actions via global access controls\n`allow_topic_create`                | default: false - Users may create new topics\n`allow_topic_delete`                | default: false - Users may delete existing topics\n`allow_topic_inspect`               | default: false - Users may view topic key and value content\n`allow_topic_produce`              | default: false - Users may produce new messages to topics\n`allow_topic_edit`                  | default: false - Users may edit topic configuration\n`allow_broker_edit`                 | default: false - Users may edit broker configuration\n`allow_group_edit`                  | default: false - Users may edit and delete consumer groups and group offsets\n`allow_schema_edit`                 | default: false - Users may edit schemas and subjects\n`allow_schema_create`               | default: false - Users may create new schemas and subjects\n`allow_connect_create`              | default: false - Users may create new connectors and tasks\n`allow_connect_edit`                | default: false - Users may edit, pause, delete, and restart connectors and tasks\n[**Role Based Access Control**](https://docs.kpow.io/user-authorization/role-based-access-control) | kPow supports Role Based Access Control when used in conjunction with User Authentication\n`rbac_configuration_file`           | e.g. \"/path/to/rbac-config.yaml\"\n[**Data Policies**](https://docs.kpow.io/features/data-policies) | kPow supports masking and redaction of sensitive data in Data Inspect and kREPL results\n`data_policy_configuration_file`       | e.g. \"/path/to/masking/config.yaml\"\n[**User Authentication**](https://docs.kpow.io/user-authentication/overview) | kPow supports a number of methods of User Authentication including SAML, Okta, and OpenID\n[**Okta SSO**](https://docs.kpow.io/user-authentication/openid/okta) | Authenticate users with Okta \n`auth_provider_type`                | \"okta\"\n`okta_organisation`                 | e.g. \"your-organisation\"\n`openid_client_id`                  | The 'Client ID' found in the \"Client Credentials\" section of your Okta integration\n`openid_client_secret`              | The 'Client Secret' found in the \"Client Credentials\" section of your Okta integration\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com\"\n[**Github SSO**](https://docs.kpow.io/user-authentication/openid/github) | Authenticate users with Github (including Github Enterprise)\n`auth_provider_type`                | \"github\"\n`openid_token_id`                   | e.g. \"https://github.com/login/oauth/access_token\" or \"[GHE Server URL]/login/oauth/access_token\"\n`openid_auth_uri`                   | e.g. \"https://github.com/login/oauth/authorize\" or \"[GHE Server URL]/login/oauth/authorize\"\n`openid_api_uri`                    | e.g. \"https://api.github.com/user\" or, \"[GHE Server URL]/api/v3/user\"\n`openid_client_id`                  | e.g. The 'Client ID' found in your configured Github Oath App\n`openid_client_secret`              | The 'Client Secret' found in your configured Github Oath App\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com/\"\n[**SAML SSO**](https://docs.kpow.io/user-authentication/saml) | Authenticate users with SAML (custom, Azure AD, AWS SSO, Okta, etc)\n`auth_provider_type`                | \"saml\"\n`saml_relying_party_identifier`     | e.g. \"kpow.io\"\n`saml_asc_url`                      | e.g. \"https://kpow.corp.com/saml\"\n`saml_metadata_file`                | e.g. \"/opt/kpow/aws-metadata.xml\" (optional)\n`saml_cert`                         | e.g. \"/var/certs/saml-cert.cer\"\n\n----\n\n## Providing Configuration Files to kPow\n\nSome of the configuration above is provided as files (e.g. YAML or Keystores). You will need to provide these iles in the form of secrets or configmaps.\n\nFor Example the specification ```https_keystore_location``` needs a keystore file in location *\"/ssl/https.keystore.jks\"*.\n\nThe Operator expectes the file in the form of a secret to be available in the namespace where its installed. \n\nPlease follow below instructions to know how to create the Secret or configmap for such CR Specifications listed above:\n\n**Command to Create ConfigMaps from a file:**\n\n```\n  oc create configmap <name of configmap> --from-file <file name> -n <project-name>\n```\n\n**Command to create secrets from a file:**\n\n```\n  oc create secret generic <name of secret> --from-file <file name> -n <project-name>\n```\n\n  **NOTE**:The configmaps and secrets must be created prior to running the operator and must adhere to the names mentioned below.\t\n  \n----    \nCR Spec          \t  \t\t\t\t\t\t\t    \t|       CR Value\t\t\t|  Creation command\n--------------------------------------------------------|---------------------------|-----------------------------\n`rbac_configuration.rbac_configuration_file`\t\t\t\t|/opt/kpow/rbac-config.yaml\t|oc create rbac-configuration --from-file rbac-config.yaml -n <project-name\\>\n`data_policy_configuration. data_policy_configuration_file`|/opt/kpow/data-config.yml\t|oc create data-policy-configuration --from-file data-config.yml -n <project-name\\>\n`kafka_cluster_configuration.ssl_keystore_location`\t\t|/ssl/kafka.keystore.jks\t|oc create secret generic kafka-keystore --from-file kafka.keystore.jks -n <project-name\\>\n`kafka_cluster_configuration.ssl_truststore_location`\t\t|/ssl/kafka.truststore.jks\t|oc create secret generic kafka-truststore --from-file kafka.truststore.jks -n <project-name\\>\n`https_configuration.https_keystore`\t\t\t\t\t\t|/ssl/https.keystore.jks\t|oc create secret generic https-keystore --from-file https.keystore.jks -n <project-name\\>\n`https_configuration.https_truststore`\t\t\t\t\t|/ssl/https.truststore.jks\t|oc create secret generic https-truststore --from-file https.truststore.jks -n   <project-name\\>\n`saml_sso_options.saml_metadata_file`\t\t\t\t\t\t|/opt/kpow/aws-metadata.xml\t|oc create saml-metadata --from-file aws-metadata.xml -n <project-name\\>\n`saml_sso_options.saml_cert`\t\t\t\t\t\t\t\t|/var/certs/saml-cert.cer\t|oc create secret generic saml-cert --from-file saml-cert.cer -n <project-name\\>\n",
      "csv_display_name": "kPow for Apache Kafka",
      "csv_metadata_description": "kPow is a toolkit for engineers who build, manage, and maintain systems powered by Apache Kafka",
      "csv_name": "kpow-io.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:09:39.806000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kpow-io-certified",
      "provided_apis": [
        {
          "group": "kpow.io",
          "kind": "Kpow",
          "version": "v1beta1"
        }
      ],
      "provider": "Operatr.IO, Inc.",
      "related_images": [
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow-9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185-annotation"
        },
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "image": "registry.connect.redhat.com/operatr-io/kpow-operator@sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "name": "manager"
        },
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "613f2b1fd63f43cf6ee37507",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "bundle_path_digest": "sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T10:42:39.961000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:41:15.714000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        }
      ],
      "provider": "AppDynamics LLC",
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.6.11",
      "version_original": "0.6.11"
    },
    {
      "_id": "613f2bd8a5ebcd070d163d90",
      "alm_examples": [
        {
          "api_version": "kpow.io/v1beta1",
          "kind": "Kpow",
          "metadata": {
            "name": "kpow-sample"
          },
          "spec": {
            "bootstrap": "",
            "data_policy_configuration": {
              "data_policy_configuration_file": ""
            },
            "environment_name": "change me",
            "github_sso_options": {
              "auth_provider_type": "",
              "openid_api_uri": "",
              "openid_auth_uri": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": "",
              "openid_token_uri": ""
            },
            "global_access_configuration": {
              "allow_broker_edit": "",
              "allow_connect_create": "",
              "allow_connect_edit": "",
              "allow_group_edit": "",
              "allow_schema_create": "",
              "allow_schema_edit": "",
              "allow_topic_create": "",
              "allow_topic_delete": "",
              "allow_topic_edit": "",
              "allow_topic_inspect": "",
              "allow_topic_produce": ""
            },
            "https_configuration": {
              "enable_https": false,
              "https_keystore": "",
              "https_keystore_password": "",
              "https_keystore_type": "",
              "https_truststore": "",
              "https_truststore_password": "",
              "https_truststore_type": ""
            },
            "kafka_cluster_configuration": {
              "sasl_jaas_config": "",
              "sasl_login_callback_handler_class": "",
              "sasl_mechanism": "",
              "security_protocol": "",
              "ssl_cipher_suites": "",
              "ssl_enabled_protocols": "",
              "ssl_endpoint_identification_algorithm": "",
              "ssl_key_password": "",
              "ssl_keymanager_algorithm": "",
              "ssl_keystore_location": "",
              "ssl_keystore_password": "",
              "ssl_keystore_type": "",
              "ssl_protocol": "",
              "ssl_provider": "",
              "ssl_secure_random_implementation": "",
              "ssl_trustmanager_algorithm": "",
              "ssl_truststore_location": "",
              "ssl_truststore_password": "",
              "ssl_truststore_type": ""
            },
            "kafka_connect_configuration": {
              "connect_auth": "",
              "connect_basic_auth_pass": "",
              "connect_basic_auth_user": "",
              "connect_group_id": "",
              "connect_offset_storage_topic": "",
              "connect_rest_url": ""
            },
            "license_configuration": {
              "license_code": "your-licence-code",
              "license_expiry": "your-license-expiry",
              "license_id": "your-license-id",
              "license_signature": "e.g. aa8ac6df95...",
              "licensee": "your-org"
            },
            "live_mode_configuration": {
              "live_mode_enabled": "",
              "live_mode_interval_ms": "",
              "live_mode_max_concurrent_users": "",
              "live_mode_period_ms": ""
            },
            "okta_sso_options": {
              "auth_provider_type": "",
              "okta_organisation": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": ""
            },
            "prometheus_egress": false,
            "rbac_configuration": {
              "rbac_configuration_file": ""
            },
            "saml_sso_options": {
              "auth_provider_type": "",
              "saml_acs_url": "",
              "saml_cert": "",
              "saml_metadata_file": "",
              "saml_relying_party_identifier": ""
            },
            "schema_registry_configuration": {
              "schema_registry_auth": "",
              "schema_registry_name": "",
              "schema_registry_password": "",
              "schema_registry_url": "",
              "schema_registry_user": ""
            },
            "serdis_configuration": {
              "available_key_serdes": "",
              "available_value_serdes": "",
              "custom_serdes": "",
              "default_key_serdes": "",
              "default_value_serdes": ""
            },
            "slack_integration": {
              "slack_webhook_url": ""
            },
            "system_configuration": {
              "http_port": "",
              "replication_factor": "",
              "show_splash": "",
              "snapshot_parallelism": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/operatr-io/kpow-operator-bundle@sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "bundle_path_digest": "sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T10:45:44.534000+00:00",
      "csv_description": "\nUse kPow to monitor and manage your Kafka Clusters, Schema Registries, and Connect Clusters.\n\nThe minimum required configuration to run kPow is **license details and a bootstrap URL**.\n\nIf you have a Red Hat Marketplace subscription to kPow you will receive a license directly.\n\nSign-up online to receive a [free 30-day trial license](https://kpow.io/try) in minutes.\n\nkPow is compatible with Red Hat AMQ Streams.\n\n----\n\n##kPow CR Spec Details\n\nAfter you have installed the KPow operator, create a CR to get an instance of KPow. You can setup a Kpow instance with custom configuration using the specifications given in the CR. Refer below table to understand the available specifications for custom configuration of KPow. Set the required value for specifications while creating the CR.\n\n-----\n\nRequired Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**License Details**               | If you need a license, start a [free 30-day trial today](https://kpow.io/try).\n`license_id`                      | a620baa9-956e-43bf-9bc5-adf635533c4a\n`license_code`                      | RH_MARKETPLACE\n`licensee`                          | Your Organisation\n`license_expiry`                    | \"2022-28-12\" - quoted to ensure expiry field interpreted as a string, not a date.\n`license_signature`                 | 8094DEC9...\n**Minimum Configuration**         | kPow will start with only license details and a Kafka bootstrap URL.\n`bootstrap`                        | The Bootstrap URL of your Kafka Cluster\n\nOptional Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**System Options**                | General system configuration\n`environment_name`                  | A meaningful name for this installation, e.g. \"Trade Book (Staging)\"\n`http_port`                         | The port that kPow will serve its UI (default: 3000)\n`show_splash`                       | Show the kPow splash screen for each new user session (default: true)\n[**System HTTPS Options**](https://docs.kpow.io/features/https-connections) | the kPow UI can be served over HTTPS\n`enable_https`                      | default: false \n`https_keystore_location`           | e.g. \"/ssl/https.keystore.jks\"\n`https_keystore_type`               | e.g. JKS\n`https_keystore_password`           | e.g. \"ssl-key-pass\"\n`https_truststore_location`         | e.g. \"/ssl/https.truststore.jks\"\n`https_truststore_type`             | e.g. JKS\n`https_truststore_password`         | e.g. \"ssl-trust-pass\"\n[**Kafka Cluster Options**](https://kafka.apache.org/documentation/#adminclientconfigs) | kPow uses the same Kafka Cluster connection options as a standard consumer, producer, or admin client.\n`security_protocol`                 | e.g. SASL_SSL\n`sasl_mechanism`                    | e.g. PLAIN\n`sasl_jaas_config`                  | e.g. \"org.apache.kafka.common.security.plain.Plain..\"\n`sasl_login_callback_handler_class` | e.g. \"com.corp.kafka.security.sasl.oauth.KafkaBrokerTokenCreator\"\n`ssl_keystore_location`             | e.g. \"/ssl/kafka.keystore.jks\"\n`ssl_keystore_password`             | e.g. \"keystore-pass-123\"\n`ssl_key_password`                  | e.g. \"key-pass-123\"\n`ssl_keystore_type`                 | e.g. JKS\n`ssl_keymanager_algorithm`          | e.g. SunX509\n`ssl_truststore_location`           | e.g. \"/ssl/kafka.truststore.jks\"\n`ssl_truststore_password`           | e.g. \"trust-pass-123\"\n`ssl_truststore_type`               | e.g. JKS\n`ssl_trustmanager_algorithm`        | e.g. PKIX\n`ssl_endpoint_identification_algorithm` | e.g. https\n`ssl_provider`                      | e.g. \"default\"\n`ssl_cipher_suites`                 | e.g. \"default: \n`ssl_protocol`                      | e.g. TLS\n`ssl_enabled_protocols`             | e.g. \"TLSv.12,TLSv1.1,TLSv1\"\n`ssl_secure_random_implementation`  | e.g. SHA1PRNG\n[**Schema Registry**](https://docs.kpow.io/config/schema-registry) | Monitor and manage a Schema Registry connected to your Kafka Cluster\n`schema_registry_url`               | e.g. \"https://registry-host\"\n`schema_registry_auth`              | e.g. USER_INFO\n`schema_registry_user`              | e.g. registry-user\n`schema_registry_password`          | e.g. registry-pass\n[**Kafka Connect**](https://docs.kpow.io/config/kafka-connect) | Monitor and manage a Kafka Connect Cluster connected to your Kafka Cluster\n`connect_rest_url`                  | e.g. http://localhost:8083\n`connect_auth`                      | e.g. BASIC\n`connect_basic_auth_user`           | e.g. connect-user\n`connect_basic_auth_pass`           | e.g. connect-pass\n`connect_group_id`                  | e.g. connect-group-id\n`connect_offset_storage_topic`      | e.g. connect-topic\n[**Live Mode**](https://docs.kpow.io/features/live-mode) | View and monitor your Kafka resources in near-realtime\n`live_mode_enabled`                 | default: true\n`live_mode_period_ms`               | The duration of a live mode session, default: 60000ms / one minute\n`live_mode_interval`                | The duration between live mode snapshot gathering, default: 5000ms / five seconds\n`live_mode_max_concurrent_users`    | The number of concurrent live mode sessions that may be active, default: 2\n**Data Inspect**                  | Provide custom serdes, set default serdes, or restrict serdes available to users\n[custom_serdes](https://docs.kpow.io/features/data-inspect/serdes#custom-serdes) | e.g. \"io.kpow.SerdeOne,io.kpow.SerdeTwo\"\n`default_key_serdes`                | e.g. \"JSON\"\n`default_value_serdes`              | e.g. \"AVRO\"\n`available_key_serdes`              | e.g. \"JSON,String,Transit / JSON\"\n`available_value_serdes`            | e.g. \"JSON,String,io.kpow.SerdeOne\"\n[**Prometheus Endpoints**](https://docs.kpow.io/features/prometheus) | kPow provides metrics and offsets via Prometheus Endpoints for scraping into your enterprise monitoring system of choice.\n`prometheus_egress`                 | default: false\n[**Slack Integration**](https://docs.kpow.io/features/slack-integration) | kPow can send audit log records to a slack channel of your choosing\n`slack_webhook_url`                 | e.g \"https://hooks.slack.com/services/...\"\n[**Simple Access Control**](https://docs.kpow.io/user-authorization/simple-access-control) | kPow supports simple control of users actions via global access controls\n`allow_topic_create`                | default: false - Users may create new topics\n`allow_topic_delete`                | default: false - Users may delete existing topics\n`allow_topic_inspect`               | default: false - Users may view topic key and value content\n`allow_topic_produce`              | default: false - Users may produce new messages to topics\n`allow_topic_edit`                  | default: false - Users may edit topic configuration\n`allow_broker_edit`                 | default: false - Users may edit broker configuration\n`allow_group_edit`                  | default: false - Users may edit and delete consumer groups and group offsets\n`allow_schema_edit`                 | default: false - Users may edit schemas and subjects\n`allow_schema_create`               | default: false - Users may create new schemas and subjects\n`allow_connect_create`              | default: false - Users may create new connectors and tasks\n`allow_connect_edit`                | default: false - Users may edit, pause, delete, and restart connectors and tasks\n[**Role Based Access Control**](https://docs.kpow.io/user-authorization/role-based-access-control) | kPow supports Role Based Access Control when used in conjunction with User Authentication\n`rbac_configuration_file`           | e.g. \"/path/to/rbac-config.yaml\"\n[**Data Policies**](https://docs.kpow.io/features/data-policies) | kPow supports masking and redaction of sensitive data in Data Inspect and kREPL results\n`data_policy_configuration_file`       | e.g. \"/path/to/masking/config.yaml\"\n[**User Authentication**](https://docs.kpow.io/user-authentication/overview) | kPow supports a number of methods of User Authentication including SAML, Okta, and OpenID\n[**Okta SSO**](https://docs.kpow.io/user-authentication/openid/okta) | Authenticate users with Okta \n`auth_provider_type`                | \"okta\"\n`okta_organisation`                 | e.g. \"your-organisation\"\n`openid_client_id`                  | The 'Client ID' found in the \"Client Credentials\" section of your Okta integration\n`openid_client_secret`              | The 'Client Secret' found in the \"Client Credentials\" section of your Okta integration\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com\"\n[**Github SSO**](https://docs.kpow.io/user-authentication/openid/github) | Authenticate users with Github (including Github Enterprise)\n`auth_provider_type`                | \"github\"\n`openid_token_id`                   | e.g. \"https://github.com/login/oauth/access_token\" or \"[GHE Server URL]/login/oauth/access_token\"\n`openid_auth_uri`                   | e.g. \"https://github.com/login/oauth/authorize\" or \"[GHE Server URL]/login/oauth/authorize\"\n`openid_api_uri`                    | e.g. \"https://api.github.com/user\" or, \"[GHE Server URL]/api/v3/user\"\n`openid_client_id`                  | e.g. The 'Client ID' found in your configured Github Oath App\n`openid_client_secret`              | The 'Client Secret' found in your configured Github Oath App\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com/\"\n[**SAML SSO**](https://docs.kpow.io/user-authentication/saml) | Authenticate users with SAML (custom, Azure AD, AWS SSO, Okta, etc)\n`auth_provider_type`                | \"saml\"\n`saml_relying_party_identifier`     | e.g. \"kpow.io\"\n`saml_asc_url`                      | e.g. \"https://kpow.corp.com/saml\"\n`saml_metadata_file`                | e.g. \"/opt/kpow/aws-metadata.xml\" (optional)\n`saml_cert`                         | e.g. \"/var/certs/saml-cert.cer\"\n\n----\n\n## Providing Configuration Files to kPow\n\nSome of the configuration above is provided as files (e.g. YAML or Keystores). You will need to provide these iles in the form of secrets or configmaps.\n\nFor Example the specification ```https_keystore_location``` needs a keystore file in location *\"/ssl/https.keystore.jks\"*.\n\nThe Operator expectes the file in the form of a secret to be available in the namespace where its installed. \n\nPlease follow below instructions to know how to create the Secret or configmap for such CR Specifications listed above:\n\n**Command to Create ConfigMaps from a file:**\n\n```\n  oc create configmap <name of configmap> --from-file <file name> -n <project-name>\n```\n\n**Command to create secrets from a file:**\n\n```\n  oc create secret generic <name of secret> --from-file <file name> -n <project-name>\n```\n\n  **NOTE**:The configmaps and secrets must be created prior to running the operator and must adhere to the names mentioned below.\t\n  \n----    \nCR Spec          \t  \t\t\t\t\t\t\t    \t|       CR Value\t\t\t|  Creation command\n--------------------------------------------------------|---------------------------|-----------------------------\n`rbac_configuration.rbac_configuration_file`\t\t\t\t|/opt/kpow/rbac-config.yaml\t|oc create rbac-configuration --from-file rbac-config.yaml -n <project-name\\>\n`data_policy_configuration. data_policy_configuration_file`|/opt/kpow/data-config.yml\t|oc create data-policy-configuration --from-file data-config.yml -n <project-name\\>\n`kafka_cluster_configuration.ssl_keystore_location`\t\t|/ssl/kafka.keystore.jks\t|oc create secret generic kafka-keystore --from-file kafka.keystore.jks -n <project-name\\>\n`kafka_cluster_configuration.ssl_truststore_location`\t\t|/ssl/kafka.truststore.jks\t|oc create secret generic kafka-truststore --from-file kafka.truststore.jks -n <project-name\\>\n`https_configuration.https_keystore`\t\t\t\t\t\t|/ssl/https.keystore.jks\t|oc create secret generic https-keystore --from-file https.keystore.jks -n <project-name\\>\n`https_configuration.https_truststore`\t\t\t\t\t|/ssl/https.truststore.jks\t|oc create secret generic https-truststore --from-file https.truststore.jks -n   <project-name\\>\n`saml_sso_options.saml_metadata_file`\t\t\t\t\t\t|/opt/kpow/aws-metadata.xml\t|oc create saml-metadata --from-file aws-metadata.xml -n <project-name\\>\n`saml_sso_options.saml_cert`\t\t\t\t\t\t\t\t|/var/certs/saml-cert.cer\t|oc create secret generic saml-cert --from-file saml-cert.cer -n <project-name\\>\n",
      "csv_display_name": "kPow for Apache Kafka",
      "csv_metadata_description": "kPow is a toolkit for engineers who build, manage, and maintain systems powered by Apache Kafka",
      "csv_name": "kpow-io.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:34:00.357000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kpow-io-certified",
      "provided_apis": [
        {
          "group": "kpow.io",
          "kind": "Kpow",
          "version": "v1beta1"
        }
      ],
      "provider": "Operatr.IO, Inc.",
      "related_images": [
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow-9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185-annotation"
        },
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "image": "registry.connect.redhat.com/operatr-io/kpow-operator@sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "name": "manager"
        },
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "613f630dc9bc35f21dc4a41d",
      "alm_examples": [
        {
          "api_version": "kpow.io/v1beta1",
          "kind": "Kpow",
          "metadata": {
            "name": "kpow-sample"
          },
          "spec": {
            "bootstrap": "",
            "data_policy_configuration": {
              "data_policy_configuration_file": ""
            },
            "environment_name": "change me",
            "github_sso_options": {
              "auth_provider_type": "",
              "openid_api_uri": "",
              "openid_auth_uri": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": "",
              "openid_token_uri": ""
            },
            "global_access_configuration": {
              "allow_broker_edit": "",
              "allow_connect_create": "",
              "allow_connect_edit": "",
              "allow_group_edit": "",
              "allow_schema_create": "",
              "allow_schema_edit": "",
              "allow_topic_create": "",
              "allow_topic_delete": "",
              "allow_topic_edit": "",
              "allow_topic_inspect": "",
              "allow_topic_produce": ""
            },
            "https_configuration": {
              "enable_https": false,
              "https_keystore": "",
              "https_keystore_password": "",
              "https_keystore_type": "",
              "https_truststore": "",
              "https_truststore_password": "",
              "https_truststore_type": ""
            },
            "kafka_cluster_configuration": {
              "sasl_jaas_config": "",
              "sasl_login_callback_handler_class": "",
              "sasl_mechanism": "",
              "security_protocol": "",
              "ssl_cipher_suites": "",
              "ssl_enabled_protocols": "",
              "ssl_endpoint_identification_algorithm": "",
              "ssl_key_password": "",
              "ssl_keymanager_algorithm": "",
              "ssl_keystore_location": "",
              "ssl_keystore_password": "",
              "ssl_keystore_type": "",
              "ssl_protocol": "",
              "ssl_provider": "",
              "ssl_secure_random_implementation": "",
              "ssl_trustmanager_algorithm": "",
              "ssl_truststore_location": "",
              "ssl_truststore_password": "",
              "ssl_truststore_type": ""
            },
            "kafka_connect_configuration": {
              "connect_auth": "",
              "connect_basic_auth_pass": "",
              "connect_basic_auth_user": "",
              "connect_group_id": "",
              "connect_offset_storage_topic": "",
              "connect_rest_url": ""
            },
            "license_configuration": {
              "license_code": "your-licence-code",
              "license_expiry": "your-license-expiry",
              "license_id": "your-license-id",
              "license_signature": "e.g. aa8ac6df95...",
              "licensee": "your-org"
            },
            "live_mode_configuration": {
              "live_mode_enabled": "",
              "live_mode_interval_ms": "",
              "live_mode_max_concurrent_users": "",
              "live_mode_period_ms": ""
            },
            "okta_sso_options": {
              "auth_provider_type": "",
              "okta_organisation": "",
              "openid_client_id": "",
              "openid_client_secret": "",
              "openid_landing_uri": ""
            },
            "prometheus_egress": false,
            "rbac_configuration": {
              "rbac_configuration_file": ""
            },
            "saml_sso_options": {
              "auth_provider_type": "",
              "saml_acs_url": "",
              "saml_cert": "",
              "saml_metadata_file": "",
              "saml_relying_party_identifier": ""
            },
            "schema_registry_configuration": {
              "schema_registry_auth": "",
              "schema_registry_name": "",
              "schema_registry_password": "",
              "schema_registry_url": "",
              "schema_registry_user": ""
            },
            "serdis_configuration": {
              "available_key_serdes": "",
              "available_value_serdes": "",
              "custom_serdes": "",
              "default_key_serdes": "",
              "default_value_serdes": ""
            },
            "slack_integration": {
              "slack_webhook_url": ""
            },
            "system_configuration": {
              "http_port": "",
              "replication_factor": "",
              "show_splash": "",
              "snapshot_parallelism": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/operatr-io/kpow-operator-bundle@sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "bundle_path_digest": "sha256:eb62d828a556a1bfb3381ae46355332e52ca63143a66376002c1c15d52646543",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T14:41:17.070000+00:00",
      "csv_description": "\nUse kPow to monitor and manage your Kafka Clusters, Schema Registries, and Connect Clusters.\n\nThe minimum required configuration to run kPow is **license details and a bootstrap URL**.\n\nIf you have a Red Hat Marketplace subscription to kPow you will receive a license directly.\n\nSign-up online to receive a [free 30-day trial license](https://kpow.io/try) in minutes.\n\nkPow is compatible with Red Hat AMQ Streams.\n\n----\n\n##kPow CR Spec Details\n\nAfter you have installed the KPow operator, create a CR to get an instance of KPow. You can setup a Kpow instance with custom configuration using the specifications given in the CR. Refer below table to understand the available specifications for custom configuration of KPow. Set the required value for specifications while creating the CR.\n\n-----\n\nRequired Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**License Details**               | If you need a license, start a [free 30-day trial today](https://kpow.io/try).\n`license_id`                      | a620baa9-956e-43bf-9bc5-adf635533c4a\n`license_code`                      | RH_MARKETPLACE\n`licensee`                          | Your Organisation\n`license_expiry`                    | \"2022-28-12\" - quoted to ensure expiry field interpreted as a string, not a date.\n`license_signature`                 | 8094DEC9...\n**Minimum Configuration**         | kPow will start with only license details and a Kafka bootstrap URL.\n`bootstrap`                        | The Bootstrap URL of your Kafka Cluster\n\nOptional Configuration            |            Details / Example\n----------------------------------|-----------------------------\n**System Options**                | General system configuration\n`environment_name`                  | A meaningful name for this installation, e.g. \"Trade Book (Staging)\"\n`http_port`                         | The port that kPow will serve its UI (default: 3000)\n`show_splash`                       | Show the kPow splash screen for each new user session (default: true)\n[**System HTTPS Options**](https://docs.kpow.io/features/https-connections) | the kPow UI can be served over HTTPS\n`enable_https`                      | default: false \n`https_keystore_location`           | e.g. \"/ssl/https.keystore.jks\"\n`https_keystore_type`               | e.g. JKS\n`https_keystore_password`           | e.g. \"ssl-key-pass\"\n`https_truststore_location`         | e.g. \"/ssl/https.truststore.jks\"\n`https_truststore_type`             | e.g. JKS\n`https_truststore_password`         | e.g. \"ssl-trust-pass\"\n[**Kafka Cluster Options**](https://kafka.apache.org/documentation/#adminclientconfigs) | kPow uses the same Kafka Cluster connection options as a standard consumer, producer, or admin client.\n`security_protocol`                 | e.g. SASL_SSL\n`sasl_mechanism`                    | e.g. PLAIN\n`sasl_jaas_config`                  | e.g. \"org.apache.kafka.common.security.plain.Plain..\"\n`sasl_login_callback_handler_class` | e.g. \"com.corp.kafka.security.sasl.oauth.KafkaBrokerTokenCreator\"\n`ssl_keystore_location`             | e.g. \"/ssl/kafka.keystore.jks\"\n`ssl_keystore_password`             | e.g. \"keystore-pass-123\"\n`ssl_key_password`                  | e.g. \"key-pass-123\"\n`ssl_keystore_type`                 | e.g. JKS\n`ssl_keymanager_algorithm`          | e.g. SunX509\n`ssl_truststore_location`           | e.g. \"/ssl/kafka.truststore.jks\"\n`ssl_truststore_password`           | e.g. \"trust-pass-123\"\n`ssl_truststore_type`               | e.g. JKS\n`ssl_trustmanager_algorithm`        | e.g. PKIX\n`ssl_endpoint_identification_algorithm` | e.g. https\n`ssl_provider`                      | e.g. \"default\"\n`ssl_cipher_suites`                 | e.g. \"default: \n`ssl_protocol`                      | e.g. TLS\n`ssl_enabled_protocols`             | e.g. \"TLSv.12,TLSv1.1,TLSv1\"\n`ssl_secure_random_implementation`  | e.g. SHA1PRNG\n[**Schema Registry**](https://docs.kpow.io/config/schema-registry) | Monitor and manage a Schema Registry connected to your Kafka Cluster\n`schema_registry_url`               | e.g. \"https://registry-host\"\n`schema_registry_auth`              | e.g. USER_INFO\n`schema_registry_user`              | e.g. registry-user\n`schema_registry_password`          | e.g. registry-pass\n[**Kafka Connect**](https://docs.kpow.io/config/kafka-connect) | Monitor and manage a Kafka Connect Cluster connected to your Kafka Cluster\n`connect_rest_url`                  | e.g. http://localhost:8083\n`connect_auth`                      | e.g. BASIC\n`connect_basic_auth_user`           | e.g. connect-user\n`connect_basic_auth_pass`           | e.g. connect-pass\n`connect_group_id`                  | e.g. connect-group-id\n`connect_offset_storage_topic`      | e.g. connect-topic\n[**Live Mode**](https://docs.kpow.io/features/live-mode) | View and monitor your Kafka resources in near-realtime\n`live_mode_enabled`                 | default: true\n`live_mode_period_ms`               | The duration of a live mode session, default: 60000ms / one minute\n`live_mode_interval`                | The duration between live mode snapshot gathering, default: 5000ms / five seconds\n`live_mode_max_concurrent_users`    | The number of concurrent live mode sessions that may be active, default: 2\n**Data Inspect**                  | Provide custom serdes, set default serdes, or restrict serdes available to users\n[custom_serdes](https://docs.kpow.io/features/data-inspect/serdes#custom-serdes) | e.g. \"io.kpow.SerdeOne,io.kpow.SerdeTwo\"\n`default_key_serdes`                | e.g. \"JSON\"\n`default_value_serdes`              | e.g. \"AVRO\"\n`available_key_serdes`              | e.g. \"JSON,String,Transit / JSON\"\n`available_value_serdes`            | e.g. \"JSON,String,io.kpow.SerdeOne\"\n[**Prometheus Endpoints**](https://docs.kpow.io/features/prometheus) | kPow provides metrics and offsets via Prometheus Endpoints for scraping into your enterprise monitoring system of choice.\n`prometheus_egress`                 | default: false\n[**Slack Integration**](https://docs.kpow.io/features/slack-integration) | kPow can send audit log records to a slack channel of your choosing\n`slack_webhook_url`                 | e.g \"https://hooks.slack.com/services/...\"\n[**Simple Access Control**](https://docs.kpow.io/user-authorization/simple-access-control) | kPow supports simple control of users actions via global access controls\n`allow_topic_create`                | default: false - Users may create new topics\n`allow_topic_delete`                | default: false - Users may delete existing topics\n`allow_topic_inspect`               | default: false - Users may view topic key and value content\n`allow_topic_produce`              | default: false - Users may produce new messages to topics\n`allow_topic_edit`                  | default: false - Users may edit topic configuration\n`allow_broker_edit`                 | default: false - Users may edit broker configuration\n`allow_group_edit`                  | default: false - Users may edit and delete consumer groups and group offsets\n`allow_schema_edit`                 | default: false - Users may edit schemas and subjects\n`allow_schema_create`               | default: false - Users may create new schemas and subjects\n`allow_connect_create`              | default: false - Users may create new connectors and tasks\n`allow_connect_edit`                | default: false - Users may edit, pause, delete, and restart connectors and tasks\n[**Role Based Access Control**](https://docs.kpow.io/user-authorization/role-based-access-control) | kPow supports Role Based Access Control when used in conjunction with User Authentication\n`rbac_configuration_file`           | e.g. \"/path/to/rbac-config.yaml\"\n[**Data Policies**](https://docs.kpow.io/features/data-policies) | kPow supports masking and redaction of sensitive data in Data Inspect and kREPL results\n`data_policy_configuration_file`       | e.g. \"/path/to/masking/config.yaml\"\n[**User Authentication**](https://docs.kpow.io/user-authentication/overview) | kPow supports a number of methods of User Authentication including SAML, Okta, and OpenID\n[**Okta SSO**](https://docs.kpow.io/user-authentication/openid/okta) | Authenticate users with Okta \n`auth_provider_type`                | \"okta\"\n`okta_organisation`                 | e.g. \"your-organisation\"\n`openid_client_id`                  | The 'Client ID' found in the \"Client Credentials\" section of your Okta integration\n`openid_client_secret`              | The 'Client Secret' found in the \"Client Credentials\" section of your Okta integration\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com\"\n[**Github SSO**](https://docs.kpow.io/user-authentication/openid/github) | Authenticate users with Github (including Github Enterprise)\n`auth_provider_type`                | \"github\"\n`openid_token_id`                   | e.g. \"https://github.com/login/oauth/access_token\" or \"[GHE Server URL]/login/oauth/access_token\"\n`openid_auth_uri`                   | e.g. \"https://github.com/login/oauth/authorize\" or \"[GHE Server URL]/login/oauth/authorize\"\n`openid_api_uri`                    | e.g. \"https://api.github.com/user\" or, \"[GHE Server URL]/api/v3/user\"\n`openid_client_id`                  | e.g. The 'Client ID' found in your configured Github Oath App\n`openid_client_secret`              | The 'Client Secret' found in your configured Github Oath App\n`openid_landing_uri`                | e.g. \"https://staging.kpow.z-corp.com/\"\n[**SAML SSO**](https://docs.kpow.io/user-authentication/saml) | Authenticate users with SAML (custom, Azure AD, AWS SSO, Okta, etc)\n`auth_provider_type`                | \"saml\"\n`saml_relying_party_identifier`     | e.g. \"kpow.io\"\n`saml_asc_url`                      | e.g. \"https://kpow.corp.com/saml\"\n`saml_metadata_file`                | e.g. \"/opt/kpow/aws-metadata.xml\" (optional)\n`saml_cert`                         | e.g. \"/var/certs/saml-cert.cer\"\n\n----\n\n## Providing Configuration Files to kPow\n\nSome of the configuration above is provided as files (e.g. YAML or Keystores). You will need to provide these iles in the form of secrets or configmaps.\n\nFor Example the specification ```https_keystore_location``` needs a keystore file in location *\"/ssl/https.keystore.jks\"*.\n\nThe Operator expectes the file in the form of a secret to be available in the namespace where its installed. \n\nPlease follow below instructions to know how to create the Secret or configmap for such CR Specifications listed above:\n\n**Command to Create ConfigMaps from a file:**\n\n```\n  oc create configmap <name of configmap> --from-file <file name> -n <project-name>\n```\n\n**Command to create secrets from a file:**\n\n```\n  oc create secret generic <name of secret> --from-file <file name> -n <project-name>\n```\n\n  **NOTE**:The configmaps and secrets must be created prior to running the operator and must adhere to the names mentioned below.\t\n  \n----    \nCR Spec          \t  \t\t\t\t\t\t\t    \t|       CR Value\t\t\t|  Creation command\n--------------------------------------------------------|---------------------------|-----------------------------\n`rbac_configuration.rbac_configuration_file`\t\t\t\t|/opt/kpow/rbac-config.yaml\t|oc create rbac-configuration --from-file rbac-config.yaml -n <project-name\\>\n`data_policy_configuration. data_policy_configuration_file`|/opt/kpow/data-config.yml\t|oc create data-policy-configuration --from-file data-config.yml -n <project-name\\>\n`kafka_cluster_configuration.ssl_keystore_location`\t\t|/ssl/kafka.keystore.jks\t|oc create secret generic kafka-keystore --from-file kafka.keystore.jks -n <project-name\\>\n`kafka_cluster_configuration.ssl_truststore_location`\t\t|/ssl/kafka.truststore.jks\t|oc create secret generic kafka-truststore --from-file kafka.truststore.jks -n <project-name\\>\n`https_configuration.https_keystore`\t\t\t\t\t\t|/ssl/https.keystore.jks\t|oc create secret generic https-keystore --from-file https.keystore.jks -n <project-name\\>\n`https_configuration.https_truststore`\t\t\t\t\t|/ssl/https.truststore.jks\t|oc create secret generic https-truststore --from-file https.truststore.jks -n   <project-name\\>\n`saml_sso_options.saml_metadata_file`\t\t\t\t\t\t|/opt/kpow/aws-metadata.xml\t|oc create saml-metadata --from-file aws-metadata.xml -n <project-name\\>\n`saml_sso_options.saml_cert`\t\t\t\t\t\t\t\t|/var/certs/saml-cert.cer\t|oc create secret generic saml-cert --from-file saml-cert.cer -n <project-name\\>\n",
      "csv_display_name": "kPow for Apache Kafka",
      "csv_metadata_description": "kPow is a toolkit for engineers who build, manage, and maintain systems powered by Apache Kafka",
      "csv_name": "kpow-io.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:52:32.466000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kpow-io-certified",
      "provided_apis": [
        {
          "group": "kpow.io",
          "kind": "Kpow",
          "version": "v1beta1"
        }
      ],
      "provider": "Operatr.IO, Inc.",
      "related_images": [
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow-9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185-annotation"
        },
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "image": "registry.connect.redhat.com/operatr-io/kpow-operator@sha256:84fc5cafcf88e5334fbdd540da6d340ca401a69360560c7dde448c03c21a724f",
          "name": "manager"
        },
        {
          "digest": "sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "image": "registry.connect.redhat.com/operatr-io/kpow@sha256:9c99ef45515fde9064f7af80b53a6e84df817305727b2afae42b4b4452f71185",
          "name": "kpow"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "613f64a8a5ebcd070d164045",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "bundle_path_digest": "sha256:344e06684771a54b6a74d6d05713160381ffed8a472f0e1dcc4321ac21015c21",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T14:48:08.958000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:12:26.269000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        }
      ],
      "provider": "AppDynamics LLC",
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.6.11",
      "version_original": "0.6.11"
    },
    {
      "_id": "613f690da5ebcd070d16404b",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "bundle_path_digest": "sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T15:06:53.534000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:29:20.521000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        }
      ],
      "provider": "AppDynamics LLC",
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "name": "machine-agent-analytics-b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65-annotation"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.6.12",
      "version_original": "0.6.12"
    },
    {
      "_id": "613f6a8cd63f43cf6ee3769b",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "bundle_path_digest": "sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T15:13:16.799000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:57:00.927000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        }
      ],
      "provider": "AppDynamics LLC",
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "name": "machine-agent-analytics-b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65-annotation"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.6.12",
      "version_original": "0.6.12"
    },
    {
      "_id": "613f6b771904331703806a7a",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "bundle_path_digest": "sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-13T15:17:11.304000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:31:56.948000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [
        {
          "group": "appdynamics.com",
          "kind": "Clusteragent",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Clustercollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Hostcollector",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "InfraViz",
          "version": "v1alpha1"
        },
        {
          "group": "appdynamics.com",
          "kind": "Adam",
          "version": "v1alpha1"
        }
      ],
      "provider": "AppDynamics LLC",
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "name": "machine-agent-analytics-b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65-annotation"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.6.12",
      "version_original": "0.6.12"
    },
    {
      "_id": "61401834c9bc35f21dc4a44f",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "bundle_path_digest": "sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-14T03:34:12.019000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:33:09.427000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        }
      ],
      "provider": "Couchbase",
      "related_images": [
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "operator-81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f-annotation"
        },
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.1-1",
      "version_original": "2.2.1-1"
    },
    {
      "_id": "614018a2a5ebcd070d164099",
      "alm_examples": [
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseCluster",
          "metadata": {
            "name": "cb-example"
          },
          "spec": {
            "backup": {
              "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              },
              "serviceAccountName": "couchbase-backup"
            },
            "buckets": {
              "managed": true,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            },
            "cluster": {
              "analyticsServiceMemoryQuota": "1Gi",
              "autoCompaction": {
                "databaseFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                },
                "parallelCompaction": false,
                "timeWindow": {
                  "abortCompactionOutsideWindow": true,
                  "end": "06:00",
                  "start": "02:00"
                },
                "tombstonePurgeInterval": "72h",
                "viewFragmentationThreshold": {
                  "percent": 30,
                  "size": "1Gi"
                }
              },
              "autoFailoverMaxCount": 3,
              "autoFailoverOnDataDiskIssues": true,
              "autoFailoverOnDataDiskIssuesTimePeriod": "120s",
              "autoFailoverServerGroup": false,
              "autoFailoverTimeout": "120s",
              "clusterName": "cb-example",
              "dataServiceMemoryQuota": "256Mi",
              "eventingServiceMemoryQuota": "256Mi",
              "indexServiceMemoryQuota": "256Mi",
              "indexStorageSetting": "memory_optimized",
              "searchServiceMemoryQuota": "256Mi"
            },
            "enablePreviewScaling": false,
            "hibernate": false,
            "hibernationStrategy": "Immediate",
            "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
            "logRetentionCount": 20,
            "logRetentionTime": "604800s",
            "monitoring": {
              "prometheus": {
                "enabled": false,
                "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784"
              }
            },
            "networking": {
              "adminConsoleServiceType": "NodePort",
              "adminConsoleServices": [
                "data"
              ],
              "exposeAdminConsole": true,
              "exposedFeatureServiceType": "NodePort",
              "exposedFeatures": [
                "xdcr"
              ]
            },
            "recoveryPolicy": "PrioritizeDataIntegrity",
            "security": {
              "adminSecret": "cb-example-auth",
              "rbac": {
                "managed": true,
                "selector": {
                  "matchLabels": {
                    "cluster": "cb-example"
                  }
                }
              }
            },
            "servers": [
              {
                "name": "all_services",
                "services": [
                  "data",
                  "index",
                  "query",
                  "search",
                  "eventing",
                  "analytics"
                ],
                "size": 3
              }
            ],
            "upgradeStrategy": "RollingUpgrade",
            "xdcr": {
              "managed": false,
              "selector": {
                "matchLabels": {
                  "cluster": "cb-example"
                }
              }
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "default"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "enableIndexReplica": true,
            "evictionPolicy": "valueOnly",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseEphemeralBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "ephemeral-bucket"
          },
          "spec": {
            "compressionMode": "passive",
            "conflictResolution": "lww",
            "enableFlush": false,
            "evictionPolicy": "noEviction",
            "ioPriority": "low",
            "memoryQuota": "100Mi",
            "replicas": 2
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseMemcachedBucket",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "memcached-bucket"
          },
          "spec": {
            "enableFlush": false,
            "memoryQuota": "100Mi"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseUser",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-user"
          },
          "spec": {
            "authDomain": "local",
            "authSecret": "cb-example-auth",
            "fullName": "My User"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseGroup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-group"
          },
          "spec": {
            "roles": [
              {
                "bucket": "default",
                "name": "bucket_admin"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseRoleBinding",
          "metadata": {
            "name": "my-role-binding"
          },
          "spec": {
            "roleRef": {
              "kind": "CouchbaseGroup",
              "name": "my-group"
            },
            "subjects": [
              {
                "kind": "CouchbaseUser",
                "name": "my-user"
              }
            ]
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseReplication",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "my-replication"
          },
          "spec": {
            "bucket": "default",
            "compressionType": "Snappy",
            "filterExpression": "",
            "paused": false,
            "remoteBucket": "default"
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackup",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-backup"
          },
          "spec": {
            "backOffLimit": 2,
            "backupRetention": "24h",
            "failedJobsHistoryLimit": 3,
            "full": {
              "schedule": "0 3 * * 6"
            },
            "incremental": {
              "schedule": "0 3 * * 1-6"
            },
            "logRetention": "24h",
            "size": "5Gi",
            "strategy": "full_incremental",
            "successfulJobsHistoryLimit": 1
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseBackupRestore",
          "metadata": {
            "labels": {
              "cluster": "cb-example"
            },
            "name": "cb-restore"
          },
          "spec": {
            "backOffLimit": 2,
            "backup": "cb-backup",
            "end": {
              "int": 1
            },
            "logRetention": "24h",
            "repo": "cb-example-2020-10-29T19_00_03",
            "start": {
              "int": 1
            }
          }
        },
        {
          "api_version": "couchbase.com/v2",
          "kind": "CouchbaseAutoscaler",
          "metadata": {
            "name": "do.not.create.internal.only"
          },
          "spec": {
            "servers": "internal",
            "size": 2
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/couchbase/operator-bundle@sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "bundle_path_digest": "sha256:df774ff23ab5a517a99d2d6565144574a29566ea8120d27803767aaf7f1c3b7c",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-14T03:36:02.946000+00:00",
      "csv_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments on OpenShift. By installing this integration you will be able to deply Couchbase Server clusters with a single command.\n\n## Supported Features\n\n* **Automated cluster provisioning** - Deploying a Couchbase Cluster has never been easier. Fill out a Couchbase specific configuration and let the Couchbase Operator take care of provisioning nodes and setting up cluster to your exact specification.\n\n* **On-demand scalability** - Automatically scale your cluster up or down by changing a simple configuration parameter and let the Couchbase Operator handle provisioning of new nodes and joining them into the cluster.\n\n* **Auto-recovery** - Detect Couchbase node failures, rebalance out bad nodes, and bring the cluster back up to the desired capacity. Auto-recovery is completely automated so you can sleep easy through the night knowing that the Couchbase Operator will handle any failures.\n\n* **Geo-distribution** - Replicate your data between datacenters to move data closer to the users who consume it and protect against disaster scenarios where an entire datacenter becomes unavailable.\n\n* **Persistent storage** - Define persistent network-attached storage for each node in your cluster to allow pods to be recovered even if the node they were running on is no longer available.\n\n* **Rack/zone awareness** - Tell the Couchbase Operator about availability zones in your datacenter and let the operator take care of ensuring that nodes in your cluster are deployed equally across each zone.\n\n* **Supportability** - When things go wrong, use the cbopinfo tool provided with the Couchbase Operator to collect relevant data about your Couchbase deployment so that you can quickly address issues.\n\n* **Centralized configuration management** - Manage your configuration centrally with OpenShift. Updates to the configuration are watched by the Couchbase Operator and actions are taken to make the target cluster match the desired configuration.\n## Required Parameters\n* `authSecret` - provide the name of a secret that contains two keys for the `username` and `password` of the super user ([documentation](https://docs.couchbase.com/operator/1.2/couchbase-cluster-config.html))\n\n## About Couchbase Server\n\nBuilt on the most powerful NoSQL technology, Couchbase Server delivers unparalleled performance at scale, in any cloud. With features like memory-first architecture, geo-distributed deployments, and workload isolation, Couchbase Server excels at supporting mission-critical applications at scale while maintaining submillisecond latencies and 99.999% availability. Plus, with the most comprehensive SQL-compatible query language (N1QL), migrating from RDBMS to Couchbase Server is easy with ANSI joins.\n",
      "csv_display_name": "Couchbase Operator",
      "csv_metadata_description": "The Couchbase Autonomous Operator allows users to easily deploy, manage, and maintain Couchbase deployments",
      "csv_name": "couchbase-operator.v2.2.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:32:13.105000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchbase-enterprise-certified",
      "provided_apis": [
        {
          "group": "couchbase.com",
          "kind": "CouchbaseCluster",
          "plural": "couchbaseclusters",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseMemcachedBucket",
          "plural": "couchbasememcachedbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseReplication",
          "plural": "couchbasereplications",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseUser",
          "plural": "couchbaseusers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseAutoscaler",
          "plural": "couchbaseautoscalers",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackup",
          "plural": "couchbasebackups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseEphemeralBucket",
          "plural": "couchbaseephemeralbuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBucket",
          "plural": "couchbasebuckets",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseGroup",
          "plural": "couchbasegroups",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseBackupRestore",
          "plural": "couchbasebackuprestores",
          "version": "v2"
        },
        {
          "group": "couchbase.com",
          "kind": "CouchbaseRoleBinding",
          "plural": "couchbaserolebindings",
          "version": "v2"
        }
      ],
      "provider": "Couchbase",
      "related_images": [
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "operator-81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f-annotation"
        },
        {
          "digest": "sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "image": "registry.connect.redhat.com/couchbase/operator@sha256:81e281289f56a2634d337e7ed6ca75ee914748a8f00a1baac70c50694b39e11f",
          "name": "couchbase-operator"
        },
        {
          "digest": "sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:187046a848f32233e7e92705c57fa864b1d373c2078a92b51c9706bec6e372e5",
          "name": "couchbase_server"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "couchbase_backup"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "couchbase_metrics"
        },
        {
          "digest": "sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "image": "registry.connect.redhat.com/couchbase/exporter@sha256:b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784",
          "name": "exporter-b9ff3aec88f42f8e6164d61a1c5f845b4c3dd3f606ac552170d5c61311ce5784-annotation"
        },
        {
          "digest": "sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "image": "registry.connect.redhat.com/couchbase/operator-backup@sha256:c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76",
          "name": "operator-backup-c0ab51854294d117c4ecf867b541ed6dc67410294d72f560cc33b038d98e4b76-annotation"
        },
        {
          "digest": "sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "image": "registry.connect.redhat.com/couchbase/server@sha256:c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15",
          "name": "server-c94326da3435265666a4e332c6c5e78ddf74777cb64e1e8728d237c6b5008c15-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.1-1",
      "version_original": "2.2.1-1"
    },
    {
      "_id": "6140d6a1cc19c4a9a27dd309",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:06:41.002000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:33:21.928000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6140d76f3cdb0ef49d8c7095",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:10:07.994000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:45:59.821000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6140d781cc19c4a9a27dd310",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:10:25.184000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:23:56.623000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6140d7a0cc19c4a9a27dd311",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:10:56.620000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:52:02.041000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6140d7afcc19c4a9a27dd312",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:11:11.389000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:32:39.622000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6140d7b4d23dceab29694e2a",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:11:16.753000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:10:31.523000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6140d7c3d23dceab29694e2b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:11:31.261000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:05:50.201000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6140d7c5cc19c4a9a27dd315",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-09-14T17:11:33.132000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:23:09.231000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d7ff3cdb0ef49d8c709c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:12:31.876000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:07:28.086000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6140d83afdf729f2c04a7090",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:13:30.586000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:16:35.266000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6140d83d3cdb0ef49d8c70a0",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:13:33.754000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:24:52.830000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6140d851fdf729f2c04a7091",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-09-14T17:13:53.292000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:11:36.903000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d8523cdb0ef49d8c70a1",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:13:54.568000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:54:53.088000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6140d85cd23dceab29694e34",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:14:04.604000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:34:36.810000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d88bd23dceab29694e37",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:14:51.781000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:17:59.638000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6140d88fcc19c4a9a27dd31a",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:14:55.584000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:26:29.301000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "redislabs/operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "operator-fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2-annotation"
        },
        {
          "digest": "sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:fcdcfbf38860a41a5c4a635cf74d8f421fe48b4180b51c511e5eb3f309c7f6e2",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6140d898cc19c4a9a27dd31b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:15:04.547000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:06:54.326000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6140d8b43cdb0ef49d8c70a4",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:15:32.216000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:06:39.612000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "6140d8c9d23dceab29694e38",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:15:53.344000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:06:26.253000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d8d1fdf729f2c04a7096",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-35.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:16:01.251000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:16:28.403000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "redislabs/operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "operator-6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67-annotation"
        },
        {
          "digest": "sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:6b2879ece978e1a8e6a09be7b5f67dd3c9b25f9efbf92852af55ddabc0328c67",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6140d919d23dceab29694e3c",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:17:13.696000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:19:24.590000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6140d933fdf729f2c04a709a",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:17:39.434000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:31:54.580000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6140d94e3cdb0ef49d8c70a6",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:18:06.483000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:46:29.251000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6140d94fcc19c4a9a27dd31d",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-09-14T17:18:07.723000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:21:51.806000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140d9e5cc19c4a9a27dd31e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-28.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:20:37.216000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:29:34.586000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "redislabs/operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "operator-29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca-annotation"
        },
        {
          "digest": "sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:29c2dec83137378b59946f98c36446241cdf06e083216232ab80e8b667f837ca",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6140da04fdf729f2c04a709c",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:21:08.108000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:32:09.059000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6140da28fdf729f2c04a709d",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:21:44.157000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:25:05.663000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6140da2efdf729f2c04a709e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:21:50.995000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:43:52.980000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6140da82d23dceab29694e3d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:23:14.029000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:10:38.143000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6140da8dfdf729f2c04a709f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:23:25.237000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:54:07.893000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6140dab3d23dceab29694e3e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-14T17:24:03.322000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:33:13.564000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "6141e536d23dceab29695095",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {
                "ip": [
                  "192.168.33.11",
                  "192.168.32.12"
                ],
                "nodeName": "r7515-047-v010"
              },
              {
                "ip": [
                  "192.168.22.11",
                  "192.168.21.12"
                ],
                "nodeName": "r7515-047-v011"
              }
            ],
            "customImageRegistry": "artifactory-infoscalecontainers-auto-images-snapshots.cto.veritas.com/RTI_NAME/veritas",
            "licensePort": 6443,
            "licenseServer": "192.68.42.56",
            "version": "8.0.0.0000"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-operator-bundle@sha256:5b93e0186a26e21243b78dc6646060352b98cace43e03cf0a1dc199978c33ea5",
      "bundle_path_digest": "sha256:5b93e0186a26e21243b78dc6646060352b98cace43e03cf0a1dc199978c33ea5",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-15T12:21:10.929000+00:00",
      "csv_description": "Operator for Infoscale deployment",
      "csv_display_name": "infoscale-operator",
      "csv_metadata_description": "",
      "csv_name": "infoscale-operator.v8.0.1000000",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:19:08.922000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "infoscale-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:86cf2963098577285b8deecc53e131f5b5d29485b6a2539e6731b600bd40f465",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:86cf2963098577285b8deecc53e131f5b5d29485b6a2539e6731b600bd40f465",
          "name": "manager"
        },
        {
          "digest": "sha256:86cf2963098577285b8deecc53e131f5b5d29485b6a2539e6731b600bd40f465",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-operator@sha256:86cf2963098577285b8deecc53e131f5b5d29485b6a2539e6731b600bd40f465",
          "name": "pre-manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.0.1000000",
      "version_original": "8.0.1000000"
    },
    {
      "_id": "61446a7f1ea8a4ec32b378eb",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-13-bundle@sha256:71ae638beab4cc69eb290980a89793d0db6404ed7b9ccdfa1912ad5fa085a73a",
      "bundle_path_digest": "sha256:71ae638beab4cc69eb290980a89793d0db6404ed7b9ccdfa1912ad5fa085a73a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2021-09-17T10:14:23.095000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 13 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform. \n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64 and s390x. \n\nUse of the product is subject to Fujitsu evaluation license located at: https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-trial-version-software-evaluation-license-agreement and the license period is 90 days after the download\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 13 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 13",
      "csv_name": "fujitsu-enterprise-operator.v3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:35:49.737000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "plural": "fepexporters",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "plural": "fepautoscales",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-operator@sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "name": "fujitsu-enterprise-postgres-13-operator-1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00-annotation"
        },
        {
          "digest": "sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-operator@sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:b2c1c6f048665319ee02772085d548e282d34461c95b1f8cdd36e9365d9fd474",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:b2c1c6f048665319ee02772085d548e282d34461c95b1f8cdd36e9365d9fd474",
          "name": "fep"
        },
        {
          "digest": "sha256:1377793d0645b8dd507bb16bb6666585e5ea73ba1373a83b1d1e5f6c00aec748",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:1377793d0645b8dd507bb16bb6666585e5ea73ba1373a83b1d1e5f6c00aec748",
          "name": "backup"
        },
        {
          "digest": "sha256:d91a02626b5be5fd7d975107ef7cc2eff9dcb99d229ce9ce3195925d122f0cd8",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:d91a02626b5be5fd7d975107ef7cc2eff9dcb99d229ce9ce3195925d122f0cd8",
          "name": "restore"
        },
        {
          "digest": "sha256:8f541bde7d0e394bf0e3c324846211ec75aa0e66fbe13a3fd75c520303d55408",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:8f541bde7d0e394bf0e3c324846211ec75aa0e66fbe13a3fd75c520303d55408",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:ec103ddac6a3e6359b736132543e9a606c681252ff2fc85626dadf2a4a8c3b05",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:ec103ddac6a3e6359b736132543e9a606c681252ff2fc85626dadf2a4a8c3b05",
          "name": "fepexporter"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "61446c4d1ea8a4ec32b378ed",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0",
                "new-fep-sts-1"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPExporter",
          "metadata": {
            "name": "new-fep-exporter"
          },
          "spec": {
            "fepExporter": {
              "exporterLogLevel": "error",
              "fepClusterList": [
                "new-fep1"
              ],
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "restartRequired": false,
              "sysExtraLogging": false,
              "userCustomQueries": "usr_example:\n  query: \"SELECT EXTRACT(EPOCH FROM (now() - pg_last_xact_replay_timestamp())) as lag\"\n  master: true\n  metrics:\n    - lag:\n        usage: \"GAUGE\"\n        description: \"Replication lag behind master in seconds\""
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "count": 2,
            "customhba": "local   all         all                               trust\nhost    all         all         127.0.0.1/32          trust\nhost    all         all         ::1/128               trust\n",
            "customlogsize": "128Mi",
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'ALWAYS_PRIMARY'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nsr_check_period = 0\nsr_check_user = 'postgres'\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = on\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = primary\nwd_port0 = 9000\n",
            "custompcp": "none",
            "customsslcacert": "none",
            "customsslcert": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
            "customsslkey": "none",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "limits": {
              "cpu": "400m",
              "memory": "512Mi"
            },
            "requests": {
              "cpu": "200m",
              "memory": "256Mi"
            },
            "serviceport": 9999,
            "statusport": 9898
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "sysExtraLogging": false,
            "toFEPcluster": "new-fep-2"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": 1,
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": 0.2,
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": 0.1,
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": "# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[global]\nrepo1-retention-full=7\nrepo1-retention-full-type=time\nlog-path=/database/log/backup\n",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\nlog_truncate_on_rotation = on\nlog_filename = 'pgaudit-%a.log'\nlog_rotation_age = 1d\nlog_rotation_size = 0\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,pg_prewarm,pg_stat_statements'\nsession_preload_libraries='pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be\n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\ntrack_activities = on\ntrack_counts = on\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgRewindPassword": "rewind_password",
                "pgRewindUser": "rewind_user",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-13-bundle@sha256:71ae638beab4cc69eb290980a89793d0db6404ed7b9ccdfa1912ad5fa085a73a",
      "bundle_path_digest": "sha256:71ae638beab4cc69eb290980a89793d0db6404ed7b9ccdfa1912ad5fa085a73a",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "beta",
      "creation_date": "2021-09-17T10:22:05.723000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 13 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform. \n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution of PostgreSQL to support enterprise-level workloads and provide improved deployment and management, availability, performance, data governance and security.  \n\nAvailable as a multi-architecture container built for both amd64 and s390x. \n\nUse of the product is subject to Fujitsu evaluation license located at: https://www.fast.fujitsu.com/fujitsu-enterprise-postgres-trial-version-software-evaluation-license-agreement and the license period is 90 days after the download\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 13 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 13",
      "csv_name": "fujitsu-enterprise-operator.v3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:53:28.148000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "fujitsu-enterprise-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAutoscale",
          "plural": "fepautoscales",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPExporter",
          "plural": "fepexporters",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-operator@sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "name": "fujitsu-enterprise-postgres-13-operator-1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00-annotation"
        },
        {
          "digest": "sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-operator@sha256:1154c3661122baab43f23015e84f37ec2dc8f654b0ea510304b93a7415783e00",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:b2c1c6f048665319ee02772085d548e282d34461c95b1f8cdd36e9365d9fd474",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-server@sha256:b2c1c6f048665319ee02772085d548e282d34461c95b1f8cdd36e9365d9fd474",
          "name": "fep"
        },
        {
          "digest": "sha256:1377793d0645b8dd507bb16bb6666585e5ea73ba1373a83b1d1e5f6c00aec748",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-backup@sha256:1377793d0645b8dd507bb16bb6666585e5ea73ba1373a83b1d1e5f6c00aec748",
          "name": "backup"
        },
        {
          "digest": "sha256:d91a02626b5be5fd7d975107ef7cc2eff9dcb99d229ce9ce3195925d122f0cd8",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-restore@sha256:d91a02626b5be5fd7d975107ef7cc2eff9dcb99d229ce9ce3195925d122f0cd8",
          "name": "restore"
        },
        {
          "digest": "sha256:8f541bde7d0e394bf0e3c324846211ec75aa0e66fbe13a3fd75c520303d55408",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-pgpool2@sha256:8f541bde7d0e394bf0e3c324846211ec75aa0e66fbe13a3fd75c520303d55408",
          "name": "pgpool2"
        },
        {
          "digest": "sha256:ec103ddac6a3e6359b736132543e9a606c681252ff2fc85626dadf2a4a8c3b05",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-13-exporter@sha256:ec103ddac6a3e6359b736132543e9a606c681252ff2fc85626dadf2a4a8c3b05",
          "name": "fepexporter"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "61456f841ea8a4ec32b3791c",
      "alm_examples": [
        {
          "api_version": "hxcsi.cisco.com/v1",
          "kind": "HXCSIDriver",
          "metadata": {
            "name": "cisco-hyperflex-csi-driver"
          },
          "spec": {
            "affinity": {},
            "autoscaling": {},
            "fullnameOverride": "",
            "hx": {
              "clientId": "INPUT_VALUE_HERE",
              "dockerRegistryName": "INPUT_VALUE_HERE",
              "iscsiUrl": "INPUT_VALUE_HERE",
              "token": "INPUT_VALUE_HERE",
              "url": "INPUT_VALUE_HERE"
            },
            "image": {
              "attacher": "hxcsi-csi-attacher:3.2.0-cisco1",
              "hxcsi": "hxcsi-ubi8:hxcsi-1.2.2-latest",
              "provisioner": "hxcsi-csi-provisioner:2.1.2-cisco1",
              "pullPolicy": "Always",
              "registrar": "hxcsi-csi-node-driver-registrar:2.1.0-cisco1",
              "resizer": "hxcsi-csi-resizer:1.1.0-cisco1",
              "tag": ""
            },
            "imagePullSecrets": [],
            "ingress": {},
            "nameOverride": "",
            "nodeSelector": {},
            "podAnnotations": {},
            "podSecurityContext": {},
            "replicaCount": 2,
            "resources": {},
            "securityContext": {},
            "service": {},
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            },
            "storageClass": {
              "isDefault": "false",
              "name": "hyperflex"
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hxcsiadmin/hxcsi-helm-bundle@sha256:1537b6e2a05383eacad38c4606d4328e25bebb0e088c96fd6db10f86dcdbd10a",
      "bundle_path_digest": "sha256:1537b6e2a05383eacad38c4606d4328e25bebb0e088c96fd6db10f86dcdbd10a",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-18T04:48:04.331000+00:00",
      "csv_description": "\nCisco HyperFlex Data Platform (HX Data Platform) is a hyperconverged software appliance that transforms Cisco servers into a single pool of compute and storage resources. It eliminates the need for network storage and enables seamless interoperability between computing and storage in virtual environments. The Cisco HX Data Platform provides a highly fault-tolerant distributed storage system that preserves data integrity and optimizes performance for virtual machine (VM) storage workloads. In addition, native compression and deduplication reduce storage space occupied by the VMs and VM workloads.\n### HyperFlex CSI Driver\nThe Cisco HyperFlex Kubernetes CSI Integration allows Cisco HyperFlex to dynamically provide persistent storage to stateful Kubernetes workloads running on Cisco HyperFlex. The integration enables orchestration of the entire Persistent Volume object lifecycle to be offloaded and managed by Cisco HyperFlex, while being driven (initiated) by developers and users through standard Kubernetes Persistent Volume Claim objects. Developers and users get the benefit of leveraging Cisco HyperFlex for their Kubernetes persistent storage needs with zero additional administration overhead from their perspective.\n### Features Support\n- Support for CSI Spec 1.2 APIs\n- Kubernetes 1.18, 1.19, 1.20 support\n- Kubernetes Cluster multi tenancy target masking using dedicated initiator group\n- Dynamic creation and deletion of volumes\n- Dynamic volume attach and detach * Block access support\n- Clone volume (when source volume is from the same Datastore)\n- PV support with different filesystems (Ext4, Ext3, XFS)\n- Volume space statistics reporting per CSI specs\n- Multi-writer support (ReadWriteMany) for Block Mode only\n- Volume resize support for block mode volumes and ext3, ext4 filesystem volumes (expansion)\n",
      "csv_display_name": "Cisco Hyperflex CSI Operator",
      "csv_metadata_description": "Cisco HXCSI Plugin for RedHat OpenShift Platform",
      "csv_name": "cisco-hxcsi-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:49:38.488000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cisco-hxcsi-operator",
      "provided_apis": [
        {
          "group": "hxcsi.cisco.com",
          "kind": "HXCSIDriver",
          "plural": "hxcsidrivers",
          "version": "v1"
        }
      ],
      "provider": "Cisco Systems Inc",
      "related_images": [
        {
          "digest": "sha256:0daadef5d80ec8c170f8ac04553c2f3296f17ced72507ccad77592c4323b3ef1",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-bundle@sha256:0daadef5d80ec8c170f8ac04553c2f3296f17ced72507ccad77592c4323b3ef1",
          "name": "hxcsi-helm-bundle-0daadef5d80ec8c170f8ac04553c2f3296f17ced72507ccad77592c4323b3ef1-annotation"
        },
        {
          "digest": "sha256:deb80f8e208b0133a91fb62909eec014d6245ea7fa8f0040411d019a545bd43a",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:deb80f8e208b0133a91fb62909eec014d6245ea7fa8f0040411d019a545bd43a",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:200954bc7d4c13673e1461bff2031687a10b20f8f9ae6c1271f447bb1afd1a44",
          "image": "quay.io/hxcsiadmin/hxcsi-helm-operator@sha256:200954bc7d4c13673e1461bff2031687a10b20f8f9ae6c1271f447bb1afd1a44",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "6148f1c0b7165a646042e545",
      "alm_examples": [
        {
          "api_version": "helm-operator.sumologic.com/v1alpha1",
          "kind": "SumologicCollection",
          "metadata": {
            "name": "collection"
          },
          "spec": {
            "fluent-bit": {
              "config": {
                "customParsers": "[PARSER]\n    Name        multi_line\n    Format      regex\n    Regex       (?<log>^{\"log\":\"\\d{4}-\\d{1,2}-\\d{1,2}.\\d{2}:\\d{2}:\\d{2}.*)\n[PARSER]\n    Name         crio\n    Format       regex\n    Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key     time\n    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z\n[PARSER]\n    Name         containerd\n    Format       regex\n    Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key     time\n    Time_Format  %Y-%m-%dT%H:%M:%S.%LZ\n",
                "inputs": "[INPUT]\n    Name                tail\n    Path                /var/log/containers/*.log\n    Parser              crio\n    Tag                 containers.*\n    Refresh_Interval    1\n    Rotate_Wait         60\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    DB                  /tail-db/tail-containers-state-sumo.db\n    DB.Sync             Normal\n[INPUT]\n    Name            systemd\n    Tag             host.*\n    DB              /tail-db/systemd-state-sumo.db\n    Systemd_Filter  _SYSTEMD_UNIT=addon-config.service\n    Systemd_Filter  _SYSTEMD_UNIT=addon-run.service\n    Systemd_Filter  _SYSTEMD_UNIT=cfn-etcd-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=cfn-signal.service\n    Systemd_Filter  _SYSTEMD_UNIT=clean-ca-certificates.service\n    Systemd_Filter  _SYSTEMD_UNIT=containerd.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-metadata.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-setup-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-tmpfiles.service\n    Systemd_Filter  _SYSTEMD_UNIT=dbus.service\n    Systemd_Filter  _SYSTEMD_UNIT=docker.service\n    Systemd_Filter  _SYSTEMD_UNIT=efs.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd-member.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd2.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd3.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-check.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-reconfigure.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-save.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-update-status.service\n    Systemd_Filter  _SYSTEMD_UNIT=flanneld.service\n    Systemd_Filter  _SYSTEMD_UNIT=format-etcd2-volume.service\n    Systemd_Filter  _SYSTEMD_UNIT=kube-node-taint-and-uncordon.service\n    Systemd_Filter  _SYSTEMD_UNIT=kubelet.service\n    Systemd_Filter  _SYSTEMD_UNIT=ldconfig.service\n    Systemd_Filter  _SYSTEMD_UNIT=locksmithd.service\n    Systemd_Filter  _SYSTEMD_UNIT=logrotate.service\n    Systemd_Filter  _SYSTEMD_UNIT=lvm2-monitor.service\n    Systemd_Filter  _SYSTEMD_UNIT=mdmon.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-idmapd.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-mountd.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-server.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-utils.service\n    Systemd_Filter  _SYSTEMD_UNIT=node-problem-detector.service\n    Systemd_Filter  _SYSTEMD_UNIT=ntp.service\n    Systemd_Filter  _SYSTEMD_UNIT=oem-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=rkt-gc.service\n    Systemd_Filter  _SYSTEMD_UNIT=rkt-metadata.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-idmapd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-mountd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-statd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpcbind.service\n    Systemd_Filter  _SYSTEMD_UNIT=set-aws-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=system-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=systemd-timesyncd.service\n    Systemd_Filter  _SYSTEMD_UNIT=update-ca-certificates.service\n    Systemd_Filter  _SYSTEMD_UNIT=user-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=var-lib-etcd2.service\n    Max_Entries     1000\n    Read_From_Tail  true\n",
                "outputs": "[OUTPUT]\n    Name          forward\n    Match         *\n    Host          ${FLUENTD_LOGS_SVC}.${NAMESPACE}.svc.cluster.local.\n    Port          24321\n    Retry_Limit   False\n    tls           off\n    tls.verify    on\n    tls.debug     1\n    # Disable keepalive for better load balancing\n    net.keepalive off\n",
                "service": "[SERVICE]\n    Flush        1\n    Daemon       Off\n    Log_Level    info\n    Parsers_File parsers.conf\n    Parsers_File custom_parsers.conf\n    HTTP_Server  On\n    HTTP_Listen  0.0.0.0\n    HTTP_Port    2020\n"
              },
              "securityContext": {
                "privileged": true
              }
            },
            "fluentd": {
              "buffer": {
                "queueChunkLimitSize": 256,
                "totalLimitSize": "256m"
              },
              "logs": {
                "containers": {
                  "multiline": {
                    "enabled": false
                  }
                }
              }
            },
            "kube-prometheus-stack": {
              "prometheus-node-exporter": {
                "service": {
                  "port": 9200,
                  "targetPort": 9200
                }
              },
              "prometheusOperator": {
                "denyNamespaces": [
                  "openshift-apiserver",
                  "openshift-apiserver-operator",
                  "openshift-authentication",
                  "openshift-authentication-operator",
                  "openshift-cloud-credential-operator",
                  "openshift-cluster-machine-approver",
                  "openshift-cluster-samples-operator",
                  "openshift-cluster-storage-operator",
                  "openshift-cluster-version",
                  "openshift-config-operator",
                  "openshift-console-operator",
                  "openshift-controller-manager",
                  "openshift-controller-manager-operator",
                  "openshift-dns,openshift-dns-operator",
                  "openshift-etcd-operator",
                  "openshift-image-registry",
                  "openshift-ingress",
                  "openshift-ingress-operator",
                  "openshift-insights",
                  "openshift-kube-apiserver",
                  "openshift-kube-apiserver-operator",
                  "openshift-kube-controller-manager",
                  "openshift-kube-controller-manager-operator",
                  "openshift-kube-scheduler",
                  "openshift-kube-scheduler-operator",
                  "openshift-kube-storage-version-migrator",
                  "openshift-kube-storage-version-migrator-operator",
                  "openshift-machine-api",
                  "openshift-machine-config-operator",
                  "openshift-marketplace",
                  "openshift-monitoring",
                  "openshift-multus",
                  "openshift-oauth-apiserver",
                  "openshift-operator-lifecycle-manager",
                  "openshift-sdn",
                  "openshift-service-ca-operator",
                  "openshift-user-workload-monitoring"
                ]
              }
            },
            "sumologic": {
              "accessId": "",
              "accessKey": "",
              "clusterName": "kubernetes",
              "endpoint": "",
              "scc": {
                "create": true
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator-bundle@sha256:73b3e043557aed8392382afad2009fe2846a659d8f6eec25301a36f932b12680",
      "bundle_path_digest": "sha256:73b3e043557aed8392382afad2009fe2846a659d8f6eec25301a36f932b12680",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-20T20:40:32.662000+00:00",
      "csv_description": "Helm Operator for the Sumo Logic Kubernetes Collection Helm Chart v2.1.4",
      "csv_display_name": "Sumo Logic Kubernetes Collection Helm Operator",
      "csv_metadata_description": "",
      "csv_name": "sumologic-kubernetes-collection-helm-operator.v2.1.4-0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:38:47.843000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sumologic-kubernetes-collection-helm-operator",
      "provided_apis": [
        {
          "group": "helm-operator.sumologic.com",
          "kind": "SumologicCollection",
          "plural": "sumologiccollections",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sumo Logic",
      "related_images": [
        {
          "digest": "sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "image": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator@sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "name": "sumologic-kubernetes-collection-helm-operator-b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3-annotation"
        },
        {
          "digest": "sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "image": "registry.connect.redhat.com/sumologic/kube-rbac-proxy@sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "image": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator@sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "name": "operator"
        },
        {
          "digest": "sha256:ca76893ae48cfc0e6ee4ef24ccbeb4a90aad738308feacdbd9eed205826406b9",
          "image": "registry.connect.redhat.com/sumologic/kubernetes-setup@sha256:ca76893ae48cfc0e6ee4ef24ccbeb4a90aad738308feacdbd9eed205826406b9",
          "name": "kubernetes_setup"
        },
        {
          "digest": "sha256:22694389170863ac60b6c5248310c1381cb145b6b9fa354a18ee664215c5375a",
          "image": "registry.connect.redhat.com/sumologic/node-exporter@sha256:22694389170863ac60b6c5248310c1381cb145b6b9fa354a18ee664215c5375a",
          "name": "node_exporter"
        },
        {
          "digest": "sha256:bb1f73b2be45fa31dfd3fbe72df1d553e5c6cdaa81709bf628764f5969ce4fc2",
          "image": "registry.connect.redhat.com/sumologic/kube-state-metrics@sha256:bb1f73b2be45fa31dfd3fbe72df1d553e5c6cdaa81709bf628764f5969ce4fc2",
          "name": "kube_state_metrics"
        },
        {
          "digest": "sha256:8e29f9b5b7ae76aa9515d1ba20180511feb0c642bc61f782d8d1ea6f62f862aa",
          "image": "registry.connect.redhat.com/sumologic/prometheus-operator@sha256:8e29f9b5b7ae76aa9515d1ba20180511feb0c642bc61f782d8d1ea6f62f862aa",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:0309a748632654700e0d49f7ecd7ee61e6344f53107c9ce0c5cf1d301f943d37",
          "image": "registry.connect.redhat.com/sumologic/prometheus-config-reloader@sha256:0309a748632654700e0d49f7ecd7ee61e6344f53107c9ce0c5cf1d301f943d37",
          "name": "prometheus_config_reloader"
        },
        {
          "digest": "sha256:716d5c7183affd306bee7c35c577e5da852d4dfe8da9bf37aff255cd96a0c9b3",
          "image": "registry.connect.redhat.com/sumologic/prometheus@sha256:716d5c7183affd306bee7c35c577e5da852d4dfe8da9bf37aff255cd96a0c9b3",
          "name": "prometheus"
        },
        {
          "digest": "sha256:707e40ee919e4bc3c2edeecdc536acdf8cb67f9e5fc34eaad9d9e4c283438bb1",
          "image": "registry.connect.redhat.com/sumologic/thanos@sha256:707e40ee919e4bc3c2edeecdc536acdf8cb67f9e5fc34eaad9d9e4c283438bb1",
          "name": "thanos"
        },
        {
          "digest": "sha256:1f3c4554e2141e67600ffb2528d8745daf1e581330cb5f4fc75ee7c8aa2298c1",
          "image": "registry.connect.redhat.com/sumologic/metrics-server@sha256:1f3c4554e2141e67600ffb2528d8745daf1e581330cb5f4fc75ee7c8aa2298c1",
          "name": "metrics_server"
        },
        {
          "digest": "sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "image": "registry.connect.redhat.com/sumologic/kube-rbac-proxy@sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:1d9d902b165596e12a626f5dd2f9d512627b356c3773a04c96df24270a840724",
          "image": "registry.connect.redhat.com/sumologic/tailing-sidecar-operator@sha256:1d9d902b165596e12a626f5dd2f9d512627b356c3773a04c96df24270a840724",
          "name": "tailing_sidecar_operator"
        },
        {
          "digest": "sha256:838401ab699ae1f4a581a62a6eea413bca1e2c30d60358acb16bd86be75fbca1",
          "image": "registry.connect.redhat.com/sumologic/tailing-sidecar@sha256:838401ab699ae1f4a581a62a6eea413bca1e2c30d60358acb16bd86be75fbca1",
          "name": "tailing_sidecar"
        },
        {
          "digest": "sha256:3a63153408ff6bb5d6294fcdedfa30b07a5023ca5f72dd63c6e4de31f6bf1c68",
          "image": "registry.connect.redhat.com/sumologic/telegraf-operator@sha256:3a63153408ff6bb5d6294fcdedfa30b07a5023ca5f72dd63c6e4de31f6bf1c68",
          "name": "telegraf_operator"
        },
        {
          "digest": "sha256:8d92cabdd8efbec83475a004209745cc14e877d361cae19ab80a622ebda57e24",
          "image": "registry.connect.redhat.com/sumologic/telegraf@sha256:8d92cabdd8efbec83475a004209745cc14e877d361cae19ab80a622ebda57e24",
          "name": "telegraf"
        },
        {
          "digest": "sha256:362053ce1833aa51db31d36f97458f526d199bcd7efff53486b09e3a02a795ab",
          "image": "registry.connect.redhat.com/sumologic/kubernetes-fluentd@sha256:362053ce1833aa51db31d36f97458f526d199bcd7efff53486b09e3a02a795ab",
          "name": "kubernetes_fluentd"
        },
        {
          "digest": "sha256:faa802d22e41f8d67d487e40285fa2a7ea72f9cd49c32ddb80ea34f4d302e220",
          "image": "registry.connect.redhat.com/sumologic/fluent-bit@sha256:faa802d22e41f8d67d487e40285fa2a7ea72f9cd49c32ddb80ea34f4d302e220",
          "name": "fluent_bit"
        },
        {
          "digest": "sha256:5d468e602034fd84407429fe83c8cb5e4c9ee07e2073db3969aadc97496a958b",
          "image": "registry.connect.redhat.com/sumologic/sumo-ubi-minimal@sha256:5d468e602034fd84407429fe83c8cb5e4c9ee07e2073db3969aadc97496a958b",
          "name": "sumo_ubi_minimal"
        },
        {
          "digest": "sha256:6f07f96178dc26f97169e899c91bd151b64bba6854fcb9f70ccefdfadb48f17a",
          "image": "registry.connect.redhat.com/sumologic/opentelemetry-collector@sha256:6f07f96178dc26f97169e899c91bd151b64bba6854fcb9f70ccefdfadb48f17a",
          "name": "opentelemetry_collector"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.4-0",
      "version_original": "2.1.4-0"
    },
    {
      "_id": "6148f20f1ea8a4ec32b37fe3",
      "alm_examples": [
        {
          "api_version": "helm-operator.sumologic.com/v1alpha1",
          "kind": "SumologicCollection",
          "metadata": {
            "name": "collection"
          },
          "spec": {
            "fluent-bit": {
              "config": {
                "customParsers": "[PARSER]\n    Name        multi_line\n    Format      regex\n    Regex       (?<log>^{\"log\":\"\\d{4}-\\d{1,2}-\\d{1,2}.\\d{2}:\\d{2}:\\d{2}.*)\n[PARSER]\n    Name         crio\n    Format       regex\n    Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key     time\n    Time_Format  %Y-%m-%dT%H:%M:%S.%L%z\n[PARSER]\n    Name         containerd\n    Format       regex\n    Regex        ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$\n    Time_Key     time\n    Time_Format  %Y-%m-%dT%H:%M:%S.%LZ\n",
                "inputs": "[INPUT]\n    Name                tail\n    Path                /var/log/containers/*.log\n    Parser              crio\n    Tag                 containers.*\n    Refresh_Interval    1\n    Rotate_Wait         60\n    Mem_Buf_Limit       5MB\n    Skip_Long_Lines     On\n    DB                  /tail-db/tail-containers-state-sumo.db\n    DB.Sync             Normal\n[INPUT]\n    Name            systemd\n    Tag             host.*\n    DB              /tail-db/systemd-state-sumo.db\n    Systemd_Filter  _SYSTEMD_UNIT=addon-config.service\n    Systemd_Filter  _SYSTEMD_UNIT=addon-run.service\n    Systemd_Filter  _SYSTEMD_UNIT=cfn-etcd-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=cfn-signal.service\n    Systemd_Filter  _SYSTEMD_UNIT=clean-ca-certificates.service\n    Systemd_Filter  _SYSTEMD_UNIT=containerd.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-metadata.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-setup-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=coreos-tmpfiles.service\n    Systemd_Filter  _SYSTEMD_UNIT=dbus.service\n    Systemd_Filter  _SYSTEMD_UNIT=docker.service\n    Systemd_Filter  _SYSTEMD_UNIT=efs.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd-member.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd2.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcd3.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-check.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-reconfigure.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-save.service\n    Systemd_Filter  _SYSTEMD_UNIT=etcdadm-update-status.service\n    Systemd_Filter  _SYSTEMD_UNIT=flanneld.service\n    Systemd_Filter  _SYSTEMD_UNIT=format-etcd2-volume.service\n    Systemd_Filter  _SYSTEMD_UNIT=kube-node-taint-and-uncordon.service\n    Systemd_Filter  _SYSTEMD_UNIT=kubelet.service\n    Systemd_Filter  _SYSTEMD_UNIT=ldconfig.service\n    Systemd_Filter  _SYSTEMD_UNIT=locksmithd.service\n    Systemd_Filter  _SYSTEMD_UNIT=logrotate.service\n    Systemd_Filter  _SYSTEMD_UNIT=lvm2-monitor.service\n    Systemd_Filter  _SYSTEMD_UNIT=mdmon.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-idmapd.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-mountd.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-server.service\n    Systemd_Filter  _SYSTEMD_UNIT=nfs-utils.service\n    Systemd_Filter  _SYSTEMD_UNIT=node-problem-detector.service\n    Systemd_Filter  _SYSTEMD_UNIT=ntp.service\n    Systemd_Filter  _SYSTEMD_UNIT=oem-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=rkt-gc.service\n    Systemd_Filter  _SYSTEMD_UNIT=rkt-metadata.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-idmapd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-mountd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpc-statd.service\n    Systemd_Filter  _SYSTEMD_UNIT=rpcbind.service\n    Systemd_Filter  _SYSTEMD_UNIT=set-aws-environment.service\n    Systemd_Filter  _SYSTEMD_UNIT=system-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=systemd-timesyncd.service\n    Systemd_Filter  _SYSTEMD_UNIT=update-ca-certificates.service\n    Systemd_Filter  _SYSTEMD_UNIT=user-cloudinit.service\n    Systemd_Filter  _SYSTEMD_UNIT=var-lib-etcd2.service\n    Max_Entries     1000\n    Read_From_Tail  true\n",
                "outputs": "[OUTPUT]\n    Name          forward\n    Match         *\n    Host          ${FLUENTD_LOGS_SVC}.${NAMESPACE}.svc.cluster.local.\n    Port          24321\n    Retry_Limit   False\n    tls           off\n    tls.verify    on\n    tls.debug     1\n    # Disable keepalive for better load balancing\n    net.keepalive off\n",
                "service": "[SERVICE]\n    Flush        1\n    Daemon       Off\n    Log_Level    info\n    Parsers_File parsers.conf\n    Parsers_File custom_parsers.conf\n    HTTP_Server  On\n    HTTP_Listen  0.0.0.0\n    HTTP_Port    2020\n"
              },
              "securityContext": {
                "privileged": true
              }
            },
            "fluentd": {
              "buffer": {
                "queueChunkLimitSize": 256,
                "totalLimitSize": "256m"
              },
              "logs": {
                "containers": {
                  "multiline": {
                    "enabled": false
                  }
                }
              }
            },
            "kube-prometheus-stack": {
              "prometheus-node-exporter": {
                "service": {
                  "port": 9200,
                  "targetPort": 9200
                }
              },
              "prometheusOperator": {
                "denyNamespaces": [
                  "openshift-apiserver",
                  "openshift-apiserver-operator",
                  "openshift-authentication",
                  "openshift-authentication-operator",
                  "openshift-cloud-credential-operator",
                  "openshift-cluster-machine-approver",
                  "openshift-cluster-samples-operator",
                  "openshift-cluster-storage-operator",
                  "openshift-cluster-version",
                  "openshift-config-operator",
                  "openshift-console-operator",
                  "openshift-controller-manager",
                  "openshift-controller-manager-operator",
                  "openshift-dns,openshift-dns-operator",
                  "openshift-etcd-operator",
                  "openshift-image-registry",
                  "openshift-ingress",
                  "openshift-ingress-operator",
                  "openshift-insights",
                  "openshift-kube-apiserver",
                  "openshift-kube-apiserver-operator",
                  "openshift-kube-controller-manager",
                  "openshift-kube-controller-manager-operator",
                  "openshift-kube-scheduler",
                  "openshift-kube-scheduler-operator",
                  "openshift-kube-storage-version-migrator",
                  "openshift-kube-storage-version-migrator-operator",
                  "openshift-machine-api",
                  "openshift-machine-config-operator",
                  "openshift-marketplace",
                  "openshift-monitoring",
                  "openshift-multus",
                  "openshift-oauth-apiserver",
                  "openshift-operator-lifecycle-manager",
                  "openshift-sdn",
                  "openshift-service-ca-operator",
                  "openshift-user-workload-monitoring"
                ]
              }
            },
            "sumologic": {
              "accessId": "",
              "accessKey": "",
              "clusterName": "kubernetes",
              "endpoint": "",
              "scc": {
                "create": true
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator-bundle@sha256:73b3e043557aed8392382afad2009fe2846a659d8f6eec25301a36f932b12680",
      "bundle_path_digest": "sha256:73b3e043557aed8392382afad2009fe2846a659d8f6eec25301a36f932b12680",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-20T20:41:51.640000+00:00",
      "csv_description": "Helm Operator for the Sumo Logic Kubernetes Collection Helm Chart v2.1.4",
      "csv_display_name": "Sumo Logic Kubernetes Collection Helm Operator",
      "csv_metadata_description": "",
      "csv_name": "sumologic-kubernetes-collection-helm-operator.v2.1.4-0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:31:19.240000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sumologic-kubernetes-collection-helm-operator",
      "provided_apis": [
        {
          "group": "helm-operator.sumologic.com",
          "kind": "SumologicCollection",
          "plural": "sumologiccollections",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sumo Logic",
      "related_images": [
        {
          "digest": "sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "image": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator@sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "name": "sumologic-kubernetes-collection-helm-operator-b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3-annotation"
        },
        {
          "digest": "sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "image": "registry.connect.redhat.com/sumologic/kube-rbac-proxy@sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "image": "registry.connect.redhat.com/sumologic/sumologic-kubernetes-collection-helm-operator@sha256:b2710d0d515cb03598167cd72916923391dd62675eaef9aad7f37efa3bfeebd3",
          "name": "operator"
        },
        {
          "digest": "sha256:ca76893ae48cfc0e6ee4ef24ccbeb4a90aad738308feacdbd9eed205826406b9",
          "image": "registry.connect.redhat.com/sumologic/kubernetes-setup@sha256:ca76893ae48cfc0e6ee4ef24ccbeb4a90aad738308feacdbd9eed205826406b9",
          "name": "kubernetes_setup"
        },
        {
          "digest": "sha256:22694389170863ac60b6c5248310c1381cb145b6b9fa354a18ee664215c5375a",
          "image": "registry.connect.redhat.com/sumologic/node-exporter@sha256:22694389170863ac60b6c5248310c1381cb145b6b9fa354a18ee664215c5375a",
          "name": "node_exporter"
        },
        {
          "digest": "sha256:bb1f73b2be45fa31dfd3fbe72df1d553e5c6cdaa81709bf628764f5969ce4fc2",
          "image": "registry.connect.redhat.com/sumologic/kube-state-metrics@sha256:bb1f73b2be45fa31dfd3fbe72df1d553e5c6cdaa81709bf628764f5969ce4fc2",
          "name": "kube_state_metrics"
        },
        {
          "digest": "sha256:8e29f9b5b7ae76aa9515d1ba20180511feb0c642bc61f782d8d1ea6f62f862aa",
          "image": "registry.connect.redhat.com/sumologic/prometheus-operator@sha256:8e29f9b5b7ae76aa9515d1ba20180511feb0c642bc61f782d8d1ea6f62f862aa",
          "name": "prometheus_operator"
        },
        {
          "digest": "sha256:0309a748632654700e0d49f7ecd7ee61e6344f53107c9ce0c5cf1d301f943d37",
          "image": "registry.connect.redhat.com/sumologic/prometheus-config-reloader@sha256:0309a748632654700e0d49f7ecd7ee61e6344f53107c9ce0c5cf1d301f943d37",
          "name": "prometheus_config_reloader"
        },
        {
          "digest": "sha256:716d5c7183affd306bee7c35c577e5da852d4dfe8da9bf37aff255cd96a0c9b3",
          "image": "registry.connect.redhat.com/sumologic/prometheus@sha256:716d5c7183affd306bee7c35c577e5da852d4dfe8da9bf37aff255cd96a0c9b3",
          "name": "prometheus"
        },
        {
          "digest": "sha256:707e40ee919e4bc3c2edeecdc536acdf8cb67f9e5fc34eaad9d9e4c283438bb1",
          "image": "registry.connect.redhat.com/sumologic/thanos@sha256:707e40ee919e4bc3c2edeecdc536acdf8cb67f9e5fc34eaad9d9e4c283438bb1",
          "name": "thanos"
        },
        {
          "digest": "sha256:1f3c4554e2141e67600ffb2528d8745daf1e581330cb5f4fc75ee7c8aa2298c1",
          "image": "registry.connect.redhat.com/sumologic/metrics-server@sha256:1f3c4554e2141e67600ffb2528d8745daf1e581330cb5f4fc75ee7c8aa2298c1",
          "name": "metrics_server"
        },
        {
          "digest": "sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "image": "registry.connect.redhat.com/sumologic/kube-rbac-proxy@sha256:f92b5704d9d1290b1dd9cc8bfcc445e3e118794e8cf9531f439994ee4d2523a6",
          "name": "kube_rbac_proxy"
        },
        {
          "digest": "sha256:1d9d902b165596e12a626f5dd2f9d512627b356c3773a04c96df24270a840724",
          "image": "registry.connect.redhat.com/sumologic/tailing-sidecar-operator@sha256:1d9d902b165596e12a626f5dd2f9d512627b356c3773a04c96df24270a840724",
          "name": "tailing_sidecar_operator"
        },
        {
          "digest": "sha256:838401ab699ae1f4a581a62a6eea413bca1e2c30d60358acb16bd86be75fbca1",
          "image": "registry.connect.redhat.com/sumologic/tailing-sidecar@sha256:838401ab699ae1f4a581a62a6eea413bca1e2c30d60358acb16bd86be75fbca1",
          "name": "tailing_sidecar"
        },
        {
          "digest": "sha256:3a63153408ff6bb5d6294fcdedfa30b07a5023ca5f72dd63c6e4de31f6bf1c68",
          "image": "registry.connect.redhat.com/sumologic/telegraf-operator@sha256:3a63153408ff6bb5d6294fcdedfa30b07a5023ca5f72dd63c6e4de31f6bf1c68",
          "name": "telegraf_operator"
        },
        {
          "digest": "sha256:8d92cabdd8efbec83475a004209745cc14e877d361cae19ab80a622ebda57e24",
          "image": "registry.connect.redhat.com/sumologic/telegraf@sha256:8d92cabdd8efbec83475a004209745cc14e877d361cae19ab80a622ebda57e24",
          "name": "telegraf"
        },
        {
          "digest": "sha256:362053ce1833aa51db31d36f97458f526d199bcd7efff53486b09e3a02a795ab",
          "image": "registry.connect.redhat.com/sumologic/kubernetes-fluentd@sha256:362053ce1833aa51db31d36f97458f526d199bcd7efff53486b09e3a02a795ab",
          "name": "kubernetes_fluentd"
        },
        {
          "digest": "sha256:faa802d22e41f8d67d487e40285fa2a7ea72f9cd49c32ddb80ea34f4d302e220",
          "image": "registry.connect.redhat.com/sumologic/fluent-bit@sha256:faa802d22e41f8d67d487e40285fa2a7ea72f9cd49c32ddb80ea34f4d302e220",
          "name": "fluent_bit"
        },
        {
          "digest": "sha256:5d468e602034fd84407429fe83c8cb5e4c9ee07e2073db3969aadc97496a958b",
          "image": "registry.connect.redhat.com/sumologic/sumo-ubi-minimal@sha256:5d468e602034fd84407429fe83c8cb5e4c9ee07e2073db3969aadc97496a958b",
          "name": "sumo_ubi_minimal"
        },
        {
          "digest": "sha256:6f07f96178dc26f97169e899c91bd151b64bba6854fcb9f70ccefdfadb48f17a",
          "image": "registry.connect.redhat.com/sumologic/opentelemetry-collector@sha256:6f07f96178dc26f97169e899c91bd151b64bba6854fcb9f70ccefdfadb48f17a",
          "name": "opentelemetry_collector"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.4-0",
      "version_original": "2.1.4-0"
    },
    {
      "_id": "614a7312d36186823c2a427a",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "bundle_path_digest": "sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-09-22T00:04:34.119000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:52:00.083000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.8.2",
      "version_original": "1.8.2"
    },
    {
      "_id": "614a756bd2c7f84a4d2ec90a",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "bundle_path_digest": "sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-09-22T00:14:35.691000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:10:59.076000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.8.2",
      "version_original": "1.8.2"
    },
    {
      "_id": "614a816969cb9f1af5ba664f",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {
              "priorityClassName": "system-node-critical",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "nvidia.com/gpu",
                  "operator": "Exists"
                }
              ]
            },
            "dcgm": {
              "enabled": true,
              "hostPort": 5555,
              "image": "dcgm",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c"
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              },
              "env": [
                {
                  "name": "DCGM_EXPORTER_LISTEN",
                  "value": ":9400"
                },
                {
                  "name": "DCGM_EXPORTER_KUBERNETES",
                  "value": "true"
                },
                {
                  "name": "DCGM_EXPORTER_COLLECTORS",
                  "value": "/etc/dcgm-exporter/dcp-metrics-included.csv"
                }
              ],
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff"
            },
            "devicePlugin": {
              "args": [],
              "env": [
                {
                  "name": "PASS_DEVICE_SPECS",
                  "value": "true"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                },
                {
                  "name": "DEVICE_LIST_STRATEGY",
                  "value": "envvar"
                },
                {
                  "name": "DEVICE_ID_STRATEGY",
                  "value": "uuid"
                },
                {
                  "name": "NVIDIA_VISIBLE_DEVICES",
                  "value": "all"
                },
                {
                  "name": "NVIDIA_DRIVER_CAPABILITIES",
                  "value": "all"
                }
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05"
            },
            "driver": {
              "enabled": true,
              "image": "driver",
              "imagePullSecrets": [],
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "manager": {
                "env": [
                  {
                    "name": "DRAIN_USE_FORCE",
                    "value": "false"
                  },
                  {
                    "name": "DRAIN_POD_SELECTOR_LABEL",
                    "value": ""
                  },
                  {
                    "name": "DRAIN_TIMEOUT_SECONDS",
                    "value": "0s"
                  },
                  {
                    "name": "DRAIN_DELETE_EMPTYDIR_DATA",
                    "value": "false"
                  }
                ],
                "image": "k8s-driver-manager",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/cloud-native",
                "version": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b"
              },
              "nodeSelector": {
                "nvidia.com/gpu.deploy.driver": "true"
              },
              "podSecurityContext": {},
              "rdma": {
                "enabled": false
              },
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {
              "env": [
                {
                  "name": "GFD_SLEEP_INTERVAL",
                  "value": "60s"
                },
                {
                  "name": "FAIL_ON_INIT_ERROR",
                  "value": "true"
                }
              ],
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "version": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f"
            },
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "config": {
                "name": ""
              },
              "enabled": true,
              "env": [
                {
                  "name": "WITH_REBOOT",
                  "value": "false"
                }
              ],
              "image": "k8s-mig-manager",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e"
            },
            "nodeStatusExporter": {
              "enabled": true,
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {
                "image": "cuda",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia",
                "version": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce"
              }
            },
            "toolkit": {
              "enabled": true,
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "version": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934"
            },
            "validator": {
              "env": [
                {
                  "name": "WITH_WORKLOAD",
                  "value": "true"
                }
              ],
              "image": "gpu-operator-validator",
              "imagePullSecrets": [],
              "repository": "nvcr.io/nvidia/cloud-native",
              "resources": {},
              "securityContext": {},
              "version": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "bundle_path_digest": "sha256:7a0e687b8ebe398f66d371cfe148f415018eb614aa9913d177f3a401855699cf",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.8",
      "creation_date": "2021-09-22T01:05:45.673000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.8.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:51:13.226000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:2097beb34a61d906dd86d6784a4435de778c5a771865d06b60b6989f602741fd",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:e37404194fa2bc2275827411049422b93d1493991fb925957f170b4b842846ff",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:28f334d6d5ca6e5cad2cf05a255989834128c952e3c181e6861bd033476d4b2c",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:b0c84b47d5f95000a842b823ad33dc9aa28f0edfa6d9565c289b61cb1d4a9934",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "image": "nvcr.io/nvidia/driver@sha256:a62de5e843a41c65cf837e7db5f5b675d03fa2de05e981a859b114336cf183e3",
          "name": "driver-image"
        },
        {
          "digest": "sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:85def0197f388e5e336b1ab0dbec350816c40108a58af946baa1315f4c96ee05",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:bfc39d23568458dfd50c0c5323b6d42bdcd038c420fb2a2becd513a3ed3be27f",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:8cdb793f8a22b076bf0f19818f9d79fe87b121608f1aa28b12a560b6fe13f47e",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "image": "nvcr.io/nvidia/cuda@sha256:15674e5c45c97994bc92387bad03a0d52d7c1e983709c471c4fecc8e806dbdce",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:a07fd1c74e3e469ac316d17cf79635173764fdab3b681dbc282027a23dbbe227",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:907ab0fc008bb90149ed059ac3a8ed3d19ae010d52c58c0ddbafce45df468d5b",
          "name": "k8s-driver-manager-image"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.8.2",
      "version_original": "1.8.2"
    },
    {
      "_id": "614b4a8ed2c7f84a4d2eca1c",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.0",
      "creation_date": "2021-09-22T15:23:58.931000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:07:15.494000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "614b4f1ed36186823c2a44de",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.0",
      "creation_date": "2021-09-22T15:43:26.415000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:54:09.502000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "614b5033bc74e0be7ca66255",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.0",
      "creation_date": "2021-09-22T15:48:03.990000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:57:49.551000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "614b9d4c69cb9f1af5ba69c0",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:a2ed8e74818770e0623cad0eb1e479b984f0c8a9261b20c59fbdc759ac153d57",
      "bundle_path_digest": "sha256:a2ed8e74818770e0623cad0eb1e479b984f0c8a9261b20c59fbdc759ac153d57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-22T21:17:00.609000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.265-dev-97183ad",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:14:32.869000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:eea31a64c45d3a8c585928b11d9c6f264d33c40ea46ffe8189edffa8301eec71",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:eea31a64c45d3a8c585928b11d9c6f264d33c40ea46ffe8189edffa8301eec71",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2021.2.265-dev-97183ad",
      "version_original": "2021.2.265-dev-97183ad"
    },
    {
      "_id": "614c8597bc74e0be7ca66510",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "bundle_path_digest": "sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-23T13:48:07.091000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.4-x5bfd7b3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:39:11.442000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "version": "v1alpha1"
        }
      ],
      "provider": "Isovalent",
      "related_images": [
        {
          "digest": "sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.10.4+x5bfd7b3",
      "version_original": "1.10.4+x5bfd7b3"
    },
    {
      "_id": "614c8a97d2c7f84a4d2ece26",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "bundle_path_digest": "sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-23T14:09:27.038000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.4-x5bfd7b3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:34:29.795000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Isovalent",
      "related_images": [
        {
          "digest": "sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.10.4+x5bfd7b3",
      "version_original": "1.10.4+x5bfd7b3"
    },
    {
      "_id": "614c8cefd36186823c2a47c3",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "bundle_path_digest": "sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-23T14:19:27.549000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.4-x5bfd7b3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:03:44.635000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Isovalent",
      "related_images": [
        {
          "digest": "sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.4+x5bfd7b3",
      "version_original": "1.10.4+x5bfd7b3"
    },
    {
      "_id": "614ce052d2c7f84a4d2ecf4b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:80d12669b1557465cbb9e99640847c9dd6043e1c16f19f3105c04ee658e8a595",
      "bundle_path_digest": "sha256:80d12669b1557465cbb9e99640847c9dd6043e1c16f19f3105c04ee658e8a595",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-23T20:15:14.938000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92221-dev-38cda35",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:17:14.075000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:aa647edd31b33144548e72dcd05919872dd262230eff4c60ceb7bfb4fabcfabc",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:aa647edd31b33144548e72dcd05919872dd262230eff4c60ceb7bfb4fabcfabc",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2021.2.92221-dev-38cda35",
      "version_original": "2021.2.92221-dev-38cda35"
    },
    {
      "_id": "614d267abc74e0be7ca66613",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:5a7daeb62b61540068d4e3edec853066f8294a96cea8abf433b48fdffd1dc4cd",
      "bundle_path_digest": "sha256:5a7daeb62b61540068d4e3edec853066f8294a96cea8abf433b48fdffd1dc4cd",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-24T01:14:34.377000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92315-dev-d55e022",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:15:32.113000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:0347c7a3a4fbe60038b4a6eaa872fae0a62d69ddbf349eece9b9ec63811f0b78",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:0347c7a3a4fbe60038b4a6eaa872fae0a62d69ddbf349eece9b9ec63811f0b78",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2021.2.92315-dev-d55e022",
      "version_original": "2021.2.92315-dev-d55e022"
    },
    {
      "_id": "614d80f169cb9f1af5ba6b03",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/iomesh/iomesh@sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "bundle_path_digest": "sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-24T07:40:33.339000+00:00",
      "csv_description": "IOMesh (https://www.iomesh.com/) is a cloud-native storage product specifically designed and developed for Kubernetes. It takes ZBS as its core, a \u201cproduction-ready\u201d distributed storage system developed independently by SmartX, to provide production-level high performance and reliable persistent storage for business-critical applications such as MySQL, Cassandra, MongoDB, etc., contributing to the containerized transformation of stateful applications.      \n## Pre-Requisites\n* According to https://docs.iomesh.com/deploy/prerequisites, make sure that your openshift cluster meets the \"Installation Requirements\" and set up the worker nodes correctly according to the \"Setup Worker Node\" chapter.\n* Run IOMesh Operator pre-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install the dependencies of IOMesh Operator and specific IOMesh settings for the openshift cluster:\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-pre-install-openshift.sh | sh -\n```\n## Install IOMesh Operator and IOMesh Cluster\n* Click install button on the current web page to install IOMesh Operator\n* On the **Installed Operators** -> **IOMesh Operator** -> **Create instance** -> **YAML view**, fill in an IOMesh Custom Resources according https://iomesh.run/iomesh.yaml, change the `spec.*.dataCIDR` to your own data network CIDR:\n## Post Install\n* Run IOMesh Operator post-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install IOMesh CSI Driver\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-post-install-openshift.sh | sh -\n```\n## Getting Started\n* Try to quickstart setup and use IOMesh: https://docs.iomesh.com/deploy/setup-iomesh\n",
      "csv_display_name": "IOMesh Operator",
      "csv_metadata_description": "",
      "csv_name": "iomesh-operator.0.10.1-rc4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:08:25.946000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "iomesh-operator",
      "provided_apis": [
        {
          "group": "iomesh.com",
          "kind": "IOMeshCluster",
          "plural": "iomeshclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "SmartX",
      "related_images": [
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator-52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3-annotation"
        },
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.10.1-rc4",
      "version_original": "0.10.1-rc4"
    },
    {
      "_id": "614d81cfd36186823c2a492b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/iomesh/iomesh@sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "bundle_path_digest": "sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-24T07:44:15.521000+00:00",
      "csv_description": "IOMesh (https://www.iomesh.com/) is a cloud-native storage product specifically designed and developed for Kubernetes. It takes ZBS as its core, a \u201cproduction-ready\u201d distributed storage system developed independently by SmartX, to provide production-level high performance and reliable persistent storage for business-critical applications such as MySQL, Cassandra, MongoDB, etc., contributing to the containerized transformation of stateful applications.      \n## Pre-Requisites\n* According to https://docs.iomesh.com/deploy/prerequisites, make sure that your openshift cluster meets the \"Installation Requirements\" and set up the worker nodes correctly according to the \"Setup Worker Node\" chapter.\n* Run IOMesh Operator pre-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install the dependencies of IOMesh Operator and specific IOMesh settings for the openshift cluster:\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-pre-install-openshift.sh | sh -\n```\n## Install IOMesh Operator and IOMesh Cluster\n* Click install button on the current web page to install IOMesh Operator\n* On the **Installed Operators** -> **IOMesh Operator** -> **Create instance** -> **YAML view**, fill in an IOMesh Custom Resources according https://iomesh.run/iomesh.yaml, change the `spec.*.dataCIDR` to your own data network CIDR:\n## Post Install\n* Run IOMesh Operator post-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install IOMesh CSI Driver\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-post-install-openshift.sh | sh -\n```\n## Getting Started\n* Try to quickstart setup and use IOMesh: https://docs.iomesh.com/deploy/setup-iomesh\n",
      "csv_display_name": "IOMesh Operator",
      "csv_metadata_description": "",
      "csv_name": "iomesh-operator.0.10.1-rc4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:57:06.343000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "iomesh-operator",
      "provided_apis": [
        {
          "group": "iomesh.com",
          "kind": "IOMeshCluster",
          "plural": "iomeshclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "SmartX",
      "related_images": [
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator-52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3-annotation"
        },
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.10.1-rc4",
      "version_original": "0.10.1-rc4"
    },
    {
      "_id": "614d8effd2c7f84a4d2ecf71",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/iomesh/iomesh@sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "bundle_path_digest": "sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-24T08:40:31.644000+00:00",
      "csv_description": "IOMesh (https://www.iomesh.com/) is a cloud-native storage product specifically designed and developed for Kubernetes. It takes ZBS as its core, a \u201cproduction-ready\u201d distributed storage system developed independently by SmartX, to provide production-level high performance and reliable persistent storage for business-critical applications such as MySQL, Cassandra, MongoDB, etc., contributing to the containerized transformation of stateful applications.      \n## Pre-Requisites\n* According to https://docs.iomesh.com/deploy/prerequisites, make sure that your openshift cluster meets the \"Installation Requirements\" and set up the worker nodes correctly according to the \"Setup Worker Node\" chapter.\n* Run IOMesh Operator pre-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install the dependencies of IOMesh Operator and specific IOMesh settings for the openshift cluster:\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-pre-install-openshift.sh | sh -\n```\n## Install IOMesh Operator and IOMesh Cluster\n* Click install button on the current web page to install IOMesh Operator\n* On the **Installed Operators** -> **IOMesh Operator** -> **Create instance** -> **YAML view**, fill in an IOMesh Custom Resources according https://iomesh.run/iomesh.yaml, change the `spec.*.dataCIDR` to your own data network CIDR:\n## Post Install\n* Run IOMesh Operator post-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install IOMesh CSI Driver\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-post-install-openshift.sh | sh -\n```\n## Getting Started\n* Try to quickstart setup and use IOMesh: https://docs.iomesh.com/deploy/setup-iomesh\n",
      "csv_display_name": "IOMesh Operator",
      "csv_metadata_description": "",
      "csv_name": "iomesh-operator.0.10.1-rc4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:13:44.648000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "iomesh-operator",
      "provided_apis": [
        {
          "group": "iomesh.com",
          "kind": "IOMeshCluster",
          "plural": "iomeshclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "SmartX",
      "related_images": [
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator-52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3-annotation"
        },
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.10.1-rc4",
      "version_original": "0.10.1-rc4"
    },
    {
      "_id": "614d90c3d36186823c2a492c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/iomesh/iomesh@sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "bundle_path_digest": "sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-24T08:48:03.731000+00:00",
      "csv_description": "IOMesh (https://www.iomesh.com/) is a cloud-native storage product specifically designed and developed for Kubernetes. It takes ZBS as its core, a \u201cproduction-ready\u201d distributed storage system developed independently by SmartX, to provide production-level high performance and reliable persistent storage for business-critical applications such as MySQL, Cassandra, MongoDB, etc., contributing to the containerized transformation of stateful applications.      \n## Pre-Requisites\n* According to https://docs.iomesh.com/deploy/prerequisites, make sure that your openshift cluster meets the \"Installation Requirements\" and set up the worker nodes correctly according to the \"Setup Worker Node\" chapter.\n* Run IOMesh Operator pre-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install the dependencies of IOMesh Operator and specific IOMesh settings for the openshift cluster:\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-pre-install-openshift.sh | sh -\n```\n## Install IOMesh Operator and IOMesh Cluster\n* Click install button on the current web page to install IOMesh Operator\n* On the **Installed Operators** -> **IOMesh Operator** -> **Create instance** -> **YAML view**, fill in an IOMesh Custom Resources according https://iomesh.run/iomesh.yaml, change the `spec.*.dataCIDR` to your own data network CIDR:\n## Post Install\n* Run IOMesh Operator post-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install IOMesh CSI Driver\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-post-install-openshift.sh | sh -\n```\n## Getting Started\n* Try to quickstart setup and use IOMesh: https://docs.iomesh.com/deploy/setup-iomesh\n",
      "csv_display_name": "IOMesh Operator",
      "csv_metadata_description": "",
      "csv_name": "iomesh-operator.0.10.1-rc4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:53:55.650000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "iomesh-operator",
      "provided_apis": [
        {
          "group": "iomesh.com",
          "kind": "IOMeshCluster",
          "plural": "iomeshclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "SmartX",
      "related_images": [
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator-52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3-annotation"
        },
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.10.1-rc4",
      "version_original": "0.10.1-rc4"
    },
    {
      "_id": "614e338ed36186823c2a4941",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-09-24T20:22:38.983000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:22:44.711000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": "Run:AI Labs",
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "614e37bad36186823c2a4942",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "fast",
      "creation_date": "2021-09-24T20:40:26.335000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:12:19.261000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": "Run:AI Labs",
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "614e37ced2c7f84a4d2ecf8e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "fast",
      "creation_date": "2021-09-24T20:40:46.727000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:53:30.444000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": "Run:AI Labs",
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "614e3926bc74e0be7ca66636",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "preview",
      "creation_date": "2021-09-24T20:46:30.667000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:53:36.549000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": "Run:AI Labs",
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "614e3967d2c7f84a4d2ecf8f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-24T20:47:35.648000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:22:49.668000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": "Run:AI Labs",
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "614e39fbd2c7f84a4d2ecf90",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-24T20:50:03.020000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:53:42.039000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": "Run:AI Labs",
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "61534d55d36186823c2a51ac",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:044fe556abd0194f7e44a9b20875caa3ded4b2e479b45d9cf5acfa097ef6c6c1",
      "bundle_path_digest": "sha256:044fe556abd0194f7e44a9b20875caa3ded4b2e479b45d9cf5acfa097ef6c6c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-28T17:13:57.699000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92808-dev-a60e5ba",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:42:02.969000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:34516d6df20aa91b4fcd691aafed3260c8a43aaaded64fdbe8078fc45c1357f0",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:34516d6df20aa91b4fcd691aafed3260c8a43aaaded64fdbe8078fc45c1357f0",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2021.2.92808-dev-a60e5ba",
      "version_original": "2021.2.92808-dev-a60e5ba"
    },
    {
      "_id": "6153b54cbc74e0be7ca66e98",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:951e1dc1384a046270a6d5f540b1883aa47fa0c04895b5845635327c80281976",
      "bundle_path_digest": "sha256:951e1dc1384a046270a6d5f540b1883aa47fa0c04895b5845635327c80281976",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T00:37:32.312000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92814",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:42:06.897000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:5448635df26ff738f5dd39256c961ad2a5756ca8ee0cb66370b261a242ef6f7b",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:5448635df26ff738f5dd39256c961ad2a5756ca8ee0cb66370b261a242ef6f7b",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2021.2.92814",
      "version_original": "2021.2.92814"
    },
    {
      "_id": "61547ba8d36186823c2a5542",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:951e1dc1384a046270a6d5f540b1883aa47fa0c04895b5845635327c80281976",
      "bundle_path_digest": "sha256:951e1dc1384a046270a6d5f540b1883aa47fa0c04895b5845635327c80281976",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T14:43:52.898000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92814",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:52:11.246000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:5448635df26ff738f5dd39256c961ad2a5756ca8ee0cb66370b261a242ef6f7b",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:5448635df26ff738f5dd39256c961ad2a5756ca8ee0cb66370b261a242ef6f7b",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2021.2.92814",
      "version_original": "2021.2.92814"
    },
    {
      "_id": "61547c58bc74e0be7ca6717f",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:044fe556abd0194f7e44a9b20875caa3ded4b2e479b45d9cf5acfa097ef6c6c1",
      "bundle_path_digest": "sha256:044fe556abd0194f7e44a9b20875caa3ded4b2e479b45d9cf5acfa097ef6c6c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T14:46:48.616000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92808-dev-a60e5ba",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:34:21.545000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:34516d6df20aa91b4fcd691aafed3260c8a43aaaded64fdbe8078fc45c1357f0",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:34516d6df20aa91b4fcd691aafed3260c8a43aaaded64fdbe8078fc45c1357f0",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2021.2.92808-dev-a60e5ba",
      "version_original": "2021.2.92808-dev-a60e5ba"
    },
    {
      "_id": "6154cfb2bc74e0be7ca671f5",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:4fc525bdc426a620c25ef367a1caad0eb41af069db2959dfd141ce4a228f0834",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:7866a8db215ec75345e14e7177cf4ae97c8efd8a0a4e39ed304833cbc3325712",
      "bundle_path_digest": "sha256:7866a8db215ec75345e14e7177cf4ae97c8efd8a0a4e39ed304833cbc3325712",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-29T20:42:26.935000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup. \nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy. \nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license \nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.124.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:46:48.515000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:8ac107fd8bfb7aee28f379c931a4b1ea3d26cc1a2d71fd633077ef45e4fdce42",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:8ac107fd8bfb7aee28f379c931a4b1ea3d26cc1a2d71fd633077ef45e4fdce42",
          "name": "nxiq-operator-certified-8ac107fd8bfb7aee28f379c931a4b1ea3d26cc1a2d71fd633077ef45e4fdce42-annotation"
        },
        {
          "digest": "sha256:8ac107fd8bfb7aee28f379c931a4b1ea3d26cc1a2d71fd633077ef45e4fdce42",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:8ac107fd8bfb7aee28f379c931a4b1ea3d26cc1a2d71fd633077ef45e4fdce42",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:4fc525bdc426a620c25ef367a1caad0eb41af069db2959dfd141ce4a228f0834",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:4fc525bdc426a620c25ef367a1caad0eb41af069db2959dfd141ce4a228f0834",
          "name": "iq"
        },
        {
          "digest": "sha256:4fc525bdc426a620c25ef367a1caad0eb41af069db2959dfd141ce4a228f0834",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:4fc525bdc426a620c25ef367a1caad0eb41af069db2959dfd141ce4a228f0834",
          "name": "nexus-iq-server-4fc525bdc426a620c25ef367a1caad0eb41af069db2959dfd141ce4a228f0834-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.124.0-1",
      "version_original": "1.124.0-1"
    }
  ]
}

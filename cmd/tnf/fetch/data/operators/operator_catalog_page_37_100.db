{
  "data": [
    {
      "_id": "6350ea274b6c281902ea532c",
      "alm_examples": [
        {
          "api_version": "eginnovations.com/v1beta1",
          "kind": "EgUniversalAgent",
          "metadata": {
            "name": "eguniversalagent",
            "namespace": "egagent"
          },
          "spec": {
            "agent": {
              "env": [
                {
                  "name": "EG_MANAGER",
                  "value": "Replace with eG Manager IP"
                },
                {
                  "name": "EG_MANAGER_PORT",
                  "value": "Replace with eG Manager Port"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/eginnovations/universal-agent-operator@sha256:8bb137844077061a31c70209617527e837ca87222aa9f04a3d59015ce01241fc",
      "bundle_path_digest": "sha256:8bb137844077061a31c70209617527e837ca87222aa9f04a3d59015ce01241fc",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2022-10-20T06:26:47.848000+00:00",
      "csv_description": "eG Innovations\u2019 converged application and infrastructure performance monitoring capabilities provide end-to-end visibility and correlated analytics for every layer, every tier of your IT landscape.\n\nThe eG Enterprise Universal Agent Operator automatically configures a host agent on every Kubernetes worker node. The host agent auto-discovers the worker nodes and application containers running as Pods on each node and tracks their performance and utilization levels. In-depth monitoring of applications running on containers is also provided using the same host agent. No additional agents are required for the containers.\n\n### Capabilities\n  * Rolls out the eg Agent pod per node to monitor its pods and the node itself\n  * Automatic BTM profiler injection using webhook based injection for deep application monitoring and transection tracing.\n\n### Installation\n  1. Create the namespace \"egagent\" for installing eG Agent on kubernetes Cluster.\n\n     <br />``` $ kubectl create ns egagent ```\n  2. Install eG Innovations Universal Agent operator from [OperatorHub.io](https://operatorhub.io/) or [OpenShift Container Platform](https://www.openshift.com/).\n  3. Create the eG Universal Agent CRD (Custom Resource Definition)\n     a. Click \"View YAML Example\" and copy the yaml contents and save it to (filename).yaml on your host.\n     b. To apply the CRD run the following command\n\n     <br />``` $ kubectl apply -f (filename).yaml ```\n\n### Required Parameters\n  * EG\\_MANAGER, EG\\_MANAGER\\_PORT - provide the ip and port of your eG Manager Installation.\n\n### Advanced Options\n  * Disable Certificate Checking - disable any certificate validation that may interact poorly with proxies within your cluster\n  * Image Override - use a copy of the eG Iniversal Agent container image from a registry other that Docker's or Red Hat's\n  * Environment variables - define environment variables for the eG Universal Agent container of for APM profiler.\n  * Namespace Selectors- select a subset of namesapces to enable instrumentation for applications.\n\nFor complete list of supported parameters and the detailed documentation available in [eG Innovations Docs](https://docs.eginnovations.com)\n",
      "csv_display_name": "eG Innovations Universal Agent Operator",
      "csv_metadata_description": "",
      "csv_name": "eginnovations-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:04:18.416000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "eginnovations-operator",
      "provided_apis": [
        {
          "group": "eginnovations.com",
          "kind": "EgUniversalAgent",
          "plural": "eguniversalagents",
          "version": "v1beta1"
        }
      ],
      "provider": "eG Innovations",
      "related_images": [
        {
          "digest": "sha256:324a2f2bbb3b220a02ab85046d5e5e49fbe1cc14578882ef0bb22c07bc65be14",
          "image": "docker.io/eginnovations/universal-agent-operator@sha256:324a2f2bbb3b220a02ab85046d5e5e49fbe1cc14578882ef0bb22c07bc65be14",
          "name": "eginnovations-operator"
        },
        {
          "digest": "sha256:324a2f2bbb3b220a02ab85046d5e5e49fbe1cc14578882ef0bb22c07bc65be14",
          "image": "docker.io/eginnovations/universal-agent-operator@sha256:324a2f2bbb3b220a02ab85046d5e5e49fbe1cc14578882ef0bb22c07bc65be14",
          "name": "universal-agent-operator-324a2f2bbb3b220a02ab85046d5e5e49fbe1cc14578882ef0bb22c07bc65be14-annotation"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:324a2f2bbb3b220a02ab85046d5e5e49fbe1cc14578882ef0bb22c07bc65be14",
          "image": "docker.io/eginnovations/universal-agent-operator@sha256:324a2f2bbb3b220a02ab85046d5e5e49fbe1cc14578882ef0bb22c07bc65be14",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "63511dd8bf62483057d4523c",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "bundle_path_digest": "sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-10-20T10:07:20.153000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22288",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:55:06.264000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aquasec-7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f-annotation"
        },
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "name": "server"
        },
        {
          "digest": "sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "name": "scanner"
        },
        {
          "digest": "sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "name": "enforcer"
        },
        {
          "digest": "sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22288",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.5.22288",
      "version_original": "6.5.22288"
    },
    {
      "_id": "63511de8a13cf60c13da7dd7",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "bundle_path_digest": "sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-10-20T10:07:36.862000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22288",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:23:49.638000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aquasec-7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f-annotation"
        },
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "name": "server"
        },
        {
          "digest": "sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "name": "scanner"
        },
        {
          "digest": "sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "name": "enforcer"
        },
        {
          "digest": "sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22288",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.5.22288",
      "version_original": "6.5.22288"
    },
    {
      "_id": "63511ff26804229d44dfdd27",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "bundle_path_digest": "sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-10-20T10:16:18.202000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22288",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:51:52.835000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aquasec-7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f-annotation"
        },
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "name": "server"
        },
        {
          "digest": "sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "name": "scanner"
        },
        {
          "digest": "sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "name": "enforcer"
        },
        {
          "digest": "sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22288",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.5.22288",
      "version_original": "6.5.22288"
    },
    {
      "_id": "63512026d67be106add8b60f",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "bundle_path_digest": "sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-10-20T10:17:10.435000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22288",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:58:23.515000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aquasec-7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f-annotation"
        },
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "name": "server"
        },
        {
          "digest": "sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "name": "scanner"
        },
        {
          "digest": "sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "name": "enforcer"
        },
        {
          "digest": "sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22288",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.5.22288",
      "version_original": "6.5.22288"
    },
    {
      "_id": "63512027bf62483057d456cd",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "bundle_path_digest": "sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-10-20T10:17:11.933000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22288",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:36:59.551000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aquasec-7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f-annotation"
        },
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "name": "server"
        },
        {
          "digest": "sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "name": "scanner"
        },
        {
          "digest": "sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "name": "enforcer"
        },
        {
          "digest": "sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22288",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.5.22288",
      "version_original": "6.5.22288"
    },
    {
      "_id": "635120f1d67be106add8b6f7",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "6.5"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "6.5"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "bundle_path_digest": "sha256:24c16eecad82db3556bd7ea72a09aa4a9a699bfc4441e0d71ca6224f6c57bd22",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "6.5",
      "creation_date": "2022-10-20T10:20:33.840000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/6.5.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v6.5.22288",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:23:14.854000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aquasec-7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f-annotation"
        },
        {
          "digest": "sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:7b98d0b04835e5995a88b223d7b7477ba4dca625d08d2c23df167552e396a20f",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:ffb9b72c6972aa01b668f5972ece9469d33b1b2b0c59c18be2fe5b7d8e5cd5b0",
          "name": "gateway"
        },
        {
          "digest": "sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:8d4a595c3b2c72b3fdaba49ca7197b5c54eb2ee459fdf18d7dd379fe1f68c4c7",
          "name": "server"
        },
        {
          "digest": "sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:a152748ab79c863553da6833740103516ca50067f2e3344ad1a5bd496e6651fb",
          "name": "scanner"
        },
        {
          "digest": "sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:a66f8f5f85bf8e376aa0d5244c359b4a6e4e6a8c12ef740e610a3db18b768eb6",
          "name": "enforcer"
        },
        {
          "digest": "sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:6f70b09d443638133ed75369aaa074cc2f0a95518c5549abfe5c77efab58e025",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <6.5.22288",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.5.22288",
      "version_original": "6.5.22288"
    },
    {
      "_id": "63514f9fcd605248fd6e3204",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "bundle_path_digest": "sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0",
      "creation_date": "2022-10-20T13:39:43.982000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:58:02.501000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "app-director-operator:0.9.0-91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "63515187bb20c824986ad582",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "bundle_path_digest": "sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0",
      "creation_date": "2022-10-20T13:47:51.033000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:42:59.797000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "app-director-operator:0.9.0-91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "63515332b5cc5ea95be8f0b4",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "bundle_path_digest": "sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0",
      "creation_date": "2022-10-20T13:54:58.657000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:54:41.981000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "app-director-operator:0.9.0-91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "635153c3cd605248fd6e33fd",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "bundle_path_digest": "sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0",
      "creation_date": "2022-10-20T13:57:23.210000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:57:24.511000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "app-director-operator:0.9.0-91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "635153d16add5e4f55b37105",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "bundle_path_digest": "sha256:197de8b93b063491bd8b4b152a13600dfa29de6e2ec528c2ccdbacb1e343bad2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0",
      "creation_date": "2022-10-20T13:57:37.333000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:04:18.696000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "app-director-operator:0.9.0-91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:91c8c821b9e7ed4e89b9502d806b4cb0e94c586cdf27370fb8a2930e0d00b7d7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "63518dd247833546e9f69ede",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/a60924148a9b77a2ff5f7b786/test-m2-obi-certified-2010-2125@sha256:ea89fbcbe16c188874b9b72575a81e67b6a81aba1b1d915bf74f9d26922b6d39",
      "bundle_path_digest": "sha256:ea89fbcbe16c188874b9b72575a81e67b6a81aba1b1d915bf74f9d26922b6d39",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-20T18:05:06.234000+00:00",
      "csv_description": "A test-m2-obi-certified with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "test-m2-obi-certified",
      "csv_metadata_description": "",
      "csv_name": "test-m2-obi-certified.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:56:39.827000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "test-m2-obi-certified",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Ecosystem Engineering",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "0.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "63518dde33b89a9dfd03a59e",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:de1ad0d9d69a2c17ef10ed6f1d1c98de4deb98f06f529598793bdff3169453f0",
      "bundle_path_digest": "sha256:de1ad0d9d69a2c17ef10ed6f1d1c98de4deb98f06f529598793bdff3169453f0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-20T18:05:18.944000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:46:28.101000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "version": "v1beta1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "dynatrace-operator-fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2-annotation"
        },
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "63518e0d1817571aafc1a4ba",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:de1ad0d9d69a2c17ef10ed6f1d1c98de4deb98f06f529598793bdff3169453f0",
      "bundle_path_digest": "sha256:de1ad0d9d69a2c17ef10ed6f1d1c98de4deb98f06f529598793bdff3169453f0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-20T18:06:05.240000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:05:27.629000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "dynatrace-operator-fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2-annotation"
        },
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "63518e2ca447496e9f384029",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/a60924148a9b77a2ff5f7b786/test-m2-obi-certified-2010-2125@sha256:ea89fbcbe16c188874b9b72575a81e67b6a81aba1b1d915bf74f9d26922b6d39",
      "bundle_path_digest": "sha256:ea89fbcbe16c188874b9b72575a81e67b6a81aba1b1d915bf74f9d26922b6d39",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-20T18:06:36.851000+00:00",
      "csv_description": "A test-m2-obi-certified with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "test-m2-obi-certified",
      "csv_metadata_description": "",
      "csv_name": "test-m2-obi-certified.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:32:49.352000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "test-m2-obi-certified",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Ecosystem Engineering",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "0.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "63518e6c1817571aafc1a51c",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:de1ad0d9d69a2c17ef10ed6f1d1c98de4deb98f06f529598793bdff3169453f0",
      "bundle_path_digest": "sha256:de1ad0d9d69a2c17ef10ed6f1d1c98de4deb98f06f529598793bdff3169453f0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-20T18:07:40.037000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:02:45.456000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "dynatrace-operator-fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2-annotation"
        },
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "63518e87a447496e9f38407d",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/a60924148a9b77a2ff5f7b786/test-m2-obi-certified-2010-2125@sha256:ea89fbcbe16c188874b9b72575a81e67b6a81aba1b1d915bf74f9d26922b6d39",
      "bundle_path_digest": "sha256:ea89fbcbe16c188874b9b72575a81e67b6a81aba1b1d915bf74f9d26922b6d39",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-20T18:08:07.879000+00:00",
      "csv_description": "A test-m2-obi-certified with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "test-m2-obi-certified",
      "csv_metadata_description": "",
      "csv_name": "test-m2-obi-certified.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:33:13.187000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "test-m2-obi-certified",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Ecosystem Engineering",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "0.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "635190d7ffe53c2d9c327e74",
      "alm_examples": [
        {
          "api_version": "tools.opdev.io/v1",
          "kind": "DemoResource",
          "metadata": {
            "name": "demoresource-sample"
          },
          "spec": {
            "message": "Hello, World!"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/a60924148a9b77a2ff5f7b786/test-m2-obi-certified-2010-2125@sha256:ea89fbcbe16c188874b9b72575a81e67b6a81aba1b1d915bf74f9d26922b6d39",
      "bundle_path_digest": "sha256:ea89fbcbe16c188874b9b72575a81e67b6a81aba1b1d915bf74f9d26922b6d39",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-20T18:17:59.964000+00:00",
      "csv_description": "A test-m2-obi-certified with a minimal reconciliation function, for testing basic operator installation and validation workflows.",
      "csv_display_name": "test-m2-obi-certified",
      "csv_metadata_description": "",
      "csv_name": "test-m2-obi-certified.0.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:02:24.270000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "test-m2-obi-certified",
      "provided_apis": [
        {
          "group": "tools.opdev.io",
          "kind": "DemoResource",
          "plural": "demoresources",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Ecosystem Engineering",
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "image": "quay.io/opdev/simple-demo-operator@sha256:25ca9cb1f3dc7b8ce0aba4d3383cac20f5f5a1298fbbfde4a6adab7b1000cb0e",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "0.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "6351912347833546e9f6a206",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1beta1",
          "kind": "DynaKube",
          "metadata": {
            "annotations": {
              "feature.dynatrace.com/oneagent-privileged": "true"
            },
            "name": "dynakube",
            "namespace": "dynatrace"
          },
          "spec": {
            "activeGate": {
              "capabilities": [
                "routing",
                "kubernetes-monitoring",
                "dynatrace-api"
              ],
              "image": "",
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1.5Gi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "512Mi"
                }
              }
            },
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "oneAgent": {
              "classicFullStack": {
                "tolerations": [
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/master",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoSchedule",
                    "key": "node-role.kubernetes.io/control-plane",
                    "operator": "Exists"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-operator-bundle@sha256:de1ad0d9d69a2c17ef10ed6f1d1c98de4deb98f06f529598793bdff3169453f0",
      "bundle_path_digest": "sha256:de1ad0d9d69a2c17ef10ed6f1d1c98de4deb98f06f529598793bdff3169453f0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-20T18:19:15.705000+00:00",
      "csv_description": "The Dynatrace Operator supports rollout and lifecycle management of various Dynatrace components in Kubernetes and OpenShift.\n\nCurrently the Dynatrace Operator supports the following capabilities:\n\n### OneAgent\n  * `classicFullStack` rolls out one OneAgent pod per node to monitor its pods and the node itself\n  * `applicationMonitoring` is a webhook based injection mechanism for automatic app-only injection\n  * `hostMonitoring` monitors only the hosts, i.e., the nodes, in the cluster without app-only injection\n### ActiveGate\n  * `routing` routes OneAgent traffic through the ActiveGate\n  * `kubernetes-monitoring` allows monitoring the Kubernetes API\n  * `metrics-ingest` routes enriched metrics through an ActiveGate\n\nFor more information please refer to [our DynaKube Custom Resource examples](https://dt-url.net/dynakube-samples).\n\n### Installation\nOnce you've installed the Dynatrace Operator, you can create a DynaKube custom resource.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic dynakube --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nAfter creation of the secret add the DynaKube object in the project where the Dynatrace Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Image Override** - use a copy of the ActiveGate container image from a registry other than Docker's or Red Hat's\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-dynatrace-operator).\n",
      "csv_display_name": "Dynatrace Operator",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-operator.v0.9.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:55:34.780000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "dynatrace-operator",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "DynaKube",
          "plural": "dynakubes",
          "version": "v1beta1"
        }
      ],
      "provider": "Dynatrace LLC",
      "related_images": [
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "dynatrace-operator"
        },
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "dynatrace-operator-fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2-annotation"
        },
        {
          "digest": "sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-operator@sha256:fd650917914485976ecce2f2e3e561e3340c7b2e9bb97329e6779c3825d2f8b2",
          "name": "webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "635202069bc8a28e5341ea86",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "bundle_path_digest": "sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0-stable",
      "creation_date": "2022-10-21T02:20:54.713000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0-stable",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:54:48.136000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "app-director-operator:0.9.0-d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.9.0-stable",
      "version_original": "0.9.0-stable"
    },
    {
      "_id": "63520230b5cc5ea95be93250",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "bundle_path_digest": "sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0-stable",
      "creation_date": "2022-10-21T02:21:36.377000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0-stable",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:58:07.842000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "app-director-operator:0.9.0-d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.9.0-stable",
      "version_original": "0.9.0-stable"
    },
    {
      "_id": "635202e2b5cc5ea95be93290",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "bundle_path_digest": "sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0-stable",
      "creation_date": "2022-10-21T02:24:34.880000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0-stable",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:44:44.901000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "app-director-operator:0.9.0-d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.0-stable",
      "version_original": "0.9.0-stable"
    },
    {
      "_id": "635202eb029b470cc6230091",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "bundle_path_digest": "sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0-stable",
      "creation_date": "2022-10-21T02:24:43.630000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0-stable",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:34:36.815000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "app-director-operator:0.9.0-d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.9.0-stable",
      "version_original": "0.9.0-stable"
    },
    {
      "_id": "635202f89bc8a28e5341eae8",
      "alm_examples": [
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "ClusterWideAppDirectorAgent",
          "metadata": {
            "name": "guvnor"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "namespace": "app-director"
          }
        },
        {
          "api_version": "appdirector.randoli.ca/v1beta1",
          "kind": "AppDirectorAgent",
          "metadata": {
            "name": "guvnor",
            "namespace": "app-director"
          },
          "spec": {
            "agentCertsSecretName": "guvnor-certs",
            "agentConfigSecretName": "guvnor-secret",
            "managedNamespaces": [
              "dev"
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/randoli/app-director-operator@sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "bundle_path_digest": "sha256:ab9bd0ff11de25fd5bc5069c37a92356174e23cbe67ff5cb8200da9942a4ebda",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "0.9.0-stable",
      "creation_date": "2022-10-21T02:24:56.831000+00:00",
      "csv_description": "App Director\u00ae Platform enables developers to Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters. The App Director Agent (Guvnor) connects with the App Director\u00ae Platform to receive commands and send back events. The agent can be scoped to one or more namespaces or cluster-wide. More information can be found at https://www.randoli.ca/app-director-overview. Tekton Pipelines are a pre-requisite for this operator to work. If not already installed, the operator will install the correct version on initial start-up.",
      "csv_display_name": "App Director",
      "csv_metadata_description": "Containerize, Deploy, Scale and Manage Applications Across Multiple OpenShift Clusters",
      "csv_name": "app-director-operator.v0.9.0-stable",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:07:05.763000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "app-director-operator",
      "provided_apis": [
        {
          "group": "appdirector.randoli.ca",
          "kind": "AppDirectorAgent",
          "plural": "appdirectoragents",
          "version": "v1beta1"
        },
        {
          "group": "appdirector.randoli.ca",
          "kind": "ClusterWideAppDirectorAgent",
          "plural": "clusterwideappdirectoragents",
          "version": "v1beta1"
        }
      ],
      "provider": "Randoli",
      "related_images": [
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "app-director-operator:0.9.0-d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8-annotation"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy:v0.5.0@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "image": "docker.io/randoli/app-director-operator:0.9.0@sha256:d5d74af348039d7b08994b55b526da96caf2779142ccd7f466759bd30b421eb8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.0-stable",
      "version_original": "0.9.0-stable"
    },
    {
      "_id": "63563cc68b9ab2d9b627dc4e",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:528fd4d79efb72d8f7efac4317c4489f675cb14de43eedb3021abf53b082c4d9",
      "bundle_path_digest": "sha256:528fd4d79efb72d8f7efac4317c4489f675cb14de43eedb3021abf53b082c4d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-10-24T07:20:38.383000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T10:43:03.161000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "name": "cloud-native/gitlab-operator-03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606-annotation"
        },
        {
          "digest": "sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.13.0",
      "version_original": "0.13.0"
    },
    {
      "_id": "63563ccab5cc5ea95bebcebe",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:528fd4d79efb72d8f7efac4317c4489f675cb14de43eedb3021abf53b082c4d9",
      "bundle_path_digest": "sha256:528fd4d79efb72d8f7efac4317c4489f675cb14de43eedb3021abf53b082c4d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T07:20:42.473000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:34:02.063000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "name": "cloud-native/gitlab-operator-03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606-annotation"
        },
        {
          "digest": "sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.13.0",
      "version_original": "0.13.0"
    },
    {
      "_id": "63563efe2860db926e45eba1",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:528fd4d79efb72d8f7efac4317c4489f675cb14de43eedb3021abf53b082c4d9",
      "bundle_path_digest": "sha256:528fd4d79efb72d8f7efac4317c4489f675cb14de43eedb3021abf53b082c4d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T07:30:06.519000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:30:53.200000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "name": "cloud-native/gitlab-operator-03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606-annotation"
        },
        {
          "digest": "sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.13.0",
      "version_original": "0.13.0"
    },
    {
      "_id": "63563f018b9ab2d9b627df1a",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta1",
          "kind": "GitLab",
          "metadata": {
            "name": "gitlab",
            "namespace": "gitlab-system"
          },
          "spec": {
            "chart": {
              "values": {
                "certmanager": {
                  "install": false
                },
                "global": {
                  "hosts": {
                    "domain": "example.com"
                  },
                  "ingress": {
                    "configureCertmanager": false,
                    "tls": {}
                  }
                }
              },
              "version": "6.5.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-operator-bundle@sha256:528fd4d79efb72d8f7efac4317c4489f675cb14de43eedb3021abf53b082c4d9",
      "bundle_path_digest": "sha256:528fd4d79efb72d8f7efac4317c4489f675cb14de43eedb3021abf53b082c4d9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "unstable",
      "creation_date": "2022-10-24T07:30:09.936000+00:00",
      "csv_description": "# Overview\n\nThe GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.\n\n[Documentation](https://docs.gitlab.com/charts/installation/operator.html)\n\nThe operator, while new and still actively being developed, aims to:\n- ease installation and configuration of GitLab instances\n- offer seamless upgrades from version to version\n\n## GitLab\n\nGitLab is a complete open-source DevOps platform, delivered as a single application, fundamentally changing the way Development, Security, and Ops teams collaborate and build software. From idea to production, GitLab helps teams improve cycle time from weeks to minutes, reduce development process costs and decrease time to market while increasing developer productivity.\n\nBuilt on Open Source, GitLab delivers new innovations and features on the same day of every month by leveraging contributions from a passionate, global community of thousands of developers and millions of users. Over 100,000 of the world\u2019s most demanding organizations trust GitLab to deliver great software at new speeds.\n\nIf you would like to enable advanced DevOps capabilities and activate enterprise features such as security, risk, and compliance capabilities, please contact our sales team to purchase an enterprise license.\n\n# Prerequisites\n\nPlease visit [Prerequisites](https://docs.gitlab.com/charts/installation/operator.html#prerequisites) section of GitLab Operator Documentation.\n\n## IngressClass\n\nCluster-wide `IngressClass` should be created prior to Operator setup, as OLM does not currently support this object type:\n\n```yaml\napiVersion: networking.k8s.io/v1\nkind: IngressClass\nmetadata:\n  # Ensure this value matches `spec.chart.values.global.ingress.class`\n  # in the GitLab CR on the next step.\n  name: gitlab-nginx\nspec:\n  controller: k8s.io/ingress-nginx\n```\n",
      "csv_display_name": "GitLab",
      "csv_metadata_description": "The GitLab operator is responsible for managing the full lifecycle of GitLab instances in your Kubernetes or Openshift container platforms.",
      "csv_name": "gitlab-operator-kubernetes.v0.13.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T11:47:38.167000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gitlab-operator-kubernetes",
      "provided_apis": [
        {
          "group": "apps.gitlab.com",
          "kind": "GitLab",
          "plural": "gitlabs",
          "version": "v1beta1"
        }
      ],
      "provider": "GitLab Inc",
      "related_images": [
        {
          "digest": "sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "name": "cloud-native/gitlab-operator-03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606-annotation"
        },
        {
          "digest": "sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "image": "registry.gitlab.com/gitlab-org/cloud-native/gitlab-operator@sha256:03e30ebf74eb95768d1a11f29fed3dfad08443e0b902fcfee1c950f05ed26606",
          "name": "manager"
        },
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.13.0",
      "version_original": "0.13.0"
    },
    {
      "_id": "6356488947833546e9fc1465",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "bundle_path_digest": "sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-10-24T08:10:49.807000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.142",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:54:54.143000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aquasec-2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4-annotation"
        },
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "name": "gateway"
        },
        {
          "digest": "sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "name": "server"
        },
        {
          "digest": "sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "name": "scanner"
        },
        {
          "digest": "sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "name": "enforcer"
        },
        {
          "digest": "sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.142",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2022.4.142",
      "version_original": "2022.4.142"
    },
    {
      "_id": "63564926f7ad0f3bdfa47946",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "bundle_path_digest": "sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-10-24T08:13:26.482000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.142",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:58:13.270000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aquasec-2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4-annotation"
        },
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "name": "gateway"
        },
        {
          "digest": "sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "name": "server"
        },
        {
          "digest": "sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "name": "scanner"
        },
        {
          "digest": "sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "name": "enforcer"
        },
        {
          "digest": "sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.142",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2022.4.142",
      "version_original": "2022.4.142"
    },
    {
      "_id": "6356492cffe53c2d9c37f3dc",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "bundle_path_digest": "sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-10-24T08:13:32.115000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.142",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:04:25.506000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aquasec-2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4-annotation"
        },
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "name": "gateway"
        },
        {
          "digest": "sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "name": "server"
        },
        {
          "digest": "sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "name": "scanner"
        },
        {
          "digest": "sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "name": "enforcer"
        },
        {
          "digest": "sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.142",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2022.4.142",
      "version_original": "2022.4.142"
    },
    {
      "_id": "63564946b0e20fe56a3cb88d",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "bundle_path_digest": "sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-10-24T08:13:58.715000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.142",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T12:03:03.052000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aquasec-2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4-annotation"
        },
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "name": "gateway"
        },
        {
          "digest": "sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "name": "server"
        },
        {
          "digest": "sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "name": "scanner"
        },
        {
          "digest": "sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "name": "enforcer"
        },
        {
          "digest": "sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.142",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2022.4.142",
      "version_original": "2022.4.142"
    },
    {
      "_id": "63564acdb0e20fe56a3cba71",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "bundle_path_digest": "sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-10-24T08:20:29.971000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.142",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T10:54:32.910000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "plural": "clusterconfigauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "plural": "configauditreports",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "plural": "aquastarboards",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aquasec-2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4-annotation"
        },
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "name": "gateway"
        },
        {
          "digest": "sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "name": "server"
        },
        {
          "digest": "sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "name": "scanner"
        },
        {
          "digest": "sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "name": "enforcer"
        },
        {
          "digest": "sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.142",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2022.4.142",
      "version_original": "2022.4.142"
    },
    {
      "_id": "63564bedb0e20fe56a3cbba0",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "route": true,
            "runAsNonRoot": false,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "runAsNonRoot": false,
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway:8443",
              "imagePullSecret": "aqua-registry"
            },
            "deploy": {
              "service": "ClusterIP"
            },
            "infra": {
              "serviceAccount": "aqua-kube-enforcer-sa",
              "version": "2022.4"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            },
            "runAsNonRoot": false
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "2022.4"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "bundle_path_digest": "sha256:f9e0f1811f305c9124e8194207eebd32daf46e2b57f14c939ae946a04b5df86d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "2022.4",
      "creation_date": "2022-10-24T08:25:17.420000+00:00",
      "csv_description": "The Aqua Security Operator runs within an OpenShift cluster and provides a means to deploy and manage the Aqua Security cluster and components :\n* Server (aka \u201cconsole\u201d)\n* Database (for production environments we recommend to use an external database and not the Aqua default database)\n* Gateway\n* Enforcer (aka \u201cagent\u201d)\n* KubeEnforcer\n* Scanner\n* CSP (package that contains the Server, Database, and Gateway)\n\nUse the Aqua-Operator to\n* Deploy Aqua Security components on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua Security components\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n\n3. Create the secret for Aqua Database password. If you are using an External Database, make sure you use those credentials.\nNOTE: This step is optional and you can specify the Database password when creating the CRs.\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password> -n aqua```\n\nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* 4.6: This maps to the older version of Aqua 4.6.0\n* 5.0: This maps to the Aqua version 5.0.0\n* 5.3: This maps to the Aqua version 5.3.0\n* 6.0: This maps to the Aqua version 6.0.0\n* 6.2: This maps to the Aqua version 6.2.0\n* 6.5: This maps to the Aqua version 6.5.0\n* 2022.4: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/2022.4.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/6.2.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v2022.4.142",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T11:23:43.703000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "aquasecurity.github.io",
          "kind": "AquaStarboard",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ClusterConfigAuditReport",
          "version": "v1alpha1"
        },
        {
          "group": "aquasecurity.github.io",
          "kind": "ConfigAuditReport",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Aqua Security, Inc.",
      "related_images": [
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aquasec-2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4-annotation"
        },
        {
          "digest": "sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:2d3a918a3f7f2d649b7d209f3143b3830c896f7ebe8e47524344705297ad9df4",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:aac0c2112c8d8b681f38b840df4cd1c41e4f677e69509045e088b2c0b56dc5c2",
          "name": "gateway"
        },
        {
          "digest": "sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:d53a86d0320da843b6b74b4fa42fddb0fdfa6104078c52c20d7839223f3ac79c",
          "name": "server"
        },
        {
          "digest": "sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:c6aa10685d0e87187a30b5d547afed1de6e2986b10bec4da27d3aca1c0671504",
          "name": "scanner"
        },
        {
          "digest": "sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:67c1dbe781668d94c56696a6fb8c20b9006ccfaab448a11199ebbef9a427df2d",
          "name": "enforcer"
        },
        {
          "digest": "sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:54c1fb5911241414d369d6ac1dabb82d1bcaa5dd912b5acd8956ed97cbec8de7",
          "name": "kube_enforcer"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.2 <2022.4.142",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2022.4.142",
      "version_original": "2022.4.142"
    },
    {
      "_id": "63570c76d154712fbb23290e",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "bundle_path_digest": "sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T22:06:46.421000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-08T19:38:36.791000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator-f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a-annotation"
        },
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "8.6.6",
      "version_original": "8.6.6"
    },
    {
      "_id": "63570d986794cb8805ac4329",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "bundle_path_digest": "sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T22:11:36.298000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T22:11:36.298000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator-f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a-annotation"
        },
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "8.6.6",
      "version_original": "8.6.6"
    },
    {
      "_id": "63570e82bf8d22683941e623",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "bundle_path_digest": "sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T22:15:30.012000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-08T19:43:38.485000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator-f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a-annotation"
        },
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.6.6",
      "version_original": "8.6.6"
    },
    {
      "_id": "63570ee5bf8d22683941e67d",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "bundle_path_digest": "sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T22:17:09.142000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-08T19:37:34.742000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator-f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a-annotation"
        },
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.6.6",
      "version_original": "8.6.6"
    },
    {
      "_id": "63570f302860db926e4694ec",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "bundle_path_digest": "sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T22:18:24.399000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-08T19:36:48.566000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator-f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a-annotation"
        },
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.6.6",
      "version_original": "8.6.6"
    },
    {
      "_id": "63570fe3d154712fbb232c23",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "bundle_path_digest": "sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T22:21:23.297000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-08T19:48:32.628000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator-f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a-annotation"
        },
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "8.6.6",
      "version_original": "8.6.6"
    },
    {
      "_id": "63570ff42860db926e46959c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "bundle_path_digest": "sha256:ac8a089f6475190c78e50930f3429453f40724539bf510c728cb9b40ac7c1ae1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T22:21:40.400000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.6.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T22:21:40.400000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator-f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a-annotation"
        },
        {
          "digest": "sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:f6d1e43b82e9ea96378b7535d441fc46c8d676ce0a4037b0c8b88e91f261350a",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:3a432582424901098ba1a17e785bc9d3f4533d5507988679ffec1366f2f6c5c8",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.6.6",
      "version_original": "8.6.6"
    },
    {
      "_id": "63571906ecddd9b37fd329da",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-24T23:00:22.210000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T23:00:22.210000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "6357190aff875f4a0d860c8d",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T23:00:26.968000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T23:00:26.968000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "6357193decddd9b37fd32a1e",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-24T23:01:17.228000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T23:01:17.228000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "6357194485973d76ed0162c9",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T23:01:24.846000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T23:01:24.846000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "635719a685973d76ed016368",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-24T23:03:02.004000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T23:03:02.004000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "635719a9f4b37282b01160aa",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T23:03:05.764000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T23:03:05.764000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63571a40ff875f4a0d860e2a",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-24T23:05:36.683000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T23:05:36.683000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63571a4272bf85328e03f672",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T23:05:38.241000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T23:05:38.241000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63571a4d47ec46d2a6a5f922",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-24T23:05:49.557000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T23:05:49.557000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63571a4fa560646e1d8b842e",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T23:05:51.089000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T23:05:51.089000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63571abb47ec46d2a6a5f9e6",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T23:07:39.444000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T23:07:39.444000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63571abc3c1a9967f1a02c43",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-24T23:07:40.517000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T23:07:40.517000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63571b7085973d76ed0165e6",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-24T23:10:40.537000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-10-24T23:10:40.537000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "63571b7147ec46d2a6a5fad3",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "bundle_path_digest": "sha256:0cf6b7cf6227fd7e0ac72c24667b623983c3d7e63f9271b2347d7191ecd02018",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-24T23:10:41.031000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-24T23:10:41.031000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "openstorage-operator-088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e-annotation"
        },
        {
          "digest": "sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:088f1af8328269bd6c36360c2e04ded7164c16bc130238707a824fb58b33e55e",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "635830c972bf85328e059244",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_AUTH_TYPE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_MAX_PATH_LIMIT",
                    "value": "192"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--leader-election-lease-duration=15s",
                    "--leader-election-renew-deadline=10s",
                    "--leader-election-retry-period=5s"
                  ],
                  "name": "common"
                },
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_TOPOLOGY_CONTROL_ENABLED",
                    "value": "false"
                  }
                ],
                "tolerations": [
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/memory-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/disk-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/network-unavailable",
                    "operator": "Exists"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_NFS_ACLS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {},
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "File",
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "node": {},
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:77780518a556caff3b2644dcfd480341170c27090b34c62c080d4f23c658b26c",
      "bundle_path_digest": "sha256:77780518a556caff3b2644dcfd480341170c27090b34c62c080d4f23c658b26c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-25T18:54:01.249000+00:00",
      "csv_description": "Dell CSI Operator for Dell CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-25T18:54:01.249000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "version": "v1"
        }
      ],
      "provider": "Dell Technologies",
      "related_images": [
        {
          "digest": "sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "name": "dell-csi-operator-e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88-annotation"
        },
        {
          "digest": "sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
          "name": "csi-vxflexos-dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c-annotation"
        },
        {
          "digest": "sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
          "image": "docker.io/dellemc/csi-unity@sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
          "name": "csi-unity-a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075-annotation"
        },
        {
          "digest": "sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
          "image": "docker.io/dellemc/csi-powerstore@sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
          "name": "csi-powerstore-cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6-annotation"
        },
        {
          "digest": "sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
          "name": "csipowermax-reverseproxy-f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7-annotation"
        },
        {
          "digest": "sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
          "image": "docker.io/dellemc/csi-powermax@sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
          "name": "csi-powermax-d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2-annotation"
        },
        {
          "digest": "sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
          "image": "docker.io/dellemc/csi-isilon@sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
          "name": "csi-isilon-56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "635830cdff875f4a0d87a8d1",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v4",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "volumesnapshotclass",
                  "parameters": {
                    "IsiPath": "/ifs/data/csi"
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-isilon.dellemc.com/1.1.1.1",
                          "values": [
                            "csi-isilon.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_ARRAYS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v1.5.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v4",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2,
              "snapshotClass": [
                {
                  "name": "powermax-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": false,
                  "default": false,
                  "name": "bronze",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "Immediate"
                },
                {
                  "allowVolumeExpansion": false,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powermax.dellemc.com/000000000001",
                          "values": [
                            "csi-powermax.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "bronze-topology",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powermax.dellemc.com/000000000001",
                          "values": [
                            "csi-powermax.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "bronze-topology-resize",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "dellemc/csipowermax-reverseproxy:v1.1.0.000R",
            "imagePullPolicy": "Always",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENDPOINT",
                    "value": "https://127.0.0.1/api/rest"
                  },
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": "ISCSI"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2,
              "snapshotClass": [
                {
                  "name": "powerstore-snapshot"
                }
              ],
              "storageClass": [
                {
                  "default": true,
                  "name": "powerstore",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "ext4"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-xfs",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "xfs"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powerstore.dellemc.com/127.0.0.1-nfs",
                          "values": [
                            "true"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "powerstore-nfs",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "nfs",
                    "nasName": "nas-server"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ],
              "snapshotClass": [
                {
                  "name": "test-snap",
                  "parameters": {
                    "retentionDuration": ""
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-nfs",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "hostIoSize": "8192",
                    "nasServer": "nas_1",
                    "protocol": "NFS",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-unity.dellemc.com/virt2017****-iscsi",
                          "values": [
                            "true"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "virt2017****-iscsi-topology",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.1"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.xx.xx.xx,10.xx.xx.xx"
                    }
                  ],
                  "image": "dellemc/sdc:3.5.1.1",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "vxflexos-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:36a685117aa33ae94e6e768a10e24f6a65b2cc6f14cdd778948108e613ae5abc",
      "bundle_path_digest": "sha256:36a685117aa33ae94e6e768a10e24f6a65b2cc6f14cdd778948108e613ae5abc",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-25T18:54:05.188000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-25T18:54:05.188000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "version": "v1"
        }
      ],
      "provider": "Dell EMC",
      "related_images": [
        {
          "digest": "sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "image": "dellemc/dell-csi-operator@sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "name": "dell-csi-operator-126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6-annotation"
        },
        {
          "digest": "sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "image": "docker.io/busybox@sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "name": "config-copy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "635831223c1a9967f1a1c96d",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_AUTH_TYPE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_MAX_PATH_LIMIT",
                    "value": "192"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--leader-election-lease-duration=15s",
                    "--leader-election-renew-deadline=10s",
                    "--leader-election-retry-period=5s"
                  ],
                  "name": "common"
                },
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_TOPOLOGY_CONTROL_ENABLED",
                    "value": "false"
                  }
                ],
                "tolerations": [
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/memory-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/disk-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/network-unavailable",
                    "operator": "Exists"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_NFS_ACLS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {},
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "File",
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "node": {},
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:77780518a556caff3b2644dcfd480341170c27090b34c62c080d4f23c658b26c",
      "bundle_path_digest": "sha256:77780518a556caff3b2644dcfd480341170c27090b34c62c080d4f23c658b26c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-25T18:55:30.799000+00:00",
      "csv_description": "Dell CSI Operator for Dell CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-25T18:55:30.799000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "version": "v1"
        }
      ],
      "provider": "Dell Technologies",
      "related_images": [
        {
          "digest": "sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "name": "dell-csi-operator-e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88-annotation"
        },
        {
          "digest": "sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
          "name": "csi-vxflexos-dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c-annotation"
        },
        {
          "digest": "sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
          "image": "docker.io/dellemc/csi-unity@sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
          "name": "csi-unity-a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075-annotation"
        },
        {
          "digest": "sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
          "image": "docker.io/dellemc/csi-powerstore@sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
          "name": "csi-powerstore-cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6-annotation"
        },
        {
          "digest": "sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
          "name": "csipowermax-reverseproxy-f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7-annotation"
        },
        {
          "digest": "sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
          "image": "docker.io/dellemc/csi-powermax@sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
          "name": "csi-powermax-d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2-annotation"
        },
        {
          "digest": "sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
          "image": "docker.io/dellemc/csi-isilon@sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
          "name": "csi-isilon-56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "635831713c7c0987edd28a5f",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_AUTH_TYPE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_MAX_PATH_LIMIT",
                    "value": "192"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--leader-election-lease-duration=15s",
                    "--leader-election-renew-deadline=10s",
                    "--leader-election-retry-period=5s"
                  ],
                  "name": "common"
                },
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_TOPOLOGY_CONTROL_ENABLED",
                    "value": "false"
                  }
                ],
                "tolerations": [
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/memory-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/disk-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/network-unavailable",
                    "operator": "Exists"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_NFS_ACLS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {},
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "File",
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "node": {},
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:77780518a556caff3b2644dcfd480341170c27090b34c62c080d4f23c658b26c",
      "bundle_path_digest": "sha256:77780518a556caff3b2644dcfd480341170c27090b34c62c080d4f23c658b26c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-25T18:56:49.419000+00:00",
      "csv_description": "Dell CSI Operator for Dell CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-25T18:56:49.419000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        }
      ],
      "provider": "Dell Technologies",
      "related_images": [
        {
          "digest": "sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "name": "dell-csi-operator-e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88-annotation"
        },
        {
          "digest": "sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
          "name": "csi-vxflexos-dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c-annotation"
        },
        {
          "digest": "sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
          "image": "docker.io/dellemc/csi-unity@sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
          "name": "csi-unity-a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075-annotation"
        },
        {
          "digest": "sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
          "image": "docker.io/dellemc/csi-powerstore@sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
          "name": "csi-powerstore-cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6-annotation"
        },
        {
          "digest": "sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
          "name": "csipowermax-reverseproxy-f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7-annotation"
        },
        {
          "digest": "sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
          "image": "docker.io/dellemc/csi-powermax@sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
          "name": "csi-powermax-d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2-annotation"
        },
        {
          "digest": "sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
          "image": "docker.io/dellemc/csi-isilon@sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
          "name": "csi-isilon-56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "6358318747ec46d2a6a7954c",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_AUTH_TYPE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_MAX_PATH_LIMIT",
                    "value": "192"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--leader-election-lease-duration=15s",
                    "--leader-election-renew-deadline=10s",
                    "--leader-election-retry-period=5s"
                  ],
                  "name": "common"
                },
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_TOPOLOGY_CONTROL_ENABLED",
                    "value": "false"
                  }
                ],
                "tolerations": [
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/memory-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/disk-pressure",
                    "operator": "Exists"
                  },
                  {
                    "effect": "NoExecute",
                    "key": "node.kubernetes.io/network-unavailable",
                    "operator": "Exists"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_NFS_ACLS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "ReadWriteOnceWithFSType",
              "node": {},
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.4.0",
              "controller": {},
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "fsGroupPolicy": "File",
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "node": {},
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:77780518a556caff3b2644dcfd480341170c27090b34c62c080d4f23c658b26c",
      "bundle_path_digest": "sha256:77780518a556caff3b2644dcfd480341170c27090b34c62c080d4f23c658b26c",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-25T18:57:11.758000+00:00",
      "csv_description": "Dell CSI Operator for Dell CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-25T18:57:11.758000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        }
      ],
      "provider": "Dell Technologies",
      "related_images": [
        {
          "digest": "sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "name": "dell-csi-operator-e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88-annotation"
        },
        {
          "digest": "sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:e600c35e2110135496e8ada271b7afa5b52159d2d68fe68fe9d8c6b04b701d88",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c",
          "name": "csi-vxflexos-dc7dd77ac48d7e54a52b47398fa995ea28331eec1459d7da95cc4c0cf390556c-annotation"
        },
        {
          "digest": "sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
          "image": "docker.io/dellemc/csi-unity@sha256:a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075",
          "name": "csi-unity-a6333cfb4a9b4aaf7a83597c3b446e4d5a455f7a31e2720b9b4b88f9e192e075-annotation"
        },
        {
          "digest": "sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
          "image": "docker.io/dellemc/csi-powerstore@sha256:cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6",
          "name": "csi-powerstore-cf9a5936d9403e3510a8d631882343f7adb4aefac14590cdf91bfec18928f5a6-annotation"
        },
        {
          "digest": "sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7",
          "name": "csipowermax-reverseproxy-f48a9d2f54ecf4a83731375a219e537f15af5d59c73a823bbfaad55363862ef7-annotation"
        },
        {
          "digest": "sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
          "image": "docker.io/dellemc/csi-powermax@sha256:d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2",
          "name": "csi-powermax-d85454ef72d394e28612a7350ac7196359e97bf52e1b3fe6f1c678ac50d14eb2-annotation"
        },
        {
          "digest": "sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
          "image": "docker.io/dellemc/csi-isilon@sha256:56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307",
          "name": "csi-isilon-56b1bbd4bde4e1b9dbeb8bf29e7b1b35f9a092177ce55dd9f44b609eddec6307-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.0",
      "version_original": "1.9.0"
    },
    {
      "_id": "63593180e1932ecebbc88505",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "TrilioVaultManager",
          "metadata": {
            "name": "triliovault-manager"
          },
          "spec": {
            "applicationScope": "Cluster",
            "componentConfiguration": {
              "ingress-controller": {
                "enabled": false
              }
            },
            "dataJobResources": {
              "limits": {
                "cpu": "1500m",
                "memory": "5120Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "800Mi"
              }
            },
            "logLevel": "Info",
            "metadataJobResources": {
              "limits": {
                "cpu": "500m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "10Mi"
              }
            },
            "tvkInstanceName": "tvk-instance"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "bundle_path_digest": "sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-26T13:09:20.292000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-08T23:55:34.432000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "TrilioVaultManager",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator-86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea-annotation"
        },
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "control_plane"
        },
        {
          "digest": "sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "image": "registry.connect.redhat.com/trilio/web@sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "name": "web"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "web_backend"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "exporter"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "admission_webhook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "analyzer"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "metamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "hook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "tvk_init"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "image": "registry.connect.redhat.com/trilio/nats@sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "name": "nats"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "service_manager"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "syncer"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "watcher"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "continuous_restore"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "635931de2cbe85618d8b2382",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "TrilioVaultManager",
          "metadata": {
            "name": "triliovault-manager"
          },
          "spec": {
            "applicationScope": "Cluster",
            "componentConfiguration": {
              "ingress-controller": {
                "enabled": false
              }
            },
            "dataJobResources": {
              "limits": {
                "cpu": "1500m",
                "memory": "5120Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "800Mi"
              }
            },
            "logLevel": "Info",
            "metadataJobResources": {
              "limits": {
                "cpu": "500m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "10Mi"
              }
            },
            "tvkInstanceName": "tvk-instance"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "bundle_path_digest": "sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-26T13:10:54.306000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-08T23:58:43.982000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "TrilioVaultManager",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator-86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea-annotation"
        },
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "control_plane"
        },
        {
          "digest": "sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "image": "registry.connect.redhat.com/trilio/web@sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "name": "web"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "web_backend"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "exporter"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "admission_webhook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "analyzer"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "metamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "hook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "tvk_init"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "image": "registry.connect.redhat.com/trilio/nats@sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "name": "nats"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "service_manager"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "syncer"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "watcher"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "continuous_restore"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "635931fb556cc98bf33ce140",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "TrilioVaultManager",
          "metadata": {
            "name": "triliovault-manager"
          },
          "spec": {
            "applicationScope": "Cluster",
            "componentConfiguration": {
              "ingress-controller": {
                "enabled": false
              }
            },
            "dataJobResources": {
              "limits": {
                "cpu": "1500m",
                "memory": "5120Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "800Mi"
              }
            },
            "logLevel": "Info",
            "metadataJobResources": {
              "limits": {
                "cpu": "500m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "10Mi"
              }
            },
            "tvkInstanceName": "tvk-instance"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "bundle_path_digest": "sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-26T13:11:23.105000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-08T23:51:33.512000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "TrilioVaultManager",
          "plural": "triliovaultmanagers",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator-86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea-annotation"
        },
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "control_plane"
        },
        {
          "digest": "sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "image": "registry.connect.redhat.com/trilio/web@sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "name": "web"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "web_backend"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "exporter"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "admission_webhook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "analyzer"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "metamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "hook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "tvk_init"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "image": "registry.connect.redhat.com/trilio/nats@sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "name": "nats"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "service_manager"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "syncer"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "watcher"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "continuous_restore"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "63593211556cc98bf33ce153",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "TrilioVaultManager",
          "metadata": {
            "name": "triliovault-manager"
          },
          "spec": {
            "applicationScope": "Cluster",
            "componentConfiguration": {
              "ingress-controller": {
                "enabled": false
              }
            },
            "dataJobResources": {
              "limits": {
                "cpu": "1500m",
                "memory": "5120Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "800Mi"
              }
            },
            "logLevel": "Info",
            "metadataJobResources": {
              "limits": {
                "cpu": "500m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "10Mi"
              }
            },
            "tvkInstanceName": "tvk-instance"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "bundle_path_digest": "sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-26T13:11:45.657000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-09T00:21:40.946000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "TrilioVaultManager",
          "plural": "triliovaultmanagers",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator-86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea-annotation"
        },
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "control_plane"
        },
        {
          "digest": "sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "image": "registry.connect.redhat.com/trilio/web@sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "name": "web"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "web_backend"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "exporter"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "admission_webhook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "analyzer"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "metamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "hook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "tvk_init"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "image": "registry.connect.redhat.com/trilio/nats@sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "name": "nats"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "service_manager"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "syncer"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "watcher"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "continuous_restore"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "635932b360aed1998b69d4d0",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "TrilioVaultManager",
          "metadata": {
            "name": "triliovault-manager"
          },
          "spec": {
            "applicationScope": "Cluster",
            "componentConfiguration": {
              "ingress-controller": {
                "enabled": false
              }
            },
            "dataJobResources": {
              "limits": {
                "cpu": "1500m",
                "memory": "5120Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "800Mi"
              }
            },
            "logLevel": "Info",
            "metadataJobResources": {
              "limits": {
                "cpu": "500m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "10Mi"
              }
            },
            "tvkInstanceName": "tvk-instance"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "bundle_path_digest": "sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-26T13:14:27.812000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-09T00:04:11.890000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "TrilioVaultManager",
          "plural": "triliovaultmanagers",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator-86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea-annotation"
        },
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "control_plane"
        },
        {
          "digest": "sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "image": "registry.connect.redhat.com/trilio/web@sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "name": "web"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "web_backend"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "exporter"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "admission_webhook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "analyzer"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "metamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "hook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "tvk_init"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "image": "registry.connect.redhat.com/trilio/nats@sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "name": "nats"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "service_manager"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "syncer"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "watcher"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "continuous_restore"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "635932ebe0d12117fd7c716f",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "TrilioVaultManager",
          "metadata": {
            "name": "triliovault-manager"
          },
          "spec": {
            "applicationScope": "Cluster",
            "componentConfiguration": {
              "ingress-controller": {
                "enabled": false
              }
            },
            "dataJobResources": {
              "limits": {
                "cpu": "1500m",
                "memory": "5120Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "800Mi"
              }
            },
            "logLevel": "Info",
            "metadataJobResources": {
              "limits": {
                "cpu": "500m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "10Mi"
              }
            },
            "tvkInstanceName": "tvk-instance"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "bundle_path_digest": "sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-26T13:15:23.335000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-26T13:15:23.335000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "TrilioVaultManager",
          "plural": "triliovaultmanagers",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator-86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea-annotation"
        },
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "control_plane"
        },
        {
          "digest": "sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "image": "registry.connect.redhat.com/trilio/web@sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "name": "web"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "web_backend"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "exporter"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "admission_webhook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "analyzer"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "metamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "hook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "tvk_init"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "image": "registry.connect.redhat.com/trilio/nats@sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "name": "nats"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "service_manager"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "syncer"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "watcher"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "continuous_restore"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "63593309556cc98bf33ce1e5",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "TrilioVaultManager",
          "metadata": {
            "name": "triliovault-manager"
          },
          "spec": {
            "applicationScope": "Cluster",
            "componentConfiguration": {
              "ingress-controller": {
                "enabled": false
              }
            },
            "dataJobResources": {
              "limits": {
                "cpu": "1500m",
                "memory": "5120Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "800Mi"
              }
            },
            "logLevel": "Info",
            "metadataJobResources": {
              "limits": {
                "cpu": "500m",
                "memory": "1024Mi"
              },
              "requests": {
                "cpu": "10m",
                "memory": "10Mi"
              }
            },
            "tvkInstanceName": "tvk-instance"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "bundle_path_digest": "sha256:563603947e116b22bf3ef79576c1a7bb7421b34ea3e8e6e027c3418ab5606f38",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-10-26T13:15:53.830000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-stable.3.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-26T13:15:53.830000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "TrilioVaultManager",
          "plural": "triliovaultmanagers",
          "version": "v1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator-86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea-annotation"
        },
        {
          "digest": "sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "image": "registry.connect.redhat.com/trilio/k8s-triliovault-operator@sha256:86ce3691965b3deec2f6c164507483e9f8bf2b09b92aea1811c165247489a9ea",
          "name": "k8s-triliovault-operator"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "control_plane"
        },
        {
          "digest": "sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "image": "registry.connect.redhat.com/trilio/web@sha256:bb0b5496f6ededef22c8df60a8c9992a485e7f65cc8ccbf84298de6d1a7545b9",
          "name": "web"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "web_backend"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "exporter"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "admission_webhook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "analyzer"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "metamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datamover"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "target_browser"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "hook"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "resource_cleaner"
        },
        {
          "digest": "sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:8cd205f11c7a728ef8dfd54689e95ab9b98bea8728cbb23ecbdebd79a47081be",
          "name": "tvk_init"
        },
        {
          "digest": "sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "image": "registry.connect.redhat.com/trilio/dex@sha256:7bcb3d85a4447f1fa684b76b8cb7fb314a9ddedbd447b336da8a3ea286b5834f",
          "name": "dex"
        },
        {
          "digest": "sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "image": "registry.connect.redhat.com/trilio/minio@sha256:62ea930dfe5370eeaa574d88d94fb0120a5af0a1cc90a4a1831be7630a30844c",
          "name": "minio"
        },
        {
          "digest": "sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "image": "registry.connect.redhat.com/trilio/nats@sha256:d14f59c5fb8b87867b9d03e9c8e10e13fdafd491b1c3a48cfae65e275725a574",
          "name": "nats"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "service_manager"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "syncer"
        },
        {
          "digest": "sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "image": "registry.connect.redhat.com/trilio/event-stack@sha256:66b54963ae52c63b6d23df6d62858ca6dc9340c1e06d3add97cda01b156fa011",
          "name": "watcher"
        },
        {
          "digest": "sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:51416d0f28690da9f9330099066709b1552ca1e20852dd2fe0867f2d5d8ef37c",
          "name": "continuous_restore"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "3.0.0",
      "version_original": "3.0.0"
    },
    {
      "_id": "635970e0e0d12117fd7c9ef7",
      "alm_examples": [
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "ControlPlane",
          "metadata": {
            "name": "controlplane-example"
          },
          "spec": {
            "dataplane": "dataplane-example",
            "gatewayClass": "kong"
          }
        },
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "DataPlane",
          "metadata": {
            "name": "dataplane-example"
          },
          "spec": {
            "env": [
              {
                "name": "KONG_LOG_LEVEL",
                "value": "debug"
              }
            ]
          }
        },
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "GatewayConfiguration",
          "metadata": {
            "name": "kong",
            "namespace": "default"
          },
          "spec": {
            "controlPlaneDeploymentOptions": {
              "env": [
                {
                  "name": "CONTROLLER_LOG_LEVEL",
                  "value": "debug"
                }
              ]
            },
            "dataPlaneDeploymentOptions": {
              "containerImage": "kong",
              "version": "3.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kong/gateway-operator-bundle@sha256:645a2fff58eced9626c85216f2f72bf33f0a1b6307ce972fd4e4901baaa2f9af",
      "bundle_path_digest": "sha256:645a2fff58eced9626c85216f2f72bf33f0a1b6307ce972fd4e4901baaa2f9af",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-26T17:39:44.927000+00:00",
      "csv_description": "Kong Gateway Operator for Kubernetes. Technical preview.\n\nA [Kubernetes Operator][k8soperator] for the [Kong Gateway][kong].\n\n[k8soperator]:https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\n[kong]:https://konghq.com\n\n### Quick Start\n\nThe [Quick Start guide](https://kong.github.io/gateway-operator-docs/#quick-start-guide) uses Kong Gateway Operator to deploy sample Kong setup for Kubernetes users, which includes an instance of Kong serving as a proxy to an example Kubernetes service.\n\n### Documentation\n\nThe primary documentation site for Kong Operator is located [in its GitHub repository](https://kong.github.io/gateway-operator-docs/).\n\nThe Gateway API documentation is located [in the Gateway API repository](https://gateway-api.sigs.k8s.io/).\n",
      "csv_display_name": "Kong Gateway Operator",
      "csv_metadata_description": "A Kubernetes Operator for the Kong Gateway",
      "csv_name": "kong-gateway-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-26T17:39:44.927000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kong-gateway-operator",
      "provided_apis": [
        {
          "group": "gateway-operator.konghq.com",
          "kind": "GatewayConfiguration",
          "plural": "gatewayconfigurations",
          "version": "v1alpha1"
        },
        {
          "group": "gateway-operator.konghq.com",
          "kind": "ControlPlane",
          "plural": "controlplanes",
          "version": "v1alpha1"
        },
        {
          "group": "gateway-operator.konghq.com",
          "kind": "DataPlane",
          "plural": "dataplanes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Kong Inc.",
      "related_images": [
        {
          "digest": "sha256:9d9103a013c9a1da1c6426eb1e6799d81bffc622e3785b8dd2333b63c6b58781",
          "image": "registry.connect.redhat.com/kong/kong@sha256:9d9103a013c9a1da1c6426eb1e6799d81bffc622e3785b8dd2333b63c6b58781",
          "name": "kong"
        },
        {
          "digest": "sha256:be2201098cdd692a5e78db9c42255ca6df34f2cd8cb7989cfbf4e89d5ac2f85b",
          "image": "registry.connect.redhat.com/kong/kong-ingress-controller@sha256:be2201098cdd692a5e78db9c42255ca6df34f2cd8cb7989cfbf4e89d5ac2f85b",
          "name": "kong-controller"
        },
        {
          "digest": "sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "name": "certificate-config"
        },
        {
          "digest": "sha256:578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0",
          "image": "ghcr.io/kong/gateway-operator@sha256:578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0",
          "name": "gateway-operator-578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0-annotation"
        },
        {
          "digest": "sha256:578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0",
          "image": "ghcr.io/kong/gateway-operator@sha256:578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0",
          "name": "manager"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:be2201098cdd692a5e78db9c42255ca6df34f2cd8cb7989cfbf4e89d5ac2f85b",
          "image": "registry.connect.redhat.com/kong/kong-ingress-controller@sha256:be2201098cdd692a5e78db9c42255ca6df34f2cd8cb7989cfbf4e89d5ac2f85b",
          "name": "kong_controller"
        },
        {
          "digest": "sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "name": "certificate_config"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "635972da60aed1998b6a0553",
      "alm_examples": [
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "ControlPlane",
          "metadata": {
            "name": "controlplane-example"
          },
          "spec": {
            "dataplane": "dataplane-example",
            "gatewayClass": "kong"
          }
        },
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "DataPlane",
          "metadata": {
            "name": "dataplane-example"
          },
          "spec": {
            "env": [
              {
                "name": "KONG_LOG_LEVEL",
                "value": "debug"
              }
            ]
          }
        },
        {
          "api_version": "gateway-operator.konghq.com/v1alpha1",
          "kind": "GatewayConfiguration",
          "metadata": {
            "name": "kong",
            "namespace": "default"
          },
          "spec": {
            "controlPlaneDeploymentOptions": {
              "env": [
                {
                  "name": "CONTROLLER_LOG_LEVEL",
                  "value": "debug"
                }
              ]
            },
            "dataPlaneDeploymentOptions": {
              "containerImage": "kong",
              "version": "3.0"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kong/gateway-operator-bundle@sha256:645a2fff58eced9626c85216f2f72bf33f0a1b6307ce972fd4e4901baaa2f9af",
      "bundle_path_digest": "sha256:645a2fff58eced9626c85216f2f72bf33f0a1b6307ce972fd4e4901baaa2f9af",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-26T17:48:10.146000+00:00",
      "csv_description": "Kong Gateway Operator for Kubernetes. Technical preview.\n\nA [Kubernetes Operator][k8soperator] for the [Kong Gateway][kong].\n\n[k8soperator]:https://kubernetes.io/docs/concepts/extend-kubernetes/operator/\n[kong]:https://konghq.com\n\n### Quick Start\n\nThe [Quick Start guide](https://kong.github.io/gateway-operator-docs/#quick-start-guide) uses Kong Gateway Operator to deploy sample Kong setup for Kubernetes users, which includes an instance of Kong serving as a proxy to an example Kubernetes service.\n\n### Documentation\n\nThe primary documentation site for Kong Operator is located [in its GitHub repository](https://kong.github.io/gateway-operator-docs/).\n\nThe Gateway API documentation is located [in the Gateway API repository](https://gateway-api.sigs.k8s.io/).\n",
      "csv_display_name": "Kong Gateway Operator",
      "csv_metadata_description": "A Kubernetes Operator for the Kong Gateway",
      "csv_name": "kong-gateway-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-26T17:48:10.146000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "kong-gateway-operator",
      "provided_apis": [
        {
          "group": "gateway-operator.konghq.com",
          "kind": "ControlPlane",
          "version": "v1alpha1"
        },
        {
          "group": "gateway-operator.konghq.com",
          "kind": "DataPlane",
          "version": "v1alpha1"
        },
        {
          "group": "gateway-operator.konghq.com",
          "kind": "GatewayConfiguration",
          "version": "v1alpha1"
        }
      ],
      "provider": "Kong Inc.",
      "related_images": [
        {
          "digest": "sha256:9d9103a013c9a1da1c6426eb1e6799d81bffc622e3785b8dd2333b63c6b58781",
          "image": "registry.connect.redhat.com/kong/kong@sha256:9d9103a013c9a1da1c6426eb1e6799d81bffc622e3785b8dd2333b63c6b58781",
          "name": "kong"
        },
        {
          "digest": "sha256:be2201098cdd692a5e78db9c42255ca6df34f2cd8cb7989cfbf4e89d5ac2f85b",
          "image": "registry.connect.redhat.com/kong/kong-ingress-controller@sha256:be2201098cdd692a5e78db9c42255ca6df34f2cd8cb7989cfbf4e89d5ac2f85b",
          "name": "kong-controller"
        },
        {
          "digest": "sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "name": "certificate-config"
        },
        {
          "digest": "sha256:578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0",
          "image": "ghcr.io/kong/gateway-operator@sha256:578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0",
          "name": "gateway-operator-578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0-annotation"
        },
        {
          "digest": "sha256:578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0",
          "image": "ghcr.io/kong/gateway-operator@sha256:578657715911aa004d5a481e53aef9c48c9e8cefdc92dc255d26f9f1e3ce1cf0",
          "name": "manager"
        },
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:be2201098cdd692a5e78db9c42255ca6df34f2cd8cb7989cfbf4e89d5ac2f85b",
          "image": "registry.connect.redhat.com/kong/kong-ingress-controller@sha256:be2201098cdd692a5e78db9c42255ca6df34f2cd8cb7989cfbf4e89d5ac2f85b",
          "name": "kong_controller"
        },
        {
          "digest": "sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "image": "k8s.gcr.io/ingress-nginx/kube-webhook-certgen@sha256:64d8c73dca984af206adf9d6d7e46aa550362b1d7a01f3a0a91b20cc67868660",
          "name": "certificate_config"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "635a4627cd1934b52ea34e89",
      "alm_examples": [
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Function",
          "metadata": {
            "name": "java-function-sample",
            "namespace": "default"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "input": {
              "topics": [
                "persistent://public/default/java-function-input-topic"
              ],
              "typeClassName": "java.lang.String"
            },
            "java": {
              "extraDependenciesDir": "random-dir/",
              "jar": "pulsar-functions-api-examples.jar",
              "jarLocation": "public/default/nlu-test-java-function"
            },
            "logTopic": "persistent://public/default/logging-function-logs",
            "maxPendingAsyncRequests": 1000,
            "maxReplicas": 5,
            "output": {
              "topic": "persistent://public/default/java-function-output-topic",
              "typeClassName": "java.lang.String"
            },
            "pod": {
              "annotations": {
                "managed-function": "true"
              },
              "env": [
                {
                  "name": "EXAMPLE_VARIABLE",
                  "value": "exampleValue"
                }
              ],
              "imagePullSecrets": [
                {
                  "name": "regcred"
                }
              ],
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30"
                  ],
                  "image": "busybox:1.28",
                  "name": "init-function"
                }
              ],
              "labels": {
                "locaction": "mtv"
              },
              "sidecars": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30000"
                  ],
                  "image": "busybox:1.28",
                  "name": "sidecar-function"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "cache-volume"
                }
              ]
            },
            "pulsar": {
              "authSecret": "test-auth",
              "pulsarConfig": "test-pulsar",
              "tlsSecret": "test-tls"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "secretsMap": {
              "name": {
                "key": "username",
                "path": "test-secret"
              },
              "pwd": {
                "key": "password",
                "path": "test-secret"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/cache",
                "name": "cache-volume"
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "FunctionMesh",
          "metadata": {
            "name": "functionmesh-sample"
          },
          "spec": {
            "functions": [
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/functionmesh-input-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex1"
                },
                "logTopic": "persistent://public/default/logging-function-log",
                "maxReplicas": 1,
                "name": "ex1",
                "output": {
                  "topic": "persistent://public/default/mid-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              },
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/mid-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex2"
                },
                "logTopic": "persistent://public/default/logging-function-logs",
                "maxReplicas": 1,
                "name": "ex2",
                "output": {
                  "topic": "persistent://public/default/functionmesh-output-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Sink",
          "metadata": {
            "name": "sink-sample"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.io.elasticsearch.ElasticSearchSink",
            "clusterName": "test-pulsar",
            "image": "streamnative/pulsar-io-elastic-search:2.10.0.0-rc10",
            "input": {
              "topics": [
                "persistent://public/default/input"
              ],
              "typeClassName": "[B"
            },
            "java": {
              "jar": "connectors/pulsar-io-elastic-search-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "pulsar": {
              "pulsarConfig": "test-sink"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sinkConfig": {
              "elasticSearchUrl": "http://quickstart-es-http.default.svc.cluster.local:9200",
              "indexName": "my_index",
              "password": "wJ757TmoXEd941kXm07Z2GW3",
              "typeName": "doc",
              "username": "elastic"
            }
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Source",
          "metadata": {
            "name": "source-sample"
          },
          "spec": {
            "className": "org.apache.pulsar.io.debezium.mongodb.DebeziumMongoDbSource",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "image": "streamnative/pulsar-io-debezium-mongodb:2.10.0.0-rc10",
            "java": {
              "jar": "connectors/pulsar-io-debezium-mongodb-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "output": {
              "producerConf": {
                "maxPendingMessages": 1000,
                "maxPendingMessagesAcrossPartitions": 50000,
                "useThreadLocalProducers": true
              },
              "topic": "persistent://public/default/destination",
              "typeClassName": "org.apache.pulsar.common.schema.KeyValue"
            },
            "pulsar": {
              "pulsarConfig": "test-source"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sourceConfig": {
              "database.whitelist": "inventory",
              "mongodb.hosts": "rs0/mongo-dbz-0.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-1.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-2.mongo.default.svc.cluster.local:27017",
              "mongodb.name": "dbserver1",
              "mongodb.password": "dbz",
              "mongodb.task.id": "1",
              "mongodb.user": "debezium",
              "pulsar.service.url": "pulsar://test-pulsar-broker.default.svc.cluster.local:6650"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/function-mesh-bundle@sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "bundle_path_digest": "sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-27T08:49:43.941000+00:00",
      "csv_description": "[Function Mesh](https://functionmesh.io/) is a serverless framework purpose-built for stream processing applications. It brings powerful event-streaming capabilities to your applications by orchestrating multiple [Pulsar Functions](http://pulsar.apache.org/docs/en/next/functions-overview/) and [Pulsar IO connectors](http://pulsar.apache.org/docs/en/next/io-overview/) for complex stream processing jobs on Kubernetes.\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Function Mesh Operator",
      "csv_metadata_description": "The Function Mesh Operator manages the Pulsar Functions and Connectors deployed on a Kubernetes cluster.",
      "csv_name": "function-mesh.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-27T08:49:43.941000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "function-mesh",
      "provided_apis": [
        {
          "group": "compute.functionmesh.io",
          "kind": "Function",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "FunctionMesh",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Sink",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Source",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh"
        },
        {
          "digest": "sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "image": "docker.cloudsmith.io/streamnative/mirrors/gcr.io/kubebuilder/kube-rbac-proxy@sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh-3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7-annotation"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "635a4647c471d401915b456a",
      "alm_examples": [
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Function",
          "metadata": {
            "name": "java-function-sample",
            "namespace": "default"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "input": {
              "topics": [
                "persistent://public/default/java-function-input-topic"
              ],
              "typeClassName": "java.lang.String"
            },
            "java": {
              "extraDependenciesDir": "random-dir/",
              "jar": "pulsar-functions-api-examples.jar",
              "jarLocation": "public/default/nlu-test-java-function"
            },
            "logTopic": "persistent://public/default/logging-function-logs",
            "maxPendingAsyncRequests": 1000,
            "maxReplicas": 5,
            "output": {
              "topic": "persistent://public/default/java-function-output-topic",
              "typeClassName": "java.lang.String"
            },
            "pod": {
              "annotations": {
                "managed-function": "true"
              },
              "env": [
                {
                  "name": "EXAMPLE_VARIABLE",
                  "value": "exampleValue"
                }
              ],
              "imagePullSecrets": [
                {
                  "name": "regcred"
                }
              ],
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30"
                  ],
                  "image": "busybox:1.28",
                  "name": "init-function"
                }
              ],
              "labels": {
                "locaction": "mtv"
              },
              "sidecars": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30000"
                  ],
                  "image": "busybox:1.28",
                  "name": "sidecar-function"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "cache-volume"
                }
              ]
            },
            "pulsar": {
              "authSecret": "test-auth",
              "pulsarConfig": "test-pulsar",
              "tlsSecret": "test-tls"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "secretsMap": {
              "name": {
                "key": "username",
                "path": "test-secret"
              },
              "pwd": {
                "key": "password",
                "path": "test-secret"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/cache",
                "name": "cache-volume"
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "FunctionMesh",
          "metadata": {
            "name": "functionmesh-sample"
          },
          "spec": {
            "functions": [
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/functionmesh-input-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex1"
                },
                "logTopic": "persistent://public/default/logging-function-log",
                "maxReplicas": 1,
                "name": "ex1",
                "output": {
                  "topic": "persistent://public/default/mid-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              },
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/mid-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex2"
                },
                "logTopic": "persistent://public/default/logging-function-logs",
                "maxReplicas": 1,
                "name": "ex2",
                "output": {
                  "topic": "persistent://public/default/functionmesh-output-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Sink",
          "metadata": {
            "name": "sink-sample"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.io.elasticsearch.ElasticSearchSink",
            "clusterName": "test-pulsar",
            "image": "streamnative/pulsar-io-elastic-search:2.10.0.0-rc10",
            "input": {
              "topics": [
                "persistent://public/default/input"
              ],
              "typeClassName": "[B"
            },
            "java": {
              "jar": "connectors/pulsar-io-elastic-search-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "pulsar": {
              "pulsarConfig": "test-sink"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sinkConfig": {
              "elasticSearchUrl": "http://quickstart-es-http.default.svc.cluster.local:9200",
              "indexName": "my_index",
              "password": "wJ757TmoXEd941kXm07Z2GW3",
              "typeName": "doc",
              "username": "elastic"
            }
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Source",
          "metadata": {
            "name": "source-sample"
          },
          "spec": {
            "className": "org.apache.pulsar.io.debezium.mongodb.DebeziumMongoDbSource",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "image": "streamnative/pulsar-io-debezium-mongodb:2.10.0.0-rc10",
            "java": {
              "jar": "connectors/pulsar-io-debezium-mongodb-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "output": {
              "producerConf": {
                "maxPendingMessages": 1000,
                "maxPendingMessagesAcrossPartitions": 50000,
                "useThreadLocalProducers": true
              },
              "topic": "persistent://public/default/destination",
              "typeClassName": "org.apache.pulsar.common.schema.KeyValue"
            },
            "pulsar": {
              "pulsarConfig": "test-source"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sourceConfig": {
              "database.whitelist": "inventory",
              "mongodb.hosts": "rs0/mongo-dbz-0.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-1.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-2.mongo.default.svc.cluster.local:27017",
              "mongodb.name": "dbserver1",
              "mongodb.password": "dbz",
              "mongodb.task.id": "1",
              "mongodb.user": "debezium",
              "pulsar.service.url": "pulsar://test-pulsar-broker.default.svc.cluster.local:6650"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/function-mesh-bundle@sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "bundle_path_digest": "sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-27T08:50:15.305000+00:00",
      "csv_description": "[Function Mesh](https://functionmesh.io/) is a serverless framework purpose-built for stream processing applications. It brings powerful event-streaming capabilities to your applications by orchestrating multiple [Pulsar Functions](http://pulsar.apache.org/docs/en/next/functions-overview/) and [Pulsar IO connectors](http://pulsar.apache.org/docs/en/next/io-overview/) for complex stream processing jobs on Kubernetes.\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Function Mesh Operator",
      "csv_metadata_description": "The Function Mesh Operator manages the Pulsar Functions and Connectors deployed on a Kubernetes cluster.",
      "csv_name": "function-mesh.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-27T08:50:15.305000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "function-mesh",
      "provided_apis": [
        {
          "group": "compute.functionmesh.io",
          "kind": "Source",
          "plural": "sources",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "FunctionMesh",
          "plural": "functionmeshes",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Function",
          "plural": "functions",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Sink",
          "plural": "sinks",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh"
        },
        {
          "digest": "sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "image": "docker.cloudsmith.io/streamnative/mirrors/gcr.io/kubebuilder/kube-rbac-proxy@sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh-3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7-annotation"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "635a468006413a77dfafaa7e",
      "alm_examples": [
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Function",
          "metadata": {
            "name": "java-function-sample",
            "namespace": "default"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "input": {
              "topics": [
                "persistent://public/default/java-function-input-topic"
              ],
              "typeClassName": "java.lang.String"
            },
            "java": {
              "extraDependenciesDir": "random-dir/",
              "jar": "pulsar-functions-api-examples.jar",
              "jarLocation": "public/default/nlu-test-java-function"
            },
            "logTopic": "persistent://public/default/logging-function-logs",
            "maxPendingAsyncRequests": 1000,
            "maxReplicas": 5,
            "output": {
              "topic": "persistent://public/default/java-function-output-topic",
              "typeClassName": "java.lang.String"
            },
            "pod": {
              "annotations": {
                "managed-function": "true"
              },
              "env": [
                {
                  "name": "EXAMPLE_VARIABLE",
                  "value": "exampleValue"
                }
              ],
              "imagePullSecrets": [
                {
                  "name": "regcred"
                }
              ],
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30"
                  ],
                  "image": "busybox:1.28",
                  "name": "init-function"
                }
              ],
              "labels": {
                "locaction": "mtv"
              },
              "sidecars": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30000"
                  ],
                  "image": "busybox:1.28",
                  "name": "sidecar-function"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "cache-volume"
                }
              ]
            },
            "pulsar": {
              "authSecret": "test-auth",
              "pulsarConfig": "test-pulsar",
              "tlsSecret": "test-tls"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "secretsMap": {
              "name": {
                "key": "username",
                "path": "test-secret"
              },
              "pwd": {
                "key": "password",
                "path": "test-secret"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/cache",
                "name": "cache-volume"
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "FunctionMesh",
          "metadata": {
            "name": "functionmesh-sample"
          },
          "spec": {
            "functions": [
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/functionmesh-input-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex1"
                },
                "logTopic": "persistent://public/default/logging-function-log",
                "maxReplicas": 1,
                "name": "ex1",
                "output": {
                  "topic": "persistent://public/default/mid-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              },
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/mid-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex2"
                },
                "logTopic": "persistent://public/default/logging-function-logs",
                "maxReplicas": 1,
                "name": "ex2",
                "output": {
                  "topic": "persistent://public/default/functionmesh-output-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Sink",
          "metadata": {
            "name": "sink-sample"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.io.elasticsearch.ElasticSearchSink",
            "clusterName": "test-pulsar",
            "image": "streamnative/pulsar-io-elastic-search:2.10.0.0-rc10",
            "input": {
              "topics": [
                "persistent://public/default/input"
              ],
              "typeClassName": "[B"
            },
            "java": {
              "jar": "connectors/pulsar-io-elastic-search-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "pulsar": {
              "pulsarConfig": "test-sink"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sinkConfig": {
              "elasticSearchUrl": "http://quickstart-es-http.default.svc.cluster.local:9200",
              "indexName": "my_index",
              "password": "wJ757TmoXEd941kXm07Z2GW3",
              "typeName": "doc",
              "username": "elastic"
            }
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Source",
          "metadata": {
            "name": "source-sample"
          },
          "spec": {
            "className": "org.apache.pulsar.io.debezium.mongodb.DebeziumMongoDbSource",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "image": "streamnative/pulsar-io-debezium-mongodb:2.10.0.0-rc10",
            "java": {
              "jar": "connectors/pulsar-io-debezium-mongodb-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "output": {
              "producerConf": {
                "maxPendingMessages": 1000,
                "maxPendingMessagesAcrossPartitions": 50000,
                "useThreadLocalProducers": true
              },
              "topic": "persistent://public/default/destination",
              "typeClassName": "org.apache.pulsar.common.schema.KeyValue"
            },
            "pulsar": {
              "pulsarConfig": "test-source"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sourceConfig": {
              "database.whitelist": "inventory",
              "mongodb.hosts": "rs0/mongo-dbz-0.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-1.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-2.mongo.default.svc.cluster.local:27017",
              "mongodb.name": "dbserver1",
              "mongodb.password": "dbz",
              "mongodb.task.id": "1",
              "mongodb.user": "debezium",
              "pulsar.service.url": "pulsar://test-pulsar-broker.default.svc.cluster.local:6650"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/function-mesh-bundle@sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "bundle_path_digest": "sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-27T08:51:12.547000+00:00",
      "csv_description": "[Function Mesh](https://functionmesh.io/) is a serverless framework purpose-built for stream processing applications. It brings powerful event-streaming capabilities to your applications by orchestrating multiple [Pulsar Functions](http://pulsar.apache.org/docs/en/next/functions-overview/) and [Pulsar IO connectors](http://pulsar.apache.org/docs/en/next/io-overview/) for complex stream processing jobs on Kubernetes.\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Function Mesh Operator",
      "csv_metadata_description": "The Function Mesh Operator manages the Pulsar Functions and Connectors deployed on a Kubernetes cluster.",
      "csv_name": "function-mesh.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-27T08:51:12.547000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "function-mesh",
      "provided_apis": [
        {
          "group": "compute.functionmesh.io",
          "kind": "FunctionMesh",
          "plural": "functionmeshes",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Function",
          "plural": "functions",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Sink",
          "plural": "sinks",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Source",
          "plural": "sources",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh"
        },
        {
          "digest": "sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "image": "docker.cloudsmith.io/streamnative/mirrors/gcr.io/kubebuilder/kube-rbac-proxy@sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh-3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7-annotation"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "635a46d4cd1934b52ea34f26",
      "alm_examples": [
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Function",
          "metadata": {
            "name": "java-function-sample",
            "namespace": "default"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "input": {
              "topics": [
                "persistent://public/default/java-function-input-topic"
              ],
              "typeClassName": "java.lang.String"
            },
            "java": {
              "extraDependenciesDir": "random-dir/",
              "jar": "pulsar-functions-api-examples.jar",
              "jarLocation": "public/default/nlu-test-java-function"
            },
            "logTopic": "persistent://public/default/logging-function-logs",
            "maxPendingAsyncRequests": 1000,
            "maxReplicas": 5,
            "output": {
              "topic": "persistent://public/default/java-function-output-topic",
              "typeClassName": "java.lang.String"
            },
            "pod": {
              "annotations": {
                "managed-function": "true"
              },
              "env": [
                {
                  "name": "EXAMPLE_VARIABLE",
                  "value": "exampleValue"
                }
              ],
              "imagePullSecrets": [
                {
                  "name": "regcred"
                }
              ],
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30"
                  ],
                  "image": "busybox:1.28",
                  "name": "init-function"
                }
              ],
              "labels": {
                "locaction": "mtv"
              },
              "sidecars": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30000"
                  ],
                  "image": "busybox:1.28",
                  "name": "sidecar-function"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "cache-volume"
                }
              ]
            },
            "pulsar": {
              "authSecret": "test-auth",
              "pulsarConfig": "test-pulsar",
              "tlsSecret": "test-tls"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "secretsMap": {
              "name": {
                "key": "username",
                "path": "test-secret"
              },
              "pwd": {
                "key": "password",
                "path": "test-secret"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/cache",
                "name": "cache-volume"
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "FunctionMesh",
          "metadata": {
            "name": "functionmesh-sample"
          },
          "spec": {
            "functions": [
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/functionmesh-input-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex1"
                },
                "logTopic": "persistent://public/default/logging-function-log",
                "maxReplicas": 1,
                "name": "ex1",
                "output": {
                  "topic": "persistent://public/default/mid-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              },
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/mid-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex2"
                },
                "logTopic": "persistent://public/default/logging-function-logs",
                "maxReplicas": 1,
                "name": "ex2",
                "output": {
                  "topic": "persistent://public/default/functionmesh-output-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Sink",
          "metadata": {
            "name": "sink-sample"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.io.elasticsearch.ElasticSearchSink",
            "clusterName": "test-pulsar",
            "image": "streamnative/pulsar-io-elastic-search:2.10.0.0-rc10",
            "input": {
              "topics": [
                "persistent://public/default/input"
              ],
              "typeClassName": "[B"
            },
            "java": {
              "jar": "connectors/pulsar-io-elastic-search-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "pulsar": {
              "pulsarConfig": "test-sink"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sinkConfig": {
              "elasticSearchUrl": "http://quickstart-es-http.default.svc.cluster.local:9200",
              "indexName": "my_index",
              "password": "wJ757TmoXEd941kXm07Z2GW3",
              "typeName": "doc",
              "username": "elastic"
            }
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Source",
          "metadata": {
            "name": "source-sample"
          },
          "spec": {
            "className": "org.apache.pulsar.io.debezium.mongodb.DebeziumMongoDbSource",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "image": "streamnative/pulsar-io-debezium-mongodb:2.10.0.0-rc10",
            "java": {
              "jar": "connectors/pulsar-io-debezium-mongodb-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "output": {
              "producerConf": {
                "maxPendingMessages": 1000,
                "maxPendingMessagesAcrossPartitions": 50000,
                "useThreadLocalProducers": true
              },
              "topic": "persistent://public/default/destination",
              "typeClassName": "org.apache.pulsar.common.schema.KeyValue"
            },
            "pulsar": {
              "pulsarConfig": "test-source"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sourceConfig": {
              "database.whitelist": "inventory",
              "mongodb.hosts": "rs0/mongo-dbz-0.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-1.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-2.mongo.default.svc.cluster.local:27017",
              "mongodb.name": "dbserver1",
              "mongodb.password": "dbz",
              "mongodb.task.id": "1",
              "mongodb.user": "debezium",
              "pulsar.service.url": "pulsar://test-pulsar-broker.default.svc.cluster.local:6650"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/function-mesh-bundle@sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "bundle_path_digest": "sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-27T08:52:36.602000+00:00",
      "csv_description": "[Function Mesh](https://functionmesh.io/) is a serverless framework purpose-built for stream processing applications. It brings powerful event-streaming capabilities to your applications by orchestrating multiple [Pulsar Functions](http://pulsar.apache.org/docs/en/next/functions-overview/) and [Pulsar IO connectors](http://pulsar.apache.org/docs/en/next/io-overview/) for complex stream processing jobs on Kubernetes.\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Function Mesh Operator",
      "csv_metadata_description": "The Function Mesh Operator manages the Pulsar Functions and Connectors deployed on a Kubernetes cluster.",
      "csv_name": "function-mesh.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-27T08:52:36.602000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "function-mesh",
      "provided_apis": [
        {
          "group": "compute.functionmesh.io",
          "kind": "Function",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "FunctionMesh",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Sink",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Source",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh"
        },
        {
          "digest": "sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "image": "docker.cloudsmith.io/streamnative/mirrors/gcr.io/kubebuilder/kube-rbac-proxy@sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh-3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7-annotation"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "635a4755c471d401915b467a",
      "alm_examples": [
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Function",
          "metadata": {
            "name": "java-function-sample",
            "namespace": "default"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "input": {
              "topics": [
                "persistent://public/default/java-function-input-topic"
              ],
              "typeClassName": "java.lang.String"
            },
            "java": {
              "extraDependenciesDir": "random-dir/",
              "jar": "pulsar-functions-api-examples.jar",
              "jarLocation": "public/default/nlu-test-java-function"
            },
            "logTopic": "persistent://public/default/logging-function-logs",
            "maxPendingAsyncRequests": 1000,
            "maxReplicas": 5,
            "output": {
              "topic": "persistent://public/default/java-function-output-topic",
              "typeClassName": "java.lang.String"
            },
            "pod": {
              "annotations": {
                "managed-function": "true"
              },
              "env": [
                {
                  "name": "EXAMPLE_VARIABLE",
                  "value": "exampleValue"
                }
              ],
              "imagePullSecrets": [
                {
                  "name": "regcred"
                }
              ],
              "initContainers": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30"
                  ],
                  "image": "busybox:1.28",
                  "name": "init-function"
                }
              ],
              "labels": {
                "locaction": "mtv"
              },
              "sidecars": [
                {
                  "command": [
                    "sh",
                    "-c",
                    "echo The app is running! && sleep 30000"
                  ],
                  "image": "busybox:1.28",
                  "name": "sidecar-function"
                }
              ],
              "volumes": [
                {
                  "emptyDir": {},
                  "name": "cache-volume"
                }
              ]
            },
            "pulsar": {
              "authSecret": "test-auth",
              "pulsarConfig": "test-pulsar",
              "tlsSecret": "test-tls"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "secretsMap": {
              "name": {
                "key": "username",
                "path": "test-secret"
              },
              "pwd": {
                "key": "password",
                "path": "test-secret"
              }
            },
            "volumeMounts": [
              {
                "mountPath": "/cache",
                "name": "cache-volume"
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "FunctionMesh",
          "metadata": {
            "name": "functionmesh-sample"
          },
          "spec": {
            "functions": [
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/functionmesh-input-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex1"
                },
                "logTopic": "persistent://public/default/logging-function-log",
                "maxReplicas": 1,
                "name": "ex1",
                "output": {
                  "topic": "persistent://public/default/mid-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              },
              {
                "autoAck": true,
                "className": "org.apache.pulsar.functions.api.examples.ExclamationFunction",
                "clusterName": "test-pulsar",
                "forwardSourceMessageProperty": true,
                "input": {
                  "topics": [
                    "persistent://public/default/mid-topic"
                  ],
                  "typeClassName": "java.lang.String"
                },
                "java": {
                  "jar": "pulsar-functions-api-examples.jar",
                  "jarLocation": "public/default/nlu-test-functionmesh-ex2"
                },
                "logTopic": "persistent://public/default/logging-function-logs",
                "maxReplicas": 1,
                "name": "ex2",
                "output": {
                  "topic": "persistent://public/default/functionmesh-output-topic",
                  "typeClassName": "java.lang.String"
                },
                "pulsar": {
                  "pulsarConfig": "mesh-test-pulsar"
                },
                "replicas": 1,
                "resources": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "1.1G"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "1G"
                  }
                }
              }
            ]
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Sink",
          "metadata": {
            "name": "sink-sample"
          },
          "spec": {
            "autoAck": true,
            "className": "org.apache.pulsar.io.elasticsearch.ElasticSearchSink",
            "clusterName": "test-pulsar",
            "image": "streamnative/pulsar-io-elastic-search:2.10.0.0-rc10",
            "input": {
              "topics": [
                "persistent://public/default/input"
              ],
              "typeClassName": "[B"
            },
            "java": {
              "jar": "connectors/pulsar-io-elastic-search-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "pulsar": {
              "pulsarConfig": "test-sink"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sinkConfig": {
              "elasticSearchUrl": "http://quickstart-es-http.default.svc.cluster.local:9200",
              "indexName": "my_index",
              "password": "wJ757TmoXEd941kXm07Z2GW3",
              "typeName": "doc",
              "username": "elastic"
            }
          }
        },
        {
          "api_version": "compute.functionmesh.io/v1alpha1",
          "kind": "Source",
          "metadata": {
            "name": "source-sample"
          },
          "spec": {
            "className": "org.apache.pulsar.io.debezium.mongodb.DebeziumMongoDbSource",
            "clusterName": "test-pulsar",
            "forwardSourceMessageProperty": true,
            "image": "streamnative/pulsar-io-debezium-mongodb:2.10.0.0-rc10",
            "java": {
              "jar": "connectors/pulsar-io-debezium-mongodb-2.10.0.0-rc10.nar",
              "jarLocation": ""
            },
            "maxReplicas": 1,
            "output": {
              "producerConf": {
                "maxPendingMessages": 1000,
                "maxPendingMessagesAcrossPartitions": 50000,
                "useThreadLocalProducers": true
              },
              "topic": "persistent://public/default/destination",
              "typeClassName": "org.apache.pulsar.common.schema.KeyValue"
            },
            "pulsar": {
              "pulsarConfig": "test-source"
            },
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": "0.2",
                "memory": "1.1G"
              },
              "requests": {
                "cpu": "0.1",
                "memory": "1G"
              }
            },
            "sourceConfig": {
              "database.whitelist": "inventory",
              "mongodb.hosts": "rs0/mongo-dbz-0.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-1.mongo.default.svc.cluster.local:27017,rs0/mongo-dbz-2.mongo.default.svc.cluster.local:27017",
              "mongodb.name": "dbserver1",
              "mongodb.password": "dbz",
              "mongodb.task.id": "1",
              "mongodb.user": "debezium",
              "pulsar.service.url": "pulsar://test-pulsar-broker.default.svc.cluster.local:6650"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/streamnative/function-mesh-bundle@sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "bundle_path_digest": "sha256:e4377187c20a70d768a253bc0794f3152aa6fcee22ddbf2fc88f45756e9681fe",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-27T08:54:45.095000+00:00",
      "csv_description": "[Function Mesh](https://functionmesh.io/) is a serverless framework purpose-built for stream processing applications. It brings powerful event-streaming capabilities to your applications by orchestrating multiple [Pulsar Functions](http://pulsar.apache.org/docs/en/next/functions-overview/) and [Pulsar IO connectors](http://pulsar.apache.org/docs/en/next/io-overview/) for complex stream processing jobs on Kubernetes.\nPrerequisites:\n- Install cert-manager operator first.\n",
      "csv_display_name": "Function Mesh Operator",
      "csv_metadata_description": "The Function Mesh Operator manages the Pulsar Functions and Connectors deployed on a Kubernetes cluster.",
      "csv_name": "function-mesh.v0.7.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-27T08:54:45.095000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "function-mesh",
      "provided_apis": [
        {
          "group": "compute.functionmesh.io",
          "kind": "FunctionMesh",
          "plural": "functionmeshes",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Function",
          "plural": "functions",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Sink",
          "plural": "sinks",
          "version": "v1alpha1"
        },
        {
          "group": "compute.functionmesh.io",
          "kind": "Source",
          "plural": "sources",
          "version": "v1alpha1"
        }
      ],
      "provider": "StreamNative",
      "related_images": [
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh"
        },
        {
          "digest": "sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "image": "docker.cloudsmith.io/streamnative/mirrors/gcr.io/kubebuilder/kube-rbac-proxy@sha256:67ecb332573384515406ebd71816781366b70adb0eb66345e5980e92603373e1",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "function-mesh-3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7-annotation"
        },
        {
          "digest": "sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "image": "quay.io/streamnativeio/function-mesh@sha256:3e13e5cc3ac4d7387ee0adc02cb5183aad6cf2301f76ab230482609c4da1c0b7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": "<0.7.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.0",
      "version_original": "0.7.0"
    },
    {
      "_id": "635b1c47e33b066156ea6846",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "172.31.64.153",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "your-password-here",
              "username": "your-username-here"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.2.0-rc1",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:69f35720fc37530a588617f4d1762267b76b1b3fb87d1bbdef5ac9339a7860fe",
      "bundle_path_digest": "sha256:69f35720fc37530a588617f4d1762267b76b1b3fb87d1bbdef5ac9339a7860fe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-28T00:03:19.569000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.2.0-rc1b",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-28T00:03:19.569000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
          "name": "infinibox-csidriver-certified-2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:802c9ab4dcf95f65b973e4047a9d5a6f74be03563cb1c8258b0d4afbfb277d0b",
          "image": "quay.io/infinidat/infinibox-operator@sha256:802c9ab4dcf95f65b973e4047a9d5a6f74be03563cb1c8258b0d4afbfb277d0b",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.0-rc1b",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.0-rc1b",
      "version_original": "2.2.0-rc1b"
    },
    {
      "_id": "635b20c8e33b066156ea68ca",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "172.31.64.153",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "your-password-here",
              "username": "your-username-here"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.2.0-rc1",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:69f35720fc37530a588617f4d1762267b76b1b3fb87d1bbdef5ac9339a7860fe",
      "bundle_path_digest": "sha256:69f35720fc37530a588617f4d1762267b76b1b3fb87d1bbdef5ac9339a7860fe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-28T00:22:32.373000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.2.0-rc1b",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-28T00:22:32.373000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
          "name": "infinibox-csidriver-certified-2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:802c9ab4dcf95f65b973e4047a9d5a6f74be03563cb1c8258b0d4afbfb277d0b",
          "image": "quay.io/infinidat/infinibox-operator@sha256:802c9ab4dcf95f65b973e4047a9d5a6f74be03563cb1c8258b0d4afbfb277d0b",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.0-rc1b",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.2.0-rc1b",
      "version_original": "2.2.0-rc1b"
    },
    {
      "_id": "635b20fef642935993b74fac",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "172.31.64.153",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "your-password-here",
              "username": "your-username-here"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.2.0-rc1",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:69f35720fc37530a588617f4d1762267b76b1b3fb87d1bbdef5ac9339a7860fe",
      "bundle_path_digest": "sha256:69f35720fc37530a588617f4d1762267b76b1b3fb87d1bbdef5ac9339a7860fe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-28T00:23:26.952000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.2.0-rc1b",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-28T00:23:26.952000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "version": "v1beta1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
          "name": "infinibox-csidriver-certified-2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:802c9ab4dcf95f65b973e4047a9d5a6f74be03563cb1c8258b0d4afbfb277d0b",
          "image": "quay.io/infinidat/infinibox-operator@sha256:802c9ab4dcf95f65b973e4047a9d5a6f74be03563cb1c8258b0d4afbfb277d0b",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.0-rc1b",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "2.2.0-rc1b",
      "version_original": "2.2.0-rc1b"
    },
    {
      "_id": "635b212cc471d401915c2e0e",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "172.31.64.153",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "your-password-here",
              "username": "your-username-here"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.2.0-rc1",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:69f35720fc37530a588617f4d1762267b76b1b3fb87d1bbdef5ac9339a7860fe",
      "bundle_path_digest": "sha256:69f35720fc37530a588617f4d1762267b76b1b3fb87d1bbdef5ac9339a7860fe",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-10-28T00:24:12.549000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.2.0-rc1b",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-10-28T00:24:12.549000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc",
          "name": "infinibox-csidriver-certified-2538e771d5cd5ced046672fef1e8a97749b11b2539038b4426e32b20707d64dc-annotation"
        },
        {
          "digest": "sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:d99a8d144816b951a67648c12c0b988936ccd25cf3754f3cd85ab8c01592248f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:802c9ab4dcf95f65b973e4047a9d5a6f74be03563cb1c8258b0d4afbfb277d0b",
          "image": "quay.io/infinidat/infinibox-operator@sha256:802c9ab4dcf95f65b973e4047a9d5a6f74be03563cb1c8258b0d4afbfb277d0b",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.2.0-rc1b",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.2.0-rc1b",
      "version_original": "2.2.0-rc1b"
    },
    {
      "_id": "6360e1c57140d313bbc5c5b3",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "bundle_path_digest": "sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-01T09:07:17.561000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-01T09:07:17.561000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.7.3",
      "version_original": "0.7.3"
    },
    {
      "_id": "6360e236853374222c792b8d",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "bundle_path_digest": "sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-01T09:09:10.168000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-01T09:09:10.168000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.7.3",
      "version_original": "0.7.3"
    },
    {
      "_id": "6360e27fd2c20c6dd75bd7af",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "bundle_path_digest": "sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-01T09:10:23.791000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-01T09:10:23.791000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "version": "v1beta2"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.7.3",
      "version_original": "0.7.3"
    },
    {
      "_id": "6360e2a180c6e284c5c8be7f",
      "alm_examples": [
        {
          "api_version": "tenantoperator.stakater.com/v1beta1",
          "kind": "Tenant",
          "metadata": {
            "name": "bluesky"
          },
          "spec": {
            "editors": {
              "groups": [
                "alpha"
              ],
              "users": [
                "john@aurora.org"
              ]
            },
            "namespaces": [
              "dev",
              "build",
              "prod"
            ],
            "owners": {
              "users": [
                "anna@aurora.org",
                "anthony@aurora.org"
              ]
            },
            "quota": "small"
          }
        },
        {
          "api_version": "tenantoperator.stakater.com/v1alpha1",
          "kind": "IntegrationConfig",
          "metadata": {
            "name": "tenant-operator-config",
            "namespace": "multi-tenant-operator"
          },
          "spec": {
            "argocd": {
              "clusterResourceWhitelist": [
                {
                  "group": "tronador.stakater.com",
                  "kind": "EnvironmentProvisioner"
                }
              ],
              "namespace": "openshift-operators",
              "namespaceResourceBlacklist": [
                {
                  "group": "",
                  "kind": "ResourceQuota"
                }
              ]
            },
            "openshift": {
              "clusterAdminGroups": [
                "cluster-admins"
              ],
              "group": {
                "labels": {
                  "role": "customer-reader"
                }
              },
              "namespaceAccessPolicy": {
                "deny": {
                  "privilegedNamespaces": {
                    "groups": [
                      "cluster-admins"
                    ],
                    "users": [
                      "system:serviceaccount:openshift-argocd:argocd-application-controller",
                      "adam@stakater.com"
                    ]
                  }
                }
              },
              "privilegedNamespaces": [
                "default",
                "^openshift-*",
                "^kube-*"
              ],
              "privilegedServiceAccounts": [
                "^system:serviceaccount:openshift-*",
                "^system:serviceaccount:kube-*"
              ],
              "project": {
                "annotations": {
                  "openshift.io/node-selector": "node-role.kubernetes.io/worker="
                },
                "labels": {
                  "stakater.com/workload-monitoring": "true"
                }
              },
              "sandbox": {
                "labels": {
                  "stakater.com/kind": "sandbox"
                }
              }
            },
            "rhsso": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "auth-secrets",
                  "namespace": "openshift-auth"
                },
                "url": "https://iam-keycloak-auth.apps.prod.abcdefghi.kubeapp.cloud/"
              }
            },
            "vault": {
              "enabled": true,
              "endpoint": {
                "secretReference": {
                  "name": "vault-root-token",
                  "namespace": "vault"
                },
                "url": "https://vault.apps.prod.abcdefghi.kubeapp.cloud/"
              },
              "sso": {
                "accessorID": "<ACCESSOR_ID_TOKEN>",
                "clientName": "vault"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/stakater/tenant-operator-0@sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "bundle_path_digest": "sha256:28e360fc4bfdc368cdbe3d755343f0a670c8e81352e3895b0ebf31a064ebdd29",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-01T09:10:57.174000+00:00",
      "csv_description": "tenant operator",
      "csv_display_name": "tenant-operator",
      "csv_metadata_description": "",
      "csv_name": "tenant-operator.v0.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-01T09:10:57.174000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tenant-operator",
      "provided_apis": [
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateGroupInstance",
          "plural": "templategroupinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "TemplateInstance",
          "plural": "templateinstances",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Template",
          "plural": "templates",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "ResourceSupervisor",
          "plural": "resourcesupervisors",
          "version": "v1beta1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Tenant",
          "plural": "tenants",
          "version": "v1beta2"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "IntegrationConfig",
          "plural": "integrationconfigs",
          "version": "v1alpha1"
        },
        {
          "group": "tenantoperator.stakater.com",
          "kind": "Quota",
          "plural": "quotas",
          "version": "v1beta1"
        }
      ],
      "provider": "stakater",
      "related_images": [
        {
          "digest": "sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c27a7c01e5968aff16b6bb6670423f992d1a1de1a16e7e260d12908d3322431c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "image": "registry.connect.redhat.com/stakater/tenant-operator@sha256:9ad0606e31c0cff08f9dce812d3757d5dc60a2f1e1df5b0f72f3e34b014bbfc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.7.3",
      "version_original": "0.7.3"
    },
    {
      "_id": "636124dc0247823f05dec24c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/novisystems/fusionanalytics-operator@sha256:b2dc990d6b92d30ae8a96ca067a81eea41f866a3fe10c8aa3dff7a7c4771779a",
      "bundle_path_digest": "sha256:b2dc990d6b92d30ae8a96ca067a81eea41f866a3fe10c8aa3dff7a7c4771779a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-01T13:53:32.180000+00:00",
      "csv_description": "Installs and manages an installation for NoviAnalytics tool",
      "csv_display_name": "FusionAnalytics Operator",
      "csv_metadata_description": "",
      "csv_name": "fusion-analytics-operator.v0.0.45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-01T13:53:32.180000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "fusion-analytics-operator",
      "provided_apis": [
        {
          "group": "novi.systems",
          "kind": "NoviAnalytics",
          "plural": "novianalytics",
          "version": "v1"
        }
      ],
      "provider": "NoviSystems Inc.",
      "related_images": [
        {
          "digest": "sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b9927224d6f1f9904c2a805e8f57967cbe92e4a6cdfc5e20c04d150a6289ef9c",
          "image": "quay.io/novisystems/novianalytics-operator-x86_64@sha256:b9927224d6f1f9904c2a805e8f57967cbe92e4a6cdfc5e20c04d150a6289ef9c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.45",
      "version_original": "0.0.45"
    },
    {
      "_id": "636125537140d313bbc60460",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/novisystems/fusionanalytics-operator@sha256:b2dc990d6b92d30ae8a96ca067a81eea41f866a3fe10c8aa3dff7a7c4771779a",
      "bundle_path_digest": "sha256:b2dc990d6b92d30ae8a96ca067a81eea41f866a3fe10c8aa3dff7a7c4771779a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-01T13:55:31.205000+00:00",
      "csv_description": "Installs and manages an installation for NoviAnalytics tool",
      "csv_display_name": "FusionAnalytics Operator",
      "csv_metadata_description": "",
      "csv_name": "fusion-analytics-operator.v0.0.45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-01T13:55:31.205000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "fusion-analytics-operator",
      "provided_apis": [
        {
          "group": "novi.systems",
          "kind": "NoviAnalytics",
          "version": "v1"
        }
      ],
      "provider": "NoviSystems Inc.",
      "related_images": [
        {
          "digest": "sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b9927224d6f1f9904c2a805e8f57967cbe92e4a6cdfc5e20c04d150a6289ef9c",
          "image": "quay.io/novisystems/novianalytics-operator-x86_64@sha256:b9927224d6f1f9904c2a805e8f57967cbe92e4a6cdfc5e20c04d150a6289ef9c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.0.45",
      "version_original": "0.0.45"
    },
    {
      "_id": "636125fc185963f8d341b98e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/novisystems/fusionanalytics-operator@sha256:b2dc990d6b92d30ae8a96ca067a81eea41f866a3fe10c8aa3dff7a7c4771779a",
      "bundle_path_digest": "sha256:b2dc990d6b92d30ae8a96ca067a81eea41f866a3fe10c8aa3dff7a7c4771779a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-01T13:58:20.772000+00:00",
      "csv_description": "Installs and manages an installation for NoviAnalytics tool",
      "csv_display_name": "FusionAnalytics Operator",
      "csv_metadata_description": "",
      "csv_name": "fusion-analytics-operator.v0.0.45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-01T13:58:20.772000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "fusion-analytics-operator",
      "provided_apis": [
        {
          "group": "novi.systems",
          "kind": "NoviAnalytics",
          "plural": "novianalytics",
          "version": "v1"
        }
      ],
      "provider": "NoviSystems Inc.",
      "related_images": [
        {
          "digest": "sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b9927224d6f1f9904c2a805e8f57967cbe92e4a6cdfc5e20c04d150a6289ef9c",
          "image": "quay.io/novisystems/novianalytics-operator-x86_64@sha256:b9927224d6f1f9904c2a805e8f57967cbe92e4a6cdfc5e20c04d150a6289ef9c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.45",
      "version_original": "0.0.45"
    },
    {
      "_id": "63612642d2c20c6dd75c16c7",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/novisystems/fusionanalytics-operator@sha256:b2dc990d6b92d30ae8a96ca067a81eea41f866a3fe10c8aa3dff7a7c4771779a",
      "bundle_path_digest": "sha256:b2dc990d6b92d30ae8a96ca067a81eea41f866a3fe10c8aa3dff7a7c4771779a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-01T13:59:30.155000+00:00",
      "csv_description": "Installs and manages an installation for NoviAnalytics tool",
      "csv_display_name": "FusionAnalytics Operator",
      "csv_metadata_description": "",
      "csv_name": "fusion-analytics-operator.v0.0.45",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-01T13:59:30.155000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "fusion-analytics-operator",
      "provided_apis": [
        {
          "group": "novi.systems",
          "kind": "NoviAnalytics",
          "plural": "novianalytics",
          "version": "v1"
        }
      ],
      "provider": "NoviSystems Inc.",
      "related_images": [
        {
          "digest": "sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:0df4ae70e3bd0feffcec8f5cdb428f4abe666b667af991269ec5cb0bbda65869",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b9927224d6f1f9904c2a805e8f57967cbe92e4a6cdfc5e20c04d150a6289ef9c",
          "image": "quay.io/novisystems/novianalytics-operator-x86_64@sha256:b9927224d6f1f9904c2a805e8f57967cbe92e4a6cdfc5e20c04d150a6289ef9c",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.45",
      "version_original": "0.0.45"
    },
    {
      "_id": "63621ba49d532a3a67a672d2",
      "alm_examples": [
        {
          "api_version": "vlic.veritas.com/v1",
          "kind": "License",
          "metadata": {
            "name": "license-dev"
          },
          "spec": {
            "licenseEdition": "Developer"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator-bundle@sha256:11ce1c35f9c3d9b5ef9539b4402eb8358df843b29ffd94af7a453e5d765e4767",
      "bundle_path_digest": "sha256:11ce1c35f9c3d9b5ef9539b4402eb8358df843b29ffd94af7a453e5d765e4767",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T07:26:28.594000+00:00",
      "csv_description": "InfoScale\u2122 Licensing Operator provides license to use Veritas Products.",
      "csv_display_name": "InfoScale\u2122 Licensing Operator",
      "csv_metadata_description": "InfoScale\u2122 Licensing Operator manages the lifecycle of the Licensing for InfoScale\u2122 cluster",
      "csv_name": "infoscale-licensing-operator.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T07:26:28.594000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "infoscale-licensing-operator",
      "provided_apis": [
        {
          "group": "vlic.veritas.com",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "manager"
        },
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "infoscale-licensing-operator-e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "63621bf2b13b444bfbce3c27",
      "alm_examples": [
        {
          "api_version": "vlic.veritas.com/v1",
          "kind": "License",
          "metadata": {
            "name": "license-dev"
          },
          "spec": {
            "licenseEdition": "Developer"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator-bundle@sha256:11ce1c35f9c3d9b5ef9539b4402eb8358df843b29ffd94af7a453e5d765e4767",
      "bundle_path_digest": "sha256:11ce1c35f9c3d9b5ef9539b4402eb8358df843b29ffd94af7a453e5d765e4767",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T07:27:46.309000+00:00",
      "csv_description": "InfoScale\u2122 Licensing Operator provides license to use Veritas Products.",
      "csv_display_name": "InfoScale\u2122 Licensing Operator",
      "csv_metadata_description": "InfoScale\u2122 Licensing Operator manages the lifecycle of the Licensing for InfoScale\u2122 cluster",
      "csv_name": "infoscale-licensing-operator.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T07:27:46.309000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-licensing-operator",
      "provided_apis": [
        {
          "group": "vlic.veritas.com",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "manager"
        },
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "infoscale-licensing-operator-e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "63621db8755c2f036615b67c",
      "alm_examples": [
        {
          "api_version": "vlic.veritas.com/v1",
          "kind": "License",
          "metadata": {
            "name": "license-dev"
          },
          "spec": {
            "licenseEdition": "Developer"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator-bundle@sha256:11ce1c35f9c3d9b5ef9539b4402eb8358df843b29ffd94af7a453e5d765e4767",
      "bundle_path_digest": "sha256:11ce1c35f9c3d9b5ef9539b4402eb8358df843b29ffd94af7a453e5d765e4767",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T07:35:20.585000+00:00",
      "csv_description": "InfoScale\u2122 Licensing Operator provides license to use Veritas Products.",
      "csv_display_name": "InfoScale\u2122 Licensing Operator",
      "csv_metadata_description": "InfoScale\u2122 Licensing Operator manages the lifecycle of the Licensing for InfoScale\u2122 cluster",
      "csv_name": "infoscale-licensing-operator.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T07:35:20.585000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "infoscale-licensing-operator",
      "provided_apis": [
        {
          "group": "vlic.veritas.com",
          "kind": "License",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "manager"
        },
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-licensing-operator@sha256:e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660",
          "name": "infoscale-licensing-operator-e7b8d3c44df6151e61ded91336273e35eeaec04bd19124cf6313dc16d1224660-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "636220fa71c0b6877e8d5a0e",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DNS",
          "metadata": {
            "name": "test-dns"
          },
          "spec": {
            "domain": "vcslnxdns.com",
            "resRecord": {
              "abc": "r7515-054-vm9",
              "r7515-054-vm10": "10.221.85.83",
              "r7515-054-vm8": "10.221.85.81",
              "r7515-054-vm9": "10.221.85.82",
              "www": "r7515-054-vm8",
              "xyz": "r7515-054-vm10"
            },
            "stealthMasters": [
              "1.2.3.4"
            ],
            "tsigKeyFile": "/Kvcslnxdns.com.+157+10641.private"
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DataReplication",
          "metadata": {
            "name": "test-datareplication"
          },
          "spec": {
            "currentPrimary": "Clus1",
            "force": false,
            "localHostAddress": "10.0.0.1",
            "localNIC": "eth0",
            "localNetMask": "255.255.240.0",
            "remoteClusterDetails": [
              {
                "bandwidthLimit": "N/A",
                "clusterName": "Clus2",
                "latencyProtection": "fail",
                "logProtection": "autodcm",
                "networkTransportProtocol": "TCP",
                "remoteHostAddress": "10.0.0.2",
                "remoteNIC": "eth0",
                "remoteNetMask": "255.255.240.0",
                "replicationState": "start",
                "replicationType": "async"
              }
            ],
            "selector": {
              "namespace": "mysql"
            }
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DisasterRecoveryPlan",
          "metadata": {
            "name": "test-disaster-recovery-plan"
          },
          "spec": {
            "clusterFailOverPolicy": "Manual",
            "dataReplicationPointer": "test-datareplication",
            "force": false,
            "preferredClusterList": [
              "Clus1",
              "Clus2"
            ],
            "primaryCluster": "Clus1",
            "selector": {
              "namespace": "mysql"
            }
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "GlobalClusterMembership",
          "metadata": {
            "name": "global-cluster-membership"
          },
          "spec": {
            "backupClusterScopeCRD": true,
            "counterMissTolerance": 5,
            "datarepRefreshStatusFrequency": 10,
            "globalClusterOperation": "none",
            "globalMemberClusters": [
              {
                "clusterID": "Clus1",
                "drControllerAddress": "10.0.10.1",
                "drControllerPort": "8080"
              },
              {
                "clusterID": "Clus2",
                "drControllerAddress": "10.0.10.2",
                "drControllerPort": "9090"
              }
            ],
            "localClusterName": "Clus1",
            "metadataBackupInterval": 15
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager-bundle@sha256:10c75a38a512f5e1c68e75ebca904689117232e83d419dd45b248d2c87f22dbc",
      "bundle_path_digest": "sha256:10c75a38a512f5e1c68e75ebca904689117232e83d419dd45b248d2c87f22dbc",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T07:49:14.005000+00:00",
      "csv_description": "## InfoScale\u2122 DR Manager\n\nInfoScale\u2122 DR Manager manages the Disaster Recovery operations of InfoScale\u2122 for container environment\n\n## Overview\n\n- Disaster Recovery(DR) is provided to applications hosted in container ecosystems. Native container HA capabilities provide high availability to application components within a cluster. However, DR functionality provides disaster recovery in the event of a entire cluster failure and application components can be restored on another peer cluster in membership.\n- You can form a logical notion called 'Global Cluster' comprising clusters that can be used to migrate DR-enabled objects. DR-enabled objects migrate to peer cluster in case of a disaster like entire cluster going down, loss of connectivity with a particular cluster, user-initiated planned migration across cluster.\n\n---\n\n## Pre-requisites\n\n**1.** InfoScale must be installed and InfoScale pods must be configured on the clusters. [[More Details](https://www.veritas.com/content/support/en_US/doc/155483965-155483981-0/v155481520-155483981)]\n\n**2.** Create storage class with name, which must always be **`infoscale-dr-csi-sc`.**\n\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: infoscale-dr-csi-sc\nparameters:\n  fstype: vxfs\n  layout: mirror\nallowVolumeExpansion: true\nprovisioner: org.veritas.infoscale\nreclaimPolicy: Delete\n\n```\n\n**3.** Create persistent volume claim with name, which must always be **`infoscale-dr-meta-bkp-pvc`.**\n\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: infoscale-dr-meta-bkp-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 4Gi\n  storageClassName: infoscale-dr-csi-sc\n  volumeMode: Filesystem\n\n```\n\n- **Note:** User must use InfoScale\u2122 CSI provisioned storage.\n\n- [For more details, please refer to 'Installing InfoScale DR Manager on openshift' section from official documentation](https://www.veritas.com/content/support/en_US/doc/155483965-155483981-0/v151984431-155483981)\n\n## InfoScale\u2122 DR Manager custom resources\n\n- **Note:** InfoScale\u2122 DR Manager custom resources must be created only in the following order\n\n**1. Global Cluster Membership:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: GlobalClusterMembership\nmetadata:\n  name: global-cluster-membership\nspec:\n  # Local cluster name in the global membership\n  localClusterName: Clus1\n\n  globalMemberClusters:\n      # Cluster ID of member of global cluster membershrip\n    - clusterID: Clus1\n\n      # Address Used For Communicating With Peer Cluster's DR Controller\n      drControllerAddress: \"10.0.10.1\"\n\n      # Port used for DR controller\n      drControllerPort: \"8080\"\n\n      # Cluster ID of member of global cluster membershrip\n    - clusterID: Clus2\n\n      # Address Used For Communicating With Peer Cluster's DR Controller\n      drControllerAddress: \"10.0.10.2\"\n\n      # Port used for DR controller\n      drControllerPort: \"9090\"\n\n```\n\n**2. Data Replication:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: DataReplication\nmetadata:\n  name: test-datareplication\nspec:\n  # Primary cluster details\n\n  # Virtual IP address to configure VVR\n  localHostAddress: 10.0.0.1\n\n  # Corresponding netmask to configure VVR\n  localNetMask: 255.255.240.0\n\n  # Corresponding network interface to configure VVR (If NIC name is identical for all nodes)\n  localNIC: eth0\n\n  # Namespace and optional labels for which you want to configure data replication\n  selector:\n    namespace: mysql\n    #labels:\n    #  app: db\n\n  # Current primary cluster name - Name of the cluster you want to back up\n  currentPrimary: Clus1\n\n  # Secondary cluster details\n  remoteClusterDetails:\n      # ID of the Cluster to be used for a backup\n    - clusterName: Clus2\n\n      # Virtual IP address for VVR configuration of this cluster\n      remoteHostAddress: 10.0.0.2\n\n      # Corresponsding Netmask of this cluster\n      remoteNetMask: 255.255.240.0\n\n      # Corresponding Network interface of this cluster\n      remoteNIC: eth0\n\n      # (optional) replication type can be sync or async.\n      # default value will be async if not specified.\n      replicationType: async\n\n```\n**3. Disaster Recovery Plan:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: DisasterRecoveryPlan\nmetadata:\n  name: test-disaster-recovery-plan\nspec:\n  # Name of cluster that should be treated as primary for this DR plan\n  primaryCluster: Clus1\n\n  # (optional) Set force to True if peer cluster(s) is not reachable and local cluster needs to perform takeover\n  force: false\n\n  # List of member cluster(s) where this DRPlan can failover.\n  # Sequence of MemberCluster specified in this list denotes relative preference of member cluster(s)\n  # Must be subset of Global Cluster Membership\n  preferredClusterList: [\"Clus1\", \"Clus2\"]\n\n  # Kind of corrective action in case of disaster\n  # default value will be \"Manual\" if not specified\n  clusterFailOverPolicy: Manual\n\n  # Specify namespace and optional labels to decide what all needs to be part of the disaster recovery plan\n  selector:\n    namespace: mysql\n    #labels:\n    #  app: db\n\n  # (optional) Pointer to manage data replication\n  dataReplicationPointer: test-datareplication\n\n```\n",
      "csv_display_name": "InfoScale\u2122 DR Manager",
      "csv_metadata_description": "InfoScale\u2122 DR Manager manages the Disaster Recovery operations of InfoScale\u2122 for container environment",
      "csv_name": "infoscale-dr-manager.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T07:49:14.005000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "infoscale-dr-manager",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "DNS",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "DataReplication",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "DisasterRecoveryPlan",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "GlobalClusterMembership",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "name": "manager"
        },
        {
          "digest": "sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc",
          "name": "infoscale-dr-manager-eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "636224d271c0b6877e8d60bb",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.110"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator-bundle@sha256:e9e52fbb5918cd5fabac52e7c6fa26c984f72001fda26098dc2119825db0d167",
      "bundle_path_digest": "sha256:e9e52fbb5918cd5fabac52e7c6fa26c984f72001fda26098dc2119825db0d167",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T08:05:38.782000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.110\"\n\n  clusterID: < Optional - User provisioned ID for InfoScale cluster >\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-sds-operator.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T08:05:38.782000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "infoscale-sds-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "manager"
        },
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "infoscale-sds-operator-a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "63622710db6fe7424f365ca5",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.110"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator-bundle@sha256:e9e52fbb5918cd5fabac52e7c6fa26c984f72001fda26098dc2119825db0d167",
      "bundle_path_digest": "sha256:e9e52fbb5918cd5fabac52e7c6fa26c984f72001fda26098dc2119825db0d167",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T08:15:12.001000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.110\"\n\n  clusterID: < Optional - User provisioned ID for InfoScale cluster >\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-sds-operator.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T08:15:12.001000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "infoscale-sds-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "manager"
        },
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "infoscale-sds-operator-a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "63622793755c2f036615c82a",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DNS",
          "metadata": {
            "name": "test-dns"
          },
          "spec": {
            "domain": "vcslnxdns.com",
            "resRecord": {
              "abc": "r7515-054-vm9",
              "r7515-054-vm10": "10.221.85.83",
              "r7515-054-vm8": "10.221.85.81",
              "r7515-054-vm9": "10.221.85.82",
              "www": "r7515-054-vm8",
              "xyz": "r7515-054-vm10"
            },
            "stealthMasters": [
              "1.2.3.4"
            ],
            "tsigKeyFile": "/Kvcslnxdns.com.+157+10641.private"
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DataReplication",
          "metadata": {
            "name": "test-datareplication"
          },
          "spec": {
            "currentPrimary": "Clus1",
            "force": false,
            "localHostAddress": "10.0.0.1",
            "localNIC": "eth0",
            "localNetMask": "255.255.240.0",
            "remoteClusterDetails": [
              {
                "bandwidthLimit": "N/A",
                "clusterName": "Clus2",
                "latencyProtection": "fail",
                "logProtection": "autodcm",
                "networkTransportProtocol": "TCP",
                "remoteHostAddress": "10.0.0.2",
                "remoteNIC": "eth0",
                "remoteNetMask": "255.255.240.0",
                "replicationState": "start",
                "replicationType": "async"
              }
            ],
            "selector": {
              "namespace": "mysql"
            }
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DisasterRecoveryPlan",
          "metadata": {
            "name": "test-disaster-recovery-plan"
          },
          "spec": {
            "clusterFailOverPolicy": "Manual",
            "dataReplicationPointer": "test-datareplication",
            "force": false,
            "preferredClusterList": [
              "Clus1",
              "Clus2"
            ],
            "primaryCluster": "Clus1",
            "selector": {
              "namespace": "mysql"
            }
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "GlobalClusterMembership",
          "metadata": {
            "name": "global-cluster-membership"
          },
          "spec": {
            "backupClusterScopeCRD": true,
            "counterMissTolerance": 5,
            "datarepRefreshStatusFrequency": 10,
            "globalClusterOperation": "none",
            "globalMemberClusters": [
              {
                "clusterID": "Clus1",
                "drControllerAddress": "10.0.10.1",
                "drControllerPort": "8080"
              },
              {
                "clusterID": "Clus2",
                "drControllerAddress": "10.0.10.2",
                "drControllerPort": "9090"
              }
            ],
            "localClusterName": "Clus1",
            "metadataBackupInterval": 15
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager-bundle@sha256:10c75a38a512f5e1c68e75ebca904689117232e83d419dd45b248d2c87f22dbc",
      "bundle_path_digest": "sha256:10c75a38a512f5e1c68e75ebca904689117232e83d419dd45b248d2c87f22dbc",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T08:17:23.184000+00:00",
      "csv_description": "## InfoScale\u2122 DR Manager\n\nInfoScale\u2122 DR Manager manages the Disaster Recovery operations of InfoScale\u2122 for container environment\n\n## Overview\n\n- Disaster Recovery(DR) is provided to applications hosted in container ecosystems. Native container HA capabilities provide high availability to application components within a cluster. However, DR functionality provides disaster recovery in the event of a entire cluster failure and application components can be restored on another peer cluster in membership.\n- You can form a logical notion called 'Global Cluster' comprising clusters that can be used to migrate DR-enabled objects. DR-enabled objects migrate to peer cluster in case of a disaster like entire cluster going down, loss of connectivity with a particular cluster, user-initiated planned migration across cluster.\n\n---\n\n## Pre-requisites\n\n**1.** InfoScale must be installed and InfoScale pods must be configured on the clusters. [[More Details](https://www.veritas.com/content/support/en_US/doc/155483965-155483981-0/v155481520-155483981)]\n\n**2.** Create storage class with name, which must always be **`infoscale-dr-csi-sc`.**\n\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: infoscale-dr-csi-sc\nparameters:\n  fstype: vxfs\n  layout: mirror\nallowVolumeExpansion: true\nprovisioner: org.veritas.infoscale\nreclaimPolicy: Delete\n\n```\n\n**3.** Create persistent volume claim with name, which must always be **`infoscale-dr-meta-bkp-pvc`.**\n\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: infoscale-dr-meta-bkp-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 4Gi\n  storageClassName: infoscale-dr-csi-sc\n  volumeMode: Filesystem\n\n```\n\n- **Note:** User must use InfoScale\u2122 CSI provisioned storage.\n\n- [For more details, please refer to 'Installing InfoScale DR Manager on openshift' section from official documentation](https://www.veritas.com/content/support/en_US/doc/155483965-155483981-0/v151984431-155483981)\n\n## InfoScale\u2122 DR Manager custom resources\n\n- **Note:** InfoScale\u2122 DR Manager custom resources must be created only in the following order\n\n**1. Global Cluster Membership:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: GlobalClusterMembership\nmetadata:\n  name: global-cluster-membership\nspec:\n  # Local cluster name in the global membership\n  localClusterName: Clus1\n\n  globalMemberClusters:\n      # Cluster ID of member of global cluster membershrip\n    - clusterID: Clus1\n\n      # Address Used For Communicating With Peer Cluster's DR Controller\n      drControllerAddress: \"10.0.10.1\"\n\n      # Port used for DR controller\n      drControllerPort: \"8080\"\n\n      # Cluster ID of member of global cluster membershrip\n    - clusterID: Clus2\n\n      # Address Used For Communicating With Peer Cluster's DR Controller\n      drControllerAddress: \"10.0.10.2\"\n\n      # Port used for DR controller\n      drControllerPort: \"9090\"\n\n```\n\n**2. Data Replication:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: DataReplication\nmetadata:\n  name: test-datareplication\nspec:\n  # Primary cluster details\n\n  # Virtual IP address to configure VVR\n  localHostAddress: 10.0.0.1\n\n  # Corresponding netmask to configure VVR\n  localNetMask: 255.255.240.0\n\n  # Corresponding network interface to configure VVR (If NIC name is identical for all nodes)\n  localNIC: eth0\n\n  # Namespace and optional labels for which you want to configure data replication\n  selector:\n    namespace: mysql\n    #labels:\n    #  app: db\n\n  # Current primary cluster name - Name of the cluster you want to back up\n  currentPrimary: Clus1\n\n  # Secondary cluster details\n  remoteClusterDetails:\n      # ID of the Cluster to be used for a backup\n    - clusterName: Clus2\n\n      # Virtual IP address for VVR configuration of this cluster\n      remoteHostAddress: 10.0.0.2\n\n      # Corresponsding Netmask of this cluster\n      remoteNetMask: 255.255.240.0\n\n      # Corresponding Network interface of this cluster\n      remoteNIC: eth0\n\n      # (optional) replication type can be sync or async.\n      # default value will be async if not specified.\n      replicationType: async\n\n```\n**3. Disaster Recovery Plan:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: DisasterRecoveryPlan\nmetadata:\n  name: test-disaster-recovery-plan\nspec:\n  # Name of cluster that should be treated as primary for this DR plan\n  primaryCluster: Clus1\n\n  # (optional) Set force to True if peer cluster(s) is not reachable and local cluster needs to perform takeover\n  force: false\n\n  # List of member cluster(s) where this DRPlan can failover.\n  # Sequence of MemberCluster specified in this list denotes relative preference of member cluster(s)\n  # Must be subset of Global Cluster Membership\n  preferredClusterList: [\"Clus1\", \"Clus2\"]\n\n  # Kind of corrective action in case of disaster\n  # default value will be \"Manual\" if not specified\n  clusterFailOverPolicy: Manual\n\n  # Specify namespace and optional labels to decide what all needs to be part of the disaster recovery plan\n  selector:\n    namespace: mysql\n    #labels:\n    #  app: db\n\n  # (optional) Pointer to manage data replication\n  dataReplicationPointer: test-datareplication\n\n```\n",
      "csv_display_name": "InfoScale\u2122 DR Manager",
      "csv_metadata_description": "InfoScale\u2122 DR Manager manages the Disaster Recovery operations of InfoScale\u2122 for container environment",
      "csv_name": "infoscale-dr-manager.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T08:17:23.184000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "infoscale-dr-manager",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "DNS",
          "plural": "dns",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "GlobalClusterMembership",
          "plural": "globalclustermemberships",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "DataReplication",
          "plural": "datareplications",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "DisasterRecoveryPlan",
          "plural": "disasterrecoveryplans",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "name": "manager"
        },
        {
          "digest": "sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc",
          "name": "infoscale-dr-manager-eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "63622798755c2f036615c835",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.110"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator-bundle@sha256:e9e52fbb5918cd5fabac52e7c6fa26c984f72001fda26098dc2119825db0d167",
      "bundle_path_digest": "sha256:e9e52fbb5918cd5fabac52e7c6fa26c984f72001fda26098dc2119825db0d167",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T08:17:28.371000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.110\"\n\n  clusterID: < Optional - User provisioned ID for InfoScale cluster >\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-sds-operator.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T08:17:28.371000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "infoscale-sds-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "manager"
        },
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "infoscale-sds-operator-a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "636227c2c4b93e5ab8ddf506",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DNS",
          "metadata": {
            "name": "test-dns"
          },
          "spec": {
            "domain": "vcslnxdns.com",
            "resRecord": {
              "abc": "r7515-054-vm9",
              "r7515-054-vm10": "10.221.85.83",
              "r7515-054-vm8": "10.221.85.81",
              "r7515-054-vm9": "10.221.85.82",
              "www": "r7515-054-vm8",
              "xyz": "r7515-054-vm10"
            },
            "stealthMasters": [
              "1.2.3.4"
            ],
            "tsigKeyFile": "/Kvcslnxdns.com.+157+10641.private"
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DataReplication",
          "metadata": {
            "name": "test-datareplication"
          },
          "spec": {
            "currentPrimary": "Clus1",
            "force": false,
            "localHostAddress": "10.0.0.1",
            "localNIC": "eth0",
            "localNetMask": "255.255.240.0",
            "remoteClusterDetails": [
              {
                "bandwidthLimit": "N/A",
                "clusterName": "Clus2",
                "latencyProtection": "fail",
                "logProtection": "autodcm",
                "networkTransportProtocol": "TCP",
                "remoteHostAddress": "10.0.0.2",
                "remoteNIC": "eth0",
                "remoteNetMask": "255.255.240.0",
                "replicationState": "start",
                "replicationType": "async"
              }
            ],
            "selector": {
              "namespace": "mysql"
            }
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "DisasterRecoveryPlan",
          "metadata": {
            "name": "test-disaster-recovery-plan"
          },
          "spec": {
            "clusterFailOverPolicy": "Manual",
            "dataReplicationPointer": "test-datareplication",
            "force": false,
            "preferredClusterList": [
              "Clus1",
              "Clus2"
            ],
            "primaryCluster": "Clus1",
            "selector": {
              "namespace": "mysql"
            }
          }
        },
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "GlobalClusterMembership",
          "metadata": {
            "name": "global-cluster-membership"
          },
          "spec": {
            "backupClusterScopeCRD": true,
            "counterMissTolerance": 5,
            "datarepRefreshStatusFrequency": 10,
            "globalClusterOperation": "none",
            "globalMemberClusters": [
              {
                "clusterID": "Clus1",
                "drControllerAddress": "10.0.10.1",
                "drControllerPort": "8080"
              },
              {
                "clusterID": "Clus2",
                "drControllerAddress": "10.0.10.2",
                "drControllerPort": "9090"
              }
            ],
            "localClusterName": "Clus1",
            "metadataBackupInterval": 15
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager-bundle@sha256:10c75a38a512f5e1c68e75ebca904689117232e83d419dd45b248d2c87f22dbc",
      "bundle_path_digest": "sha256:10c75a38a512f5e1c68e75ebca904689117232e83d419dd45b248d2c87f22dbc",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T08:18:10.010000+00:00",
      "csv_description": "## InfoScale\u2122 DR Manager\n\nInfoScale\u2122 DR Manager manages the Disaster Recovery operations of InfoScale\u2122 for container environment\n\n## Overview\n\n- Disaster Recovery(DR) is provided to applications hosted in container ecosystems. Native container HA capabilities provide high availability to application components within a cluster. However, DR functionality provides disaster recovery in the event of a entire cluster failure and application components can be restored on another peer cluster in membership.\n- You can form a logical notion called 'Global Cluster' comprising clusters that can be used to migrate DR-enabled objects. DR-enabled objects migrate to peer cluster in case of a disaster like entire cluster going down, loss of connectivity with a particular cluster, user-initiated planned migration across cluster.\n\n---\n\n## Pre-requisites\n\n**1.** InfoScale must be installed and InfoScale pods must be configured on the clusters. [[More Details](https://www.veritas.com/content/support/en_US/doc/155483965-155483981-0/v155481520-155483981)]\n\n**2.** Create storage class with name, which must always be **`infoscale-dr-csi-sc`.**\n\n```\napiVersion: storage.k8s.io/v1\nkind: StorageClass\nmetadata:\n  name: infoscale-dr-csi-sc\nparameters:\n  fstype: vxfs\n  layout: mirror\nallowVolumeExpansion: true\nprovisioner: org.veritas.infoscale\nreclaimPolicy: Delete\n\n```\n\n**3.** Create persistent volume claim with name, which must always be **`infoscale-dr-meta-bkp-pvc`.**\n\n```\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: infoscale-dr-meta-bkp-pvc\nspec:\n  accessModes:\n  - ReadWriteOnce\n  resources:\n    requests:\n      storage: 4Gi\n  storageClassName: infoscale-dr-csi-sc\n  volumeMode: Filesystem\n\n```\n\n- **Note:** User must use InfoScale\u2122 CSI provisioned storage.\n\n- [For more details, please refer to 'Installing InfoScale DR Manager on openshift' section from official documentation](https://www.veritas.com/content/support/en_US/doc/155483965-155483981-0/v151984431-155483981)\n\n## InfoScale\u2122 DR Manager custom resources\n\n- **Note:** InfoScale\u2122 DR Manager custom resources must be created only in the following order\n\n**1. Global Cluster Membership:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: GlobalClusterMembership\nmetadata:\n  name: global-cluster-membership\nspec:\n  # Local cluster name in the global membership\n  localClusterName: Clus1\n\n  globalMemberClusters:\n      # Cluster ID of member of global cluster membershrip\n    - clusterID: Clus1\n\n      # Address Used For Communicating With Peer Cluster's DR Controller\n      drControllerAddress: \"10.0.10.1\"\n\n      # Port used for DR controller\n      drControllerPort: \"8080\"\n\n      # Cluster ID of member of global cluster membershrip\n    - clusterID: Clus2\n\n      # Address Used For Communicating With Peer Cluster's DR Controller\n      drControllerAddress: \"10.0.10.2\"\n\n      # Port used for DR controller\n      drControllerPort: \"9090\"\n\n```\n\n**2. Data Replication:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: DataReplication\nmetadata:\n  name: test-datareplication\nspec:\n  # Primary cluster details\n\n  # Virtual IP address to configure VVR\n  localHostAddress: 10.0.0.1\n\n  # Corresponding netmask to configure VVR\n  localNetMask: 255.255.240.0\n\n  # Corresponding network interface to configure VVR (If NIC name is identical for all nodes)\n  localNIC: eth0\n\n  # Namespace and optional labels for which you want to configure data replication\n  selector:\n    namespace: mysql\n    #labels:\n    #  app: db\n\n  # Current primary cluster name - Name of the cluster you want to back up\n  currentPrimary: Clus1\n\n  # Secondary cluster details\n  remoteClusterDetails:\n      # ID of the Cluster to be used for a backup\n    - clusterName: Clus2\n\n      # Virtual IP address for VVR configuration of this cluster\n      remoteHostAddress: 10.0.0.2\n\n      # Corresponsding Netmask of this cluster\n      remoteNetMask: 255.255.240.0\n\n      # Corresponding Network interface of this cluster\n      remoteNIC: eth0\n\n      # (optional) replication type can be sync or async.\n      # default value will be async if not specified.\n      replicationType: async\n\n```\n**3. Disaster Recovery Plan:**\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: DisasterRecoveryPlan\nmetadata:\n  name: test-disaster-recovery-plan\nspec:\n  # Name of cluster that should be treated as primary for this DR plan\n  primaryCluster: Clus1\n\n  # (optional) Set force to True if peer cluster(s) is not reachable and local cluster needs to perform takeover\n  force: false\n\n  # List of member cluster(s) where this DRPlan can failover.\n  # Sequence of MemberCluster specified in this list denotes relative preference of member cluster(s)\n  # Must be subset of Global Cluster Membership\n  preferredClusterList: [\"Clus1\", \"Clus2\"]\n\n  # Kind of corrective action in case of disaster\n  # default value will be \"Manual\" if not specified\n  clusterFailOverPolicy: Manual\n\n  # Specify namespace and optional labels to decide what all needs to be part of the disaster recovery plan\n  selector:\n    namespace: mysql\n    #labels:\n    #  app: db\n\n  # (optional) Pointer to manage data replication\n  dataReplicationPointer: test-datareplication\n\n```\n",
      "csv_display_name": "InfoScale\u2122 DR Manager",
      "csv_metadata_description": "InfoScale\u2122 DR Manager manages the Disaster Recovery operations of InfoScale\u2122 for container environment",
      "csv_name": "infoscale-dr-manager.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T08:18:10.010000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-dr-manager",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "DataReplication",
          "plural": "datareplications",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "DisasterRecoveryPlan",
          "plural": "disasterrecoveryplans",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "DNS",
          "plural": "dns",
          "version": "v1"
        },
        {
          "group": "infoscale.veritas.com",
          "kind": "GlobalClusterMembership",
          "plural": "globalclustermemberships",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "name": "manager"
        },
        {
          "digest": "sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:3614841aefe1c669c0edbcc9ef15ca5a6c8f9a278b1d385a150cbf3c65fdd202",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-dr-manager@sha256:eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc",
          "name": "infoscale-dr-manager-eb999187a1f9a9ce5566089e24adf598b1c229d31c5e57ddcfe4439ba25e97dc-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "636227c4b13b444bfbce5008",
      "alm_examples": [
        {
          "api_version": "infoscale.veritas.com/v1",
          "kind": "InfoScaleCluster",
          "metadata": {
            "name": "infoscalecluster-dev"
          },
          "spec": {
            "clusterInfo": [
              {},
              {}
            ],
            "version": "8.0.110"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator-bundle@sha256:e9e52fbb5918cd5fabac52e7c6fa26c984f72001fda26098dc2119825db0d167",
      "bundle_path_digest": "sha256:e9e52fbb5918cd5fabac52e7c6fa26c984f72001fda26098dc2119825db0d167",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-11-02T08:18:12.600000+00:00",
      "csv_description": "## InfoScale\u2122 SDS Operator\n\nInfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster\n\n## Overview\n\n- Veritas InfoScale\u2122 delivers Infrastructure resiliency and persistent storage for your critical containerized applications for OpenShift\u00ae and Kubernetes Native deployments\n- Engineered to support stateful workloads generated for mission-critical containerized applications.\n\n---\n\n## Data Services & Benefits\n\n**1. Software-Defined Persistent Storage Volumes:** Enables customers to support multiple container application requirements leveraging existing SAN or DAS storage\n\n**2. CSI API Driver:** Facilitates static and dynamic provisioning for applications with RWX, RWO and ROX access modes\n\n**3. Life Cycle Management:** Enables automated deployment, configuration and upgrades of InfoScale Software-defined container images. Certified and Integrated with Red Hat OpenShift for a single-click deployment\n\n**4. Availability:** Provides scaling, mounting and/or movement of InfoScale persistent storage volumes on cluster nodes with minimal disruption\n\n**5. Data Integrity:** Prevents data corruption by allowing only the active cluster nodes to write to the volume. The I/O fencing feature recovers from cluster disruptions quickly by ensuring that application pods are moved to another node to continue normal operations\n\n**6. Point-in-Time Data Copies:** Create snapshots of Persistent Volumes for backup products, data analytics or forensic discovery and analysis\n\n**7. Disaster Recovery (DR) Tech Preview:** This DR feature provides the ability to test and validate disaster recovery capabilities by migrating Kubernetes cluster metadata and application components to peer cluster in case of a local or remote disaster\n\n---\n\n## Pre-requisites\n\n- [Please refer to pre-requisite section from official documentation](https://www.veritas.com/support/en_US/doc/151215298-151215302-0)\n\n\n## InfoScale Cluster custom resource\n\n```\napiVersion: infoscale.veritas.com/v1\nkind: InfoScaleCluster\nmetadata:\n  name:  < Infoscale Cluster Name >\n\nspec:\n  version: \"8.0.110\"\n\n  clusterID: < Optional - User provisioned ID for InfoScale cluster >\n\n  clusterInfo:\n  - nodeName: <Name of the first node>\n  ip:\n  - <Optional - First IP address of the first node >\n  - <Optional - Second IP address of the first node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  - nodeName: <Name of the second node>\n  ip:\n  - <Optional - First IP address of the second node >\n  - <Optional - Second IP address of the second node>\n  excludeDevice:\n  - <Optional - Device path of the disk on the node that you want to exclude from Infoscale disk group.>\n\n  # You can add up to 16 nodes.\n\n  customImageRegistry: < Optional \u2013 Registry for Infoscale Container images>\n```\n\n#### Note\n\nYou can specify up to 16 worker nodes in CR. Although cluster configuration is allowed even with one Network Interface Card,\nVeritas recommends a minimum of two physical links for performance and High Availability (HA). Number of links for each network link must be same on all\nnodes. Optionally, you can enter node level IP addresses. If IP addresses are not provided, IP addresses of OpenShift cluster nodes are used.\n",
      "csv_display_name": "InfoScale\u2122 SDS Operator",
      "csv_metadata_description": "InfoScale\u2122 SDS Operator manages the lifecycle of the InfoScale\u2122 cluster",
      "csv_name": "infoscale-sds-operator.v8.0.110",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-02T08:18:12.600000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infoscale-sds-operator",
      "provided_apis": [
        {
          "group": "infoscale.veritas.com",
          "kind": "InfoScaleCluster",
          "plural": "infoscaleclusters",
          "version": "v1"
        }
      ],
      "provider": "Veritas Technologies LLC",
      "related_images": [
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "manager"
        },
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "pre-manager"
        },
        {
          "digest": "sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "image": "registry.connect.redhat.com/veritas-technologies/infoscale-sds-operator@sha256:a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae",
          "name": "infoscale-sds-operator-a36bf1501fc8dc269285d8777fbdabfcf2122a84663a9f6ac8e1cb7223c89aae-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.0.110",
      "version_original": "8.0.110"
    },
    {
      "_id": "636481606108810b73016ba1",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:79c02d6d2ab87a38bcd4731f7ef9fa7de12df43e64f091e5799157eedf759035",
      "bundle_path_digest": "sha256:79c02d6d2ab87a38bcd4731f7ef9fa7de12df43e64f091e5799157eedf759035",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-04T03:05:04.942000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.33",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-04T03:05:04.942000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.12",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:7c26ef72bd25b98e56cc57d4a89342274d2e62d808ed46c6f8278a3ebd17c868",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:7c26ef72bd25b98e56cc57d4a89342274d2e62d808ed46c6f8278a3ebd17c868",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.12",
      "version": "0.0.33",
      "version_original": "0.0.33"
    },
    {
      "_id": "636481a4855eb8e9cbc8b3c0",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:79c02d6d2ab87a38bcd4731f7ef9fa7de12df43e64f091e5799157eedf759035",
      "bundle_path_digest": "sha256:79c02d6d2ab87a38bcd4731f7ef9fa7de12df43e64f091e5799157eedf759035",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-04T03:06:12.885000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.33",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-04T03:06:12.885000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:7c26ef72bd25b98e56cc57d4a89342274d2e62d808ed46c6f8278a3ebd17c868",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:7c26ef72bd25b98e56cc57d4a89342274d2e62d808ed46c6f8278a3ebd17c868",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "0.0.33",
      "version_original": "0.0.33"
    },
    {
      "_id": "636481c589269a90eb58e79f",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:79c02d6d2ab87a38bcd4731f7ef9fa7de12df43e64f091e5799157eedf759035",
      "bundle_path_digest": "sha256:79c02d6d2ab87a38bcd4731f7ef9fa7de12df43e64f091e5799157eedf759035",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-11-04T03:06:45.430000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.33",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-11-04T03:06:45.430000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:7c26ef72bd25b98e56cc57d4a89342274d2e62d808ed46c6f8278a3ebd17c868",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:7c26ef72bd25b98e56cc57d4a89342274d2e62d808ed46c6f8278a3ebd17c868",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.33",
      "version_original": "0.0.33"
    }
  ]
}

{
  "data": [
    {
      "_id": "6075580414979904df57baca",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:6e5917cf4399c35ca88f512ba92f6612e13afdadc0efb2c47cb69b33871acf24",
      "bundle_path_digest": "sha256:6e5917cf4399c35ca88f512ba92f6612e13afdadc0efb2c47cb69b33871acf24",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-13T08:36:20.920000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Strom Topologies\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.323.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:54:40.439000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "xray-operator-c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f-annotation"
        },
        {
          "digest": "sha256:06e7e96f6840901a4e22056d6c8732c35c8fe771ab352910002887de5c6bc272",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:06e7e96f6840901a4e22056d6c8732c35c8fe771ab352910002887de5c6bc272",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:e37c791626e4606761803925a2c0fdfc3118764f1b91368f152a682e050b46f7",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:e37c791626e4606761803925a2c0fdfc3118764f1b91368f152a682e050b46f7",
          "name": "domain"
        },
        {
          "digest": "sha256:a37760515dc161e1845117e0fafc0f1e863a8d149fab704602edcdf87b051fb2",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:a37760515dc161e1845117e0fafc0f1e863a8d149fab704602edcdf87b051fb2",
          "name": "cep"
        },
        {
          "digest": "sha256:a7e5bb71af48a2b243a3c388b28f3cab0ad028711232c3db539a092b5080807c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:a7e5bb71af48a2b243a3c388b28f3cab0ad028711232c3db539a092b5080807c",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:76b7dc758327e1337d5f14feff4ceef4dcc258c17513ec2fc49549b365f1107c",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:76b7dc758327e1337d5f14feff4ceef4dcc258c17513ec2fc49549b365f1107c",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:78b50cc03b081fdb17abd2224a4fba85859349eddc34d7d6fd74ea6e33b6cc57",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:78b50cc03b081fdb17abd2224a4fba85859349eddc34d7d6fd74ea6e33b6cc57",
          "name": "ml"
        },
        {
          "digest": "sha256:5601a70bc3f98c19f180a34c34bb2cf637b9ed2ba85b31f6421d43676d905caa",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:5601a70bc3f98c19f180a34c34bb2cf637b9ed2ba85b31f6421d43676d905caa",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:efa1bb544bf2f8f79a8d22c633bd835621ceac4f4829889c751e396c34d4f5e4",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:efa1bb544bf2f8f79a8d22c633bd835621ceac4f4829889c751e396c34d4f5e4",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.323.4",
      "version_original": "1.323.4"
    },
    {
      "_id": "60759a5914979904df57bad2",
      "alm_examples": [
        {
          "api_version": "operator.ionir.com/v1",
          "kind": "System",
          "metadata": {
            "name": "ionir"
          },
          "spec": {
            "imageRegistry": "quay.io/ionir",
            "profile": "minimal",
            "tag": "ionir-test-v0.0.1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ionir/ionir-operator-bundle@sha256:5a367880576c8b23fc0f852567ec574375edac7d8db4f48b6d1c53ef3b15d8ff",
      "bundle_path_digest": "sha256:5a367880576c8b23fc0f852567ec574375edac7d8db4f48b6d1c53ef3b15d8ff",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-13T13:19:21.004000+00:00",
      "csv_description": "Ionir is a container-native data platform for Kubernetes.\nIonir virtualizes all available storage in a Kubernetes cluster to create a single pool of highly scalable storage.\nHaving a Container Storage Interface (CSI) plugin, Ionir storage can be provisioned and managed by Kubernetes,\nthe common control plane in the environment. In addition to providing resilient, high-performance storage, Ionir\nalso provides end-to-end data management capabilities. The Ionir architecture separates the metadata from the data,\nwhich enables unique data management capabilities such as instant clones. The microservices architecture provides\na unified data platform that is elastic, scalable, and agile, which is critical for containerized deployments.\n### Instant Data Mobility\nIonir gives K8s application data wings. Persistent volumes move at the speed of applications, in any direction, to and from anywhere - on-prem, cloud, public, private - in seconds!\nWhat\u2019s more, ionir transparently delivers everything you\u2019ve come to expect from enterprise storage \u2013 performance and scalability, data protection, replication, deduplication and more - built to run natively on Kubernetes clusters.\n### Enterprise-Class Data Protection\nOffering instant point-in-time restore with one second granularity, ionir\u2019s highly efficient data protection capabilities exceed even traditional monolithic arrays, and are unrivaled in K8s native storage.\n### Simple. Converged. Native.\nOne comprehensive platform \u2015 orchestrated by Kubernetes \u2015 serves, stores and manages all your K8s application data. All based on RESTful APIs for easy automation.\n### Aligned to Applications\nAdvanced machine learning ensures data is mapped to the optimal storage resource based on performance, density, cost, location, and other key factors.\n### How to install Ionir\n### Prerequisites\n* See deatils in <https://github.com/ionir-cloud/deployments/blob/main/OpenShift/documents/IonirDeployReq2.4.pdf>\n\n### Uninstall\nFirst remove all applications consuming Ionir storage prior to deleting Ionir system custom resource.<br>\n> :warning: This action uninstalls Ionir completely and wipes the entire data. This action can not be reversed.\n",
      "csv_display_name": "Ionir",
      "csv_metadata_description": "Ionir is a container-native data platform built in Kubernetes",
      "csv_name": "ionir-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:25:11.577000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ionir-operator",
      "provided_apis": [
        {
          "group": "operator.ionir.com",
          "kind": "System",
          "plural": "systems",
          "version": "v1"
        }
      ],
      "provider": "Ionir",
      "related_images": [
        {
          "digest": "sha256:373035c55d53b4f1c87cc31efc12def1d094bf267e5bf337e19c66c3e58e0f14",
          "image": "registry.connect.redhat.com/ionir/ionir-operator@sha256:373035c55d53b4f1c87cc31efc12def1d094bf267e5bf337e19c66c3e58e0f14",
          "name": "ionir-operator-373035c55d53b4f1c87cc31efc12def1d094bf267e5bf337e19c66c3e58e0f14-annotation"
        },
        {
          "digest": "sha256:318d22157b5921d6ab916d96937fb5139c8ccfbb9765b47d9284c7824b634152",
          "image": "quay.io/ionir/ionir-operator@sha256:318d22157b5921d6ab916d96937fb5139c8ccfbb9765b47d9284c7824b634152",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6075ac2b8268040ea70534a8",
      "alm_examples": [
        {
          "api_version": "apik10.kasten.io/v1alpha1",
          "kind": "K10",
          "metadata": {
            "name": "k10-sample"
          },
          "spec": {
            "ambassadorImage": {
              "image": "ambassador",
              "registry": "quay.io",
              "repository": "datawire"
            },
            "apigateway": {
              "serviceResolver": "dns"
            },
            "apiservices": {
              "deployed": true
            },
            "auth": {
              "basicAuth": {
                "enabled": false
              },
              "dex": {
                "enabled": false
              },
              "groupAllowList": [],
              "k10AdminGroups": [],
              "k10AdminUsers": [],
              "ldap": {
                "enabled": false,
                "groupSearch": {
                  "userMatchers": []
                },
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureNoSSL": false,
                "insecureSkipVerifySSL": false,
                "restartPod": false,
                "startTLS": false,
                "userSearch": {},
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "oidcAuth": {
                "enabled": false
              },
              "openshift": {
                "enabled": false,
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureCA": false,
                "useServiceAccountCA": false,
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "tokenAuth": {
                "enabled": false
              }
            },
            "cacertconfigmap": {},
            "clusterName": "",
            "dexImage": {
              "image": "dex",
              "registry": "quay.io",
              "repository": "dexidp"
            },
            "eula": {
              "accept": false
            },
            "executorReplicas": 3,
            "externalGateway": {
              "awsSSLCertARN": "",
              "create": false,
              "fqdn": {}
            },
            "genericVolumeSnapshot": {
              "resources": {
                "limits": {},
                "requests": {}
              }
            },
            "global": {
              "airgapped": {
                "repository": ""
              },
              "images": {
                "aggregatedapis": "",
                "ambassador": "",
                "auth": "",
                "catalog": "",
                "cephtool": "",
                "config": "",
                "configmap-reload": "",
                "crypto": "",
                "dashboardbff": "",
                "datamover": "",
                "dex": "",
                "executor": "",
                "frontend": "",
                "jobs": "",
                "kanister": "",
                "kanister-tools": "",
                "logging": "",
                "metering": "",
                "prometheus": "",
                "state": "",
                "upgrade": ""
              },
              "persistence": {
                "accessMode": "ReadWriteOnce",
                "catalog": {
                  "size": ""
                },
                "enabled": true,
                "jobs": {
                  "size": ""
                },
                "logging": {
                  "size": ""
                },
                "metering": {
                  "size": "2Gi"
                },
                "mountPath": "/mnt/k10state",
                "size": "20Gi",
                "storageClass": ""
              },
              "rhMarketPlace": true,
              "upstreamCertifiedImages": false
            },
            "image": {
              "image": "",
              "pullPolicy": "Always",
              "registry": "gcr.io",
              "repository": "kasten-images",
              "tag": ""
            },
            "ingress": {
              "create": false,
              "tls": {
                "enabled": false
              }
            },
            "injectKanisterSidecar": {
              "enabled": false,
              "namespaceSelector": {
                "matchLabels": {}
              },
              "objectSelector": {
                "matchLabels": {}
              },
              "webhookServer": {
                "port": 8080
              }
            },
            "jaeger": {
              "enabled": false
            },
            "kanisterPodCustomAnnotations": "",
            "kanisterPodCustomLabels": "",
            "kanisterToolsImage": {
              "image": "kanister-tools",
              "pullPolicy": "Always",
              "registry": "ghcr.io",
              "repository": "kanisterio"
            },
            "license": "",
            "limiter": {
              "csiSnapshots": 10,
              "genericVolumeCopies": 10,
              "genericVolumeRestores": 10,
              "genericVolumeSnapshots": 10,
              "providerSnapshots": 10
            },
            "logLevel": "info",
            "metering": {
              "awsMarketPlaceIamRole": "",
              "serviceAccount": {
                "create": false
              }
            },
            "networkPolicy": {
              "create": true
            },
            "prometheus": {
              "alertmanager": {
                "affinity": {},
                "baseURL": "/",
                "configFileName": "alertmanager.yml",
                "configFromSecret": "",
                "configMapOverrideName": "",
                "enabled": false,
                "extraArgs": {},
                "extraEnv": {},
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/alertmanager",
                  "tag": "v0.21.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "alertmanager",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "labels": {},
                    "servicePort": 80
                  },
                  "podManagementPolicy": "OrderedReady"
                },
                "tolerations": [],
                "useClusterRole": true,
                "useExistingRole": false
              },
              "alertmanagerFiles": {
                "alertmanager.yml": {
                  "global": {},
                  "receivers": [
                    {
                      "name": "default-receiver"
                    }
                  ],
                  "route": {
                    "group_interval": "5m",
                    "group_wait": "10s",
                    "receiver": "default-receiver",
                    "repeat_interval": "3h"
                  }
                }
              },
              "configmapReload": {
                "alertmanager": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                },
                "prometheus": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                }
              },
              "enabled": true,
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "images": {
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "catalog": "",
                  "cephtool": "",
                  "config": "",
                  "configmap-reload": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "executor": "",
                  "frontend": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": ""
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "rhMarketPlace": true,
                "upstreamCertifiedImages": false
              },
              "initChownData": {
                "enabled": false
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "kube-state-metrics": {
                "affinity": {},
                "autosharding": {
                  "enabled": false
                },
                "collectors": {
                  "certificatesigningrequests": true,
                  "configmaps": true,
                  "cronjobs": true,
                  "daemonsets": true,
                  "deployments": true,
                  "endpoints": true,
                  "horizontalpodautoscalers": true,
                  "ingresses": true,
                  "jobs": true,
                  "limitranges": true,
                  "mutatingwebhookconfigurations": true,
                  "namespaces": true,
                  "networkpolicies": true,
                  "nodes": true,
                  "persistentvolumeclaims": true,
                  "persistentvolumes": true,
                  "poddisruptionbudgets": true,
                  "pods": true,
                  "replicasets": true,
                  "replicationcontrollers": true,
                  "resourcequotas": true,
                  "secrets": true,
                  "services": true,
                  "statefulsets": true,
                  "storageclasses": true,
                  "validatingwebhookconfigurations": true,
                  "verticalpodautoscalers": false,
                  "volumeattachments": true
                },
                "customLabels": {},
                "global": {
                  "airgapped": {
                    "repository": ""
                  },
                  "images": {
                    "aggregatedapis": "",
                    "ambassador": "",
                    "auth": "",
                    "catalog": "",
                    "cephtool": "",
                    "config": "",
                    "configmap-reload": "",
                    "crypto": "",
                    "dashboardbff": "",
                    "datamover": "",
                    "dex": "",
                    "executor": "",
                    "frontend": "",
                    "jobs": "",
                    "kanister": "",
                    "kanister-tools": "",
                    "logging": "",
                    "metering": "",
                    "prometheus": "",
                    "state": "",
                    "upgrade": ""
                  },
                  "persistence": {
                    "accessMode": "ReadWriteOnce",
                    "catalog": {
                      "size": ""
                    },
                    "enabled": true,
                    "jobs": {
                      "size": ""
                    },
                    "logging": {
                      "size": ""
                    },
                    "metering": {
                      "size": "2Gi"
                    },
                    "mountPath": "/mnt/k10state",
                    "size": "20Gi",
                    "storageClass": ""
                  },
                  "rhMarketPlace": true,
                  "upstreamCertifiedImages": false
                },
                "hostNetwork": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/coreos/kube-state-metrics",
                  "tag": "v1.9.7"
                },
                "imagePullSecrets": [],
                "kubeTargetVersionOverride": "",
                "namespaceOverride": "",
                "nodeSelector": {},
                "podAnnotations": {},
                "podDisruptionBudget": {},
                "podSecurityPolicy": {
                  "additionalVolumes": [],
                  "annotations": {},
                  "enabled": false
                },
                "prometheus": {
                  "monitor": {
                    "additionalLabels": {},
                    "enabled": false,
                    "honorLabels": false,
                    "namespace": ""
                  }
                },
                "prometheusScrape": true,
                "rbac": {
                  "create": true
                },
                "replicas": 1,
                "resources": {},
                "securityContext": {
                  "enabled": true,
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "loadBalancerIP": "",
                  "nodePort": 0,
                  "port": 8080,
                  "type": "ClusterIP"
                },
                "serviceAccount": {
                  "annotations": {},
                  "create": true,
                  "imagePullSecrets": []
                },
                "tolerations": []
              },
              "kubeStateMetrics": {
                "enabled": false
              },
              "networkPolicy": {
                "enabled": true
              },
              "nodeExporter": {
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "hostNetwork": true,
                "hostPID": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/node-exporter",
                  "tag": "v1.0.1"
                },
                "name": "node-exporter",
                "nodeSelector": {},
                "pod": {
                  "labels": {}
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "resources": {},
                "securityContext": {},
                "service": {
                  "annotations": {
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "None",
                  "externalIPs": [],
                  "hostPort": 9100,
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9100,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "updateStrategy": {
                  "type": "RollingUpdate"
                }
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "pushgateway": {
                "enabled": false,
                "extraArgs": {},
                "extraInitContainers": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/pushgateway",
                  "tag": "v1.2.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "pushgateway",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": false,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/probe": "pushgateway"
                  },
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9091,
                  "type": "ClusterIP"
                },
                "tolerations": []
              },
              "rbac": {
                "create": false
              },
              "scrapeCAdvisor": false,
              "server": {
                "affinity": {},
                "alertmanagers": [],
                "baseURL": "/k10/prometheus/",
                "configMapOverrideName": "k10-prometheus-config",
                "configPath": "/etc/config/prometheus.yml",
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enableServiceLinks": true,
                "enabled": true,
                "env": [],
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraFlags": [
                  "web.enable-lifecycle"
                ],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "fullnameOverride": "prometheus-server",
                "global": {
                  "evaluation_interval": "1m",
                  "scrape_interval": "1m",
                  "scrape_timeout": "10s"
                },
                "hostAliases": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/prometheus"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "livenessProbeFailureThreshold": 3,
                "livenessProbeInitialDelay": 30,
                "livenessProbePeriodSeconds": 15,
                "livenessProbeSuccessThreshold": 1,
                "livenessProbeTimeout": 30,
                "name": "server",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "8Gi",
                  "storageClass": "",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "/k10/prometheus/",
                "priorityClassName": "",
                "readinessProbeFailureThreshold": 3,
                "readinessProbeInitialDelay": 30,
                "readinessProbePeriodSeconds": 5,
                "readinessProbeSuccessThreshold": 1,
                "readinessProbeTimeout": 30,
                "remoteRead": [],
                "remoteWrite": [],
                "replicaCount": 1,
                "resources": {},
                "retention": "30d",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "gRPC": {
                    "enabled": false,
                    "servicePort": 10901
                  },
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "statefulsetReplica": {
                    "enabled": false,
                    "replica": 0
                  },
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "gRPC": {
                      "enabled": false,
                      "servicePort": 10901
                    },
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": "100%",
                    "maxUnavailable": "100%"
                  },
                  "type": "RollingUpdate"
                },
                "terminationGracePeriodSeconds": 300,
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "serverFiles": {
                "alerting_rules.yml": {},
                "alerts": {},
                "prometheus.yml": {
                  "rule_files": [
                    "/etc/config/recording_rules.yml",
                    "/etc/config/alerting_rules.yml",
                    "/etc/config/rules",
                    "/etc/config/alerts"
                  ],
                  "scrape_configs": [
                    {
                      "job_name": "prometheus",
                      "static_configs": [
                        {
                          "targets": [
                            "localhost:9090"
                          ]
                        }
                      ]
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-apiservers",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "default;kubernetes;https",
                          "source_labels": [
                            "__meta_kubernetes_namespace",
                            "__meta_kubernetes_service_name",
                            "__meta_kubernetes_endpoint_port_name"
                          ]
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes-cadvisor",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics/cadvisor",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "job_name": "kubernetes-service-endpoints",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-service-endpoints-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    },
                    {
                      "honor_labels": true,
                      "job_name": "prometheus-pushgateway",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "pushgateway",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-services",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "metrics_path": "/probe",
                      "params": {
                        "module": [
                          "http_2xx"
                        ]
                      },
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        },
                        {
                          "source_labels": [
                            "__address__"
                          ],
                          "target_label": "__param_target"
                        },
                        {
                          "replacement": "blackbox",
                          "target_label": "__address__"
                        },
                        {
                          "source_labels": [
                            "__param_target"
                          ],
                          "target_label": "instance"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    }
                  ]
                },
                "recording_rules.yml": {},
                "rules": {}
              },
              "serviceAccounts": {
                "alertmanager": {
                  "annotations": {},
                  "create": false
                },
                "kubeStateMetrics": {
                  "create": false
                },
                "nodeExporter": {
                  "annotations": {},
                  "create": false
                },
                "pushgateway": {
                  "annotations": {},
                  "create": false
                },
                "server": {
                  "annotations": {},
                  "create": true
                }
              }
            },
            "rbac": {
              "create": true
            },
            "resources": {},
            "route": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "path": "/",
              "tls": {
                "enabled": false,
                "insecureEdgeTerminationPolicy": "Redirect",
                "termination": "edge"
              }
            },
            "scc": {
              "create": false
            },
            "secrets": {
              "apiTlsCrt": "",
              "apiTlsKey": "",
              "awsAccessKeyId": "",
              "awsIamRole": "",
              "awsSecretAccessKey": "",
              "azureADEndpoint": "",
              "azureADResourceID": "",
              "azureClientId": "",
              "azureClientSecret": "",
              "azureResourceGroup": "",
              "azureResourceMgrEndpoint": "",
              "azureSubscriptionID": "",
              "azureTenantId": "",
              "dockerConfig": "",
              "dockerConfigPath": "",
              "googleApiKey": "",
              "ibmSoftLayerApiKey": "",
              "ibmSoftLayerApiUsername": "",
              "vsphereEndpoint": "",
              "vspherePassword": "",
              "vsphereUsername": ""
            },
            "service": {
              "aggregatedApiPort": 10250,
              "externalPort": 8000,
              "gatewayAdminPort": 8877,
              "internalPort": 8000
            },
            "serviceAccount": {
              "create": true
            },
            "services": {
              "dashboardbff": {
                "hostNetwork": false
              },
              "executor": {
                "hostNetwork": false
              },
              "securityContext": {
                "fsGroup": 1000,
                "runAsUser": 1000
              }
            },
            "toolsImage": {
              "enabled": true,
              "pullPolicy": "Always"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kasten/kasten-bundle@sha256:051fe316928519e1174758860da97389e0f2a13cf64efc8ff016a942e8e2732f",
      "bundle_path_digest": "sha256:051fe316928519e1174758860da97389e0f2a13cf64efc8ff016a942e8e2732f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-13T14:35:23.555000+00:00",
      "csv_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_display_name": "K10",
      "csv_metadata_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_name": "k10-kasten-operator.3.0.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:27:00.064000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k10-kasten-operator",
      "provided_apis": [],
      "provider": "Kasten by Veeam, kasten.io",
      "related_images": [
        {
          "digest": "sha256:2f393c1ad06cac3af1a0aa1026b382d6c6ccfcabc8648f4275a6098773f4edfe",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:2f393c1ad06cac3af1a0aa1026b382d6c6ccfcabc8648f4275a6098773f4edfe",
          "name": "k10-operator-2f393c1ad06cac3af1a0aa1026b382d6c6ccfcabc8648f4275a6098773f4edfe-annotation"
        },
        {
          "digest": "sha256:4ea40256c5f2c01bbc03201010e29f994dfbf5b30780afa34ab173d84de7b49c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4ea40256c5f2c01bbc03201010e29f994dfbf5b30780afa34ab173d84de7b49c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:2f393c1ad06cac3af1a0aa1026b382d6c6ccfcabc8648f4275a6098773f4edfe",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:2f393c1ad06cac3af1a0aa1026b382d6c6ccfcabc8648f4275a6098773f4edfe",
          "name": "manager"
        },
        {
          "digest": "sha256:6391d9fe50a9a8d845563588fd14f4ded10c510a168f7ffa0df6e466c70d8f23",
          "image": "registry.connect.redhat.com/kasten/aggregatedapis@sha256:6391d9fe50a9a8d845563588fd14f4ded10c510a168f7ffa0df6e466c70d8f23",
          "name": "aggregatedapis"
        },
        {
          "digest": "sha256:e2d2729716d2d29169415d3c52f994e0ec1b0dccf7a7984b5d460aa7f02465de",
          "image": "registry.connect.redhat.com/kasten/auth@sha256:e2d2729716d2d29169415d3c52f994e0ec1b0dccf7a7984b5d460aa7f02465de",
          "name": "auth"
        },
        {
          "digest": "sha256:03b9733e83cd7c62083ebac4d141e00c499db2d8817fc3e2588b34a0e631b2cd",
          "image": "registry.connect.redhat.com/kasten/catalog@sha256:03b9733e83cd7c62083ebac4d141e00c499db2d8817fc3e2588b34a0e631b2cd",
          "name": "catalog"
        },
        {
          "digest": "sha256:0a9fc33b5656a943ccd3fc371a5d170a98548a86bf5f0a79f18507724831fafe",
          "image": "registry.connect.redhat.com/kasten/config@sha256:0a9fc33b5656a943ccd3fc371a5d170a98548a86bf5f0a79f18507724831fafe",
          "name": "config"
        },
        {
          "digest": "sha256:b13bf28ecdee3cfbbca1b4da56f17abe0a401a3868f638cde703859544aa232e",
          "image": "registry.connect.redhat.com/kasten/crypto@sha256:b13bf28ecdee3cfbbca1b4da56f17abe0a401a3868f638cde703859544aa232e",
          "name": "crypto"
        },
        {
          "digest": "sha256:7c97f2ed02bebb95a242f7ca384e6bb151e2e1f19bdf905d8a312baac4d905cb",
          "image": "registry.connect.redhat.com/kasten/dashboardbff@sha256:7c97f2ed02bebb95a242f7ca384e6bb151e2e1f19bdf905d8a312baac4d905cb",
          "name": "dashboardbff"
        },
        {
          "digest": "sha256:626b635b7a1f642829ca5ea1954836b115fe6db4e751cb51b9995c84bb3023a6",
          "image": "registry.connect.redhat.com/kasten/executor@sha256:626b635b7a1f642829ca5ea1954836b115fe6db4e751cb51b9995c84bb3023a6",
          "name": "executor"
        },
        {
          "digest": "sha256:2e68590166309265f31c084e859737e22ba73dc0ad73ffe5c5be4a5bd2df4f2d",
          "image": "registry.connect.redhat.com/kasten/frontend@sha256:2e68590166309265f31c084e859737e22ba73dc0ad73ffe5c5be4a5bd2df4f2d",
          "name": "frontend"
        },
        {
          "digest": "sha256:bf9c75a9278e5d7b1cce78bcc285a6aeaa9102d0ad3dd26671bab3bf18294da8",
          "image": "registry.connect.redhat.com/kasten/jobs@sha256:bf9c75a9278e5d7b1cce78bcc285a6aeaa9102d0ad3dd26671bab3bf18294da8",
          "name": "jobs"
        },
        {
          "digest": "sha256:50c02e5ecf32a5a8fc05a602ee76e2d57e1e6eb743322a87a5d95cb7b5e51e99",
          "image": "registry.connect.redhat.com/kasten/kanister@sha256:50c02e5ecf32a5a8fc05a602ee76e2d57e1e6eb743322a87a5d95cb7b5e51e99",
          "name": "kanister"
        },
        {
          "digest": "sha256:0753902d314e7f4488b39dcbefc5cc8a32b68e6dd344292a7a5e4f761cd1d93e",
          "image": "registry.connect.redhat.com/kasten/logging@sha256:0753902d314e7f4488b39dcbefc5cc8a32b68e6dd344292a7a5e4f761cd1d93e",
          "name": "logging"
        },
        {
          "digest": "sha256:4ceb435cb4542d0e7515e29b78505fbe75933a43d2662ca16190a13fd3a62ac6",
          "image": "registry.connect.redhat.com/kasten/metering@sha256:4ceb435cb4542d0e7515e29b78505fbe75933a43d2662ca16190a13fd3a62ac6",
          "name": "metering"
        },
        {
          "digest": "sha256:4add1a78dcc55b03d81516f3d26ffda97756bfafc284feacd955ef4a97a5446d",
          "image": "registry.connect.redhat.com/kasten/state@sha256:4add1a78dcc55b03d81516f3d26ffda97756bfafc284feacd955ef4a97a5446d",
          "name": "state"
        },
        {
          "digest": "sha256:40d4b3d85f6df4d28e53c3d0685de5ab15d86dc18eb00cc3f3e8937f8afed975",
          "image": "registry.connect.redhat.com/kasten/ambassador@sha256:40d4b3d85f6df4d28e53c3d0685de5ab15d86dc18eb00cc3f3e8937f8afed975",
          "name": "ambassador"
        },
        {
          "digest": "sha256:7ac957610a7b0706c56b39c226c6a458a10e6991d24c4fdd79eb0bd660d35f17",
          "image": "registry.connect.redhat.com/kasten/prometheus@sha256:7ac957610a7b0706c56b39c226c6a458a10e6991d24c4fdd79eb0bd660d35f17",
          "name": "prometheus"
        },
        {
          "digest": "sha256:de6138e459a4e74712a2c759877063f8be9c8cb3e852ec2bccc4b9fc188f8c7e",
          "image": "registry.connect.redhat.com/kasten/configmap-reload@sha256:de6138e459a4e74712a2c759877063f8be9c8cb3e852ec2bccc4b9fc188f8c7e",
          "name": "configmap-reload"
        },
        {
          "digest": "sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "image": "registry.connect.redhat.com/kasten/dex@sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "name": "dex"
        },
        {
          "digest": "sha256:27d1b1f2d872bcd59f8eb95ec7c59979bd0eeea6bca9e24a636a5e32181a2770",
          "image": "registry.connect.redhat.com/kasten/kanister-tools@sha256:27d1b1f2d872bcd59f8eb95ec7c59979bd0eeea6bca9e24a636a5e32181a2770",
          "name": "kanistertools"
        },
        {
          "digest": "sha256:dc2ff9a8c0f3e837ee7e7ba3945a0f3e780cdd8902050f3ce542182053f2bfc6",
          "image": "registry.connect.redhat.com/kasten/upgrade@sha256:dc2ff9a8c0f3e837ee7e7ba3945a0f3e780cdd8902050f3ce542182053f2bfc6",
          "name": "upgrade"
        },
        {
          "digest": "sha256:ce0480d395ee2b8d98540f166133f54fa3f24f6ff9b8db0ab83865d47a5c7c6c",
          "image": "registry.connect.redhat.com/kasten/cephtool@sha256:ce0480d395ee2b8d98540f166133f54fa3f24f6ff9b8db0ab83865d47a5c7c6c",
          "name": "cephtool"
        },
        {
          "digest": "sha256:8b2ccde6a975815cafdf147c45e7c3319e772edca116f6f905fc4203ea4e8759",
          "image": "registry.connect.redhat.com/kasten/datamover@sha256:8b2ccde6a975815cafdf147c45e7c3319e772edca116f6f905fc4203ea4e8759",
          "name": "datamover"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "3.0.11",
      "version_original": "3.0.11"
    },
    {
      "_id": "6075ee7f14979904df57badc",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:e2e91072f242c4f41cacc9a6249efd76db29e288af8c62816f922923a4e9fda1",
      "bundle_path_digest": "sha256:e2e91072f242c4f41cacc9a6249efd76db29e288af8c62816f922923a4e9fda1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-13T19:18:23.076000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:47:44.522000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8-mysql-80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8-postgresql-12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app-builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando-component-manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando-de-app-eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando-k8s-app-controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando-k8s-app-plugin-link-controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando-k8s-cluster-infrastructure-controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando-k8s-composite-app-controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando-k8s-database-service-controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando-k8s-dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando-k8s-keycloak-controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando-k8s-plugin-controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando-k8s-service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando-redhat-sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.3.1",
      "version_original": "6.3.1"
    },
    {
      "_id": "6075ee828268040ea70534ad",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:e2e91072f242c4f41cacc9a6249efd76db29e288af8c62816f922923a4e9fda1",
      "bundle_path_digest": "sha256:e2e91072f242c4f41cacc9a6249efd76db29e288af8c62816f922923a4e9fda1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-13T19:18:26.121000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:42:12.715000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8-mysql-80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8-postgresql-12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app-builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando-component-manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando-de-app-eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando-k8s-app-controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando-k8s-app-plugin-link-controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando-k8s-cluster-infrastructure-controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando-k8s-composite-app-controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando-k8s-database-service-controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando-k8s-dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando-k8s-keycloak-controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando-k8s-plugin-controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando-k8s-service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando-redhat-sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.3.1",
      "version_original": "6.3.1"
    },
    {
      "_id": "607700e7fffaf65c3e0b82b7",
      "alm_examples": [
        {
          "api_version": "crdb.cockroachlabs.com/v1alpha1",
          "kind": "CrdbCluster",
          "metadata": {
            "name": "crdb-tls-example"
          },
          "spec": {
            "dataStore": {
              "pvc": {
                "spec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "10Gi"
                    }
                  },
                  "volumeMode": "Filesystem"
                }
              }
            },
            "nodes": 3,
            "tlsEnabled": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator-bundle@sha256:9393659d05cd89cb5d09bbe84ed73a2873b9551da7b8de2c19b3f5c39e3e9240",
      "bundle_path_digest": "sha256:9393659d05cd89cb5d09bbe84ed73a2873b9551da7b8de2c19b3f5c39e3e9240",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-04-14T14:49:11.194000+00:00",
      "csv_description": "This operator launches and manages a 3+ node cluster of CockroachDB.",
      "csv_display_name": "CockroachDB Operator",
      "csv_metadata_description": "CockroachDB Operator",
      "csv_name": "cockroach-operator.v1.6.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:25:47.240000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cockroachdb-certified",
      "provided_apis": [],
      "provider": "Cockroach Labs",
      "related_images": [
        {
          "digest": "sha256:1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator@sha256:1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3",
          "name": "cockroachdb-operator-1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3-annotation"
        },
        {
          "digest": "sha256:1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator@sha256:1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3",
          "name": "cockroach-operator"
        },
        {
          "digest": "sha256:b4a79a851213fbc294192f0f9eabd960fe7415dd17214d81e812dd186c2ac2aa",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:b4a79a851213fbc294192f0f9eabd960fe7415dd17214d81e812dd186c2ac2aa",
          "name": "cockroach_v19_2_12"
        },
        {
          "digest": "sha256:c1a07a8686bbadcb8c68ffba4e40e1285e581e24d43e5811f38a22d57fb9cc56",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:c1a07a8686bbadcb8c68ffba4e40e1285e581e24d43e5811f38a22d57fb9cc56",
          "name": "cockroach_v20_1_12"
        },
        {
          "digest": "sha256:f4412ee51e6549e09fd76ecef3cc437ce7cb94a89853b87b655de5788436812c",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:f4412ee51e6549e09fd76ecef3cc437ce7cb94a89853b87b655de5788436812c",
          "name": "cockroach_v20_2_7"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.20",
      "version_original": "1.6.20"
    },
    {
      "_id": "607700e830f0495ab169ac72",
      "alm_examples": [
        {
          "api_version": "crdb.cockroachlabs.com/v1alpha1",
          "kind": "CrdbCluster",
          "metadata": {
            "name": "crdb-tls-example"
          },
          "spec": {
            "dataStore": {
              "pvc": {
                "spec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "10Gi"
                    }
                  },
                  "volumeMode": "Filesystem"
                }
              }
            },
            "nodes": 3,
            "tlsEnabled": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator-bundle@sha256:9393659d05cd89cb5d09bbe84ed73a2873b9551da7b8de2c19b3f5c39e3e9240",
      "bundle_path_digest": "sha256:9393659d05cd89cb5d09bbe84ed73a2873b9551da7b8de2c19b3f5c39e3e9240",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-14T14:49:12.380000+00:00",
      "csv_description": "This operator launches and manages a 3+ node cluster of CockroachDB.",
      "csv_display_name": "CockroachDB Operator",
      "csv_metadata_description": "CockroachDB Operator",
      "csv_name": "cockroach-operator.v1.6.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:31:06.207000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cockroachdb-certified",
      "provided_apis": [],
      "provider": "Cockroach Labs",
      "related_images": [
        {
          "digest": "sha256:1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator@sha256:1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3",
          "name": "cockroachdb-operator-1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3-annotation"
        },
        {
          "digest": "sha256:1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator@sha256:1ad5840a0c1d084de642446cdac1ecb0ac2cfc928c8f3683b5933da9942bbbd3",
          "name": "cockroach-operator"
        },
        {
          "digest": "sha256:b4a79a851213fbc294192f0f9eabd960fe7415dd17214d81e812dd186c2ac2aa",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:b4a79a851213fbc294192f0f9eabd960fe7415dd17214d81e812dd186c2ac2aa",
          "name": "cockroach_v19_2_12"
        },
        {
          "digest": "sha256:c1a07a8686bbadcb8c68ffba4e40e1285e581e24d43e5811f38a22d57fb9cc56",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:c1a07a8686bbadcb8c68ffba4e40e1285e581e24d43e5811f38a22d57fb9cc56",
          "name": "cockroach_v20_1_12"
        },
        {
          "digest": "sha256:f4412ee51e6549e09fd76ecef3cc437ce7cb94a89853b87b655de5788436812c",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:f4412ee51e6549e09fd76ecef3cc437ce7cb94a89853b87b655de5788436812c",
          "name": "cockroach_v20_2_7"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.20",
      "version_original": "1.6.20"
    },
    {
      "_id": "6077db1a359b60985f0578d9",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:6e5917cf4399c35ca88f512ba92f6612e13afdadc0efb2c47cb69b33871acf24",
      "bundle_path_digest": "sha256:6e5917cf4399c35ca88f512ba92f6612e13afdadc0efb2c47cb69b33871acf24",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-15T06:20:10.755000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Strom Topologies\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.323.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:57:12.103000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "xray-operator-c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f-annotation"
        },
        {
          "digest": "sha256:06e7e96f6840901a4e22056d6c8732c35c8fe771ab352910002887de5c6bc272",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:06e7e96f6840901a4e22056d6c8732c35c8fe771ab352910002887de5c6bc272",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:e37c791626e4606761803925a2c0fdfc3118764f1b91368f152a682e050b46f7",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:e37c791626e4606761803925a2c0fdfc3118764f1b91368f152a682e050b46f7",
          "name": "domain"
        },
        {
          "digest": "sha256:a37760515dc161e1845117e0fafc0f1e863a8d149fab704602edcdf87b051fb2",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:a37760515dc161e1845117e0fafc0f1e863a8d149fab704602edcdf87b051fb2",
          "name": "cep"
        },
        {
          "digest": "sha256:a7e5bb71af48a2b243a3c388b28f3cab0ad028711232c3db539a092b5080807c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:a7e5bb71af48a2b243a3c388b28f3cab0ad028711232c3db539a092b5080807c",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:76b7dc758327e1337d5f14feff4ceef4dcc258c17513ec2fc49549b365f1107c",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:76b7dc758327e1337d5f14feff4ceef4dcc258c17513ec2fc49549b365f1107c",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:78b50cc03b081fdb17abd2224a4fba85859349eddc34d7d6fd74ea6e33b6cc57",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:78b50cc03b081fdb17abd2224a4fba85859349eddc34d7d6fd74ea6e33b6cc57",
          "name": "ml"
        },
        {
          "digest": "sha256:5601a70bc3f98c19f180a34c34bb2cf637b9ed2ba85b31f6421d43676d905caa",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:5601a70bc3f98c19f180a34c34bb2cf637b9ed2ba85b31f6421d43676d905caa",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:efa1bb544bf2f8f79a8d22c633bd835621ceac4f4829889c751e396c34d4f5e4",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:efa1bb544bf2f8f79a8d22c633bd835621ceac4f4829889c751e396c34d4f5e4",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.323.4",
      "version_original": "1.323.4"
    },
    {
      "_id": "6077db4e30f0495ab169ac83",
      "alm_examples": [
        {
          "api_version": "manage.robin.io/v1",
          "kind": "RobinCluster",
          "metadata": {
            "name": "robin",
            "namespace": "placeholder"
          },
          "spec": {
            "host_type": "physical",
            "image_robin": "registry.connect.redhat.com/robinio/robin-storage@sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
            "k8s_provider": "openshift",
            "options": {
              "deployment_source": "express"
            },
            "source": "operatorhub"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/robinio/robin-storage-express@sha256:f8b3bebb6fcee5c70024a3a358cf89e1ef2f61f588ba9949c175b162453fdd35",
      "bundle_path_digest": "sha256:f8b3bebb6fcee5c70024a3a358cf89e1ef2f61f588ba9949c175b162453fdd35",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-15T06:21:02.800000+00:00",
      "csv_description": "Robin Cloud Native Storage (CNS) brings advanced data management capabilities to OpenShift. It is a Red Hat certified Operator that provides a block storage solution with bare-metal performance. Robin CNS seamlessly integrates with OpenShift through Operator Lifecycle Manager (OLM).\n\nDevelopers and DevOps teams can add Robin CNS right from the OpenShift console. Robin Cloud Native Storage helps simplify data management operations such as backup/recovery, snapshots/rollback, and cloning of entire applications (data+metadata+config), providing enterprise-grade data protection. Robin also ensures stateful application portability across OpenShift running on any cloud.\n### Supported Features\n\n* **Enterprise-class data services** - such as inline compression, thin provisioning and data-at-rest/at-motion encryption\n* **Day 2 management capabilities** - such as point-in-time snapshots, backup & recovery, app cloning, & multi-cloud migration\n* **Data protection** - Replicate Robin volumes synchronously up to 3 copies\n* **Quality of service** - Set maximum IO bandwidth for each volume to address the \u201cnoisy neighbors\u201d problem\n* **Rapid volume failover** - Re-attach Robin volumes immediately when a pod is rescheduled to another node, irrespective of where the data is located within the cluster\n* **Works with any infrastructure** - on-premises, VM, bare metal or cloud\n* **Scale on demand** - Scale up or scale out storage based on application requirements\n\n\n### About Robin.io\nRobin brings advanced storage and data management that extends the agility, efficiency and portability of Kubernetes to all stateful applications, even complex big data, databases, AI/ML and custom apps, on any infrastructure, on-premise, hybrid cloud or multi-cloud\n\nEnterprise customers are realizing unparalleled agility and cost benefits by running stateful workloads such as Cloudera, Hortonworks, Spark, Mongo, Cassandra, Kafka, Postgres, MySQL, Elastic, ELK, Splunk, Oracle, Oracle RAC, SAP HANA, etc. on Kubernetes using Robin.",
      "csv_display_name": "Robin Storage - Express",
      "csv_metadata_description": "Robin Cloud Native Storage - Free for life up to 5 nodes.",
      "csv_name": "robin-storage-express.v5.3.4-156-3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:56:28.385000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "robin-storage-express",
      "provided_apis": [
        {
          "group": "manage.robin.io",
          "kind": "RobinCluster",
          "plural": "robinclusters",
          "version": "v1"
        }
      ],
      "provider": "Robin.io",
      "related_images": [
        {
          "digest": "sha256:108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa",
          "image": "registry.connect.redhat.com/robinio/robin-operator@sha256:108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa",
          "name": "robin-operator-108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa-annotation"
        },
        {
          "digest": "sha256:108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa",
          "image": "registry.connect.redhat.com/robinio/robin-operator@sha256:108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa",
          "name": "robin-operator"
        },
        {
          "digest": "sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
          "image": "registry.connect.redhat.com/robinio/robin-storage@sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
          "name": "robin"
        },
        {
          "digest": "sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
          "image": "registry.connect.redhat.com/robinio/robin-storage@sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
          "name": "robin-storage-2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.3.4-156-3",
      "version_original": "5.3.4-156-3"
    },
    {
      "_id": "607808ee30f0495ab169ac8c",
      "alm_examples": [
        {
          "api_version": "manage.robin.io/v1",
          "kind": "RobinCluster",
          "metadata": {
            "name": "robin",
            "namespace": "placeholder"
          },
          "spec": {
            "host_type": "physical",
            "image_robin": "registry.connect.redhat.com/robinio/robin-storage@sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
            "k8s_provider": "openshift",
            "options": {
              "deployment_source": "express"
            },
            "source": "operatorhub"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/robinio/robin-storage-express@sha256:f8b3bebb6fcee5c70024a3a358cf89e1ef2f61f588ba9949c175b162453fdd35",
      "bundle_path_digest": "sha256:f8b3bebb6fcee5c70024a3a358cf89e1ef2f61f588ba9949c175b162453fdd35",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-15T09:35:42.408000+00:00",
      "csv_description": "Robin Cloud Native Storage (CNS) brings advanced data management capabilities to OpenShift. It is a Red Hat certified Operator that provides a block storage solution with bare-metal performance. Robin CNS seamlessly integrates with OpenShift through Operator Lifecycle Manager (OLM).\n\nDevelopers and DevOps teams can add Robin CNS right from the OpenShift console. Robin Cloud Native Storage helps simplify data management operations such as backup/recovery, snapshots/rollback, and cloning of entire applications (data+metadata+config), providing enterprise-grade data protection. Robin also ensures stateful application portability across OpenShift running on any cloud.\n### Supported Features\n\n* **Enterprise-class data services** - such as inline compression, thin provisioning and data-at-rest/at-motion encryption\n* **Day 2 management capabilities** - such as point-in-time snapshots, backup & recovery, app cloning, & multi-cloud migration\n* **Data protection** - Replicate Robin volumes synchronously up to 3 copies\n* **Quality of service** - Set maximum IO bandwidth for each volume to address the \u201cnoisy neighbors\u201d problem\n* **Rapid volume failover** - Re-attach Robin volumes immediately when a pod is rescheduled to another node, irrespective of where the data is located within the cluster\n* **Works with any infrastructure** - on-premises, VM, bare metal or cloud\n* **Scale on demand** - Scale up or scale out storage based on application requirements\n\n\n### About Robin.io\nRobin brings advanced storage and data management that extends the agility, efficiency and portability of Kubernetes to all stateful applications, even complex big data, databases, AI/ML and custom apps, on any infrastructure, on-premise, hybrid cloud or multi-cloud\n\nEnterprise customers are realizing unparalleled agility and cost benefits by running stateful workloads such as Cloudera, Hortonworks, Spark, Mongo, Cassandra, Kafka, Postgres, MySQL, Elastic, ELK, Splunk, Oracle, Oracle RAC, SAP HANA, etc. on Kubernetes using Robin.",
      "csv_display_name": "Robin Storage - Express",
      "csv_metadata_description": "Robin Cloud Native Storage - Free for life up to 5 nodes.",
      "csv_name": "robin-storage-express.v5.3.4-156-3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:31:17.541000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "robin-storage-express",
      "provided_apis": [
        {
          "group": "manage.robin.io",
          "kind": "RobinCluster",
          "plural": "robinclusters",
          "version": "v1"
        }
      ],
      "provider": "Robin.io",
      "related_images": [
        {
          "digest": "sha256:108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa",
          "image": "registry.connect.redhat.com/robinio/robin-operator@sha256:108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa",
          "name": "robin-operator-108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa-annotation"
        },
        {
          "digest": "sha256:108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa",
          "image": "registry.connect.redhat.com/robinio/robin-operator@sha256:108310b8a987d33a59444c0833ae6dbf8c955ee1610ad3dfbf7ca2e4f0433ffa",
          "name": "robin-operator"
        },
        {
          "digest": "sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
          "image": "registry.connect.redhat.com/robinio/robin-storage@sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
          "name": "robin"
        },
        {
          "digest": "sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
          "image": "registry.connect.redhat.com/robinio/robin-storage@sha256:2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0",
          "name": "robin-storage-2bf6e3b824ec862037ba143b71e34ab97692afdbce88b411f66e3c7b7bfa40c0-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "5.3.4-156-3",
      "version_original": "5.3.4-156-3"
    },
    {
      "_id": "60780fa1359b60985f0578de",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:6e5917cf4399c35ca88f512ba92f6612e13afdadc0efb2c47cb69b33871acf24",
      "bundle_path_digest": "sha256:6e5917cf4399c35ca88f512ba92f6612e13afdadc0efb2c47cb69b33871acf24",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-15T10:04:17.017000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Strom Topologies\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.323.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:50:00.541000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "xray-operator-c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f-annotation"
        },
        {
          "digest": "sha256:06e7e96f6840901a4e22056d6c8732c35c8fe771ab352910002887de5c6bc272",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:06e7e96f6840901a4e22056d6c8732c35c8fe771ab352910002887de5c6bc272",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:e37c791626e4606761803925a2c0fdfc3118764f1b91368f152a682e050b46f7",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:e37c791626e4606761803925a2c0fdfc3118764f1b91368f152a682e050b46f7",
          "name": "domain"
        },
        {
          "digest": "sha256:a37760515dc161e1845117e0fafc0f1e863a8d149fab704602edcdf87b051fb2",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:a37760515dc161e1845117e0fafc0f1e863a8d149fab704602edcdf87b051fb2",
          "name": "cep"
        },
        {
          "digest": "sha256:a7e5bb71af48a2b243a3c388b28f3cab0ad028711232c3db539a092b5080807c",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:a7e5bb71af48a2b243a3c388b28f3cab0ad028711232c3db539a092b5080807c",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:76b7dc758327e1337d5f14feff4ceef4dcc258c17513ec2fc49549b365f1107c",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:76b7dc758327e1337d5f14feff4ceef4dcc258c17513ec2fc49549b365f1107c",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:78b50cc03b081fdb17abd2224a4fba85859349eddc34d7d6fd74ea6e33b6cc57",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:78b50cc03b081fdb17abd2224a4fba85859349eddc34d7d6fd74ea6e33b6cc57",
          "name": "ml"
        },
        {
          "digest": "sha256:5601a70bc3f98c19f180a34c34bb2cf637b9ed2ba85b31f6421d43676d905caa",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:5601a70bc3f98c19f180a34c34bb2cf637b9ed2ba85b31f6421d43676d905caa",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:efa1bb544bf2f8f79a8d22c633bd835621ceac4f4829889c751e396c34d4f5e4",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:efa1bb544bf2f8f79a8d22c633bd835621ceac4f4829889c751e396c34d4f5e4",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.323.4",
      "version_original": "1.323.4"
    },
    {
      "_id": "607812e858a07d4112800b95",
      "alm_examples": [
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Cluster",
          "metadata": {
            "name": "n3000",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "fortville": {
                  "MACs": [
                    {
                      "MAC": "aa:bb:cc:dd:ee:fd"
                    },
                    {
                      "MAC": "aa:bb:cc:dd:ee:fe"
                    },
                    {
                      "MAC": "aa:bb:cc:dd:ee:ff"
                    }
                  ],
                  "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
                },
                "fpga": [
                  {
                    "PCIAddr": "0000:09:00.0",
                    "userImageURL": "http://server:8000/userimage.bin"
                  }
                ],
                "nodeName": "worker-0"
              },
              {
                "fortville": {
                  "MACs": [
                    {
                      "MAC": "aa:bb:cc:dd:ff:ff"
                    }
                  ],
                  "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
                },
                "nodeName": "worker-1"
              }
            ]
          }
        },
        {
          "api_version": "fpga.intel.com/v1",
          "kind": "N3000Node",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "fortville": {
              "MACs": [
                {
                  "MAC": "aa:bb:cc:dd:ee:fd"
                },
                {
                  "MAC": "aa:bb:cc:dd:ee:fe"
                },
                {
                  "MAC": "aa:bb:cc:dd:ee:ff"
                }
              ],
              "firmwareURL": "http://server:8000/nvmupdate.tar.gz"
            },
            "fpga": [
              {
                "PCIAddr": "0000:09:00.0",
                "userImageURL": "http://server:8000/userimage.bin"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/n3000-operator-bundle@sha256:7e1c4fc4e3efba4ccf702ccf0f2ac142771f56788916d16138cb3edf297517a2",
      "bundle_path_digest": "sha256:7e1c4fc4e3efba4ccf702ccf0f2ac142771f56788916d16138cb3edf297517a2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-15T10:18:16.907000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline.",
      "csv_display_name": "OpenNESS Operator for Intel\u00ae FPGA PAC N3000",
      "csv_metadata_description": "",
      "csv_name": "n3000.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:48:56.289000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "n3000",
      "provided_apis": [
        {
          "group": "fpga.intel.com",
          "kind": "N3000Cluster",
          "plural": "n3000clusters",
          "version": "v1"
        },
        {
          "group": "fpga.intel.com",
          "kind": "N3000Node",
          "plural": "n3000nodes",
          "version": "v1"
        }
      ],
      "provider": "Intel Corporation",
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:fe7d9c55534594b837a51e7dcae21d82ddebe83cbb471e4912a5aafb9a9638be",
          "image": "registry.connect.redhat.com/intel/n3000-operator@sha256:fe7d9c55534594b837a51e7dcae21d82ddebe83cbb471e4912a5aafb9a9638be",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "6079d509438128431dac0857",
      "alm_examples": [
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecClusterConfig",
          "metadata": {
            "name": "config",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "nodes": [
              {
                "nodeName": "",
                "physicalFunctions": [
                  {
                    "bbDevConfig": {
                      "n3000": {
                        "downlink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        },
                        "flrTimeout": 610,
                        "networkType": "FPGA_5GNR",
                        "pfMode": true,
                        "uplink": {
                          "bandwidth": 3,
                          "loadBalance": 128,
                          "queues": {
                            "vf0": 16,
                            "vf1": 16,
                            "vf2": 0,
                            "vf3": 0,
                            "vf4": 0,
                            "vf5": 0,
                            "vf6": 0,
                            "vf7": 0
                          }
                        }
                      }
                    },
                    "pciAddress": "",
                    "pfDriver": "pci-pf-stub",
                    "vfAmount": 2,
                    "vfDriver": "vfio-pci"
                  }
                ]
              }
            ]
          }
        },
        {
          "api_version": "sriovfec.intel.com/v1",
          "kind": "SriovFecNodeConfig",
          "metadata": {
            "name": "worker-0",
            "namespace": "vran-acceleration-operators"
          },
          "spec": {
            "physicalFunctions": [
              {
                "bbDevConfig": {
                  "n3000": {
                    "downlink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    },
                    "flrTimeout": 610,
                    "networkType": "FPGA_5GNR",
                    "pfMode": true,
                    "uplink": {
                      "bandwidth": 3,
                      "loadBalance": 128,
                      "queues": {
                        "vf0": 16,
                        "vf1": 16,
                        "vf2": 0,
                        "vf3": 0,
                        "vf4": 0,
                        "vf5": 0,
                        "vf6": 0,
                        "vf7": 0
                      }
                    }
                  }
                },
                "pci_addr": "",
                "pf_driver": "pci-pf-stub",
                "vf_amount": 2,
                "vf_driver": "vfio-pci"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/sriov-fec-operator-bundle@sha256:ca2aaab04a9a3cefdc0b599fb2e81d9a5e7fcd43a504d7769b228ea27fc65e09",
      "bundle_path_digest": "sha256:ca2aaab04a9a3cefdc0b599fb2e81d9a5e7fcd43a504d7769b228ea27fc65e09",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-16T18:18:49.600000+00:00",
      "csv_description": "The Intel\u00ae FPGA Programmable Acceleration Card N3000 (Intel\u00ae FPGA PAC N3000) is a highly customizable FPGA SmartNIC which enables high-throughput, low latency and high-bandwith applications.  It allows the optimization of data plane performance to reduce total cost of ownership while maintaining a high degree of flexibility.  The Intel FPGA PAC N3000 plays a key role in accelerating 5G and network functions virtualization (NFV) adoption for ecosystem partners such as telecommunications equipment manufacturers (TEMs) virtual network functions (VNF) vendors, system integrators and telcos, to bring scalable and high-performance solutions to market. The Intel FPGA PAC N3000 includes a variant that is design to be Network Equipment Building System (NEBS)-friendly, and features a Root-of-Trust device that helps protect systems from FPGA host security exploits. This document explains how the FPGA resource can be used on the Open Network Edge Services Software (OpenNESS) platform for accelerating network functions and edge application workloads. We use the Intel\u00ae FPGA PAC N3000 as a reference FPGA PAC and use LTE/5G Forward Error Correction (FEC) as an example workload that accelerates the 5G or 4G L1 base station network function. The same concept and mechanism is applicable for application acceleration workloads like AI and ML on FPGA for Inference applications. The Intel\u00ae FPGA PAC N3000 is a full-duplex, 100 Gbps in-system, re-programmable acceleration card for multi-workload networking application acceleration. It has an optimal memory mixture designed for network functions, with an integrated network interface card (NIC) in a small form factor that enables high throughput, low latency, and low power per bit for a custom networking pipeline. The ACC100 supports the O-RAN adopted DPDK BBDev API - an API which Intel contributed to the opensource community to enable choice and TTM for FEC acceleration solutions. The FlexRAN software reference architecture supports the ACC100 which enables users to quickly evaluate and build platforms for the wide range of vRAN networks. Reduces platform power, E2E latency and Intel\u00ae CPU core count requirements as well as increases cell capacity than existing programmable accelerator. Accelerates both 4G and 5G data concurrently.\tLowers development cost using commercial off the shelf (COTS) servers. Accommodates space-constrained implementations via a low-profile PCIe card form factor. Enables a variety of flexible FlexRAN deployments from small cell to macro to Massive MIMO networks. Supports extended temperature for the most challenging of RAN deployment scenario\u2019s.",
      "csv_display_name": "OpenNESS SR-IOV Operator for Wireless FEC Accelerators",
      "csv_metadata_description": "",
      "csv_name": "sriov-fec.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:55:42.583000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "sriov-fec",
      "provided_apis": [
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecClusterConfig",
          "plural": "sriovfecclusterconfigs",
          "version": "v1"
        },
        {
          "group": "sriovfec.intel.com",
          "kind": "SriovFecNodeConfig",
          "plural": "sriovfecnodeconfigs",
          "version": "v1"
        }
      ],
      "provider": "Intel Corporation",
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e214815ce0ae22eb31696118912360e2dbe990a0a42aad476eac74435e49b982",
          "image": "registry.connect.redhat.com/intel/sriov-fec-operator@sha256:e214815ce0ae22eb31696118912360e2dbe990a0a42aad476eac74435e49b982",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "607aa7e7385392b3ee593e6c",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "bundle_path_digest": "sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-17T09:18:31.244000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:16:48.990000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.3.2-pr2",
      "version_original": "6.3.2-pr2"
    },
    {
      "_id": "607aa885385392b3ee593e6d",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "bundle_path_digest": "sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-17T09:21:09.264000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:56:12.769000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.3.2-pr2",
      "version_original": "6.3.2-pr2"
    },
    {
      "_id": "607aabbd03f4b3563ab483a9",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "bundle_path_digest": "sha256:110de9cf2e6ecc1d3f6bff990ec9eb890b26c6ade5c03a232421d30e6bbace57",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-17T09:34:53.100000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:34:36.391000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.3.2-pr2",
      "version_original": "6.3.2-pr2"
    },
    {
      "_id": "607dadd4ff5a45a237ab51fb",
      "alm_examples": [
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "Ovms",
          "metadata": {
            "name": "ovms-sample"
          },
          "spec": {
            "aws_access_key_id": "",
            "aws_region": "",
            "aws_secret_access_key": "",
            "config_configmap_name": "",
            "gcp_creds_secret_name": "",
            "grpc_port": 8080,
            "https_proxy": "",
            "image_name": "registry.connect.redhat.com/intel/openvino-model-server@sha256:c97f5980b624fb89cac5d40e928c93e18a12f4b2b45730d90b8193772a57c659",
            "log_level": "INFO",
            "model_name": "resnet",
            "model_path": "gs://ovms-public-eu/resnet50-binary",
            "models_host_path": "",
            "models_volume_claim": "",
            "nireq": "",
            "plugin_config": "{\\\"CPU_THROUGHPUT_STREAMS\\\":\\\"1\\\"}",
            "replicas": 1,
            "resources": {
              "limits": {
                "cpu": 4,
                "memory": "250Mi"
              }
            },
            "rest_port": 8081,
            "s3_compat_api_endpoint": "",
            "security_context": {},
            "service_type": "ClusterIP",
            "target_device": "CPU"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/ovms-operator-bundle@sha256:0897df0a90c7c82d1979f81476989c3037d5c98119149d79a646c9a6f2f01345",
      "bundle_path_digest": "sha256:0897df0a90c7c82d1979f81476989c3037d5c98119149d79a646c9a6f2f01345",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-19T16:20:36.614000+00:00",
      "csv_description": "[OpenVINO\u2122 Model Server](https://github.com/openvinotoolkit/model_server) (OVMS) is a scalable, high-performance solution for serving machine learning models optimized for Intel\u00ae architectures. The server provides an inference service via gRPC or REST API - making it easy to deploy new algorithms and AI experiments using the same architecture as [TensorFlow Serving](https://github.com/tensorflow/serving) for any models trained in a framework that is supported by [OpenVINO](https://software.intel.com/en-us/openvino-toolkit).\n## About this Operator\nThis Operator is based on a [Helm chart](https://github.com/openvinotoolkit/model_server/tree/main/deploy) for OVMS. It supports all the parameters from the helm chart.\n## Using the cluster\nOpenVINO Model Server can be consumed as a `Service` with the name matching the `Ovms` record.\n```\noc get pods\nNAME                           READY   STATUS    RESTARTS   AGE\novms-sample-586f6f76df-dpps4   1/1     Running   0          8h\n\noc get services\nNAME          TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE\novms-sample   ClusterIP   172.25.199.210   <none>        8080/TCP,8081/TCP   8h\n```\n## Before you start\nDepending on the deployment configuration there might be pre-requisites for additional records to be created in the cluster. \n## References\nOpenVINO Model Server on [Github](https://github.com/openvinotoolkit/model_server/tree/main/extras/ovms-operator) \n",
      "csv_display_name": "OpenVINO Model Server Operator",
      "csv_metadata_description": "",
      "csv_name": "ovms-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:29:46.222000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "ovms-operator",
      "provided_apis": [
        {
          "group": "intel.com",
          "kind": "Ovms",
          "plural": "ovms",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:3d83c9799fad8125d99c4ff983ddf89e57c2b954f0ce6b15c50c8ddb1f4ea566",
          "image": "registry.connect.redhat.com/intel/ovms-operator@sha256:3d83c9799fad8125d99c4ff983ddf89e57c2b954f0ce6b15c50c8ddb1f4ea566",
          "name": "manager"
        },
        {
          "digest": "sha256:c97f5980b624fb89cac5d40e928c93e18a12f4b2b45730d90b8193772a57c659",
          "image": "registry.connect.redhat.com/intel/openvino-model-server@sha256:c97f5980b624fb89cac5d40e928c93e18a12f4b2b45730d90b8193772a57c659",
          "name": "openvino-model-server-c97f5980b624fb89cac5d40e928c93e18a12f4b2b45730d90b8193772a57c659-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "607eaa8f03f4b3563ab483bd",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "bundle_path_digest": "sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-04-20T10:18:55.442000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:35:40.544000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.3.2-pr4",
      "version_original": "6.3.2-pr4"
    },
    {
      "_id": "607ebc4c03f4b3563ab483be",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "bundle_path_digest": "sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-04-20T11:34:36.762000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:04:18.106000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.3.2-pr4",
      "version_original": "6.3.2-pr4"
    },
    {
      "_id": "607ed552ff5a45a237ab5209",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "bundle_path_digest": "sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-04-20T13:21:22.195000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:29:55.363000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.3.2-pr4",
      "version_original": "6.3.2-pr4"
    },
    {
      "_id": "607ee2caff5a45a237ab520a",
      "alm_examples": [
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDeBundle",
          "metadata": {
            "name": "my-bundle",
            "namespace": "my-namespace"
          },
          "spec": {
            "details": {
              "name": "my-bundle"
            }
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoDatabaseService",
          "metadata": {
            "name": "my-entando-database-service",
            "namespace": "my-namespace"
          },
          "spec": {
            "createDeployment": true,
            "databaseName": "my_database",
            "dbms": "postgresql"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoKeycloakServer",
          "metadata": {
            "name": "my-keycloak",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "replicas": 1,
            "standardImage": "redhat-sso"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoClusterInfrastructure",
          "metadata": {
            "name": "my-entando-cluster-infrastructure",
            "namespace": "my-namespace"
          },
          "spec": {
            "environmentVariables": [],
            "replicas": 1
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoPlugin",
          "metadata": {
            "name": "my-entando-plugin",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "healthCheckPath": "/management/health",
            "image": "entando/entando-avatar-plugin:6.0.5",
            "ingressHostName": "my-plugin.apps-crc.testing",
            "ingressPath": "/avatarPlugin",
            "replicas": 1,
            "roles": [
              {
                "code": "admin",
                "name": "user"
              },
              {
                "code": "user",
                "name": "user"
              }
            ],
            "securityLevel": "strict"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoApp",
          "metadata": {
            "name": "my-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "dbms": "postgresql",
            "environmentVariables": [],
            "ingressHostName": "my-app.apps-crc.testing",
            "replicas": 1,
            "standardServerImage": "eap"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoAppPluginLink",
          "metadata": {
            "name": "my-link",
            "namespace": "my-namespace"
          },
          "spec": {
            "entandoAppName": "my-app",
            "entandoPluginName": "my-plugin"
          }
        },
        {
          "api_version": "entando.org/v1",
          "kind": "EntandoCompositeApp",
          "metadata": {
            "name": "my-entando-composite-app",
            "namespace": "my-namespace"
          },
          "spec": {
            "components": [
              {
                "kind": "EntandoDatabaseService",
                "metadata": {
                  "name": "inline-entando-database-service"
                },
                "spec": {
                  "createDeployment": true
                }
              },
              {
                "kind": "EntandoKeycloakServer",
                "metadata": {
                  "name": "inline-keycloak"
                },
                "spec": {
                  "standardImage": "redhat-sso"
                }
              },
              {
                "kind": "EntandoClusterInfrastructure",
                "metadata": {
                  "name": "inline-entando-cluster-infrastructure"
                },
                "spec": {}
              },
              {
                "kind": "EntandoApp",
                "metadata": {
                  "name": "inline-app"
                },
                "spec": {
                  "standardServerImage": "eap"
                }
              },
              {
                "kind": "EntandoPlugin",
                "metadata": {
                  "name": "inline-plugin"
                },
                "spec": {
                  "healthCheckPath": "/management/health",
                  "image": "entando/entando-avatar-plugin:6.0.5",
                  "ingressPath": "/avatarPlugin",
                  "roles": [
                    {
                      "code": "admin",
                      "name": "admin"
                    },
                    {
                      "code": "user",
                      "name": "user"
                    }
                  ]
                }
              },
              {
                "kind": "EntandoAppPluginLink",
                "metadata": {
                  "name": "inline-link"
                },
                "spec": {
                  "entandoAppName": "inline-app",
                  "entandoPluginName": "inline-plugin"
                }
              }
            ],
            "dbmsOverride": "postgresql",
            "ingressHostNameOverride": "entando.apps-crc.testing"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/entando/entando-operator@sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "bundle_path_digest": "sha256:66f8db604ac4d104cd88d786c4a9437dd1a22b3d7f8fd856c1251191f7d4856a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-04-20T14:18:50.195000+00:00",
      "csv_description": "## Entando\n\nThe Entando platform accelerates the development and lifecycle  management of fully modularized applications on Kubernetes. It  provides tools to help developers create and manage applications  using modular frontend and backend components.\nThe Entando Operator automates the installation, provisioning, and  configuration management of the components that make up an Entando  application. Specifically, the operator manages the following custom  resources:\n**EntandoKeycloakServers** for centralized authentication of frontend  and backend components. The operator can deploy Keycloak, or in certified  environments, Red Hat SSO servers that can then be used by subsequent  deployments as an OpenID Connect provider.\n**EntandoApps** for hosting an Entando application. EntandoApps are hosted on Wildfly or JBoss EAP containers, and can also be used to deploy custom  EntandoApp containers.\n**EntandoPlugins** for deploying microservices to customize or enhance your EntandoApp. Entando microservice plugins are deployed to your cluster, and  then linked to one or more EntandoApps.\n## Using the Operator\nThe Entando Operator can be deployed using the default settings without any  configuration. Once deployed, the operator can be customized by editing  the *configmap* and secrets.\n### ConfigMap: entando-operator-config\nThe 'entando-operator-config' ConfigMap can be added after deployment and any changes to it will be picked up by the operator on subsequent event processing. It supports the following keys:\n\n    entando.k8s.operator.gc.controller.pods: set this to \"false\" to keep controller pods after completion.\n    entando.k8s.operator.compliance.mode: set this to \"community\" if there is no requirement for Red Hat compliance.\n    entando.k8s.operator.image.pull.secrets: a comma separated list containing the names of pull secrets that will be linked to all service accounts.\n    entando.k8s.operator.disable.pvc.garbage.collection: set this to \"false\" if you want Persistent Volume Claims to be deleted with the custom resources they are associated with.\n    entando.k8s.operator.impose.default.limits: set this to \"false\" if there is no need to limit the resource consumption of pods on your cluster.\n    entando.k8s.operator.request.to.limit.ratio: a decimal number that default limits will be multiplied by to calculate default requests for resources.\n    entando.k8s.operator.force.db.password.reset: set this to \"true\" if you plan to delete Secrets from your namespace but you want to retain the Database they point to.\n    entando.k8s.operator.pull.policy.override: specify your preferred pullPolicy for images. The default is Always.\n    entando.tls.secret.name: The name of a standard TLS secret to use for HTTPS Ingresses. See the section entando-tls-secret.\n    entando.ca.secret.name: The name of a secret containing CA certificates. See the section entando-ca-cert-secret.\n    entando.assume.external.https.provider: Set this to \"true\" if your cloud provider handles HTTPS for you.\n    entando.use.auto.cert.generation: Set this to \"true\" to have Openshift use its internal CA to generate certificates for your Routes.\n    entando.default.routing.suffix: The domain name that can be suffixed to deployment names when the ingressHostName is omitted. Needs to be preconfigured on your DNS provider.\n    entando.pod.completion.timeout.seconds: The time it will take before Entando fails a run-to-completion Pod.\n    entando.pod.readiness.timeout.seconds: The time it will take before Entando fails a Service Pod.\n    entando.pod.shutdown.timeout.seconds: The time Entando will give a Pod to shutdown gracefully.\n\n\n### entando-pull-secret\nThe secret to be used to pull Entando images from the Red Hat container registry. The name of this secret is hard coded as it is required for the ClusterServiceVersion of this Operator\n### entando-tls-secret\nA standard Kubernetes TLS secret that will be used on all deployments where no custom TLS secret name is specified.\n### entando-ca-cert-secret\nThis is an opaque secret in the Entando Operator's namespace that contains the certificates of all trusted certificate authorities in your environment. This is generally used mainly for self signed certificates. As is generally the case for opaque secrets, there are no constraints on the keys in this secret. However, limit the files inside the secret to X509 certificates or certificate chains. The Entando Operator will load all of these files into a Java keystore that it then configures as the trust store for each container that uses Java.\n",
      "csv_display_name": "Entando Operator",
      "csv_metadata_description": "Processes EntandoKeycloakServer, EntandoApp and EntandoPlugin custom resources and deploys the relevant containers in the Kubernetes cluster.",
      "csv_name": "entando-k8s-operator.v6.3.2-pr4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:33:16.691000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "entando-k8s-operator",
      "provided_apis": [
        {
          "group": "entando.org",
          "kind": "EntandoCompositeApp",
          "plural": "entandocompositeapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDatabaseService",
          "plural": "entandodatabaseservices",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoDeBundle",
          "plural": "entandodebundles",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoKeycloakServer",
          "plural": "entandokeycloakservers",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoPlugin",
          "plural": "entandoplugins",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoAppPluginLink",
          "plural": "entandoapppluginlinks",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoApp",
          "plural": "entandoapps",
          "version": "v1"
        },
        {
          "group": "entando.org",
          "kind": "EntandoClusterInfrastructure",
          "plural": "entandoclusterinfrastructures",
          "version": "v1"
        }
      ],
      "provider": "Entando, Inc",
      "related_images": [
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-k8s-controller-coordinator-c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839-annotation"
        },
        {
          "digest": "sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "image": "entando/entando-k8s-controller-coordinator@sha256:c8a93ebd69af3cf822dd7d4fcce5d4241cd8dca229c4e25c771bcfecca916839",
          "name": "entando-operator"
        },
        {
          "digest": "sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "image": "registry.redhat.io/rhel8/mysql-80@sha256:570bce7dc649ac7ac85e7ecb196aabc281c77a94590aa7df7d9746869ce757ea",
          "name": "rhel8_mysql_80"
        },
        {
          "digest": "sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "image": "registry.redhat.io/rhel8/postgresql-12@sha256:f4e5c728b644bf1888ec8086424852ed74b5596a511be29e636fb10218fc9b6f",
          "name": "rhel8_postgresql_12"
        },
        {
          "digest": "sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "image": "docker.io/entando/app-builder@sha256:1ca90c09302b9cadf8950278d92ad4d7f3a14f02dea8704320794aa77ada8631",
          "name": "app_builder"
        },
        {
          "digest": "sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "image": "docker.io/entando/entando-component-manager@sha256:668191fc86b090452baaba18ec7bbc3d07df5a99750e0c5b98759599d565cfbe",
          "name": "entando_component_manager"
        },
        {
          "digest": "sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "image": "docker.io/entando/entando-de-app-eap@sha256:1f0e35d7f7ee8123721cf8e80ac96ac2f594f21a2b68cf9e720917d090c8095e",
          "name": "entando_de_app_eap"
        },
        {
          "digest": "sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "image": "docker.io/entando/entando-k8s-app-controller@sha256:c68d3b129fc625f5d1ee10ed2a107e28c145049d4b513dcdb2c736555025e339",
          "name": "entando_k8s_app_controller"
        },
        {
          "digest": "sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "image": "docker.io/entando/entando-k8s-app-plugin-link-controller@sha256:aa7ba0861705213434e610530c5bf5da1bdb33f1834d3c346174f5a28145c0bd",
          "name": "entando_k8s_app_plugin_link_controller"
        },
        {
          "digest": "sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "image": "docker.io/entando/entando-k8s-cluster-infrastructure-controller@sha256:86dbea6696349d7b2393e12bacef4d1acec2dd3f8551e397fa26c92706a18dd3",
          "name": "entando_k8s_cluster_infrastructure_controller"
        },
        {
          "digest": "sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "image": "docker.io/entando/entando-k8s-composite-app-controller@sha256:4bc6797bb41b3e407b64530c3cff7a78f3fc2c22863caad9c606ccd650310b61",
          "name": "entando_k8s_composite_app_controller"
        },
        {
          "digest": "sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "image": "docker.io/entando/entando-k8s-database-service-controller@sha256:58ca4ad2fca83a715aba9b68609f9056f633d556eb9845b3aff5c05769369539",
          "name": "entando_k8s_database_service_controller"
        },
        {
          "digest": "sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "image": "docker.io/entando/entando-k8s-dbjob@sha256:8ae47dbf93201965106663299f06daad544982fa244d4a0f365a1b717727e5ed",
          "name": "entando_k8s_dbjob"
        },
        {
          "digest": "sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "image": "docker.io/entando/entando-k8s-keycloak-controller@sha256:f1ed42001260802353197433cea7df4c2d0e5fd9bcd926bb5ae7c654dfad2ffe",
          "name": "entando_k8s_keycloak_controller"
        },
        {
          "digest": "sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "image": "docker.io/entando/entando-k8s-plugin-controller@sha256:a20c753dda86e0f54f210e446b404733045ba426fc7186dc3936daed8224fbcb",
          "name": "entando_k8s_plugin_controller"
        },
        {
          "digest": "sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "image": "docker.io/entando/entando-k8s-service@sha256:775391f0005e64764288bfe007d9ea576f13618c02ea400d030a7502cfb551bd",
          "name": "entando_k8s_service"
        },
        {
          "digest": "sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "image": "docker.io/entando/entando-redhat-sso@sha256:3692adb3694b3bf278bed7a678c9d0eaa0aba8e3e3ed4117ca04156525bcac72",
          "name": "entando_redhat_sso"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.3.2-pr4",
      "version_original": "6.3.2-pr4"
    },
    {
      "_id": "60803a7eebd9cca472b093ad",
      "alm_examples": [
        {
          "api_version": "csi.nec.com/v1",
          "kind": "SANStorageCSI",
          "metadata": {
            "name": "sanstoragecsi"
          },
          "spec": {
            "driverName": "san.csi.nec.com",
            "images": {
              "csiDriver": "",
              "externalAttacher": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
              "externalProvisioner": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
              "livenessProbe": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
              "nodeRegistrar": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0"
            },
            "parameters": {
              "controller": {
                "logLevel": 5
              },
              "node": {
                "livenessProbePort": 9808,
                "logLevel": 5,
                "maxVolumesPerNode": 1024
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/sanstoragecsi-operator-bundle@sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "bundle_path_digest": "sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-21T14:45:18.780000+00:00",
      "csv_description": "This operator deploys the NEC Storage M Series CSI Driver on OpenShift Container Platform.\n\nNEC Storage M Series CSI Driver provides persistent storage for stateful applications using NEC Storage M Series.\nPlease refer to the documentation of the NEC Storage M Series CSI Driver for detail information about supported NEC Storage Platforms and supported CSI features.\n",
      "csv_display_name": "NEC Storage M Series CSI Operator",
      "csv_metadata_description": "An operator for managing the NEC Storage M Series CSI Driver",
      "csv_name": "sanstoragecsi-operator-bundle.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:21:59.671000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "sanstoragecsi-operator-bundle",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "SANStorageCSI",
          "plural": "sanstoragecsis",
          "version": "v1"
        }
      ],
      "provider": "NEC",
      "related_images": [
        {
          "digest": "sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "image": "registry.connect.redhat.com/nec/sanstoragecsi-operator@sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "name": "sanstoragecsi-operator-bundle"
        },
        {
          "digest": "sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "name": "ose-csi-node-driver-registrar-dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0-annotation"
        },
        {
          "digest": "sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "name": "ose-csi-livenessprobe-241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe-annotation"
        },
        {
          "digest": "sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "name": "ose-csi-external-provisioner-faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715-annotation"
        },
        {
          "digest": "sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "name": "ose-csi-external-attacher-92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6080440aebd9cca472b093ae",
      "alm_examples": [
        {
          "api_version": "csi.nec.com/v1",
          "kind": "SANStorageCSI",
          "metadata": {
            "name": "sanstoragecsi"
          },
          "spec": {
            "driverName": "san.csi.nec.com",
            "images": {
              "csiDriver": "",
              "externalAttacher": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
              "externalProvisioner": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
              "livenessProbe": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
              "nodeRegistrar": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0"
            },
            "parameters": {
              "controller": {
                "logLevel": 5
              },
              "node": {
                "livenessProbePort": 9808,
                "logLevel": 5,
                "maxVolumesPerNode": 1024
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nec/sanstoragecsi-operator-bundle@sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "bundle_path_digest": "sha256:a547f2b1018aebda3dadf2599d082dd7cfebc3e255571634d97b3b3f6161436e",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-21T15:26:02.018000+00:00",
      "csv_description": "This operator deploys the NEC Storage M Series CSI Driver on OpenShift Container Platform.\n\nNEC Storage M Series CSI Driver provides persistent storage for stateful applications using NEC Storage M Series.\nPlease refer to the documentation of the NEC Storage M Series CSI Driver for detail information about supported NEC Storage Platforms and supported CSI features.\n",
      "csv_display_name": "NEC Storage M Series CSI Operator",
      "csv_metadata_description": "An operator for managing the NEC Storage M Series CSI Driver",
      "csv_name": "sanstoragecsi-operator-bundle.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:32:49.057000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "sanstoragecsi-operator-bundle",
      "provided_apis": [
        {
          "group": "csi.nec.com",
          "kind": "SANStorageCSI",
          "plural": "sanstoragecsis",
          "version": "v1"
        }
      ],
      "provider": "NEC",
      "related_images": [
        {
          "digest": "sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "image": "registry.connect.redhat.com/nec/sanstoragecsi-operator@sha256:1e385777c7ce4bfd48902fbbb8023a6eba3f5dff4dc08e200450bc6f0bcb595c",
          "name": "sanstoragecsi-operator-bundle"
        },
        {
          "digest": "sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "image": "registry.redhat.io/openshift4/ose-csi-node-driver-registrar@sha256:dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0",
          "name": "ose-csi-node-driver-registrar-dcba3ce367bd546c84d412f57589cd6d2fcde6a882791048ed13f1438b6453c0-annotation"
        },
        {
          "digest": "sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "image": "registry.redhat.io/openshift4/ose-csi-livenessprobe@sha256:241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe",
          "name": "ose-csi-livenessprobe-241e288cf83443304834af837f9f71a6216c038dd27196748184aa95790b75fe-annotation"
        },
        {
          "digest": "sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "image": "registry.redhat.io/openshift4/ose-csi-external-provisioner@sha256:faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715",
          "name": "ose-csi-external-provisioner-faefca15575552112c8463ade19ebf5f6ce27a65b9e7286ea74fd6a31a2f2715-annotation"
        },
        {
          "digest": "sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "image": "registry.redhat.io/openshift4/ose-csi-external-attacher@sha256:92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083",
          "name": "ose-csi-external-attacher-92cb1a244497e71cfc27437f07b95645753f64f7f994db20bf9e5cbfb89ae083-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "60808567ebd9cca472b093bd",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:94ceda7ed2ae07580045b723f3c2783a2a454bc6b838ed22edfa54c6f91e8a77",
      "bundle_path_digest": "sha256:94ceda7ed2ae07580045b723f3c2783a2a454bc6b838ed22edfa54c6f91e8a77",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-21T20:04:55.694000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.4.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:42:09.094000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe",
          "name": "openstorage-operator-87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe-annotation"
        },
        {
          "digest": "sha256:87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.5",
      "version_original": "1.4.5"
    },
    {
      "_id": "60808569ebd9cca472b093be",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:94ceda7ed2ae07580045b723f3c2783a2a454bc6b838ed22edfa54c6f91e8a77",
      "bundle_path_digest": "sha256:94ceda7ed2ae07580045b723f3c2783a2a454bc6b838ed22edfa54c6f91e8a77",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-21T20:04:57.143000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.4.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:25:58.424000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe",
          "name": "openstorage-operator-87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe-annotation"
        },
        {
          "digest": "sha256:87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:87eafc31b7aa1e376f56a62fed1f66a33bff0509b2730ce3e211704cec969ebe",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.5",
      "version_original": "1.4.5"
    },
    {
      "_id": "6080ac5eb6f68e29bbcc6c9b",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "imagePullSecrets": [],
            "persistentvolume": {
              "storageclass": "ibmc-file-silver-gid"
            },
            "tm_lichost": "54.152.68.164",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:dd2c905ee7e4713eb0f096a6b5cb46a5d5b299537c6da0e0b8d60f2c5166c8f3",
      "bundle_path_digest": "sha256:dd2c905ee7e4713eb0f096a6b5cb46a5d5b299537c6da0e0b8d60f2c5166c8f3",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-21T22:51:10.597000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods, without the need for changing the system clock on any of the cluster nodes.\n\nEasily deploy Time Machine into a namespace of your choice, and create virtual clocks for the pods running there.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine operator enables time travel of OpenShift pods, without the need for changing the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:25:48.515000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "plural": "timemachines",
          "version": "v1alpha1"
        }
      ],
      "provider": "SolutionSoft Systems, Inc.",
      "related_images": [
        {
          "digest": "sha256:1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969",
          "name": "timemachine-operator-1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969-annotation"
        },
        {
          "digest": "sha256:06e7e96f6840901a4e22056d6c8732c35c8fe771ab352910002887de5c6bc272",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:06e7e96f6840901a4e22056d6c8732c35c8fe771ab352910002887de5c6bc272",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969",
          "name": "manager"
        },
        {
          "digest": "sha256:20804a683f2e51ffcf38e6ad12c4fa21771a16dc8cadbbdddfb17f64b76811d3",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:20804a683f2e51ffcf38e6ad12c4fa21771a16dc8cadbbdddfb17f64b76811d3",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "6080f944ebd9cca472b093c7",
      "alm_examples": [
        {
          "api_version": "csi.hitachi.com/v1",
          "kind": "HSPC",
          "metadata": {
            "name": "hspc",
            "namespace": "kube-system"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/hitachi/hspc-operator-bundle@sha256:972f54cd79659932648c667dce4239db6188559e95ba30d6d312ef66ebb40564",
      "bundle_path_digest": "sha256:972f54cd79659932648c667dce4239db6188559e95ba30d6d312ef66ebb40564",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-22T04:19:16.005000+00:00",
      "csv_description": "## About\nHitachi Storage Plug-in for Containers (HSPC) is a plugin that integrates Hitachi VSP storage into Kubernetes based clusters.\nHSPC provides dynamic persistent volume provisioning capabilities from Hitachi's block storage arrays.\n\nFor full documentation, go to our [Knowledge Base](https://knowledge.hitachivantara.com/Documents/Adapters_and_Drivers/Storage_Adapters_and_Drivers/Containers) and refer to the reference guide for HSPC v3.6.0.\n\n## Requirements\n\n### Supported Driver Version\n\n* HSPC v3.6.0\n\n### Supported Platforms\n\n* OpenShift v4.5, v4.6, v4.7\n\n### Supported Operating Systems\n\n* RHEL 7.x",
      "csv_display_name": "Hitachi Storage Plug-in for Containers",
      "csv_metadata_description": "An operator for managing Hitachi Storage Plug-in for Containers CSI driver",
      "csv_name": "hspc-operator.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:32:23.761000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "hspc-operator",
      "provided_apis": [
        {
          "group": "csi.hitachi.com",
          "kind": "HSPC",
          "plural": "hspcs",
          "version": "v1"
        }
      ],
      "provider": "Hitachi",
      "related_images": [
        {
          "digest": "sha256:238f85c53be2d4fb2c90eb10c30069db70043507a7b18186537a35cead45a6ac",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:238f85c53be2d4fb2c90eb10c30069db70043507a7b18186537a35cead45a6ac",
          "name": "hspc-operator-238f85c53be2d4fb2c90eb10c30069db70043507a7b18186537a35cead45a6ac-annotation"
        },
        {
          "digest": "sha256:238f85c53be2d4fb2c90eb10c30069db70043507a7b18186537a35cead45a6ac",
          "image": "registry.connect.redhat.com/hitachi/hspc-operator@sha256:238f85c53be2d4fb2c90eb10c30069db70043507a7b18186537a35cead45a6ac",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "60817cfd149bd2956e31e07e",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller",
            "namespace": "my-nginx-ingress"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "1.11.1-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:39e36214aae291f6724a9e688b16d702bbe57dfcb06e81de6d0d5efb0a5864d6",
      "bundle_path_digest": "sha256:39e36214aae291f6724a9e688b16d702bbe57dfcb06e81de6d0d5efb0a5864d6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-22T13:41:17.717000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_name": "nginx-ingress-operator.v0.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:26:55.236000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [],
      "provider": "NGINX Inc",
      "related_images": [
        {
          "digest": "sha256:5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284",
          "name": "nginx-ingress-operator-5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284-annotation"
        },
        {
          "digest": "sha256:5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:5e49760b52a497f9e8a9ef7e0fa0437766d3dfef69a007c8567de7d2f3c49284",
          "name": "nginx-ingress-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.2.0",
      "version_original": "0.2.0"
    },
    {
      "_id": "60817d33ebd9cca472b093d0",
      "alm_examples": [
        {
          "api_version": "tm.solution-soft.com/v1alpha1",
          "kind": "TimeMachine",
          "metadata": {
            "name": "timemachine-sample"
          },
          "spec": {
            "imagePullSecrets": [],
            "persistentvolume": {
              "storageclass": "ibmc-file-silver-gid"
            },
            "tm_lichost": "54.152.68.164",
            "tm_licpass": "qwaszx",
            "tm_licport": "57777"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator-bundle@sha256:bd00dfb4a8917454331ef8666ec3a9317d291f2edaa7834ce0fe660ce4c65e28",
      "bundle_path_digest": "sha256:bd00dfb4a8917454331ef8666ec3a9317d291f2edaa7834ce0fe660ce4c65e28",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-22T13:42:11.641000+00:00",
      "csv_description": "Time Machine operator enables time travel of OpenShift pods, without the need for changing the system clock on any of the cluster nodes.\n\nEasily deploy Time Machine into a namespace of your choice, and create virtual clocks for the pods running there.",
      "csv_display_name": "Time Machine Operator",
      "csv_metadata_description": "Time Machine operator enables time travel of OpenShift pods, without the need for changing the system clock on any of the cluster nodes",
      "csv_name": "timemachine-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:29:55.674000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "timemachine-operator",
      "provided_apis": [
        {
          "group": "tm.solution-soft.com",
          "kind": "TimeMachine",
          "plural": "timemachines",
          "version": "v1alpha1"
        }
      ],
      "provider": "SolutionSoft Systems, Inc.",
      "related_images": [
        {
          "digest": "sha256:1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969",
          "name": "timemachine-operator-1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969-annotation"
        },
        {
          "digest": "sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/timemachine-operator@sha256:1d8c7161c89ab5de13d865b59d29a42fd03af89e4f4dc68c14e1249826871969",
          "name": "manager"
        },
        {
          "digest": "sha256:20804a683f2e51ffcf38e6ad12c4fa21771a16dc8cadbbdddfb17f64b76811d3",
          "image": "registry.connect.redhat.com/rhel-timemachine-container/virtual-clock-testing-tool@sha256:20804a683f2e51ffcf38e6ad12c4fa21771a16dc8cadbbdddfb17f64b76811d3",
          "name": "timemachine"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "6081d009b6f68e29bbcc6cb2",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "bundle_path_digest": "sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-04-22T19:35:37.618000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:38:04.387000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": "CognitiveScale",
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "name": "console"
        },
        {
          "digest": "sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "name": "scanner"
        },
        {
          "digest": "sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scan-manager@sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "name": "scan_manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.10",
      "version_original": "1.3.10"
    },
    {
      "_id": "6081d00aebd9cca472b093dd",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "create-ingress": true,
              "enabled": false,
              "replicas": 1
            },
            "policy": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "create-ingress": true,
              "enabled": false,
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "questionnaire-dir": "",
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              }
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "requests": {
                "cpu": "800m",
                "memory": "800Mi"
              },
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "bundle_path_digest": "sha256:7beaacb9261b0ab823443b4f7c3f3c3bff8250caee7f1ca68887e2457e8f963b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-22T19:35:38.929000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:39:15.408000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": "CognitiveScale",
      "related_images": [
        {
          "digest": "sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879",
          "name": "cortex-certifai-operator-4ac0c60eaa087209a7944212a29b5b23bdb946b6139d28ae4f999c3440709879-annotation"
        },
        {
          "digest": "sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:082cf0c8e1289a7e08bb324b512a737e0ea3f618ea5b6fd8cecbb415ff07a230",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:e0b34632bffe7d9ea186e7412030e404d081adb4216145f676cddda46a8746fa",
          "name": "refmodel"
        },
        {
          "digest": "sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:97209356148d10f8e1621ac5246c13ef7f4a6ccb62479e8bbfa3151a768f4f90",
          "name": "console"
        },
        {
          "digest": "sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-policy-chooser@sha256:f54857468f12e918d3b31144d9e63e3c497a408cd4b545c5ef2d60cd74c9a3ba",
          "name": "policy_chooser"
        },
        {
          "digest": "sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:3e554f5baf161ec2297a452316045d20e628fd935c4a6584ba05043be574bf37",
          "name": "scanner"
        },
        {
          "digest": "sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:88d0caeac7265cc1553c7f443cd7f8afddd8cfbb01c916381f8c1e8447a17497",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        },
        {
          "digest": "sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scan-manager@sha256:091e3df91531223aac50435fabc384b1d900aaaf2c5ce639a3e141e2fcb3eb8d",
          "name": "scan_manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.10",
      "version_original": "1.3.10"
    },
    {
      "_id": "608668adcb52424543b09a8e",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9091,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:9858800b6ed984a5f7a8e4754960d53ff9219e2c44924e9a80ab1d3306a85a2d",
      "bundle_path_digest": "sha256:9858800b6ed984a5f7a8e4754960d53ff9219e2c44924e9a80ab1d3306a85a2d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-26T07:15:57.242000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Strom Topologies\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:25:26.058000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0",
          "name": "xray-operator-ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0-annotation"
        },
        {
          "digest": "sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:47cc8081bf34936d0d99f6c554e9f43ec2087c8777aafe1b704b68c8fe5521f3",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:47cc8081bf34936d0d99f6c554e9f43ec2087c8777aafe1b704b68c8fe5521f3",
          "name": "domain"
        },
        {
          "digest": "sha256:880d1bed7d926b552f0563726847b2d1fb3164fccb77e878140abdfa8e791091",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:880d1bed7d926b552f0563726847b2d1fb3164fccb77e878140abdfa8e791091",
          "name": "cep"
        },
        {
          "digest": "sha256:0e71d984f0598c7fbb95ebe2c96d1a6a7f64c785a72fce307cf56bbbd383ab9d",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:0e71d984f0598c7fbb95ebe2c96d1a6a7f64c785a72fce307cf56bbbd383ab9d",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:c7db7351204eee09c0795a0ff001dfef9a99a4d4a713ded908535d7d2bb7c6d8",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:c7db7351204eee09c0795a0ff001dfef9a99a4d4a713ded908535d7d2bb7c6d8",
          "name": "ml"
        },
        {
          "digest": "sha256:d178b171db76c2a6ce36a2ed0951d946cb93564c108ed0511dadd0db386961cf",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:d178b171db76c2a6ce36a2ed0951d946cb93564c108ed0511dadd0db386961cf",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:d1ee5077efc363352b781c79ffb5448260aacf42fada6ae12db3f794a4b68262",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:d1ee5077efc363352b781c79ffb5448260aacf42fada6ae12db3f794a4b68262",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.324.0",
      "version_original": "1.324.0"
    },
    {
      "_id": "60867285b6f68e29bbcc6cbf",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9091,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:9858800b6ed984a5f7a8e4754960d53ff9219e2c44924e9a80ab1d3306a85a2d",
      "bundle_path_digest": "sha256:9858800b6ed984a5f7a8e4754960d53ff9219e2c44924e9a80ab1d3306a85a2d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-26T07:57:57.870000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Strom Topologies\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:46:09.181000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0",
          "name": "xray-operator-ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0-annotation"
        },
        {
          "digest": "sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:47cc8081bf34936d0d99f6c554e9f43ec2087c8777aafe1b704b68c8fe5521f3",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:47cc8081bf34936d0d99f6c554e9f43ec2087c8777aafe1b704b68c8fe5521f3",
          "name": "domain"
        },
        {
          "digest": "sha256:880d1bed7d926b552f0563726847b2d1fb3164fccb77e878140abdfa8e791091",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:880d1bed7d926b552f0563726847b2d1fb3164fccb77e878140abdfa8e791091",
          "name": "cep"
        },
        {
          "digest": "sha256:0e71d984f0598c7fbb95ebe2c96d1a6a7f64c785a72fce307cf56bbbd383ab9d",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:0e71d984f0598c7fbb95ebe2c96d1a6a7f64c785a72fce307cf56bbbd383ab9d",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:c7db7351204eee09c0795a0ff001dfef9a99a4d4a713ded908535d7d2bb7c6d8",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:c7db7351204eee09c0795a0ff001dfef9a99a4d4a713ded908535d7d2bb7c6d8",
          "name": "ml"
        },
        {
          "digest": "sha256:d178b171db76c2a6ce36a2ed0951d946cb93564c108ed0511dadd0db386961cf",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:d178b171db76c2a6ce36a2ed0951d946cb93564c108ed0511dadd0db386961cf",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:d1ee5077efc363352b781c79ffb5448260aacf42fada6ae12db3f794a4b68262",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:d1ee5077efc363352b781c79ffb5448260aacf42fada6ae12db3f794a4b68262",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.324.0",
      "version_original": "1.324.0"
    },
    {
      "_id": "60868611cb52424543b09a91",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9091,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:9858800b6ed984a5f7a8e4754960d53ff9219e2c44924e9a80ab1d3306a85a2d",
      "bundle_path_digest": "sha256:9858800b6ed984a5f7a8e4754960d53ff9219e2c44924e9a80ab1d3306a85a2d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-26T09:21:21.355000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Strom Topologies\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:33:43.397000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0",
          "name": "xray-operator-ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0-annotation"
        },
        {
          "digest": "sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:47cc8081bf34936d0d99f6c554e9f43ec2087c8777aafe1b704b68c8fe5521f3",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:47cc8081bf34936d0d99f6c554e9f43ec2087c8777aafe1b704b68c8fe5521f3",
          "name": "domain"
        },
        {
          "digest": "sha256:880d1bed7d926b552f0563726847b2d1fb3164fccb77e878140abdfa8e791091",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:880d1bed7d926b552f0563726847b2d1fb3164fccb77e878140abdfa8e791091",
          "name": "cep"
        },
        {
          "digest": "sha256:0e71d984f0598c7fbb95ebe2c96d1a6a7f64c785a72fce307cf56bbbd383ab9d",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:0e71d984f0598c7fbb95ebe2c96d1a6a7f64c785a72fce307cf56bbbd383ab9d",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:c7db7351204eee09c0795a0ff001dfef9a99a4d4a713ded908535d7d2bb7c6d8",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:c7db7351204eee09c0795a0ff001dfef9a99a4d4a713ded908535d7d2bb7c6d8",
          "name": "ml"
        },
        {
          "digest": "sha256:d178b171db76c2a6ce36a2ed0951d946cb93564c108ed0511dadd0db386961cf",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:d178b171db76c2a6ce36a2ed0951d946cb93564c108ed0511dadd0db386961cf",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:d1ee5077efc363352b781c79ffb5448260aacf42fada6ae12db3f794a4b68262",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:d1ee5077efc363352b781c79ffb5448260aacf42fada6ae12db3f794a4b68262",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.324.0",
      "version_original": "1.324.0"
    },
    {
      "_id": "608693b0ebd9cca472b093f7",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9091,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:9858800b6ed984a5f7a8e4754960d53ff9219e2c44924e9a80ab1d3306a85a2d",
      "bundle_path_digest": "sha256:9858800b6ed984a5f7a8e4754960d53ff9219e2c44924e9a80ab1d3306a85a2d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-26T10:19:28.994000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Strom Topologies\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.324.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:47:37.090000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0",
          "name": "xray-operator-ba83f0549503a479f5260da162423105e16680b24bd5ad05a1524d856bb887f0-annotation"
        },
        {
          "digest": "sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:ba8ad8c1b72e208b3d65daa7499ffbf457cc894e1b62e5071eaf6cc71fc496bd",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:c05110c858fab5fbc0eff803b7a3ac931a55ae80c456030f0c2a929f3d16c05f",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:47cc8081bf34936d0d99f6c554e9f43ec2087c8777aafe1b704b68c8fe5521f3",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:47cc8081bf34936d0d99f6c554e9f43ec2087c8777aafe1b704b68c8fe5521f3",
          "name": "domain"
        },
        {
          "digest": "sha256:880d1bed7d926b552f0563726847b2d1fb3164fccb77e878140abdfa8e791091",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:880d1bed7d926b552f0563726847b2d1fb3164fccb77e878140abdfa8e791091",
          "name": "cep"
        },
        {
          "digest": "sha256:0e71d984f0598c7fbb95ebe2c96d1a6a7f64c785a72fce307cf56bbbd383ab9d",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:0e71d984f0598c7fbb95ebe2c96d1a6a7f64c785a72fce307cf56bbbd383ab9d",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:d964db23daeadca53a4cad3d72de23fec9b013e33ed27200b8ebcd6afe93bc66",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:c7db7351204eee09c0795a0ff001dfef9a99a4d4a713ded908535d7d2bb7c6d8",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:c7db7351204eee09c0795a0ff001dfef9a99a4d4a713ded908535d7d2bb7c6d8",
          "name": "ml"
        },
        {
          "digest": "sha256:d178b171db76c2a6ce36a2ed0951d946cb93564c108ed0511dadd0db386961cf",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:d178b171db76c2a6ce36a2ed0951d946cb93564c108ed0511dadd0db386961cf",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:d1ee5077efc363352b781c79ffb5448260aacf42fada6ae12db3f794a4b68262",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:d1ee5077efc363352b781c79ffb5448260aacf42fada6ae12db3f794a4b68262",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.324.0",
      "version_original": "1.324.0"
    },
    {
      "_id": "60872e765ba749c049cac5c4",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.17.5-11"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:af901851ba61bc1056e59d0d9b21d1d04c8fd82e87fdd80261e4631f96489bf8",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:109ae78d718c0cc410d157ed4737d94445215a4e06894bdebf467bdc7a25d5dd",
      "bundle_path_digest": "sha256:109ae78d718c0cc410d157ed4737d94445215a4e06894bdebf467bdc7a25d5dd",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-26T21:19:50.495000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n## Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n# Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.11",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:35:06.950000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": "JFrog",
      "related_images": [
        {
          "digest": "sha256:ba7ae6297c1ec061a45a81f3c7b9bf1badb08785eb2133882f0a65583f7e0fc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:ba7ae6297c1ec061a45a81f3c7b9bf1badb08785eb2133882f0a65583f7e0fc4",
          "name": "artifactory-operator-ba7ae6297c1ec061a45a81f3c7b9bf1badb08785eb2133882f0a65583f7e0fc4-annotation"
        },
        {
          "digest": "sha256:ba7ae6297c1ec061a45a81f3c7b9bf1badb08785eb2133882f0a65583f7e0fc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:ba7ae6297c1ec061a45a81f3c7b9bf1badb08785eb2133882f0a65583f7e0fc4",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:282768c41f3de2257e0e51753927e8a7a234444b0559fafb7c534a9522db1562",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:282768c41f3de2257e0e51753927e8a7a234444b0559fafb7c534a9522db1562",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:06892e1e0d5e017d312ba5231cfeaa459be6937c7e0fa373062794084952dfb1",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:06892e1e0d5e017d312ba5231cfeaa459be6937c7e0fa373062794084952dfb1",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:af901851ba61bc1056e59d0d9b21d1d04c8fd82e87fdd80261e4631f96489bf8",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:af901851ba61bc1056e59d0d9b21d1d04c8fd82e87fdd80261e4631f96489bf8",
          "name": "init-af901851ba61bc1056e59d0d9b21d1d04c8fd82e87fdd80261e4631f96489bf8-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.11",
      "version_original": "1.1.11"
    },
    {
      "_id": "60875bdbcb52424543b09a96",
      "alm_examples": [
        {
          "api_version": "operator.cert-manager.io/v1alpha1",
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "bundle_path_digest": "sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-27T00:33:31.965000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:43:08.455000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Jetstack",
      "related_images": [
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-controller:v1.1.0-ubi",
          "name": "cert-manager-controller"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-acmesolver:v1.1.0-ubi",
          "name": "cert-manager-acmesolver"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-cainjector:v1.1.0-ubi",
          "name": "cert-manager-cainjector"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-webhook:v1.1.0-ubi",
          "name": "cert-manager-webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60875840b6f68e29bbcc6cc6",
      "alm_examples": [
        {
          "api_version": "operator.cert-manager.io/v1alpha1",
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "bundle_path_digest": "sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-27T00:18:08.256000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:25:59.712000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Jetstack",
      "related_images": [
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-controller:v1.1.0-ubi",
          "name": "cert-manager-controller"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-acmesolver:v1.1.0-ubi",
          "name": "cert-manager-acmesolver"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-cainjector:v1.1.0-ubi",
          "name": "cert-manager-cainjector"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-webhook:v1.1.0-ubi",
          "name": "cert-manager-webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60875841b6f68e29bbcc6cc7",
      "alm_examples": [
        {
          "api_version": "operator.cert-manager.io/v1alpha1",
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "bundle_path_digest": "sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-27T00:18:09.417000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:28:22.748000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Jetstack",
      "related_images": [
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-controller:v1.1.0-ubi",
          "name": "cert-manager-controller"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-acmesolver:v1.1.0-ubi",
          "name": "cert-manager-acmesolver"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-cainjector:v1.1.0-ubi",
          "name": "cert-manager-cainjector"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-webhook:v1.1.0-ubi",
          "name": "cert-manager-webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "60875bdaebd9cca472b09402",
      "alm_examples": [
        {
          "api_version": "operator.cert-manager.io/v1alpha1",
          "kind": "CertManager",
          "metadata": {
            "name": "cert-manager",
            "namespace": "cert-manager"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "bundle_path_digest": "sha256:7bff5bc7c3ec122f641f5b73adb1274ac0a5e0e5642270f74e91346e42c1c76c",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-27T00:33:30.290000+00:00",
      "csv_description": "x509 certificate management for Kubernetes",
      "csv_display_name": "cert-manager",
      "csv_metadata_description": "x509 certificate management for Kubernetes",
      "csv_name": "cert-manager-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:32:36.916000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": "Jetstack",
      "related_images": [
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-controller:v1.1.0-ubi",
          "name": "cert-manager-controller"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-acmesolver:v1.1.0-ubi",
          "name": "cert-manager-acmesolver"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-cainjector:v1.1.0-ubi",
          "name": "cert-manager-cainjector"
        },
        {
          "digest": null,
          "image": "registry.connect.redhat.com/jetstack/cert-manager-webhook:v1.1.0-ubi",
          "name": "cert-manager-webhook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "6087ace8ebd9cca472b09406",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "bundle_path_digest": "sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-04-27T06:19:20.337000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:53:09.313000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator-4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712-annotation"
        },
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "image": "registry.connect.redhat.com/ibm/couchdb2@sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "name": "couchdb2_amd64"
        },
        {
          "digest": "sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "name": "couchdb3_amd64"
        },
        {
          "digest": "sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "name": "mgmt_amd64"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.4.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.3",
      "version_original": "1.4.3"
    },
    {
      "_id": "6087a5e8149bd2956e31e0b5",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "bundle_path_digest": "sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-04-27T05:49:28.422000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:37:21.512000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator-4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712-annotation"
        },
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "image": "registry.connect.redhat.com/ibm/couchdb2@sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "name": "couchdb2_amd64"
        },
        {
          "digest": "sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "name": "couchdb3_amd64"
        },
        {
          "digest": "sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "name": "mgmt_amd64"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.4.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.4.3",
      "version_original": "1.4.3"
    },
    {
      "_id": "6087ace2ebd9cca472b09405",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "bundle_path_digest": "sha256:b660525be732487acdd72219f301c9d572dd29d5d9b1e1e771da90b1d3652a21",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-27T06:19:14.530000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:26:01.701000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator-4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712-annotation"
        },
        {
          "digest": "sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:4085e866d75ed24aff02c4b4d911db8532247dc3f4d0678bb098383948f8b712",
          "name": "couchdb-operator"
        },
        {
          "digest": "sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "image": "registry.connect.redhat.com/ibm/couchdb2@sha256:187cd43e812dbf739b04e4d796c2a944293d0763110cc4a90d56fef2d9847d0d",
          "name": "couchdb2_amd64"
        },
        {
          "digest": "sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:bd6c28874051f8cc8fbe8cb2ab2f1d6f835c37a2356efa91ec8330e17fffd607",
          "name": "couchdb3_amd64"
        },
        {
          "digest": "sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:2a1dc9aae4d68f28f2b12efa66786da2c484b1410aae8d678152c3e479253d93",
          "name": "mgmt_amd64"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.4.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.3",
      "version_original": "1.4.3"
    },
    {
      "_id": "6087a93db6f68e29bbcc6ccb",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "cic"
          },
          "spec": {
            "adcCredentialSecret": "",
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false
            },
            "ignoreNodeExternalIP": false,
            "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
            "ingressClass": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsCookieVersion": "0",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": "",
            "nsVIP": "",
            "openshift": true,
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceClass": "",
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:1cf84c905b444c613f67f5b2a7b80015226b6a99c5723503e87c795a719e6347",
      "bundle_path_digest": "sha256:1cf84c905b444c613f67f5b2a7b80015226b6a99c5723503e87c795a719e6347",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-27T06:03:41.920000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:10:20.950000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "citrix",
      "related_images": [
        {
          "digest": "sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "name": "citrix-k8s-ingress-controller-a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa-annotation"
        },
        {
          "digest": "sha256:1fee9f7563afd0878288d60dce2c263a6333b18b40d88898ed0fca92e6e7048f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1fee9f7563afd0878288d60dce2c263a6333b18b40d88898ed0fca92e6e7048f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "name": "manager"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "6087a948ebd9cca472b09404",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "cic"
          },
          "spec": {
            "adcCredentialSecret": "",
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false
            },
            "ignoreNodeExternalIP": false,
            "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
            "ingressClass": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsCookieVersion": "0",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": "",
            "nsVIP": "",
            "openshift": true,
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceClass": "",
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:1cf84c905b444c613f67f5b2a7b80015226b6a99c5723503e87c795a719e6347",
      "bundle_path_digest": "sha256:1cf84c905b444c613f67f5b2a7b80015226b6a99c5723503e87c795a719e6347",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-27T06:03:52.318000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:14:41.359000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "citrix",
      "related_images": [
        {
          "digest": "sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "name": "citrix-k8s-ingress-controller-a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa-annotation"
        },
        {
          "digest": "sha256:1fee9f7563afd0878288d60dce2c263a6333b18b40d88898ed0fca92e6e7048f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1fee9f7563afd0878288d60dce2c263a6333b18b40d88898ed0fca92e6e7048f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "name": "manager"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "6087acb6b6f68e29bbcc6ccc",
      "alm_examples": [
        {
          "api_version": "citrix.com/v1alpha1",
          "kind": "CitrixIngressController",
          "metadata": {
            "name": "cic"
          },
          "spec": {
            "adcCredentialSecret": "",
            "coeConfig": {
              "distributedTracing": {
                "enable": false,
                "samplingrate": 100
              },
              "endpoint": {
                "server": ""
              },
              "required": false,
              "timeseries": {
                "auditlogs": {
                  "enable": false
                },
                "events": {
                  "enable": false
                },
                "metrics": {
                  "enable": false,
                  "mode": "avro"
                },
                "port": 30002
              },
              "transactions": {
                "enable": false,
                "port": 30001
              }
            },
            "crds": {
              "install": true,
              "retainOnDelete": false
            },
            "defaultSSLCertSecret": "",
            "entityPrefix": "",
            "exporter": {
              "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
              "ports": {
                "containerPort": 8888
              },
              "pullPolicy": "IfNotPresent",
              "required": false
            },
            "ignoreNodeExternalIP": false,
            "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
            "ingressClass": "",
            "ipam": false,
            "kubernetesURL": "",
            "license": {
              "accept": false
            },
            "logLevel": "INFO",
            "logProxy": "",
            "namespaceLabels": "",
            "nodeSelector": {
              "key": "",
              "value": ""
            },
            "nodeWatch": false,
            "nsCookieVersion": "0",
            "nsHTTP2ServerSide": "OFF",
            "nsIP": "x.x.x.x",
            "nsPort": 443,
            "nsProtocol": "HTTPS",
            "nsSNIPS": "",
            "nsVIP": "",
            "openshift": true,
            "podIPsforServiceGroupMembers": false,
            "pullPolicy": "IfNotPresent",
            "routeLabels": "",
            "serviceAccount": {
              "create": true
            },
            "serviceClass": "",
            "setAsDefaultIngressClass": false,
            "tolerations": [],
            "updateIngressStatus": false
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-bundle@sha256:1cf84c905b444c613f67f5b2a7b80015226b6a99c5723503e87c795a719e6347",
      "bundle_path_digest": "sha256:1cf84c905b444c613f67f5b2a7b80015226b6a99c5723503e87c795a719e6347",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-04-27T06:18:30.088000+00:00",
      "csv_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an OpenShift environment.",
      "csv_display_name": "Citrix Ingress Controller",
      "csv_metadata_description": "Citrix provides an ingress controller for Citrix ADC MPX (hardware), Citrix ADC VPX (virtualized), and Citrix ADC CPX (containerized) for on-prem and cloud deployments. It automatically configures one or more Citrix ADC based on the Ingress resource configuration. This operator can be used deploy Citrix Ingress Controller in an Openshift environment.",
      "csv_name": "citrix-ingress-controller-operator.v1.13.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:10:49.493000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "citrix-ingress-controller-operator",
      "provided_apis": [
        {
          "group": "citrix.com",
          "kind": "CitrixIngressController",
          "plural": "citrixingresscontrollers",
          "version": "v1alpha1"
        }
      ],
      "provider": "citrix",
      "related_images": [
        {
          "digest": "sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "name": "citrix-k8s-ingress-controller-a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa-annotation"
        },
        {
          "digest": "sha256:1fee9f7563afd0878288d60dce2c263a6333b18b40d88898ed0fca92e6e7048f",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:1fee9f7563afd0878288d60dce2c263a6333b18b40d88898ed0fca92e6e7048f",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "image": "registry.connect.redhat.com/citrix/citrix-k8s-ingress-controller@sha256:a41bf2a59a5678d757c18c2d995e10f035676128726ded4b84d61522c3fca4fa",
          "name": "manager"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "cic"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "exporter"
        },
        {
          "digest": "sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "image": "registry.connect.redhat.com/citrix/citrix-ingress-controller@sha256:f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0",
          "name": "citrix-ingress-controller-f81763b127d4320e6fcefdefc2595e85c02e0be4e7bced0736338039bdff32a0-annotation"
        },
        {
          "digest": "sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "image": "registry.connect.redhat.com/citrix/citrix-adc-metrics-exporter@sha256:c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe",
          "name": "citrix-adc-metrics-exporter-c495fb88a82bac7cd92e13ebf52c24ebf425772acb7f43ab6bd753ffaddc5dfe-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.13.20",
      "version_original": "1.13.20"
    },
    {
      "_id": "6087c68b149bd2956e31e0b7",
      "alm_examples": [
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "my-replica-set"
          },
          "spec": {
            "credentials": "my-credentials",
            "members": 3,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "type": "ReplicaSet",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDB",
          "metadata": {
            "name": "sample-sharded-cluster"
          },
          "spec": {
            "configServerCount": 3,
            "credentials": "my-credentials",
            "mongodsPerShardCount": 3,
            "mongosCount": 2,
            "opsManager": {
              "configMapRef": {
                "name": "my-project"
              }
            },
            "persistent": true,
            "shardCount": 1,
            "type": "ShardedCluster",
            "version": "4.4.0-ent"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBOpsManager",
          "metadata": {
            "name": "ops-manager"
          },
          "spec": {
            "adminCredentials": "ops-manager-admin",
            "applicationDatabase": {
              "members": 3,
              "persistent": true,
              "podSpec": {
                "cpu": 1
              }
            },
            "configuration": {
              "mms.fromEmailAddr": "admin@thecompany.com"
            },
            "externalConnectivity": {
              "type": "LoadBalancer"
            },
            "version": "4.4.1"
          }
        },
        {
          "api_version": "mongodb.com/v1",
          "kind": "MongoDBUser",
          "metadata": {
            "name": "my-replica-set-x509-user"
          },
          "spec": {
            "db": "$external",
            "mongodbResourceRef": {
              "name": "my-replica-set"
            },
            "roles": [
              {
                "db": "admin",
                "name": "dbOwner"
              }
            ],
            "username": "CN=my-replica-set-x509-user,OU=cloud,O=MongoDB,L=New York,ST=New York,C=US"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:e73abd7b4086129ecd1a5f48209af59124ba9d2699de0c90b393377fe9596e2e",
      "bundle_path_digest": "sha256:e73abd7b4086129ecd1a5f48209af59124ba9d2699de0c90b393377fe9596e2e",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-27T08:08:43.915000+00:00",
      "csv_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB\ninto Kubernetes clusters, using our management, monitoring and backup\nplatforms, Ops Manager and Cloud Manager.\n\n## Before You Start\n\nTo start using the operator you''ll need an account in MongoDB Cloud Manager or\na MongoDB Ops Manager deployment.\n\n* [Create a Secret with your OpsManager API key](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-operator-credentials/#procedure)\n\n* [Create a ConfigMap with your OpsManager project ID and URL](https://docs.mongodb.com/kubernetes-operator/stable/tutorial/create-project-using-configmap/)\n\nBy installing this integration, you will be able to deploy MongoDB instances\nwith a single simple command.\n\n## Required Parameters\n\n* `opsManager` or `cloudManager` - Enter the name of the ConfigMap containing project information\n* `credentials` - Enter the name of the Secret containing your OpsManager credentials\n* `type` - Enter MongoDB Deployment Types (\"Standalone\", \"ReplicaSet\", \"ShardedCluster\"\n\n## Supported MongoDB Deployment Types ##\n\n* Standalone: An instance of mongod that is running as a single server and\nnot as part of a replica set, this is, it does not do any kind of\nreplication.\n\n* Replica Set: A replica set in MongoDB is a group of mongod processes that\nmaintain the same data set. Replica sets provide redundancy and high\navailability, and are the basis for all production deployments. This section\nintroduces replication in MongoDB as well as the components and architecture\nof replica sets. The section also provides tutorials for common tasks\nrelated to replica sets.\n\n* Sharded Cluster: The set of nodes comprising a sharded MongoDB deployment.\nA sharded cluster consists of config servers, shards, and one or more mongos\nrouting processes. Sharding is a A database architecture that partitions\ndata by key ranges and distributes the data among two or more database\ninstances. Sharding enables horizontal scaling.\n\n## Security ##\n\nThe operator can enable TLS for all traffic between servers and also between\nclients and servers. Before enabling `security.tls.enabled` to `true` you\nshould create your certificates.  or you can leave the operator to create all\nthe certificates for you. The operator ability to create certs is been\ndepricted due to Kuberentes API changes.\n\nFor more information, please read the official MongoDB\nKubernetes Operator  [docs](https://docs.mongodb.com/kubernetes-operator/stable/).\n",
      "csv_display_name": "MongoDB Enterprise Operator",
      "csv_metadata_description": "The MongoDB Enterprise Kubernetes Operator enables easy deploys of MongoDB into Kubernetes clusters, using our management, monitoring and backup platforms, Ops Manager and Cloud Manager.",
      "csv_name": "mongodb-enterprise.v1.10.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:40:43.805000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [
        {
          "group": "mongodb.com",
          "kind": "MongoDB",
          "plural": "mongodb",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBUser",
          "plural": "mongodbusers",
          "version": "v1"
        },
        {
          "group": "mongodb.com",
          "kind": "MongoDBOpsManager",
          "plural": "opsmanagers",
          "version": "v1"
        }
      ],
      "provider": "MongoDB, Inc",
      "related_images": [
        {
          "digest": "sha256:80d567c6a5b53c263626beac6c1518ad292e30e6337d2fd4cba977e49191ccba",
          "image": "registry.connect.redhat.com/mongodb/enterprise-operator@sha256:80d567c6a5b53c263626beac6c1518ad292e30e6337d2fd4cba977e49191ccba",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.10.0",
      "version_original": "1.10.0"
    },
    {
      "_id": "6087c945ebd9cca472b09409",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "CSIScaleOperator",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/managed-by": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/name": "ibm-spectrum-scale-csi-operator",
              "release": "ibm-spectrum-scale-csi-operator"
            },
            "name": "ibm-spectrum-scale-csi"
          },
          "spec": {
            "attacherNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "clusters": [
              {
                "id": "< Primary Cluster ID - WARNING - THIS IS A STRING NEEDS YAML QUOTES! >",
                "primary": {
                  "primaryFs": "< Primary Filesystem >"
                },
                "restApi": [
                  {
                    "guiHost": "< Primary cluster GUI IP/Hostname>"
                  }
                ],
                "secrets": "secret1",
                "secureSslMode": false
              }
            ],
            "pluginNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "provisionerNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "snapshotterNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator-bundle@sha256:042e43455cf5b9fe1acf408661bf8163a3f561a22baa3ef82e2580f447396a81",
      "bundle_path_digest": "sha256:042e43455cf5b9fe1acf408661bf8163a3f561a22baa3ef82e2580f447396a81",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-27T08:20:21.648000+00:00",
      "csv_description": "The IBM Spectrum Scale CSI Operator for Kubernetes installs, manages, \nupgrades the IBM Spectrum Scale CSI Driver on OpenShift and Kubernetes \nfor provisioning of persistent volumes on IBM Spectrum Scale.\n\n### Documentation\nDocumentation for IBM Spectrum Scale CSI Driver and Operator can be found at [IBM Documentation](https://www.ibm.com/docs/en/spectrum-scale-csi).\n\n### Getting help\nIBM Spectrum Scale CSI driver is part of the IBM Spectrum Scale offering.\nPlease follow the [IBM support procedure](https://www.ibm.com/mysupport/s/?language=en_US) for any issues with the driver.\n\nFor non-urgent issues, suggestions, recommendations feel free to open an \nissue in [github](https://github.com/IBM/ibm-spectrum-scale-csi). Issues will be addressed as team availability permits.\n\n\n**Note:** Custom Resource example represents the minimum settings needed to run \nthe operator. If your environment needs more advanced settings (e.g. remote clusters, \nnode mapping, image pull secret, Taint and Toleration etc.) please refer to \nthe sample [Custom Resource](https://raw.githubusercontent.com/IBM/ibm-spectrum-scale-csi/v2.2.0/operator/config/samples/csiscaleoperators.csi.ibm.com_cr.yaml).\n",
      "csv_display_name": "IBM Spectrum Scale CSI Plugin Operator",
      "csv_metadata_description": "An operator for deploying and managing the IBM Spectrum Scale CSI Driver.",
      "csv_name": "ibm-spectrum-scale-csi-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:44:18.544000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "ibm-spectrum-scale-csi",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "CSIScaleOperator",
          "plural": "csiscaleoperators",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "name": "ibm-spectrum-scale-csi-operator-dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8-annotation"
        },
        {
          "digest": "sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "6087df9bb6f68e29bbcc6ccd",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "CSIScaleOperator",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/managed-by": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/name": "ibm-spectrum-scale-csi-operator",
              "release": "ibm-spectrum-scale-csi-operator"
            },
            "name": "ibm-spectrum-scale-csi"
          },
          "spec": {
            "attacherNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "clusters": [
              {
                "id": "< Primary Cluster ID - WARNING - THIS IS A STRING NEEDS YAML QUOTES! >",
                "primary": {
                  "primaryFs": "< Primary Filesystem >"
                },
                "restApi": [
                  {
                    "guiHost": "< Primary cluster GUI IP/Hostname>"
                  }
                ],
                "secrets": "secret1",
                "secureSslMode": false
              }
            ],
            "pluginNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "provisionerNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "snapshotterNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator-bundle@sha256:042e43455cf5b9fe1acf408661bf8163a3f561a22baa3ef82e2580f447396a81",
      "bundle_path_digest": "sha256:042e43455cf5b9fe1acf408661bf8163a3f561a22baa3ef82e2580f447396a81",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-27T09:55:39.108000+00:00",
      "csv_description": "The IBM Spectrum Scale CSI Operator for Kubernetes installs, manages, \nupgrades the IBM Spectrum Scale CSI Driver on OpenShift and Kubernetes \nfor provisioning of persistent volumes on IBM Spectrum Scale.\n\n### Documentation\nDocumentation for IBM Spectrum Scale CSI Driver and Operator can be found at [IBM Documentation](https://www.ibm.com/docs/en/spectrum-scale-csi).\n\n### Getting help\nIBM Spectrum Scale CSI driver is part of the IBM Spectrum Scale offering.\nPlease follow the [IBM support procedure](https://www.ibm.com/mysupport/s/?language=en_US) for any issues with the driver.\n\nFor non-urgent issues, suggestions, recommendations feel free to open an \nissue in [github](https://github.com/IBM/ibm-spectrum-scale-csi). Issues will be addressed as team availability permits.\n\n\n**Note:** Custom Resource example represents the minimum settings needed to run \nthe operator. If your environment needs more advanced settings (e.g. remote clusters, \nnode mapping, image pull secret, Taint and Toleration etc.) please refer to \nthe sample [Custom Resource](https://raw.githubusercontent.com/IBM/ibm-spectrum-scale-csi/v2.2.0/operator/config/samples/csiscaleoperators.csi.ibm.com_cr.yaml).\n",
      "csv_display_name": "IBM Spectrum Scale CSI Plugin Operator",
      "csv_metadata_description": "An operator for deploying and managing the IBM Spectrum Scale CSI Driver.",
      "csv_name": "ibm-spectrum-scale-csi-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:27:51.632000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-spectrum-scale-csi",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "CSIScaleOperator",
          "plural": "csiscaleoperators",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "name": "ibm-spectrum-scale-csi-operator-dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8-annotation"
        },
        {
          "digest": "sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "6087dffeebd9cca472b0940b",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "CSIScaleOperator",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/managed-by": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/name": "ibm-spectrum-scale-csi-operator",
              "release": "ibm-spectrum-scale-csi-operator"
            },
            "name": "ibm-spectrum-scale-csi"
          },
          "spec": {
            "attacherNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "clusters": [
              {
                "id": "< Primary Cluster ID - WARNING - THIS IS A STRING NEEDS YAML QUOTES! >",
                "primary": {
                  "primaryFs": "< Primary Filesystem >"
                },
                "restApi": [
                  {
                    "guiHost": "< Primary cluster GUI IP/Hostname>"
                  }
                ],
                "secrets": "secret1",
                "secureSslMode": false
              }
            ],
            "pluginNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "provisionerNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "snapshotterNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ]
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator-bundle@sha256:042e43455cf5b9fe1acf408661bf8163a3f561a22baa3ef82e2580f447396a81",
      "bundle_path_digest": "sha256:042e43455cf5b9fe1acf408661bf8163a3f561a22baa3ef82e2580f447396a81",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-27T09:57:18.546000+00:00",
      "csv_description": "The IBM Spectrum Scale CSI Operator for Kubernetes installs, manages, \nupgrades the IBM Spectrum Scale CSI Driver on OpenShift and Kubernetes \nfor provisioning of persistent volumes on IBM Spectrum Scale.\n\n### Documentation\nDocumentation for IBM Spectrum Scale CSI Driver and Operator can be found at [IBM Documentation](https://www.ibm.com/docs/en/spectrum-scale-csi).\n\n### Getting help\nIBM Spectrum Scale CSI driver is part of the IBM Spectrum Scale offering.\nPlease follow the [IBM support procedure](https://www.ibm.com/mysupport/s/?language=en_US) for any issues with the driver.\n\nFor non-urgent issues, suggestions, recommendations feel free to open an \nissue in [github](https://github.com/IBM/ibm-spectrum-scale-csi). Issues will be addressed as team availability permits.\n\n\n**Note:** Custom Resource example represents the minimum settings needed to run \nthe operator. If your environment needs more advanced settings (e.g. remote clusters, \nnode mapping, image pull secret, Taint and Toleration etc.) please refer to \nthe sample [Custom Resource](https://raw.githubusercontent.com/IBM/ibm-spectrum-scale-csi/v2.2.0/operator/config/samples/csiscaleoperators.csi.ibm.com_cr.yaml).\n",
      "csv_display_name": "IBM Spectrum Scale CSI Plugin Operator",
      "csv_metadata_description": "An operator for deploying and managing the IBM Spectrum Scale CSI Driver.",
      "csv_name": "ibm-spectrum-scale-csi-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:57:26.925000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "ibm-spectrum-scale-csi",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "CSIScaleOperator",
          "plural": "csiscaleoperators",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "name": "ibm-spectrum-scale-csi-operator-dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8-annotation"
        },
        {
          "digest": "sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:dd096f4c0d1a1f86d7d8480c74e8dfcebc9a14bbc17d58f987d8bbc4c22853c8",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "6089df64b6f68e29bbcc6ce9",
      "alm_examples": [
        {
          "api_version": "fep.fujitsu.io/v2",
          "kind": "FEPCluster",
          "metadata": {
            "name": "new-fep"
          },
          "spec": {
            "fep": {
              "customAnnotations": {
                "allDeployments": {}
              },
              "forceSsl": true,
              "image": {
                "pullPolicy": "IfNotPresent"
              },
              "instances": "1",
              "mcSpec": {
                "limits": {
                  "cpu": "500m",
                  "memory": "700Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "512Mi"
                }
              },
              "podAntiAffinity": false,
              "podDisruptionBudget": false,
              "servicePort": 27500,
              "syncMode": "off",
              "sysExtraLogging": false
            },
            "fepChildCrVal": {
              "backup": {
                "image": {
                  "pullPolicy": "IfNotPresent"
                },
                "mcSpec": {
                  "limits": {
                    "cpu": "0.2",
                    "memory": "300Mi"
                  },
                  "requests": {
                    "cpu": "0.1",
                    "memory": "200Mi"
                  }
                },
                "pgbackrestParams": " ",
                "postScript": " ",
                "preScript": " ",
                "schedule": {
                  "num": 2
                },
                "schedule1": {
                  "schedule": "15 0 * * 0",
                  "type": "full"
                },
                "schedule2": {
                  "schedule": "15 0 * * 1-6",
                  "type": "incr"
                },
                "schedule3": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule4": {
                  "schedule": " ",
                  "type": " "
                },
                "schedule5": {
                  "schedule": " ",
                  "type": " "
                }
              },
              "customPgAudit": "# define pg audit custom params here to override defaults.\n# if log volume is not defined, log_directory should be \n# changed to '/database/userdata/data/log'\n[output]\nlogger = 'auditlog'\nlog_directory = '/database/log/audit'\n[rule]\n",
              "customPgHba": "# define pg_hba custom rules here to be merged with default rules.\n# TYPE     DATABASE        USER        ADDRESS        METHOD\n",
              "customPgParams": "# define custom postgresql.conf parameters below to override defaults.\n# Current values are as per default FEP deployment\nshared_preload_libraries='pgx_datamasking,vci,pgaudit,pg_prewarm'\nsession_preload_libraries='vci,pg_prewarm'\nmax_prepared_transactions = 100\nmax_worker_processes = 30\nmax_connections = 100\nwork_mem = 1MB\nmaintenance_work_mem = 12MB\nshared_buffers = 128MB\neffective_cache_size = 384MB\ncheckpoint_completion_target = 0.8\n\n# tcp parameters\ntcp_keepalives_idle = 30\ntcp_keepalives_interval = 10\ntcp_keepalives_count = 3\n\n# logging parameters in default fep installation\n# if log volume is not defined, log_directory should be \n# changed to '/database/userdata/data/log'\nlog_directory = '/database/log'\nlog_filename = 'logfile-%a.log'\nlog_file_mode = 0600\nlog_truncate_on_rotation = on\nlog_rotation_age = 1d\nlog_rotation_size = 0\nlog_checkpoints = on\nlog_line_prefix = '%e %t [%p]: [%l-1] user=%u,db=%d,app=%a,client=%h'\nlog_lock_waits = on\nlog_autovacuum_min_duration = 60s\nlogging_collector = on\npgaudit.config_file='/opt/app-root/src/pgaudit-cfg/pgaudit.conf'\nlog_replication_commands = on\nlog_min_messages = WARNING\nlog_destination = stderr\n\n# vci parameters in default fep installation\nvci.enable = on\nvci.maintenance_work_mem = 256MB\nvci.max_local_ros = 64MB\nvci.force_max_parallelism = off\n\n# wal_archive parameters in default fep installation\narchive_mode = on\narchive_command = 'pgbackrest --stanza=backupstanza --config=/database/userdata/pgbackrest.conf archive-push %p'\nwal_level = replica\nmax_wal_senders = 12\nwal_keep_segments = 64\n\n",
              "storage": {
                "archivewalVol": {
                  "size": "1Gi"
                },
                "backupVol": {
                  "size": "2Gi"
                },
                "dataVol": {
                  "size": "2Gi"
                },
                "logVol": {
                  "size": "1Gi"
                },
                "tablespaceVol": {
                  "size": "512Mi"
                },
                "walVol": {
                  "size": "1200Mi"
                }
              },
              "sysUsers": {
                "pgAdminPassword": "admin-password",
                "pgdb": "mydb",
                "pgpassword": "mydbpassword",
                "pgreplpassword": "repluserpwd",
                "pgrepluser": "repluser",
                "pguser": "mydbuser",
                "tdepassphrase": "tde-passphrase"
              },
              "systemCertificates": {
                "cacrt": "-----BEGIN CERTIFICATE-----\nMIIDTzCCAjegAwIBAgIUYssQ8I74US5g+1+Z7CHuaDgkZnEwDQYJKoZIhvcNAQEL\nBQAwNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9y\nIEt1YmVybmV0ZXMwHhcNMjEwMjA2MDM1MjI4WhcNMzEwMjA0MDM1MjI4WjA3MRAw\nDgYDVQQKDAdGdWppdHN1MSMwIQYDVQQDDBpGRVAgUm9vdCBDQSBmb3IgS3ViZXJu\nZXRlczCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMs97gUF0xkUzCgL\n7MiiDju9ySr/ziwjvcYU7jA9ML+SLmftMs3HtcYbAmSntqI+MDBSR/FAJTOoytuT\npV+mCFcGj2YAjDpliHPeNcUpbryy4YMChF3+MovkIwGCksxo5rhiWhGmoBYpA48P\n4Xe8SPlzqMzhFvNeKzyiUhvjutS2Y1Ss38lsTaurFPx64vQ2PaC54XzdwMptXtpb\ntYmWSzCpJWwxZ6lF3vitdA2w0tnBWNyctAd0+RIM/fvArxiIqseAux9t0uogm5to\nlRIhvekuxOpXBPEqtIYQ4j9XUW2JH8vUDnzPkPvjrq+A3Ug8OyyfGVrW7+VYXozu\nc4aP7P0CAwEAAaNTMFEwHQYDVR0OBBYEFBzCutQ7S74WEhS5V2sNEJBGyLpmMB8G\nA1UdIwQYMBaAFBzCutQ7S74WEhS5V2sNEJBGyLpmMA8GA1UdEwEB/wQFMAMBAf8w\nDQYJKoZIhvcNAQELBQADggEBAMDwD85RAaWEBptFgLzKw+9xEUy1vcZaonAuA1qc\nT342XTueyAugxkC11HwdCGgGS34VyctfMGqj4AW6pA2ez4tLrbOps4DmV4sw8uBL\n8pgRDgfly3ob9FEg2wa0hmrwX9jH5Bt4vySUE2785uPAqaspT2UNtTBxS85BUi1T\nsKId2Rtil6an281Z81wyWVI6Jm2D4MG0mbsiGcTPlCtdg/UljvDYymXlAvd4vNhl\nk9hDa13TgDqJKgKdTIcmZoNQdpEVgFcO0h9AEUy5AuLqxHq60dLfZ6ESGPlMI7Lm\ni4PzYbCnBmOe+7TnHcPSyrnehs66Ik+oifRd82eYS7vKjFw=\n-----END CERTIFICATE-----",
                "crt": "-----BEGIN CERTIFICATE-----\nMIIDUTCCAjmgAwIBAgIRAMocW3qMoHrD6qRvMPppMkMwDQYJKoZIhvcNAQELBQAw\nNzEQMA4GA1UECgwHRnVqaXRzdTEjMCEGA1UEAwwaRkVQIFJvb3QgQ0EgZm9yIEt1\nYmVybmV0ZXMwHhcNMjEwMjA2MDQzMjM2WhcNMjYwMjA1MDQzMjM2WjA/MRAwDgYD\nVQQKEwdGdWppdHN1MSswKQYDVQQDEyJGVUpJVFNVIEVudGVycHJpc2UgUG9zdGdy\nZXMgU2VydmVyMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4AI33yvH\nZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I2e4SceTKi6O3C/I1XuvWlpng\n5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4ANB5JWWqDOjrRT3o7nRPGXfila\nbP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYpmjdbfxabTz07ig0+6/cwKoRR\nxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTFYvmAH7gcdssSFBt8NPlUATHE\nsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6Wdgmu5H2pDml8CDNLDv98Aj7i\n+I5SRKKcVPlnuQIDAQABo1AwTjAdBgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUH\nAwIwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBQcwrrUO0u+FhIUuVdrDRCQRsi6\nZjANBgkqhkiG9w0BAQsFAAOCAQEAm5dxBoI9pScOCvRAchg4CprdRDSJb9K6yB3O\nnCAxnM47iHeXnY3WlnI388kHu8DU7O4ba1tJbGs3KY9KzioPk43pU12jWkO1onoF\n+mTDjx/Ef1cYWA9r5q/LtgTa6Q2sxV4O2x67QW82aAnaxO34dV5zWCPIvAoovZBV\nHRT+BgCg3r2vD1RGKK2nl1aYJtWhO1SZubam+VttdZ/vbM9oOJctxmImsEtBXjkY\nKteePdQtLL5o03JhyXWyRshCq+HMmKf2KgyY8gvydGcP4eLQdBWcW40LcnVq6UjT\n0kJycJEKngMVademq1ZWHGaiYB7hyT6GhgIcHUJ2cKrPgbEh1Q==\n-----END CERTIFICATE-----",
                "key": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEA4AI33yvHZws+jta6qpV6wzJqF8odIfTIpCfbrVcUUtLFKJ1I\n2e4SceTKi6O3C/I1XuvWlpng5IO65+fQQLO06z1/AuQT78YUn/Wlm9x1aHVsv4AN\nB5JWWqDOjrRT3o7nRPGXfilabP0rGE2mJJcVR9nExJ3IeaktgT3sb8YlXvtchyYp\nmjdbfxabTz07ig0+6/cwKoRRxOK8Uf7f5euE0cI/490J6r5Rs4lgD8sIQNCUFlTF\nYvmAH7gcdssSFBt8NPlUATHEsoFmlW0DKCJWNhTLOht+s6L/1zwTHLjPG2pdkG6W\ndgmu5H2pDml8CDNLDv98Aj7i+I5SRKKcVPlnuQIDAQABAoIBAFPQYKlOzw/+BA0b\nyMIUpdctIMb/54CR/xR0mVw1DbSjigNVPjHUQvB8Y1B2FAITQObgJO06bAv0QdWN\nRb0/v/yYiNJDFjaLjaIAHlO/2+oWrXbFaZqgpVDJhB+e1xaZr2x7XGxm+p925k30\nl6pvIRY+I8JRKvZiV1VZHwL/R3JOtPr++xMZtLVjVOI+f+ySqJ+TZHuAjm49EKxj\ncEmmJ28b7QcziXsvKy00f+zbqLIBKXQdZAFU5eEr1BsDRXdRW+Kf0XIvftuy4BJZ\nvoKT+VGhEvF/qysswL4+6IAO6tpuYnnM0Y2d3sOGoWPkTcQK0MekYKzL/WmtCjNs\n9hodJtECgYEA5EWyhEOf4uOKe5TDp697UCUvXLoOR58FDe/S8XNvScn29jjOkqIg\nOMoqo9xAkJTNTzqn5UUdt1x/pgM2NxlPLFijrc0zQlX3SoOO2ryDd9WNi7YKtN16\nKJqa536WeZu2OEbuAZ+S3GALVy1RPeTNPnUOmKnF06DjDUGzLNCZy10CgYEA+zfw\n952DWuz1U0Z4wvAEqqcgUKXPKrkTXV/iUnjkDkrLYVr0ZofDNTXrdHl+UedFmaOC\ncieZn6DNhcdz5tKtyysGMH3g/qs9PfoGUngvcXsy0Egk04l3x1jc8TTCLqXZXYaQ\nHMsx51n+R58oncPtzYSUOr9qQ6PbC2CstTbFJA0CgYEAjGEsUliAB/jknfEzjXjG\nPdhQUxb8VyE864Az2lah9t/kJzFyIAziAeqZ5GE7t247AGFTBRTHHI8e1Qoemi3P\nWbc9GVIbFs1lIYbcIDpUIyrKPEP8O5QEXtoNLxXTFgAjRGKiVY87spjCAJ+W2ZhO\ne/1it5GYXfgQCYQA2yuBmOUCgYANRkR2YR1axaCk+NlSu6oTdmdPu6M5x7PNQE7O\nOtMaKjua9lppvIzFGAdMDUtueoEEAE7ZR1xnwfB6PDLUpJdIYAqgr1YfPt8qkjaZ\nTv56yZ7CwL0pbF8m6nwqRrZoDp1wwraEvvvxFKFKGY/k3kCHlpTakdjEoDjn3gDi\nRnWeVQKBgCEneMSzucei5LRppRtRaJw/Btll8qlPMlX3W7dxQ3cLwpmLOn0m51Fp\nPIZ44zYK8R6fu4+/sSrlfaIg86Ugeufp6YNxyNROKxUGza5vDIu5OftwWtBeg+UK\nZ8lLWNdX6pp7WMujmF3H1DrkBbauYMUKZ4UxUYtelgHERMePIxwb\n-----END RSA PRIVATE KEY-----"
              }
            }
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPAction",
          "metadata": {
            "name": "new-fep-action"
          },
          "spec": {
            "fepAction": {
              "args": [
                "new-fep-sts-0"
              ],
              "type": "reload"
            },
            "sysExtraLogging": false,
            "targetClusterName": "new-fep"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPPgpool2",
          "metadata": {
            "name": "new-fep-pgpool2"
          },
          "spec": {
            "customparams": "listen_addresses = '*'\npcp_listen_addresses = '*'\nnum_init_children = 32\nreserved_connections = 0\nenable_pool_hba = off\nallow_clear_text_frontend_auth = off\nauthentication_timeout = 80\nbackend_weight0 = 1\nbackend_weight1 = 1\nbackend_flag0 = 'DISALLOW_TO_FAILOVER'\nbackend_flag1 = 'DISALLOW_TO_FAILOVER'\nconnection_cache = on\nmax_pool = 4\nlisten_backlog_multiplier = 2\nserialize_accept = off\nchild_life_time = 300\nclient_idle_limit = 0\nchild_max_connections = 0\nconnection_life_time = 0\nreset_query_list = 'ABORT; DISCARD ALL'\nclient_min_messages = info\nlog_min_messages = debug1\nlog_statement = on\nlog_per_node_statement = on\nlog_client_messages = on\nlog_hostname = on\nlog_connections = on\nlog_line_prefix = '%t: pid %p: '\nload_balance_mode = on\nignore_leading_white_space = on\nwhite_function_list = ''\nblack_function_list = 'currval,lastval,nextval,setval'\nblack_query_pattern_list = ''\ndatabase_redirect_preference_list = ''\napp_name_redirect_preference_list = ''\nallow_sql_comments = off\ndisable_load_balance_on_write = 'transaction'\nstatement_level_load_balance = on\nconnect_timeout = 10000\nsr_check_period = 0\nsr_check_user = ' postgres '\ndelay_threshold = 0\nlog_standby_delay = 'none'\nssl = off\nssl_ciphers = 'HIGH:MEDIUM:+3DES:!aNULL'\nssl_prefer_server_ciphers = off\nssl_ecdh_curve = 'prime256v1'\nssl_dh_params_file = ''\nrelcache_expire = 0\nrelcache_size = 256\ncheck_temp_table = catalog\ncheck_unlogged_table = on\nenable_shared_relcache = on\nrelcache_query_target = master\n\n",
            "fepclustername": "new-fep",
            "imagePullPolicy": "IfNotPresent"
          }
        },
        {
          "api_version": "fep.fujitsu.io/v1",
          "kind": "FEPRestore",
          "metadata": {
            "name": "new-fep-restore"
          },
          "spec": {
            "fromFEPcluster": "new-fep",
            "imagePullPolicy": "IfNotPresent",
            "mcSpec": {
              "limits": {
                "cpu": "200m",
                "memory": "300Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "200Mi"
              }
            },
            "restoretype": "latest",
            "toFEPcluster": "new-fep-2"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64",
        "s390x"
      ],
      "bundle_path": "registry.connect.redhat.com/fujitsu-postgres/fujitsu-enterprise-postgres-bundle@sha256:1c5f3b645ceb05266cf8cc8e8a6f88e8400a855f23277f9b79e8b9f2ba278094",
      "bundle_path_digest": "sha256:1c5f3b645ceb05266cf8cc8e8a6f88e8400a855f23277f9b79e8b9f2ba278094",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2021-04-28T22:19:16.356000+00:00",
      "csv_description": "FUJITSU Enterprise Postgres 12 delivers an enterprise-grade PostgreSQL on OpenShift Container Platform.\n\nThis solution provides the flexibility of a hybrid cloud solution while delivering an enhanced distribution\nof PostgreSQL to support enterprise-level workloads and provide improved deployment and management,\navailability, performance, data governance and security.\n\nAvailable as a multi-architecture container built for both amd64 and s390x.\n\nUse of the product is subject to Fujitsu evaluation license located at:\nhttps://www.fast.fujitsu.com/fujitsu-enterprise-postgres-trial-version-software-evaluation-license-agreement\nand the license period is 90 days after the download\n",
      "csv_display_name": "FUJITSU Enterprise Postgres 12 Operator",
      "csv_metadata_description": "OpenShift Operator for Fujitsu Enterprise Postgres 12",
      "csv_name": "fujitsu-enterprise-operator.v2.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:37:23.539000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "fep-ansible-operator",
      "provided_apis": [
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCert",
          "plural": "fepcerts",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPCluster",
          "plural": "fepclusters",
          "version": "v2"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPConfig",
          "plural": "fepconfigs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2Cert",
          "plural": "feppgpool2certs",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPPgpool2",
          "plural": "feppgpool2s",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPRestore",
          "plural": "feprestores",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPAction",
          "plural": "fepactions",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPBackup",
          "plural": "fepbackups",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPUser",
          "plural": "fepusers",
          "version": "v1"
        },
        {
          "group": "fep.fujitsu.io",
          "kind": "FEPVolume",
          "plural": "fepvolumes",
          "version": "v1"
        }
      ],
      "provider": "Fujitsu",
      "related_images": [
        {
          "digest": "sha256:f168bdac1c42b864ebb18f843debbd4da9033cd465025d01dcb0490b9fb573d9",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:f168bdac1c42b864ebb18f843debbd4da9033cd465025d01dcb0490b9fb573d9",
          "name": "fujitsu-enterprise-postgres-12-operator-f168bdac1c42b864ebb18f843debbd4da9033cd465025d01dcb0490b9fb573d9-annotation"
        },
        {
          "digest": "sha256:7bde6ae2e25f9c3e3510a5fbe401fa01b419692538ed2a9d1db0c5c7f6f9be0d",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-operator@sha256:7bde6ae2e25f9c3e3510a5fbe401fa01b419692538ed2a9d1db0c5c7f6f9be0d",
          "name": "fep-ansible-operator"
        },
        {
          "digest": "sha256:1845690aaeba01b512eb909820ef8572161d2b61f84dc7fc8cf06654d7395c47",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-server@sha256:1845690aaeba01b512eb909820ef8572161d2b61f84dc7fc8cf06654d7395c47",
          "name": "fep"
        },
        {
          "digest": "sha256:295cea615579d9a37dbc8e1796ac4e7762b7a4fdec66d2c730e82794cffc1f76",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-backup@sha256:295cea615579d9a37dbc8e1796ac4e7762b7a4fdec66d2c730e82794cffc1f76",
          "name": "backup"
        },
        {
          "digest": "sha256:52016513b6aab85eb9429ba98c96a0cf01ad8d8e7f66c7f060dc00bbada7d2f5",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-restore@sha256:52016513b6aab85eb9429ba98c96a0cf01ad8d8e7f66c7f060dc00bbada7d2f5",
          "name": "restore"
        },
        {
          "digest": "sha256:eac7fa26b984ba55b4535b6de469fa8f3672f5c0697d64c113bdc119da735f59",
          "image": "quay.io/fujitsu/fujitsu-enterprise-postgres-12-pgpool2@sha256:eac7fa26b984ba55b4535b6de469fa8f3672f5c0697d64c113bdc119da735f59",
          "name": "pgpool2"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.2.0",
      "version_original": "2.2.0"
    },
    {
      "_id": "608a29d4149bd2956e31e0dc",
      "alm_examples": [
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:0e445f78b7f921890bfc6f013a0ed5b9fa0f9b2cddf9768e3a8e83d52716b043",
      "bundle_path_digest": "sha256:0e445f78b7f921890bfc6f013a0ed5b9fa0f9b2cddf9768e3a8e83d52716b043",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-04-29T03:36:52.430000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:54:14.184000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Instana",
      "related_images": [
        {
          "digest": "sha256:502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b",
          "name": "instana-agent-operator-502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b-annotation"
        },
        {
          "digest": "sha256:502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "608a402d149bd2956e31e0dd",
      "alm_examples": [
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:0e445f78b7f921890bfc6f013a0ed5b9fa0f9b2cddf9768e3a8e83d52716b043",
      "bundle_path_digest": "sha256:0e445f78b7f921890bfc6f013a0ed5b9fa0f9b2cddf9768e3a8e83d52716b043",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-04-29T05:12:13.093000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:36:27.021000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Instana",
      "related_images": [
        {
          "digest": "sha256:502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b",
          "name": "instana-agent-operator-502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b-annotation"
        },
        {
          "digest": "sha256:502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:502f52a83273547515281cb5f902693d603a8f75b1e8245c0c9b28dd0bccae0b",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.2",
      "version_original": "1.0.2"
    },
    {
      "_id": "608a4306149bd2956e31e0de",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-04-29T05:24:22.140000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:59:42.390000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "608a430acb52424543b09abe",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-04-29T05:24:26.718000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:12:11.039000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "608acb6febd9cca472b09439",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-04-29T15:06:23.405000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:48:24.370000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "608acb6a149bd2956e31e0ec",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-04-29T15:06:18.971000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:53:29.528000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "608d2087149bd2956e31e105",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:1d79df0217a9e15bfc4c15c760acc1c455a8e1b3e79209b31bb8cb66f3b71d05",
      "bundle_path_digest": "sha256:1d79df0217a9e15bfc4c15c760acc1c455a8e1b3e79209b31bb8cb66f3b71d05",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "cluster",
      "creation_date": "2021-05-01T09:33:59.625000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:37:27.721000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096",
          "name": "control-plane-33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096-annotation"
        },
        {
          "digest": "sha256:33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:d3052762c302854dc4675f123881c8447c1543154b8673ed22ff91489b96daab",
          "image": "registry.connect.redhat.com/trilio/trilio-admission-webhook@sha256:d3052762c302854dc4675f123881c8447c1543154b8673ed22ff91489b96daab",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:120b92f51fe97add59f6bb96d6eceb738962ea04ec809db8a342b1f42c034449",
          "image": "registry.connect.redhat.com/trilio/exporter@sha256:120b92f51fe97add59f6bb96d6eceb738962ea04ec809db8a342b1f42c034449",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:1b4dbbc57cedb5caa1bcccf7d9f1030dd519c6ffb4a61777fb5257c5b7b9700c",
          "image": "registry.connect.redhat.com/trilio/web@sha256:1b4dbbc57cedb5caa1bcccf7d9f1030dd519c6ffb4a61777fb5257c5b7b9700c",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:54f85c810baad8707479252020c64a8729681e3312294664a70be91c1e6ec570",
          "image": "registry.connect.redhat.com/trilio/web-backend@sha256:54f85c810baad8707479252020c64a8729681e3312294664a70be91c1e6ec570",
          "name": "triliovault-backend"
        },
        {
          "digest": "sha256:53788ae92216be0bea9fa864a015388fee5147bc61339bde6e4c34fcd41e4951",
          "image": "registry.connect.redhat.com/trilio/control-plane-init@sha256:53788ae92216be0bea9fa864a015388fee5147bc61339bde6e4c34fcd41e4951",
          "name": "control-plane-init"
        },
        {
          "digest": "sha256:06b173b75d5393de2d9f4bd54f51b5f93078887c3758a2188160722e0f24b881",
          "image": "registry.connect.redhat.com/trilio/trilio-webhook-init@sha256:06b173b75d5393de2d9f4bd54f51b5f93078887c3758a2188160722e0f24b881",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:b0b451a5421b35d53f626b16964e7f6c53efeab49fa3518b2903d0889d15eb36",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:b0b451a5421b35d53f626b16964e7f6c53efeab49fa3518b2903d0889d15eb36",
          "name": "metamover"
        },
        {
          "digest": "sha256:9153d42f7b2ae0a5ecc1c158e69e1fdd6479c6b4c7a3035aec8468cd9d325e0a",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:9153d42f7b2ae0a5ecc1c158e69e1fdd6479c6b4c7a3035aec8468cd9d325e0a",
          "name": "datamover"
        },
        {
          "digest": "sha256:7dc0e13bdd03f6f2790544507d9d4f2bf5325772b21ceaa684cd153e00edb373",
          "image": "registry.connect.redhat.com/trilio/datastore-attacher@sha256:7dc0e13bdd03f6f2790544507d9d4f2bf5325772b21ceaa684cd153e00edb373",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:e59f8026c9432663e80ac3b1bb1fd135774cf2e997d14a9b3bc6eccf6c00e21a",
          "image": "registry.connect.redhat.com/trilio/backup-scheduler@sha256:e59f8026c9432663e80ac3b1bb1fd135774cf2e997d14a9b3bc6eccf6c00e21a",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:f112f8d792042f00f23c89f43953afc00234ca5d55b8ce1dad9f0a296e2f73ec",
          "image": "registry.connect.redhat.com/trilio/backup-cleaner@sha256:f112f8d792042f00f23c89f43953afc00234ca5d55b8ce1dad9f0a296e2f73ec",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:53881e0ea196e570811cf7ca4d86de476de9771784bf3dd4489ace4a9cd1db05",
          "image": "registry.connect.redhat.com/trilio/backup-retention@sha256:53881e0ea196e570811cf7ca4d86de476de9771784bf3dd4489ace4a9cd1db05",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:e4f383fc76c28903e5567f1a4a3622cce474c471f038e61e385bc6276a921dc5",
          "image": "registry.connect.redhat.com/trilio/target-browser@sha256:e4f383fc76c28903e5567f1a4a3622cce474c471f038e61e385bc6276a921dc5",
          "name": "target_browser"
        },
        {
          "digest": "sha256:a216dc33ca9a790f467a2b85e6632eff348e3193735fa9bf042ec8980a0d1b5c",
          "image": "registry.connect.redhat.com/trilio/hook-executor@sha256:a216dc33ca9a790f467a2b85e6632eff348e3193735fa9bf042ec8980a0d1b5c",
          "name": "hook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "2.0.5",
      "version_original": "2.0.5"
    },
    {
      "_id": "608d20cf149bd2956e31e106",
      "alm_examples": [
        {
          "api_version": "vfunction.com/v1",
          "kind": "VfunctionServer",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "vfunction-server",
              "app.kubernetes.io/managed-by": "operator",
              "app.kubernetes.io/name": "vfunction",
              "name": "vfunction"
            },
            "name": "example-vfunction-server",
            "namespace": "vfunction"
          },
          "spec": {
            "admin": {
              "email": "admin@mycompany.com",
              "name": "Admin",
              "password": "Password1!"
            },
            "host": "http://my.domain.com",
            "measurements": {
              "auto_scaling": "No",
              "max_number_of_services": "10",
              "min_number_of_services": "2"
            },
            "org_name": "MyCompany",
            "smtp": {
              "identity": "",
              "password": "",
              "url": "",
              "user": ""
            },
            "tls": {
              "crt": "",
              "key": ""
            },
            "upgrade": "Daily"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/vfunction/vfunction-server-operator-bundle@sha256:44961a88e235421ad45591facf91675993293b9aaed6bc6adfb0934c457a7197",
      "bundle_path_digest": "sha256:44961a88e235421ad45591facf91675993293b9aaed6bc6adfb0934c457a7197",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-01T09:35:11.914000+00:00",
      "csv_description": "\n## Introduction\n\n[vFunction](https://www.vfunction.com/) is a cloud-native modernization platform that combines dynamic and static code analysis, machine learning, and automation to automatically identify and extract services from existing applications. vFunction is the only platform purpose-built for modernization of Java applications.\n\nThe vFunction modernization process starts by learning the running monolithic application, and surfacing the interdependencies within it. Using AI, the platform analyzes and identifies services that can be separated from the application. This decomposition can present a range of micro, mini, or even macro services, depending on your application environment, each being an independently deployable and scalable application component.\n\nvFunction automates the extraction of these services, enabling you to modernize your monolith, quickly and easily.\n\n## The vFunction platform\n\nThe platform consists of 3 basic components; the server, the controller package, and a tools package. The server runs as an operand on an OpenShift environment. The controller package is installed on the machine that runs the monolithic application which can be either a Linux or a Windows machine, and the tools are run on a development machine, with access to the code of the monolithic application.\n\nThe controller package consists of three elements: the vFunction agent, that collects data during the dynamic analysis phase; the vFunction Viper application, that performs static analysis on the binaries of the application; and the vFunction controller that handles all the communication between the agent, Viper, and the vFunction server.\n\nThe vFunction agent is a mix of a Java and native agent, and needs to run on the JVM that is currently running your application. [Refer to the vFunction OOB Support Matrix document](https://drive.google.com/file/d/1ccq8LFab1FrYAimDUxwgjiCOdk4QuVzs/view) for a list of supported application servers and JVMs.\n\nThis operator installs a vFunction server instance to be connected later with one or more vFunction controllers installed on your application machine(s).\n\n## Before You Start\n\nThe vFunction operator requires a Red Hat OpenShift Kubernetes Application Platform 4.x.\n\nThe cluster recommended configuration (which is the same as the minimal one) should consist of:\n\n- *1 master node*\n\n- *1 worker node*\n\n- *Storage capacity enough for dynamically provision 2 PVs of 50G each*\n\n- *A default StorageClass configured*\n\nvFunction doesn\u2019t provide any encryption mechanism for data stored on any attached storage. If required, encryption can be achieved by the client by using its own external means on the storage itself.\n\nvFunction supports backup of all critical data as part of the application. Nevertheless, for complete backup of entire data it is recommended that the client apply its own storage based backup mechanism.\n\n## Install Prerequisites\n\n###Cluster:\nThe operator was certified on OCP 4.5 and tested on OCP 4.3 running on AWS cloud.\nIf you encounter any issue with other OCP versions or cloud providers please contact info@vfunction.com.\n\n###Storage:\nThe operator creates two new PersistentVolumeClaims (PVCs) during installation time. For their creation, it relies on the default StorageClass to dynamically provision two PersistentVolumes (PVs). The system must have a default StorageClass in place.\n\nBoth PersistentVolumes are accessed with ReadWriteOnce mode.\n\n###Project:\nThe operator should be installed in a new and dedicated project (namespace). If you intend to install more than one vFunction operands in the same cluster, please use different projects for each one. Installation of more than one operand on the same cluster will allow scaling by load balancing multiple applications to different vFunction servers.\n\n## Installation instructions\n\n1. Prepare the YAML file to use in the installation:\n\n    a. Copy the following YAML template into a text editor:\n\n    ```yaml\n        apiVersion: vfunction.com/v1\n        kind: VfunctionServer\n        metadata:\n          name: vfunction\n          namespace: vfunction\n          labels:\n            name: vfunction\n            app.kubernetes.io/name: vfunction\n            app.kubernetes.io/instance: vfunction-server\n            app.kubernetes.io/managed-by: operator\n        spec:\n          host: \"http://my.domain.com\"\n          org_name: \"MyCompany\"\n          upgrade: \"Daily\"\n          measurements:\n            auto_scaling: \"No\"\n            min_number_of_services: \"2\"\n            max_number_of_services: \"10\"\n          admin:\n            email: \"admin@mycompany.com\"\n            name: \"Admin\"\n            password: \"Password1!\"\n          smtp:\n            password: \"\"\n            url: \"\"\n            identity: \"\"\n            user: \"\"\n          tls:\n            crt: |\n              -----BEGIN CERTIFICATE-----\n              ...\n              -----END CERTIFICATE-----\n            key: |\n              -----BEGIN PRIVATE KEY-----\n              ...\n              -----END PRIVATE KEY-----\n    ```\n    b. Customize the template fields by replacing with your information:\n\n    - **host**: Enter the FQDN for accessing the vFunction dashboard.\n                Make sure that you use a domain name and not an IP address. Writing \"https://\" will mandate TLS while writing \"http://\" will expose the server through HTTP.\n    - **org_name**: Enter your organization name.\n    - **upgrade**: Choose auto-upgrade mode\n        - **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically (default).\n        - **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n        - **Never**: The automatic upgrading mechanism is off.\n\n    - **measurements.auto_scaling**: Indicates if the measurement services auto scalling is active.\n    - **measurements.min_num_of_services**: Minimum Number of measurement service pods.\n    - **measurements.max_num_of_services**: Maximum Number of measurement service pods.\n    - **admin.email**: Enter the email address of your administrator.\n    - **admin.name**: Enter the name of your administrator.\n    - **admin.password**: Enter the password you want to use for the vFunction administrator.\n                          The password should be at least 8 characters long, and consist of at least one lowercase letter, at least one uppercase letter, at least one number, and at least one special character.\n    - **smtp.user**: Enter the email address for a designated user for the SMTP server (optional).\n    - **smtp.password**: Enter this user\u2019s password (optional).\n    - **smtp.identity**: Enter this user\u2019s password (optional).\n    - **smtp.url**: Enter the SMTP server URL (optional).\n    - **tls.crt**: If your host FQDN starts with \u201chttps\u201d, paste in the certifications you have for using the TLS connection.\n    - **tls.key**: If your host FQDN starts with \u201chttps\u201d, enter the key you have for using the TLS connection.\n\n1. In the Installed Operators window choose and click on vFunction Operator and then Create Instance.\n1. In the Create vFunctionServer window, paste the YAML file that you created in step 1.\n1. Click Create.\n1. You can now click on your new created vFunction operand in order to see its details and installation progress.\n\n## Verifying the installation\n\nCheck the operand installed successfully:\n\n1. Check that the \"Operand State\" property shows \u201cWorking\u201d.\n1. Check that the \"Successfully Installed\" property shows \"Yes\".\n\nIf \"Operand State\" shows \"Failed\", it indicates the operand wasn\u2019t installed correctly. Check the events and logs for all pods (operator and image containers) for any issues. In the event that you cannot troubleshoot, contact vFunction support.\n\n## After installation\n\nThe vFunction site is now accessible via the newly created vFunction application custom address, for example, my.domain.com. There are two ways you can access the vFunction dashboard.\n\n### Access using the router canonical hostname\n\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address, and to the \u201dvfunction\u201d subdomain of the  OpenShift canonical router hostname as the alias.\nFor example, ***my.domain.com.   CNAME   vfunction.apps.ocp4.my-openshift.com.***\n2. Find your cluster Router Canonical Hostname address in the newly created vfunction-route-xxx under your vFunction OpenShift project -> **Networking** -> **Routes** -> **vfunction-route-xxx** route -> **Router Canonical Hostname** field.\nYou can now access the dashboard using your defined \"host\" spec property (as above).\n\n### Access using the nginx service location\n\nYou may use this access method if your OpenShift is installed on a provider that supports exposing LoadBalancer-type services.\n1. Update your DNS provider by creating a canonical name (CNAME) record.\nThis record should point to your host address and to the vfunction-nginx-xxx service location.\nFor example, ***my.domain.com.   CNAME   a05951ed7cdf-1394239323.us-east-1.elb.amazonaws.com.***\n1. Point your custom domain to the vfunction-nginx-xxx service's external IP location, which you can find in the OpenShift project > **Networking** -> **Services** -> **vfunction-nginx-xxx** service > **Service Address** > **Location** field.\n\n## Upgrade and Rollback\n\nThe vFunction operator includes a built-in auto-upgrade mechanism.\n\nYou can choose one of 3 upgrading modes:\n- **Daily**: The operator will check for a new version every day at 3 AM and will install it automatically (default).\n- **Always**: The operator will check for a new version every 10 minutes and will install it automatically.\n- **Never**: The automatic upgrading mechanism is off.\n\nFor an on-demand upgrade,  you can change anytime the upgrading mode from \u201cnever\u201d to \u201calways\u201d, wait for the operand to be upgraded, and change again to \u201cnever\u201d.\n\nDuring the upgrade, the \"Operand State\" property will change to \u201cUpgrading...\u201d and back again to \u201cWorking\u201d after a successful upgrade.\n\nIn case of a failure upgrading the operand, an automatic rollback to the last working version will occur. The failed version will be marked as defective and the operator will not try to upgrade to it again.",
      "csv_display_name": "vFunction Operator",
      "csv_metadata_description": "vFunction is a cutting-edge code analysis, machine learning, and automation to boost your Java modernization projects.",
      "csv_name": "vfunction-server-operator.v1.1.20303",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:36:05.298000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "vfunction-server-operator",
      "provided_apis": [
        {
          "group": "vfunction.com",
          "kind": "VfunctionServer",
          "plural": "vfunctionservers",
          "version": "v1"
        }
      ],
      "provider": "vFunction",
      "related_images": [
        {
          "digest": "sha256:59b620b2d0236afb04c64c7bda57e579d58a07c7c16462da8de39926293701cf",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:59b620b2d0236afb04c64c7bda57e579d58a07c7c16462da8de39926293701cf",
          "name": "vfunction-server-operator-59b620b2d0236afb04c64c7bda57e579d58a07c7c16462da8de39926293701cf-annotation"
        },
        {
          "digest": "sha256:59b620b2d0236afb04c64c7bda57e579d58a07c7c16462da8de39926293701cf",
          "image": "registry.connect.redhat.com/vfunction/vfunction-server-operator@sha256:59b620b2d0236afb04c64c7bda57e579d58a07c7c16462da8de39926293701cf",
          "name": "vfunction-server-operator"
        },
        {
          "digest": "sha256:0389e74e5912721bdf10c7699afa4b0fc877862c014d14065af14f0e2dd53e96",
          "image": "registry.connect.redhat.com/vfunction/vfunction-mysql@sha256:0389e74e5912721bdf10c7699afa4b0fc877862c014d14065af14f0e2dd53e96",
          "name": "vfunction_mysql_original_image"
        },
        {
          "digest": "sha256:fce7dd83a8544d83ef4b9218a7e406ecdb5c7c5ac0b31570df5ee362a63773a7",
          "image": "registry.connect.redhat.com/vfunction/vfunction-nginx@sha256:fce7dd83a8544d83ef4b9218a7e406ecdb5c7c5ac0b31570df5ee362a63773a7",
          "name": "vfunction_nginx_original_image"
        },
        {
          "digest": "sha256:21aaeefff80617d581e2c6e2dd335ea37f29a3ba9e553cf9bc261325f10f3e75",
          "image": "registry.connect.redhat.com/vfunction/vfunction-storage@sha256:21aaeefff80617d581e2c6e2dd335ea37f29a3ba9e553cf9bc261325f10f3e75",
          "name": "vfunction_storage_original_image"
        },
        {
          "digest": "sha256:3f24c4969c9982c198b71ae54efbc64ed007075369b06714d1d1996767e1746b",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-idp@sha256:3f24c4969c9982c198b71ae54efbc64ed007075369b06714d1d1996767e1746b",
          "name": "vfunction_vfapi_idp_original_image"
        },
        {
          "digest": "sha256:28167200c5879653e62ad4ae560f6d4fc383ddfb4be9c0c015b730906cdde207",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-measurements@sha256:28167200c5879653e62ad4ae560f6d4fc383ddfb4be9c0c015b730906cdde207",
          "name": "vfunction_vfapi_measurements_original_image"
        },
        {
          "digest": "sha256:d615425c2fff61229bec60e9f17c2443399b6eaa5626e7425c1ceaba23753883",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-organizations@sha256:d615425c2fff61229bec60e9f17c2443399b6eaa5626e7425c1ceaba23753883",
          "name": "vfunction_vfapi_organizations_original_image"
        },
        {
          "digest": "sha256:f7446804b50b1d4a65da6c31e64fa69f0db85526afd4561fa852973debade7bd",
          "image": "registry.connect.redhat.com/vfunction/vfunction-vfapi-users@sha256:f7446804b50b1d4a65da6c31e64fa69f0db85526afd4561fa852973debade7bd",
          "name": "vfunction_vfapi_users_original_image"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.20303",
      "version_original": "1.1.20303"
    },
    {
      "_id": "608d82dfebd9cca472b09459",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:1d79df0217a9e15bfc4c15c760acc1c455a8e1b3e79209b31bb8cb66f3b71d05",
      "bundle_path_digest": "sha256:1d79df0217a9e15bfc4c15c760acc1c455a8e1b3e79209b31bb8cb66f3b71d05",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "cluster",
      "creation_date": "2021-05-01T16:33:35.526000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:52:04.809000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1alpha1"
        }
      ],
      "provider": "Trilio",
      "related_images": [
        {
          "digest": "sha256:33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096",
          "name": "control-plane-33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096-annotation"
        },
        {
          "digest": "sha256:33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:33721099b603d0dffd0f225fa8dd9f045b2874dcec2c8abca257da05a979b096",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:d3052762c302854dc4675f123881c8447c1543154b8673ed22ff91489b96daab",
          "image": "registry.connect.redhat.com/trilio/trilio-admission-webhook@sha256:d3052762c302854dc4675f123881c8447c1543154b8673ed22ff91489b96daab",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:120b92f51fe97add59f6bb96d6eceb738962ea04ec809db8a342b1f42c034449",
          "image": "registry.connect.redhat.com/trilio/exporter@sha256:120b92f51fe97add59f6bb96d6eceb738962ea04ec809db8a342b1f42c034449",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:1b4dbbc57cedb5caa1bcccf7d9f1030dd519c6ffb4a61777fb5257c5b7b9700c",
          "image": "registry.connect.redhat.com/trilio/web@sha256:1b4dbbc57cedb5caa1bcccf7d9f1030dd519c6ffb4a61777fb5257c5b7b9700c",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:54f85c810baad8707479252020c64a8729681e3312294664a70be91c1e6ec570",
          "image": "registry.connect.redhat.com/trilio/web-backend@sha256:54f85c810baad8707479252020c64a8729681e3312294664a70be91c1e6ec570",
          "name": "triliovault-backend"
        },
        {
          "digest": "sha256:53788ae92216be0bea9fa864a015388fee5147bc61339bde6e4c34fcd41e4951",
          "image": "registry.connect.redhat.com/trilio/control-plane-init@sha256:53788ae92216be0bea9fa864a015388fee5147bc61339bde6e4c34fcd41e4951",
          "name": "control-plane-init"
        },
        {
          "digest": "sha256:06b173b75d5393de2d9f4bd54f51b5f93078887c3758a2188160722e0f24b881",
          "image": "registry.connect.redhat.com/trilio/trilio-webhook-init@sha256:06b173b75d5393de2d9f4bd54f51b5f93078887c3758a2188160722e0f24b881",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:b0b451a5421b35d53f626b16964e7f6c53efeab49fa3518b2903d0889d15eb36",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:b0b451a5421b35d53f626b16964e7f6c53efeab49fa3518b2903d0889d15eb36",
          "name": "metamover"
        },
        {
          "digest": "sha256:9153d42f7b2ae0a5ecc1c158e69e1fdd6479c6b4c7a3035aec8468cd9d325e0a",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:9153d42f7b2ae0a5ecc1c158e69e1fdd6479c6b4c7a3035aec8468cd9d325e0a",
          "name": "datamover"
        },
        {
          "digest": "sha256:7dc0e13bdd03f6f2790544507d9d4f2bf5325772b21ceaa684cd153e00edb373",
          "image": "registry.connect.redhat.com/trilio/datastore-attacher@sha256:7dc0e13bdd03f6f2790544507d9d4f2bf5325772b21ceaa684cd153e00edb373",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:e59f8026c9432663e80ac3b1bb1fd135774cf2e997d14a9b3bc6eccf6c00e21a",
          "image": "registry.connect.redhat.com/trilio/backup-scheduler@sha256:e59f8026c9432663e80ac3b1bb1fd135774cf2e997d14a9b3bc6eccf6c00e21a",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:f112f8d792042f00f23c89f43953afc00234ca5d55b8ce1dad9f0a296e2f73ec",
          "image": "registry.connect.redhat.com/trilio/backup-cleaner@sha256:f112f8d792042f00f23c89f43953afc00234ca5d55b8ce1dad9f0a296e2f73ec",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:53881e0ea196e570811cf7ca4d86de476de9771784bf3dd4489ace4a9cd1db05",
          "image": "registry.connect.redhat.com/trilio/backup-retention@sha256:53881e0ea196e570811cf7ca4d86de476de9771784bf3dd4489ace4a9cd1db05",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:e4f383fc76c28903e5567f1a4a3622cce474c471f038e61e385bc6276a921dc5",
          "image": "registry.connect.redhat.com/trilio/target-browser@sha256:e4f383fc76c28903e5567f1a4a3622cce474c471f038e61e385bc6276a921dc5",
          "name": "target_browser"
        },
        {
          "digest": "sha256:a216dc33ca9a790f467a2b85e6632eff348e3193735fa9bf042ec8980a0d1b5c",
          "image": "registry.connect.redhat.com/trilio/hook-executor@sha256:a216dc33ca9a790f467a2b85e6632eff348e3193735fa9bf042ec8980a0d1b5c",
          "name": "hook"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.5",
      "version_original": "2.0.5"
    },
    {
      "_id": "608fd4fd149bd2956e31e10e",
      "alm_examples": [
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:e007bfb95d0e0498967a466dd482002181f4ae797a98d2b5d9bed751defc04b6",
      "bundle_path_digest": "sha256:e007bfb95d0e0498967a466dd482002181f4ae797a98d2b5d9bed751defc04b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-03T10:48:29.014000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:29:04.421000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Instana",
      "related_images": [
        {
          "digest": "sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "name": "instana-agent-operator-2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c-annotation"
        },
        {
          "digest": "sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "608fffe9cb52424543b09add",
      "alm_examples": [
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:e007bfb95d0e0498967a466dd482002181f4ae797a98d2b5d9bed751defc04b6",
      "bundle_path_digest": "sha256:e007bfb95d0e0498967a466dd482002181f4ae797a98d2b5d9bed751defc04b6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-03T13:51:37.737000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:25:36.230000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": "Instana",
      "related_images": [
        {
          "digest": "sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "name": "instana-agent-operator-2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c-annotation"
        },
        {
          "digest": "sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:2cdf1519520797b77271e2a976b75e3ee6346a3bc036d1b3a5770c6778ac575c",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.4",
      "version_original": "1.0.4"
    },
    {
      "_id": "60902690cb52424543b09ae1",
      "alm_examples": [
        {
          "api_version": "apik10.kasten.io/v1alpha1",
          "kind": "K10",
          "metadata": {
            "name": "k10-sample"
          },
          "spec": {
            "ambassadorImage": {
              "image": "ambassador",
              "registry": "quay.io",
              "repository": "datawire"
            },
            "apigateway": {
              "serviceResolver": "dns"
            },
            "apiservices": {
              "deployed": true
            },
            "auth": {
              "basicAuth": {
                "enabled": false,
                "htpasswd": "",
                "secretName": ""
              },
              "dex": {
                "enabled": false
              },
              "groupAllowList": [],
              "k10AdminGroups": [],
              "k10AdminUsers": [],
              "ldap": {
                "enabled": false,
                "groupSearch": {
                  "userMatchers": []
                },
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureNoSSL": false,
                "insecureSkipVerifySSL": false,
                "restartPod": false,
                "startTLS": false,
                "userSearch": {},
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "oidcAuth": {
                "enabled": false
              },
              "openshift": {
                "enabled": false,
                "groupnameClaim": "groups",
                "groupnamePrefix": "",
                "insecureCA": false,
                "useServiceAccountCA": false,
                "usernameClaim": "email",
                "usernamePrefix": ""
              },
              "tokenAuth": {
                "enabled": false
              }
            },
            "cacertconfigmap": {},
            "clusterName": "",
            "dexImage": {
              "image": "dex",
              "registry": "quay.io",
              "repository": "dexidp"
            },
            "eula": {
              "accept": false
            },
            "executorReplicas": 3,
            "externalGateway": {
              "awsSSLCertARN": "",
              "create": false,
              "fqdn": {}
            },
            "genericVolumeSnapshot": {
              "resources": {
                "limits": {},
                "requests": {}
              }
            },
            "global": {
              "airgapped": {
                "repository": ""
              },
              "images": {
                "aggregatedapis": "",
                "ambassador": "",
                "auth": "",
                "catalog": "",
                "cephtool": "",
                "config": "",
                "configmap-reload": "",
                "crypto": "",
                "dashboardbff": "",
                "datamover": "",
                "dex": "",
                "executor": "",
                "frontend": "",
                "jobs": "",
                "kanister": "",
                "kanister-tools": "",
                "logging": "",
                "metering": "",
                "prometheus": "",
                "state": "",
                "upgrade": ""
              },
              "persistence": {
                "accessMode": "ReadWriteOnce",
                "catalog": {
                  "size": ""
                },
                "enabled": true,
                "jobs": {
                  "size": ""
                },
                "logging": {
                  "size": ""
                },
                "metering": {
                  "size": "2Gi"
                },
                "mountPath": "/mnt/k10state",
                "size": "20Gi",
                "storageClass": ""
              },
              "rhMarketPlace": true,
              "upstreamCertifiedImages": false
            },
            "image": {
              "image": "",
              "pullPolicy": "Always",
              "registry": "gcr.io",
              "repository": "kasten-images",
              "tag": ""
            },
            "ingress": {
              "create": false,
              "tls": {
                "enabled": false
              }
            },
            "injectKanisterSidecar": {
              "enabled": false,
              "namespaceSelector": {
                "matchLabels": {}
              },
              "objectSelector": {
                "matchLabels": {}
              },
              "webhookServer": {
                "port": 8080
              }
            },
            "jaeger": {
              "enabled": false
            },
            "kanisterPodCustomAnnotations": "",
            "kanisterPodCustomLabels": "",
            "kanisterToolsImage": {
              "image": "kanister-tools",
              "pullPolicy": "Always",
              "registry": "ghcr.io",
              "repository": "kanisterio"
            },
            "license": "",
            "limiter": {
              "csiSnapshots": 10,
              "genericVolumeCopies": 10,
              "genericVolumeRestores": 10,
              "genericVolumeSnapshots": 10,
              "providerSnapshots": 10
            },
            "logLevel": "info",
            "metering": {
              "awsMarketPlaceIamRole": "",
              "serviceAccount": {
                "create": false
              }
            },
            "networkPolicy": {
              "create": true
            },
            "prometheus": {
              "alertmanager": {
                "affinity": {},
                "baseURL": "/",
                "configFileName": "alertmanager.yml",
                "configFromSecret": "",
                "configMapOverrideName": "",
                "enabled": false,
                "extraArgs": {},
                "extraEnv": {},
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/alertmanager",
                  "tag": "v0.21.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "alertmanager",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "",
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "labels": {},
                    "servicePort": 80
                  },
                  "podManagementPolicy": "OrderedReady"
                },
                "tolerations": [],
                "useClusterRole": true,
                "useExistingRole": false
              },
              "alertmanagerFiles": {
                "alertmanager.yml": {
                  "global": {},
                  "receivers": [
                    {
                      "name": "default-receiver"
                    }
                  ],
                  "route": {
                    "group_interval": "5m",
                    "group_wait": "10s",
                    "receiver": "default-receiver",
                    "repeat_interval": "3h"
                  }
                }
              },
              "configmapReload": {
                "alertmanager": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                },
                "prometheus": {
                  "enabled": true,
                  "extraArgs": {},
                  "extraConfigmapMounts": [],
                  "extraVolumeDirs": [],
                  "image": {
                    "pullPolicy": "IfNotPresent",
                    "repository": "jimmidyson/configmap-reload"
                  },
                  "name": "configmap-reload",
                  "resources": {}
                }
              },
              "enabled": true,
              "global": {
                "airgapped": {
                  "repository": ""
                },
                "images": {
                  "aggregatedapis": "",
                  "ambassador": "",
                  "auth": "",
                  "catalog": "",
                  "cephtool": "",
                  "config": "",
                  "configmap-reload": "",
                  "crypto": "",
                  "dashboardbff": "",
                  "datamover": "",
                  "dex": "",
                  "executor": "",
                  "frontend": "",
                  "jobs": "",
                  "kanister": "",
                  "kanister-tools": "",
                  "logging": "",
                  "metering": "",
                  "prometheus": "",
                  "state": "",
                  "upgrade": ""
                },
                "persistence": {
                  "accessMode": "ReadWriteOnce",
                  "catalog": {
                    "size": ""
                  },
                  "enabled": true,
                  "jobs": {
                    "size": ""
                  },
                  "logging": {
                    "size": ""
                  },
                  "metering": {
                    "size": "2Gi"
                  },
                  "mountPath": "/mnt/k10state",
                  "size": "20Gi",
                  "storageClass": ""
                },
                "rhMarketPlace": true,
                "upstreamCertifiedImages": false
              },
              "initChownData": {
                "enabled": false
              },
              "k10image": {
                "registry": "gcr.io",
                "repository": "kasten-images"
              },
              "kube-state-metrics": {
                "affinity": {},
                "autosharding": {
                  "enabled": false
                },
                "collectors": {
                  "certificatesigningrequests": true,
                  "configmaps": true,
                  "cronjobs": true,
                  "daemonsets": true,
                  "deployments": true,
                  "endpoints": true,
                  "horizontalpodautoscalers": true,
                  "ingresses": true,
                  "jobs": true,
                  "limitranges": true,
                  "mutatingwebhookconfigurations": true,
                  "namespaces": true,
                  "networkpolicies": true,
                  "nodes": true,
                  "persistentvolumeclaims": true,
                  "persistentvolumes": true,
                  "poddisruptionbudgets": true,
                  "pods": true,
                  "replicasets": true,
                  "replicationcontrollers": true,
                  "resourcequotas": true,
                  "secrets": true,
                  "services": true,
                  "statefulsets": true,
                  "storageclasses": true,
                  "validatingwebhookconfigurations": true,
                  "verticalpodautoscalers": false,
                  "volumeattachments": true
                },
                "customLabels": {},
                "global": {
                  "airgapped": {
                    "repository": ""
                  },
                  "images": {
                    "aggregatedapis": "",
                    "ambassador": "",
                    "auth": "",
                    "catalog": "",
                    "cephtool": "",
                    "config": "",
                    "configmap-reload": "",
                    "crypto": "",
                    "dashboardbff": "",
                    "datamover": "",
                    "dex": "",
                    "executor": "",
                    "frontend": "",
                    "jobs": "",
                    "kanister": "",
                    "kanister-tools": "",
                    "logging": "",
                    "metering": "",
                    "prometheus": "",
                    "state": "",
                    "upgrade": ""
                  },
                  "persistence": {
                    "accessMode": "ReadWriteOnce",
                    "catalog": {
                      "size": ""
                    },
                    "enabled": true,
                    "jobs": {
                      "size": ""
                    },
                    "logging": {
                      "size": ""
                    },
                    "metering": {
                      "size": "2Gi"
                    },
                    "mountPath": "/mnt/k10state",
                    "size": "20Gi",
                    "storageClass": ""
                  },
                  "rhMarketPlace": true,
                  "upstreamCertifiedImages": false
                },
                "hostNetwork": false,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "quay.io/coreos/kube-state-metrics",
                  "tag": "v1.9.7"
                },
                "imagePullSecrets": [],
                "kubeTargetVersionOverride": "",
                "namespaceOverride": "",
                "nodeSelector": {},
                "podAnnotations": {},
                "podDisruptionBudget": {},
                "podSecurityPolicy": {
                  "additionalVolumes": [],
                  "annotations": {},
                  "enabled": false
                },
                "prometheus": {
                  "monitor": {
                    "additionalLabels": {},
                    "enabled": false,
                    "honorLabels": false,
                    "namespace": ""
                  }
                },
                "prometheusScrape": true,
                "rbac": {
                  "create": true
                },
                "replicas": 1,
                "resources": {},
                "securityContext": {
                  "enabled": true,
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "loadBalancerIP": "",
                  "nodePort": 0,
                  "port": 8080,
                  "type": "ClusterIP"
                },
                "serviceAccount": {
                  "annotations": {},
                  "create": true,
                  "imagePullSecrets": []
                },
                "tolerations": []
              },
              "kubeStateMetrics": {
                "enabled": false
              },
              "networkPolicy": {
                "enabled": true
              },
              "nodeExporter": {
                "enabled": false,
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "hostNetwork": true,
                "hostPID": true,
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/node-exporter",
                  "tag": "v1.0.1"
                },
                "name": "node-exporter",
                "nodeSelector": {},
                "pod": {
                  "labels": {}
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "resources": {},
                "securityContext": {},
                "service": {
                  "annotations": {
                    "prometheus.io/scrape": "true"
                  },
                  "clusterIP": "None",
                  "externalIPs": [],
                  "hostPort": 9100,
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9100,
                  "type": "ClusterIP"
                },
                "tolerations": [],
                "updateStrategy": {
                  "type": "RollingUpdate"
                }
              },
              "podSecurityPolicy": {
                "enabled": false
              },
              "pushgateway": {
                "enabled": false,
                "extraArgs": {},
                "extraInitContainers": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/pushgateway",
                  "tag": "v1.2.0"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "name": "pushgateway",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": false,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "2Gi",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "priorityClassName": "",
                "replicaCount": 1,
                "resources": {},
                "securityContext": {
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {
                    "prometheus.io/probe": "pushgateway"
                  },
                  "clusterIP": "",
                  "externalIPs": [],
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 9091,
                  "type": "ClusterIP"
                },
                "tolerations": []
              },
              "rbac": {
                "create": false
              },
              "scrapeCAdvisor": false,
              "server": {
                "affinity": {},
                "alertmanagers": [],
                "baseURL": "/k10/prometheus/",
                "configMapOverrideName": "k10-prometheus-config",
                "configPath": "/etc/config/prometheus.yml",
                "emptyDir": {
                  "sizeLimit": ""
                },
                "enableServiceLinks": true,
                "enabled": true,
                "env": [],
                "extraArgs": {},
                "extraConfigmapMounts": [],
                "extraFlags": [
                  "web.enable-lifecycle"
                ],
                "extraHostPathMounts": [],
                "extraInitContainers": [],
                "extraSecretMounts": [],
                "extraVolumeMounts": [],
                "extraVolumes": [],
                "fullnameOverride": "prometheus-server",
                "global": {
                  "evaluation_interval": "1m",
                  "scrape_interval": "1m",
                  "scrape_timeout": "10s"
                },
                "hostAliases": [],
                "image": {
                  "pullPolicy": "IfNotPresent",
                  "repository": "prom/prometheus"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": false,
                  "extraLabels": {},
                  "extraPaths": [],
                  "hosts": [],
                  "tls": []
                },
                "livenessProbeFailureThreshold": 3,
                "livenessProbeInitialDelay": 30,
                "livenessProbePeriodSeconds": 15,
                "livenessProbeSuccessThreshold": 1,
                "livenessProbeTimeout": 30,
                "name": "server",
                "nodeSelector": {},
                "persistentVolume": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "annotations": {},
                  "enabled": true,
                  "existingClaim": "",
                  "mountPath": "/data",
                  "size": "8Gi",
                  "storageClass": "",
                  "subPath": ""
                },
                "podAnnotations": {},
                "podDisruptionBudget": {
                  "enabled": false,
                  "maxUnavailable": 1
                },
                "podLabels": {},
                "podSecurityPolicy": {
                  "annotations": {}
                },
                "prefixURL": "/k10/prometheus/",
                "priorityClassName": "",
                "readinessProbeFailureThreshold": 3,
                "readinessProbeInitialDelay": 30,
                "readinessProbePeriodSeconds": 5,
                "readinessProbeSuccessThreshold": 1,
                "readinessProbeTimeout": 30,
                "remoteRead": [],
                "remoteWrite": [],
                "replicaCount": 1,
                "resources": {},
                "retention": "30d",
                "securityContext": {
                  "fsGroup": 65534,
                  "runAsGroup": 65534,
                  "runAsNonRoot": true,
                  "runAsUser": 65534
                },
                "service": {
                  "annotations": {},
                  "clusterIP": "",
                  "externalIPs": [],
                  "gRPC": {
                    "enabled": false,
                    "servicePort": 10901
                  },
                  "labels": {},
                  "loadBalancerIP": "",
                  "loadBalancerSourceRanges": [],
                  "servicePort": 80,
                  "sessionAffinity": "None",
                  "statefulsetReplica": {
                    "enabled": false,
                    "replica": 0
                  },
                  "type": "ClusterIP"
                },
                "statefulSet": {
                  "annotations": {},
                  "enabled": false,
                  "headless": {
                    "annotations": {},
                    "gRPC": {
                      "enabled": false,
                      "servicePort": 10901
                    },
                    "labels": {},
                    "servicePort": 80
                  },
                  "labels": {},
                  "podManagementPolicy": "OrderedReady"
                },
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": "100%",
                    "maxUnavailable": "100%"
                  },
                  "type": "RollingUpdate"
                },
                "terminationGracePeriodSeconds": 300,
                "tolerations": [],
                "verticalAutoscaler": {
                  "enabled": false
                }
              },
              "serverFiles": {
                "alerting_rules.yml": {},
                "alerts": {},
                "prometheus.yml": {
                  "rule_files": [
                    "/etc/config/recording_rules.yml",
                    "/etc/config/alerting_rules.yml",
                    "/etc/config/rules",
                    "/etc/config/alerts"
                  ],
                  "scrape_configs": [
                    {
                      "job_name": "prometheus",
                      "static_configs": [
                        {
                          "targets": [
                            "localhost:9090"
                          ]
                        }
                      ]
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-apiservers",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "default;kubernetes;https",
                          "source_labels": [
                            "__meta_kubernetes_namespace",
                            "__meta_kubernetes_service_name",
                            "__meta_kubernetes_endpoint_port_name"
                          ]
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "bearer_token_file": "/var/run/secrets/kubernetes.io/serviceaccount/token",
                      "job_name": "kubernetes-nodes-cadvisor",
                      "kubernetes_sd_configs": [
                        {
                          "role": "node"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_node_label_(.+)"
                        },
                        {
                          "replacement": "kubernetes.default.svc:443",
                          "target_label": "__address__"
                        },
                        {
                          "regex": "(.+)",
                          "replacement": "/api/v1/nodes/$1/proxy/metrics/cadvisor",
                          "source_labels": [
                            "__meta_kubernetes_node_name"
                          ],
                          "target_label": "__metrics_path__"
                        }
                      ],
                      "scheme": "https",
                      "tls_config": {
                        "ca_file": "/var/run/secrets/kubernetes.io/serviceaccount/ca.crt",
                        "insecure_skip_verify": true
                      }
                    },
                    {
                      "job_name": "kubernetes-service-endpoints",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-service-endpoints-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "endpoints"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(https?)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_scheme"
                          ],
                          "target_label": "__scheme__"
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_service_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_node_name"
                          ],
                          "target_label": "kubernetes_node"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    },
                    {
                      "honor_labels": true,
                      "job_name": "prometheus-pushgateway",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": "pushgateway",
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-services",
                      "kubernetes_sd_configs": [
                        {
                          "role": "service"
                        }
                      ],
                      "metrics_path": "/probe",
                      "params": {
                        "module": [
                          "http_2xx"
                        ]
                      },
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_service_annotation_prometheus_io_probe"
                          ]
                        },
                        {
                          "source_labels": [
                            "__address__"
                          ],
                          "target_label": "__param_target"
                        },
                        {
                          "replacement": "blackbox",
                          "target_label": "__address__"
                        },
                        {
                          "source_labels": [
                            "__param_target"
                          ],
                          "target_label": "instance"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_service_label_(.+)"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "source_labels": [
                            "__meta_kubernetes_service_name"
                          ],
                          "target_label": "kubernetes_name"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        }
                      ]
                    },
                    {
                      "job_name": "kubernetes-pods-slow",
                      "kubernetes_sd_configs": [
                        {
                          "role": "pod"
                        }
                      ],
                      "relabel_configs": [
                        {
                          "action": "keep",
                          "regex": true,
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_scrape_slow"
                          ]
                        },
                        {
                          "action": "replace",
                          "regex": "(.+)",
                          "source_labels": [
                            "__meta_kubernetes_pod_annotation_prometheus_io_path"
                          ],
                          "target_label": "__metrics_path__"
                        },
                        {
                          "action": "replace",
                          "regex": "([^:]+)(?::\\d+)?;(\\d+)",
                          "replacement": "$1:$2",
                          "source_labels": [
                            "__address__",
                            "__meta_kubernetes_pod_annotation_prometheus_io_port"
                          ],
                          "target_label": "__address__"
                        },
                        {
                          "action": "labelmap",
                          "regex": "__meta_kubernetes_pod_label_(.+)"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_namespace"
                          ],
                          "target_label": "kubernetes_namespace"
                        },
                        {
                          "action": "replace",
                          "source_labels": [
                            "__meta_kubernetes_pod_name"
                          ],
                          "target_label": "kubernetes_pod_name"
                        }
                      ],
                      "scrape_interval": "5m",
                      "scrape_timeout": "30s"
                    }
                  ]
                },
                "recording_rules.yml": {},
                "rules": {}
              },
              "serviceAccounts": {
                "alertmanager": {
                  "annotations": {},
                  "create": false
                },
                "kubeStateMetrics": {
                  "create": false
                },
                "nodeExporter": {
                  "annotations": {},
                  "create": false
                },
                "pushgateway": {
                  "annotations": {},
                  "create": false
                },
                "server": {
                  "annotations": {},
                  "create": true
                }
              }
            },
            "rbac": {
              "create": true
            },
            "resources": {},
            "route": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "path": "/",
              "tls": {
                "enabled": false,
                "insecureEdgeTerminationPolicy": "Redirect",
                "termination": "edge"
              }
            },
            "scc": {
              "create": true
            },
            "secrets": {
              "apiTlsCrt": "",
              "apiTlsKey": "",
              "awsAccessKeyId": "",
              "awsIamRole": "",
              "awsSecretAccessKey": "",
              "azureADEndpoint": "",
              "azureADResourceID": "",
              "azureClientId": "",
              "azureClientSecret": "",
              "azureResourceGroup": "",
              "azureResourceMgrEndpoint": "",
              "azureSubscriptionID": "",
              "azureTenantId": "",
              "dockerConfig": "",
              "dockerConfigPath": "",
              "googleApiKey": "",
              "ibmSoftLayerApiKey": "",
              "ibmSoftLayerApiUsername": "",
              "vsphereEndpoint": "",
              "vspherePassword": "",
              "vsphereUsername": ""
            },
            "service": {
              "aggregatedApiPort": 10250,
              "externalPort": 8000,
              "gatewayAdminPort": 8877,
              "internalPort": 8000
            },
            "serviceAccount": {
              "create": true
            },
            "services": {
              "dashboardbff": {
                "hostNetwork": false
              },
              "executor": {
                "hostNetwork": false
              },
              "securityContext": {
                "fsGroup": 1000,
                "runAsUser": 1000
              }
            },
            "toolsImage": {
              "enabled": true,
              "pullPolicy": "Always"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/kasten/kasten-bundle@sha256:a4d336e19f34d7e4c6077261cbe42d8bda2fa9044a7dc957e4d5c996dfc4eb13",
      "bundle_path_digest": "sha256:a4d336e19f34d7e4c6077261cbe42d8bda2fa9044a7dc957e4d5c996dfc4eb13",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-03T16:36:32.763000+00:00",
      "csv_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_display_name": "K10",
      "csv_metadata_description": "K10 data management platform for OpenShift, The Market Leader for Kubernetes Backup and DR",
      "csv_name": "k10-kasten-operator.3.0.11007",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:43:53.860000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "k10-kasten-operator",
      "provided_apis": [],
      "provider": "Kasten by Veeam, kasten.io",
      "related_images": [
        {
          "digest": "sha256:b72c018631c4af4b5f2ffd3e858d9492d37a46e8911a8c9e68457c0f59b6322b",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:b72c018631c4af4b5f2ffd3e858d9492d37a46e8911a8c9e68457c0f59b6322b",
          "name": "k10-operator-b72c018631c4af4b5f2ffd3e858d9492d37a46e8911a8c9e68457c0f59b6322b-annotation"
        },
        {
          "digest": "sha256:01fc7bf43f37f4692ded540fad862d2d614a6522942221cf95e8e12f2f0e1d88",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:01fc7bf43f37f4692ded540fad862d2d614a6522942221cf95e8e12f2f0e1d88",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b72c018631c4af4b5f2ffd3e858d9492d37a46e8911a8c9e68457c0f59b6322b",
          "image": "registry.connect.redhat.com/kasten/k10-operator@sha256:b72c018631c4af4b5f2ffd3e858d9492d37a46e8911a8c9e68457c0f59b6322b",
          "name": "manager"
        },
        {
          "digest": "sha256:6391d9fe50a9a8d845563588fd14f4ded10c510a168f7ffa0df6e466c70d8f23",
          "image": "registry.connect.redhat.com/kasten/aggregatedapis@sha256:6391d9fe50a9a8d845563588fd14f4ded10c510a168f7ffa0df6e466c70d8f23",
          "name": "aggregatedapis"
        },
        {
          "digest": "sha256:e2d2729716d2d29169415d3c52f994e0ec1b0dccf7a7984b5d460aa7f02465de",
          "image": "registry.connect.redhat.com/kasten/auth@sha256:e2d2729716d2d29169415d3c52f994e0ec1b0dccf7a7984b5d460aa7f02465de",
          "name": "auth"
        },
        {
          "digest": "sha256:03b9733e83cd7c62083ebac4d141e00c499db2d8817fc3e2588b34a0e631b2cd",
          "image": "registry.connect.redhat.com/kasten/catalog@sha256:03b9733e83cd7c62083ebac4d141e00c499db2d8817fc3e2588b34a0e631b2cd",
          "name": "catalog"
        },
        {
          "digest": "sha256:0a9fc33b5656a943ccd3fc371a5d170a98548a86bf5f0a79f18507724831fafe",
          "image": "registry.connect.redhat.com/kasten/config@sha256:0a9fc33b5656a943ccd3fc371a5d170a98548a86bf5f0a79f18507724831fafe",
          "name": "config"
        },
        {
          "digest": "sha256:b13bf28ecdee3cfbbca1b4da56f17abe0a401a3868f638cde703859544aa232e",
          "image": "registry.connect.redhat.com/kasten/crypto@sha256:b13bf28ecdee3cfbbca1b4da56f17abe0a401a3868f638cde703859544aa232e",
          "name": "crypto"
        },
        {
          "digest": "sha256:7c97f2ed02bebb95a242f7ca384e6bb151e2e1f19bdf905d8a312baac4d905cb",
          "image": "registry.connect.redhat.com/kasten/dashboardbff@sha256:7c97f2ed02bebb95a242f7ca384e6bb151e2e1f19bdf905d8a312baac4d905cb",
          "name": "dashboardbff"
        },
        {
          "digest": "sha256:626b635b7a1f642829ca5ea1954836b115fe6db4e751cb51b9995c84bb3023a6",
          "image": "registry.connect.redhat.com/kasten/executor@sha256:626b635b7a1f642829ca5ea1954836b115fe6db4e751cb51b9995c84bb3023a6",
          "name": "executor"
        },
        {
          "digest": "sha256:2e68590166309265f31c084e859737e22ba73dc0ad73ffe5c5be4a5bd2df4f2d",
          "image": "registry.connect.redhat.com/kasten/frontend@sha256:2e68590166309265f31c084e859737e22ba73dc0ad73ffe5c5be4a5bd2df4f2d",
          "name": "frontend"
        },
        {
          "digest": "sha256:bf9c75a9278e5d7b1cce78bcc285a6aeaa9102d0ad3dd26671bab3bf18294da8",
          "image": "registry.connect.redhat.com/kasten/jobs@sha256:bf9c75a9278e5d7b1cce78bcc285a6aeaa9102d0ad3dd26671bab3bf18294da8",
          "name": "jobs"
        },
        {
          "digest": "sha256:50c02e5ecf32a5a8fc05a602ee76e2d57e1e6eb743322a87a5d95cb7b5e51e99",
          "image": "registry.connect.redhat.com/kasten/kanister@sha256:50c02e5ecf32a5a8fc05a602ee76e2d57e1e6eb743322a87a5d95cb7b5e51e99",
          "name": "kanister"
        },
        {
          "digest": "sha256:0753902d314e7f4488b39dcbefc5cc8a32b68e6dd344292a7a5e4f761cd1d93e",
          "image": "registry.connect.redhat.com/kasten/logging@sha256:0753902d314e7f4488b39dcbefc5cc8a32b68e6dd344292a7a5e4f761cd1d93e",
          "name": "logging"
        },
        {
          "digest": "sha256:4ceb435cb4542d0e7515e29b78505fbe75933a43d2662ca16190a13fd3a62ac6",
          "image": "registry.connect.redhat.com/kasten/metering@sha256:4ceb435cb4542d0e7515e29b78505fbe75933a43d2662ca16190a13fd3a62ac6",
          "name": "metering"
        },
        {
          "digest": "sha256:4add1a78dcc55b03d81516f3d26ffda97756bfafc284feacd955ef4a97a5446d",
          "image": "registry.connect.redhat.com/kasten/state@sha256:4add1a78dcc55b03d81516f3d26ffda97756bfafc284feacd955ef4a97a5446d",
          "name": "state"
        },
        {
          "digest": "sha256:40d4b3d85f6df4d28e53c3d0685de5ab15d86dc18eb00cc3f3e8937f8afed975",
          "image": "registry.connect.redhat.com/kasten/ambassador@sha256:40d4b3d85f6df4d28e53c3d0685de5ab15d86dc18eb00cc3f3e8937f8afed975",
          "name": "ambassador"
        },
        {
          "digest": "sha256:7ac957610a7b0706c56b39c226c6a458a10e6991d24c4fdd79eb0bd660d35f17",
          "image": "registry.connect.redhat.com/kasten/prometheus@sha256:7ac957610a7b0706c56b39c226c6a458a10e6991d24c4fdd79eb0bd660d35f17",
          "name": "prometheus"
        },
        {
          "digest": "sha256:de6138e459a4e74712a2c759877063f8be9c8cb3e852ec2bccc4b9fc188f8c7e",
          "image": "registry.connect.redhat.com/kasten/configmap-reload@sha256:de6138e459a4e74712a2c759877063f8be9c8cb3e852ec2bccc4b9fc188f8c7e",
          "name": "configmapreload"
        },
        {
          "digest": "sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "image": "registry.connect.redhat.com/kasten/dex@sha256:6c1e284cdc03f4e0888653a90edef7d541a9e7eae87ce181b81e2b69edebfda1",
          "name": "dex"
        },
        {
          "digest": "sha256:27d1b1f2d872bcd59f8eb95ec7c59979bd0eeea6bca9e24a636a5e32181a2770",
          "image": "registry.connect.redhat.com/kasten/kanister-tools@sha256:27d1b1f2d872bcd59f8eb95ec7c59979bd0eeea6bca9e24a636a5e32181a2770",
          "name": "kanistertools"
        },
        {
          "digest": "sha256:dc2ff9a8c0f3e837ee7e7ba3945a0f3e780cdd8902050f3ce542182053f2bfc6",
          "image": "registry.connect.redhat.com/kasten/upgrade@sha256:dc2ff9a8c0f3e837ee7e7ba3945a0f3e780cdd8902050f3ce542182053f2bfc6",
          "name": "upgrade"
        },
        {
          "digest": "sha256:ce0480d395ee2b8d98540f166133f54fa3f24f6ff9b8db0ab83865d47a5c7c6c",
          "image": "registry.connect.redhat.com/kasten/cephtool@sha256:ce0480d395ee2b8d98540f166133f54fa3f24f6ff9b8db0ab83865d47a5c7c6c",
          "name": "cephtool"
        },
        {
          "digest": "sha256:8b2ccde6a975815cafdf147c45e7c3319e772edca116f6f905fc4203ea4e8759",
          "image": "registry.connect.redhat.com/kasten/datamover@sha256:8b2ccde6a975815cafdf147c45e7c3319e772edca116f6f905fc4203ea4e8759",
          "name": "datamover"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "3.0.11007",
      "version_original": "3.0.11007"
    },
    {
      "_id": "609aae4b56933b164fe2119c",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-hub-operator-bundle@sha256:53ed857edafa5f90ad45ee3c67be454e8b42cc8a12fabdfcb87b93fcbb4bd1fc",
      "bundle_path_digest": "sha256:53ed857edafa5f90ad45ee3c67be454e8b42cc8a12fabdfcb87b93fcbb4bd1fc",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:19.033000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-hub-operator.v0.0.24",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:24:52.834000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cortex-hub-operator",
      "provided_apis": [
        {
          "group": "hubs.cortex.cognitivescale.com",
          "kind": "Hub",
          "plural": "hubs",
          "version": "v1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.24",
      "version_original": "0.0.24"
    },
    {
      "_id": "609aae4c56933b164fe2119d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:252eb0f3b3cf70b199f209a8ec03ff0d1c99c4cc0a60af18687238944b6e5140",
      "bundle_path_digest": "sha256:252eb0f3b3cf70b199f209a8ec03ff0d1c99c4cc0a60af18687238944b6e5140",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:20.026000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.7",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:16:29.843000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.7",
      "version_original": "0.0.7"
    },
    {
      "_id": "609aae4c56933b164fe2119f",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:18:20.869000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:34:34.498000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609aae4ed04af0e74bb05771",
      "alm_examples": [
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "Certifai",
          "metadata": {
            "name": "default-certifai"
          },
          "spec": {
            "console": {
              "authorization-type": "none",
              "azure": {
                "account-key": "your account key",
                "account-name": "your account name",
                "sas-token": "your SAS token"
              },
              "gcs": {
                "application-credentials": "{\n  \"type\": \"\",\n  \"project_id\": \"\",\n  \"private_key_id\": \"\",\n  \"private_key\": \"\",\n  \"client_email\": \"\",\n  \"client_id\": \"\",\n  \"auth_uri\": \"\",\n  \"token_uri\": \"\",\n  \"auth_provider_x509_cert_url\": \"\",\n  \"client_x509_cert_url\": \"\"\n}\n"
              },
              "replicas": 1,
              "route-type": "none",
              "s3": {
                "access-key": "your access key",
                "endpoint": "https://s3.amazonaws.com",
                "secret-key": "your secret key",
                "verify-cert": false
              },
              "scan-dir": ""
            },
            "deployment-type": "openshift",
            "dex": {
              "connector": {
                "add-config": "orgs:\n- name: my-org\n",
                "client-id": "clientid",
                "client-secret": "clientsecret",
                "name": "Github",
                "type": "github"
              },
              "enabled": false,
              "replicas": 1
            },
            "reference-model": {
              "enabled": true
            },
            "reporting": {
              "db-conn-str": "postgresql://user:password@service:port/db",
              "enabled": true,
              "period": "*/15 * * * *"
            }
          }
        },
        {
          "api_version": "cortex.cognitivescale.com/v1",
          "kind": "CertifaiScan",
          "metadata": {
            "name": "example-certifai-scan",
            "namespace": "certifai"
          },
          "spec": {
            "scanconfig": {
              "concurrency": 4,
              "scanargs": "command line args here",
              "scandef": "definition file text here"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:c85d3cac53bab7690ee87f6a8fc15e3471e6ceff7feecf9749fad89a1e6a12e3",
      "bundle_path_digest": "sha256:c85d3cac53bab7690ee87f6a8fc15e3471e6ceff7feecf9749fad89a1e6a12e3",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:18:22.520000+00:00",
      "csv_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production. It evaluates AI models and allows users to compare different models or model versions for the following qualities.\n* **Robustness:** measures how well models retain an outcome given changes to the data feature values. The more robust a model is, the greater the changes required to alter the outcome.\n* **Fairness by group:** measures the difference required to change the outcome for different groups implicit in a feature given the same model and dataset. For example, implicit groups male, female, and nonbinary belong to the feature, \u201cgender\u201d. A fair model shows that all 3 groups require a similar amount of change to alter the results.\n* **Explainability:** measures the average simplicity of counterfactual explanations provided for each model. An explanation that requires a single changed feature will score 100%. Explanations that require more changed features will score lower.\n* **Explanations:** display the prediction provided through the generation of counterfactuals for the change that must occur in a dataset with given restrictions to obtain a different outcome. Users can explore the entire dataset one observation at a time to understand what features changed and by how much to obtain a different result.\nSee our [documentation](https://cognitivescale.github.io/cortex-certifai/) for information about how to deploy the Certifai Operator and how to get started using our toolkit.\n## License Copyright 2020 Cognitive Scale, Inc. All Rights Reserved.\nBy downloading you agree to the terms of CognitiveScale's [End User License Agreement](https://www.cognitivescale.com/legal-information/).\n",
      "csv_display_name": "Cortex Certifai Operator",
      "csv_metadata_description": "Cortex Certifai empowers enterprises to identify and mitigate risk and vulnerabilities within AI and deploy trusted AI systems into production.",
      "csv_name": "cortex-certifai-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:47:25.952000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "version": "v1"
        }
      ],
      "provider": "CognitiveScale",
      "related_images": [
        {
          "digest": "sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "name": "cortex-certifai-operator-ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3-annotation"
        },
        {
          "digest": "sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-operator@sha256:ffcdc1d2a404822227b6d2cde6d7476e1cee89383868c30b32840931e6d1d5f3",
          "name": "cortex-certifai-operator"
        },
        {
          "digest": "sha256:0677ac2f1e3ffe842523cc149f80f06777bde5f54ded18f00044f07bcdf41d0b",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reference-model-server@sha256:0677ac2f1e3ffe842523cc149f80f06777bde5f54ded18f00044f07bcdf41d0b",
          "name": "refmodel"
        },
        {
          "digest": "sha256:4730f12f47a45600b818c3f504957be98047fea0ccda783cba71565465e5761e",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-console@sha256:4730f12f47a45600b818c3f504957be98047fea0ccda783cba71565465e5761e",
          "name": "console"
        },
        {
          "digest": "sha256:4d0b5e988cb5ab5842b34113f4a114020285b84e6dbc05b88bf9fff3fd086785",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-scanner@sha256:4d0b5e988cb5ab5842b34113f4a114020285b84e6dbc05b88bf9fff3fd086785",
          "name": "scanner"
        },
        {
          "digest": "sha256:8bf9cfbb57a397bbc2e02511a7a507b24d5022d02843900028095d64952ad8af",
          "image": "registry.connect.redhat.com/c12e/cortex-certifai-reporting-etl@sha256:8bf9cfbb57a397bbc2e02511a7a507b24d5022d02843900028095d64952ad8af",
          "name": "reporting_etl"
        },
        {
          "digest": "sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "image": "registry.redhat.io/openshift4/ose-oauth-proxy@sha256:a6e75a40feea7b838071c4fcb7933eec29955bf5fe7d874400d6a00e2709031f",
          "name": "oauth_proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "609aae4ee2b160d361d2505e",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "bundle_path_digest": "sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:22.907000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-certifai-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:55:52.581000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "plural": "certifais",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "plural": "certifaiscans",
          "version": "v1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "609aae4e56933b164fe211a1",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/mongodb/enterprise-operator-bundle@sha256:b723279ffbfd735a83afd8db3424f8d8b2806906e483a6b64f9fe12f9e9615a5",
      "bundle_path_digest": "sha256:b723279ffbfd735a83afd8db3424f8d8b2806906e483a6b64f9fe12f9e9615a5",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:22.940000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "mongodb-enterprise.v1.2.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:49:15.055000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "mongodb-enterprise",
      "provided_apis": [],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "609aae4f56933b164fe211a2",
      "alm_examples": [
        {
          "api_version": "data-explorer.com/v1alpha1",
          "kind": "DashboardWithJupyterHub",
          "metadata": {
            "name": "dashboard-jupyterhub-custom"
          },
          "spec": {
            "resources": {
              "limits": {
                "cpu": "2",
                "memory": "8Gi"
              },
              "requests": {
                "cpu": "2",
                "memory": "8Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:16f043d2f31f879b1aa6cf2385ca873b45850f238c32370b661f2c8ebc7668be",
      "bundle_path_digest": "sha256:16f043d2f31f879b1aa6cf2385ca873b45850f238c32370b661f2c8ebc7668be",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:23.068000+00:00",
      "csv_description": "Data Explorer provides ready to use pre-configured data science environment for experimentation.Bringing the promise of notebooks to Kubernetes and OpenShift as an Operator pattern.  Deploy in the cloud or your data center or local laptop with ready to use data and notebooks without burdening yourself with installation details. You can work as team or use your own project namespace.\n\nThe Operator deploys Data Explorer Dashbaord with **default** configuration of **2 CPU** and **8Gi Memory**.\n\nTo learn ***How to access the Data Explorer Dashboard*** and ***How to Deploy Data Explorer Dashboard with custom configuration*** visit <https://github.com/rhm-samples/data-explorer-operator/wiki>.\n",
      "csv_display_name": "Data Explorer Operator",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:51:02.603000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "plural": "dashboardwithjupyterhubs",
          "version": "v1alpha1"
        }
      ],
      "provider": "IBM-Edge",
      "related_images": [
        {
          "digest": "sha256:4183a28cc9cbd3b2bbc83543c37b0341c0f76b5176f1ba210baae651869319af",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:4183a28cc9cbd3b2bbc83543c37b0341c0f76b5176f1ba210baae651869319af",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5481ce5839d150f7641f1a0098da491d855171d4eae8a3eec48009f63e878903",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-operator@sha256:5481ce5839d150f7641f1a0098da491d855171d4eae8a3eec48009f63e878903",
          "name": "manager"
        },
        {
          "digest": "sha256:5ee83b7deb12d92a115ed150922632745e5f9f3c5d6e925c7b20027b9716df63",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:5ee83b7deb12d92a115ed150922632745e5f9f3c5d6e925c7b20027b9716df63",
          "name": "dashboardinstaller"
        },
        {
          "digest": "sha256:99d8ba8ef3c63ac94c3647ae390e2af4b1374f18d0b72707583c95aa87b7da18",
          "image": "registry.connect.redhat.com/ibm-edge/data-explorer-dashboard@sha256:99d8ba8ef3c63ac94c3647ae390e2af4b1374f18d0b72707583c95aa87b7da18",
          "name": "jupyterhub_dashboard"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.1",
      "version_original": "0.1.1"
    },
    {
      "_id": "609aae4fd04af0e74bb05772",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:30cc380829d5185e535c6ce2862fdfbe725694e638edade24d1d2ead76f063ca",
      "bundle_path_digest": "sha256:30cc380829d5185e535c6ce2862fdfbe725694e638edade24d1d2ead76f063ca",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:18:23.606000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:44:57.167000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.3.4",
      "version_original": "0.3.4"
    },
    {
      "_id": "609aae503048c1ac9a6fe9f6",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:8742dab8b0f0fb06c3bbed65d27baddff3df29575f57c50a4e44fc11365929a3",
      "bundle_path_digest": "sha256:8742dab8b0f0fb06c3bbed65d27baddff3df29575f57c50a4e44fc11365929a3",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:24.088000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v0.0.14",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:28:46.172000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.14",
      "version_original": "0.0.14"
    },
    {
      "_id": "609aae5356933b164fe211a6",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:3e6bec18d3fcb326ef63f81b8dff5f5d21db6fad489744c94542c75518ca638e",
      "bundle_path_digest": "sha256:3e6bec18d3fcb326ef63f81b8dff5f5d21db6fad489744c94542c75518ca638e",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:27.199000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nxrm-operator-certified.v3.23.0-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:29:22.122000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "3.23.0-1",
      "version_original": "3.23.0-1"
    },
    {
      "_id": "609aae53e2b160d361d25062",
      "alm_examples": [
        {
          "api_version": "memsql.com/v1alpha1",
          "kind": "MemsqlCluster",
          "metadata": {
            "name": "memsql-cluster"
          },
          "spec": {
            "adminHashedPassword": "*FABE5482D5AADF36D028AC443D117BE1180B9725",
            "aggregatorSpec": {
              "count": 3,
              "height": 0.5,
              "storageClass": "standard",
              "storageGB": 256
            },
            "leafSpec": {
              "count": 1,
              "height": 1,
              "storageClass": "standard",
              "storageGB": 1024
            },
            "license": "BDVhNDg5OWFjNTc3OTQxODRhOTVlMWVlZWY1YTFlNTlkAAAAAAAAAAAEAAAAAAAAAAwwNgIZAPXaOk16AZMCIzdmkvvO0VH57SIhkshiMAIZAJYHyL5vkNE4Sohz8BDqMuikVj9lNLvy4w==",
            "redundancyLevel": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:43d4b83cd44b220ff97974e49f5a451f93058bbf5ed52ef8a650f199bdc0ebdb",
      "bundle_path_digest": "sha256:43d4b83cd44b220ff97974e49f5a451f93058bbf5ed52ef8a650f199bdc0ebdb",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:27.514000+00:00",
      "csv_description": "This package contains everything you need to run the MemSQL Kubernetes Operator\nin your own Kubernetes cluster.\n\n# Getting Started\n\n* Install RBAC resources\n    ```bash\n    kubectl create -f rbac.yaml\n    ```\n* Install the MemSQL Cluster CRD\n    ```bash\n    kubectl create -f memsql-cluster-crd.yaml\n    ```\n* Deploy the Operator\n    ```bash\n    kubectl create -f deployment.yaml\n    kubectl get deployments\n    kubectl get pods\n    ```\n\n# Creating a cluster\n\n* Edit the deployment.yaml file\n    * `RELATED_IMAGE_NODE` -> use the latest version of MemSQL released (\"registry.connect.redhat.com/memsql/node:redhat-7.0.15-619d118712\" for MemSQL v7.0.15)\n\n* Edit the memsql-cluster.yaml file for your MemSQL cluster\n    * name -> cluster name of your choice\n    * license -> license key from portal.memsql.com\n    * adminHashedPassword -> `HASHED_PASSWORD`\n        * see below Python script to convert your password, include the leading `*`\n\n    * Python function to hash your password:\n        ```python\n        from hashlib import sha1\n        print(\"*\" + sha1(sha1('mypassword').digest()).hexdigest().upper())\n        ```\n\n    * redundancyLevel -> 1 or 2\n    * units -> number of nodes. Leaf nodes will automatically be doubled if redundancyLevel=2\n    * height -> height=1 corresponds to one MemSQL License Unit (8vCPU/32GB RAM)\n    * storageGB -> size of the persistent volume claim in GB\n    * storageClass -> name of the Kubernetes storage class for the\n      persistent volume claim\n    * NOTE: the minimum production config should be:\n        * 1 leaf unit @ height 1\n        * 3 aggregator units @ height 0.5\n        * redundancyLevel = 2\n\n* Create the cluster.\n    ```bash\n    kubectl create -f memsql-cluster.yaml\n    ```\n\n* To get logs for operator (or any MemSQL node), run the following after looking\n  up the PODNAME using `kubectl get pods`:\n    ```bash\n    kubectl logs PODNAME\n    ```\n\n* To get info about all MemSQL clusters running, use these commands. -oyaml will expose the DDL/DML endpoints for MemSQL.\n    ```bash\n    kubectl get memsql\n    kubectl describe memsql\n    ```\n\n* To see all the pods, services, stateful sets, & resources used by the MemSQL cluster, run:\n    ```bash\n    kubectl get all\n    ```\n\n* Connect to the MemSQL cluster.\n  Use the DDL endpoint for creating tables.\n  DML endpoint (load balancer amongst other aggregators) can be used for read/write\n  workload. Use the user called \"admin\" with the password you defined during\n  cluster creation.\n    ```bash\n    mysql -u admin -h <hostname> -P <port> -p<password>\n    ```\n\n* Notes on editing a MemSQL cluster:\n    * The MemSQL operator supports scaling and changing certain parts of the spec. Currently you can change:\n        * units\n        * height\n        * releaseID\n        * adminHashedPassword\n        * license\n        * redundancyLevel\n\n* To delete the MemSQL cluster:\n    ```bash\n    kubectl delete -f memsql-cluster.yaml\n    ```\n",
      "csv_display_name": "MemSQL",
      "csv_metadata_description": "Install a MemSQL Cluster",
      "csv_name": "memsql-operator.v0.0.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:49:50.971000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "MemSQL",
      "related_images": [
        {
          "digest": "sha256:9fba2c13b22b6dcae4718cbb371bbea37b2ef90b6b56752031d490177394eeff",
          "image": "registry.connect.redhat.com/memsql/operator@sha256:9fba2c13b22b6dcae4718cbb371bbea37b2ef90b6b56752031d490177394eeff",
          "name": "operator-9fba2c13b22b6dcae4718cbb371bbea37b2ef90b6b56752031d490177394eeff-annotation"
        },
        {
          "digest": "sha256:9fba2c13b22b6dcae4718cbb371bbea37b2ef90b6b56752031d490177394eeff",
          "image": "registry.connect.redhat.com/memsql/operator@sha256:9fba2c13b22b6dcae4718cbb371bbea37b2ef90b6b56752031d490177394eeff",
          "name": "memsql-operator"
        },
        {
          "digest": "sha256:bc3e5c31587bf535bca584deed98d8aa1e4d7cbe2617d5e9fcd425a38e3170fe",
          "image": "registry.connect.redhat.com/memsql/node@sha256:bc3e5c31587bf535bca584deed98d8aa1e4d7cbe2617d5e9fcd425a38e3170fe",
          "name": "node"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.3",
      "version_original": "0.0.3"
    },
    {
      "_id": "609aae53d04af0e74bb05777",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "production",
      "creation_date": "2021-05-11T16:18:27.760000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:18:57.072000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "609aae54e2b160d361d25064",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:02820de3e0134fbca92a2d59286dfc4c873a2df593d9b08e1e17481554c9c717",
      "bundle_path_digest": "sha256:02820de3e0134fbca92a2d59286dfc4c873a2df593d9b08e1e17481554c9c717",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:28.874000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "tigera-operator.v1.5.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:09:32.674000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.5.2",
      "version_original": "1.5.2"
    },
    {
      "_id": "609aae55d04af0e74bb0577d",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {},
              "azureFileShare": {
                "enabled": false
              },
              "configmap": {
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {},
                "mastersvc": {}
              },
              "image": {
                "repository": "neuvector/controller"
              },
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "enabled": false
              },
              "replicas": 3,
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "updater": {
                "enabled": false,
                "image": {
                  "repository": "neuvector/updater",
                  "tag": "latest"
                },
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": {
                "repository": "neuvector/enforcer"
              },
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "image": {
                "repository": "neuvector/prometheus-exporter",
                "tag": "0.9.0"
              },
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "manager": {
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": {
                "repository": "neuvector/manager"
              },
              "ingress": {
                "annotations": {},
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "svc": {
                "type": "NodePort"
              }
            },
            "openshift": true,
            "registry": "docker.io",
            "resources": {},
            "tag": "latest"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:f1fc06ee96cc7509e5dc94ef6cd87921fbbe4b4112d9561c14ee06a426c59f91",
      "bundle_path_digest": "sha256:f1fc06ee96cc7509e5dc94ef6cd87921fbbe4b4112d9561c14ee06a426c59f91",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:18:29.789000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to https://github.com/neuvector/neuvector-helm for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n**Add Neuvector license from NeuVector WebUI->setting**",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v0.9.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:22:03.967000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:ffc9bcb5095d5e9d366a17651911dc520de899286c766466602482fbfcc2b6bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:ffc9bcb5095d5e9d366a17651911dc520de899286c766466602482fbfcc2b6bb",
          "name": "neuvector-operator-ffc9bcb5095d5e9d366a17651911dc520de899286c766466602482fbfcc2b6bb-annotation"
        },
        {
          "digest": "sha256:ffc9bcb5095d5e9d366a17651911dc520de899286c766466602482fbfcc2b6bb",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:ffc9bcb5095d5e9d366a17651911dc520de899286c766466602482fbfcc2b6bb",
          "name": "neuvector-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.9.0",
      "version_original": "0.9.0"
    },
    {
      "_id": "609aae56e2b160d361d25065",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:2d8738da44e668d4b04958e371120e20dddfcb5cfd2be2e3a988b6c3111e88f5",
      "bundle_path_digest": "sha256:2d8738da44e668d4b04958e371120e20dddfcb5cfd2be2e3a988b6c3111e88f5",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:30.021000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v0.0.16",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:29:48.108000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.16",
      "version_original": "0.0.16"
    },
    {
      "_id": "609aae573048c1ac9a6fe9fa",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:863e2cbbd481dfe2c70fdfcf866c161c250b95e5e9a320fe211a805c456c7e9e",
      "bundle_path_digest": "sha256:863e2cbbd481dfe2c70fdfcf866c161c250b95e5e9a320fe211a805c456c7e9e",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:18:31.724000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v1.2.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:15:54.773000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "609aae5856933b164fe211a8",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-fabric-operator-bundle@sha256:de8cf8423ab8ea22f2090947fb51c3091407fcca623d5a83137b266c43e00f6d",
      "bundle_path_digest": "sha256:de8cf8423ab8ea22f2090947fb51c3091407fcca623d5a83137b266c43e00f6d",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:32.995000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-fabric-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:38:38.752000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cortex-fabric-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Cortex5",
          "plural": "cortex5s",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "609aae5a3048c1ac9a6fe9fc",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rh-marketplace/rh-marketplace-bundle@sha256:f4e205936e8fba2fef8e6294c492c7d3c289c9a5e071615abec373d7c5566b85",
      "bundle_path_digest": "sha256:f4e205936e8fba2fef8e6294c492c7d3c289c9a5e071615abec373d7c5566b85",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:18:34.086000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redhat-marketplace-operator.v1.0.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:31:00.290000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redhat-marketplace-operator",
      "provided_apis": [],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.0.3",
      "version_original": "1.0.3"
    },
    {
      "_id": "609aae5bd04af0e74bb0577f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.6",
      "creation_date": "2021-05-11T16:18:35.082000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:39:01.844000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "609aae5cd04af0e74bb05780",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "production",
      "creation_date": "2021-05-11T16:18:36.259000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:43:02.388000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "609aae5dd04af0e74bb05781",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:b6efb516d646752d2309c3791a1d094d6430f9230ebfe9694442ff2eea7d5aa6",
      "bundle_path_digest": "sha256:b6efb516d646752d2309c3791a1d094d6430f9230ebfe9694442ff2eea7d5aa6",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:37.672000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:41:31.587000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "609aae5ed04af0e74bb05783",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:68dbfe15d1fd859b294bea3f88dbe94ff61c788b3aa923ad8e029ce52a35a2ec",
      "bundle_path_digest": "sha256:68dbfe15d1fd859b294bea3f88dbe94ff61c788b3aa923ad8e029ce52a35a2ec",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:38.722000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "dynatrace-monitoring.v0.9.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:43:04.269000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "plural": "oneagentapms",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "plural": "oneagents",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.1",
      "version_original": "0.9.1"
    },
    {
      "_id": "609aae5ed04af0e74bb05784",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.20",
      "creation_date": "2021-05-11T16:18:38.950000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:55:06.264000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609aae60d04af0e74bb05786",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:53569fdf8eecee215755dcd02d56cb906330f84e3bc1015652d9b7a1ddc01edd",
      "bundle_path_digest": "sha256:53569fdf8eecee215755dcd02d56cb906330f84e3bc1015652d9b7a1ddc01edd",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:40.091000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "seldonoperator.v0.1.5",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:35:49.225000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.5",
      "version_original": "0.1.5"
    },
    {
      "_id": "609aae65e2b160d361d2506d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:c380d43717df7db52058bcf261ece6ceb0e0ce779b0576d31d25d8a3c9c70e55",
      "bundle_path_digest": "sha256:c380d43717df7db52058bcf261ece6ceb0e0ce779b0576d31d25d8a3c9c70e55",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:45.688000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "seldon-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:36:56.022000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "609aae67e2b160d361d25070",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-05-11T16:18:47.146000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:57:56.718000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "609aae683048c1ac9a6fea04",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:7e1160ad7bd60a804af78882a34f38a741339a8ea21375389604dac3985d0f14",
      "bundle_path_digest": "sha256:7e1160ad7bd60a804af78882a34f38a741339a8ea21375389604dac3985d0f14",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:48.671000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "artifactory-ha-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:32:44.121000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "609aae69e2b160d361d25073",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-fabric-operator-bundle@sha256:de8cf8423ab8ea22f2090947fb51c3091407fcca623d5a83137b266c43e00f6d",
      "bundle_path_digest": "sha256:de8cf8423ab8ea22f2090947fb51c3091407fcca623d5a83137b266c43e00f6d",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:49.651000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-fabric-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:26:00.362000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cortex-fabric-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Cortex5",
          "plural": "cortex5s",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "609aae6c3048c1ac9a6fea09",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:45e1a7f6115be1545cf0ad204a206458277c80e83cff7414726e05f40edb83b5",
      "bundle_path_digest": "sha256:45e1a7f6115be1545cf0ad204a206458277c80e83cff7414726e05f40edb83b5",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:52.117000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "portworx-operator.v1.3.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:39:36.619000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.3.4",
      "version_original": "1.3.4"
    },
    {
      "_id": "609aae6ed04af0e74bb05793",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/data-explorer-operator-bundle@sha256:29de0c8f38adb379957ec2564eea036e4f839980377e52c49f8b462e3033c7aa",
      "bundle_path_digest": "sha256:29de0c8f38adb379957ec2564eea036e4f839980377e52c49f8b462e3033c7aa",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:18:54.553000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "data-explorer-operator.v0.1.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:01:55.907000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "data-explorer-operator-certified",
      "provided_apis": [
        {
          "group": "data-explorer.com",
          "kind": "DashboardWithJupyterHub",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.2",
      "version_original": "0.1.2"
    },
    {
      "_id": "609aae6e3048c1ac9a6fea0b",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.12",
      "creation_date": "2021-05-11T16:18:54.906000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:27:35.419000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "609aae6f3048c1ac9a6fea0c",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.0.8",
      "creation_date": "2021-05-11T16:18:55.924000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T11:32:11.990000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "609aae72d04af0e74bb05795",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme"
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:ac3d5a0fc91bf7a6b2b06f6a19e42c219bb304681dc3f50c3aaa3d9a206ab1c8",
      "bundle_path_digest": "sha256:ac3d5a0fc91bf7a6b2b06f6a19e42c219bb304681dc3f50c3aaa3d9a206ab1c8",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.4",
      "creation_date": "2021-05-11T16:18:58.006000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://cloud.ibm.com/docs/services/Cloudant?topic=cloudant-apache-couchdb-operator)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-09-19T12:34:27.709000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:f84aa68359c6123758df762af819b6b7ef2fd784df64bd165f2a144895e747a7",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:f84aa68359c6123758df762af819b6b7ef2fd784df64bd165f2a144895e747a7",
          "name": "couchdb-operator-f84aa68359c6123758df762af819b6b7ef2fd784df64bd165f2a144895e747a7-annotation"
        },
        {
          "digest": "sha256:f84aa68359c6123758df762af819b6b7ef2fd784df64bd165f2a144895e747a7",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator@sha256:f84aa68359c6123758df762af819b6b7ef2fd784df64bd165f2a144895e747a7",
          "name": "couchdb-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=1.0.0 <1.4.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "609aae733048c1ac9a6fea10",
      "alm_examples": [
        {
          "api_version": "pxc.percona.com/v1-8-0",
          "kind": "PerconaXtraDBCluster",
          "metadata": {
            "finalizers": [
              "delete-pxc-pods-in-order"
            ],
            "name": "cluster1"
          },
          "spec": {
            "allowUnsafeConfigurations": false,
            "backup": {
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:4c06c63bb5a20707c30e06768dea866e7879d716269f52f9eb35c3278ec05674",
              "pitr": {
                "enabled": false,
                "storageName": "STORAGE-NAME-HERE",
                "timeBetweenUploads": 60
              },
              "schedule": [
                {
                  "keep": 3,
                  "name": "sat-night-backup",
                  "schedule": "0 0 * * 6",
                  "storageName": "s3-us-west"
                },
                {
                  "keep": 5,
                  "name": "daily-backup",
                  "schedule": "0 0 * * *",
                  "storageName": "fs-pvc"
                }
              ],
              "storages": {
                "fs-pvc": {
                  "type": "filesystem",
                  "volume": {
                    "persistentVolumeClaim": {
                      "accessModes": [
                        "ReadWriteOnce"
                      ],
                      "resources": {
                        "requests": {
                          "storage": "6G"
                        }
                      }
                    }
                  }
                },
                "s3-us-west": {
                  "s3": {
                    "bucket": "S3-BACKUP-BUCKET-NAME-HERE",
                    "credentialsSecret": "my-cluster-name-backup-s3",
                    "region": "us-west-2"
                  },
                  "type": "s3"
                }
              }
            },
            "crVersion": "1.8.0",
            "haproxy": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "enabled": true,
              "gracePeriod": 30,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:4be0482a6282c610a2beb6bd1bd57d5a48b96858d07cbc0b2df046c2e16ac7f0",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3
            },
            "logCollectorSecretName": "my-log-collector-secrets",
            "logcollector": {
              "enabled": true,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:bbac6fc1c48c5c2ff6e79a0214603817ec98d601a4d226ed355ae13c55ac4cf0"
            },
            "pmm": {
              "enabled": false,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:f17a473b92bc68851ff09244e23819af5d0f6add7ac81d021abce8d44a53b0d5",
              "serverHost": "monitoring-service",
              "serverUser": "admin"
            },
            "proxysql": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "enabled": false,
              "gracePeriod": 30,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:c482264d8abfdd3a8543fa843922ff77787c544bf6f147740c96fddb1bcf2813",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3,
              "volumeSpec": {
                "persistentVolumeClaim": {
                  "resources": {
                    "requests": {
                      "storage": "2G"
                    }
                  }
                }
              }
            },
            "pxc": {
              "affinity": {
                "antiAffinityTopologyKey": "kubernetes.io/hostname"
              },
              "autoRecovery": true,
              "gracePeriod": 600,
              "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:3d5b59ee9d25d46fc152034d7885061851866ddc0b277ad18676cb318f50c88e",
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "resources": {
                "requests": {
                  "cpu": "600m",
                  "memory": "1G"
                }
              },
              "size": 3,
              "volumeSpec": {
                "persistentVolumeClaim": {
                  "resources": {
                    "requests": {
                      "storage": "6G"
                    }
                  }
                }
              }
            },
            "secretsName": "my-cluster-secrets",
            "sslInternalSecretName": "my-cluster-ssl-internal",
            "sslSecretName": "my-cluster-ssl",
            "updateStrategy": "SmartUpdate",
            "upgradeOptions": {
              "apply": "disabled",
              "schedule": "0 4 * * *",
              "versionServiceEndpoint": "https://check.percona.com"
            },
            "vaultSecretName": "keyring-secret-vault"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "fs-pvc"
          }
        },
        {
          "api_version": "pxc.percona.com/v1alpha1",
          "kind": "PerconaXtraDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "pxcCluster": "cluster1"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "fs-pvc"
          }
        },
        {
          "api_version": "pxc.percona.com/v1alpha1",
          "kind": "PerconaXtraDBBackup",
          "metadata": {
            "name": "backup1"
          },
          "spec": {
            "pxcCluster": "cluster1",
            "storageName": "s3-us-west"
          }
        },
        {
          "api_version": "pxc.percona.com/v1",
          "kind": "PerconaXtraDBClusterRestore",
          "metadata": {
            "name": "restore1"
          },
          "spec": {
            "backupName": "backup1",
            "pxcCluster": "cluster1"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-bundle@sha256:a280b29739d410d14616edde83066cad0f63d2e1a191ee1434636e25448d4e56",
      "bundle_path_digest": "sha256:a280b29739d410d14616edde83066cad0f63d2e1a191ee1434636e25448d4e56",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:18:59.858000+00:00",
      "csv_description": "\n## Percona is Cloud Native\n\nThe Percona Kubernetes Operator for Percona XtraDB Cluster automates the creation, alteration, or deletion of nodes in your cluster environment. It can be used to instantiate a new database cluster or to scale an existing database cluster. The Operator contains all necessary Kubernetes settings to provide a proper and consistent Percona XtraDB Cluster instance.\n\nConsult the [documentation](https://percona.github.io/percona-xtradb-cluster-operator/) on the Percona Kubernetes Operator for Percona XtraDB Cluster for complete details on capabilities and options.\n\n### Supported Features\n\n* **Scale Your Cluster**  change the `size` parameter to [add or remove members](https://percona.github.io/percona-xtradb-cluster-operator/install/scaling) of the cluster. Three is the minimum recommended size for a functioning cluster.\n\n* **Manage Your Users**  [add, remove, or change](https://percona.github.io/percona-xtradb-cluster-operator/configure/users) the privileges of database users\n\n* **Automate Your Backups**  [configure cluster backups](https://percona.github.io/percona-xtradb-cluster-operator/configure/operator) to run on a scheduled basis. Backups are stored on a persistent volume.\n\n### Common Configurations\n\n* **Set Resource Limits** - set limitation on requests to CPU and memory resources.\n\n* **Customize Storage** - set the desired Storage Class and Access Mode for your database cluster data.\n\n* **Control Scheduling** - define how your PXC Pods are scheduled onto the K8S cluster with tolerations, pod disruption budgets, node selector and affinity settings.\n* Automatic synchronization of MySQL users with ProxySQL\n* HAProxy Support\n* Fully automated minor version updates (Smart Update)\n* Update Reader members before Writer member at cluster upgrades\n* Support multiple PXC minor versions by the Operator\n### Before You Start\n\nAdd the PXC user `Secret` to Kubernetes. User information must be placed in the data section of the `secrets.yaml`\nfile with Base64-encoded logins and passwords for the user accounts.\n\nBelow is a sample `secrets.yaml` file for the correct formatting.\n\n```\napiVersion: v1\nkind: Secret\nmetadata:\n  name: my-cluster-secrets\ntype: Opaque\ndata:\n  root: cm9vdF9wYXNzd29yZA==\n  xtrabackup: YmFja3VwX3Bhc3N3b3Jk\n  monitor: bW9uaXRvcg==\n  clustercheck: Y2x1c3RlcmNoZWNrcGFzc3dvcmQ=\n  proxyadmin: YWRtaW5fcGFzc3dvcmQ=\n  pmmserver: c3VwYXxefHBheno=\n  operator: b3BlcmF0b3JhZG1pbg==\n```\n\n\n\n\n\n\n\n\n###  New Features\n* Support for custom sidecar containers to extend the Operator capabilities\n* Allow the cluster scale in and scale out with the kubectl scale command or Horizontal Pod Autoscaler\n* Operator can now automatically recover Percona XtraDB Cluster after the network partitioning\n### Improvements\n* The Operator can now automatically remove old backups from S3 storage if the retention period is set (thanks to Davi S Evangelista for reporting this issue)\n* Add namespace support in the script used to copy backups from remote storage to a local machine\n* Point-in-time recovery uploader now chooses the Pod with the oldest binary log in the cluster to ensure log consistency\n* Add debug symbols from the percona-xtradb-cluster-server-debuginfo package to the Percona XtraDB Cluster debug docker image to simplify troubleshooting\n* It is now possible to recover databases up to a specific transaction with the Point-in-time Recovery feature. Previously the user could only recover to specific date and time\n* Point-in-time recovery feature now works with compressed backups\n* It is now possible to explicitly set the version of Percona XtraDB Cluster for newly provisioned clusters. Before that, all new clusters were started with the latest PXC version if Version Service was enabled\n* Add support for the runtimeClassName Kubernetes feature for selecting the container runtime\n* Various improvements of Operator log messages\n#### Known Issues and Limitations\nScheduled backups are not compatible with Kubernetes 1.20 in cluster-wide mode.\n\n\n\n",
      "csv_display_name": "Percona XtraDB Cluster Operator",
      "csv_metadata_description": "Percona XtraDB Cluster Operator manages the lifecycle of Percona XtraDB cluster instances.",
      "csv_name": "percona-xtradb-cluster-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T11:28:49.248000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "percona-xtradb-cluster-operator-certified",
      "provided_apis": [
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBBackup",
          "plural": "perconaxtradbbackups",
          "version": "v1alpha1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBClusterBackup",
          "plural": "perconaxtradbclusterbackups",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBClusterRestore",
          "plural": "perconaxtradbclusterrestores",
          "version": "v1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-8-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-6-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-5-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-4-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-3-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-1-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1alpha1"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1-2-0"
        },
        {
          "group": "pxc.percona.com",
          "kind": "PerconaXtraDBCluster",
          "plural": "perconaxtradbclusters",
          "version": "v1"
        }
      ],
      "provider": "Percona",
      "related_images": [
        {
          "digest": "sha256:8ae74434882f19f3b7bc324d1ba1cb62ab405b63f654147b559c86571fd184e2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:8ae74434882f19f3b7bc324d1ba1cb62ab405b63f654147b559c86571fd184e2",
          "name": "percona-xtradb-cluster-operator-8ae74434882f19f3b7bc324d1ba1cb62ab405b63f654147b559c86571fd184e2-annotation"
        },
        {
          "digest": "sha256:8ae74434882f19f3b7bc324d1ba1cb62ab405b63f654147b559c86571fd184e2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:8ae74434882f19f3b7bc324d1ba1cb62ab405b63f654147b559c86571fd184e2",
          "name": "percona-xtradb-cluster-operator"
        },
        {
          "digest": "sha256:593ee306e46dd8be094354e0f435c5d6f2699e3caa5fe5f786290a8e5bfbdaee",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:593ee306e46dd8be094354e0f435c5d6f2699e3caa5fe5f786290a8e5bfbdaee",
          "name": "pxc_57"
        },
        {
          "digest": "sha256:6b7e69d6207af0de3cda1718f130742d1661c896e765a1927fd7af72ee0d2b91",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:6b7e69d6207af0de3cda1718f130742d1661c896e765a1927fd7af72ee0d2b91",
          "name": "pxc_57_backup"
        },
        {
          "digest": "sha256:3d5b59ee9d25d46fc152034d7885061851866ddc0b277ad18676cb318f50c88e",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:3d5b59ee9d25d46fc152034d7885061851866ddc0b277ad18676cb318f50c88e",
          "name": "pxc_80"
        },
        {
          "digest": "sha256:4c06c63bb5a20707c30e06768dea866e7879d716269f52f9eb35c3278ec05674",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:4c06c63bb5a20707c30e06768dea866e7879d716269f52f9eb35c3278ec05674",
          "name": "pxc_80_backup"
        },
        {
          "digest": "sha256:8ae74434882f19f3b7bc324d1ba1cb62ab405b63f654147b559c86571fd184e2",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator@sha256:8ae74434882f19f3b7bc324d1ba1cb62ab405b63f654147b559c86571fd184e2",
          "name": "operator"
        },
        {
          "digest": "sha256:4be0482a6282c610a2beb6bd1bd57d5a48b96858d07cbc0b2df046c2e16ac7f0",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:4be0482a6282c610a2beb6bd1bd57d5a48b96858d07cbc0b2df046c2e16ac7f0",
          "name": "haproxy"
        },
        {
          "digest": "sha256:c482264d8abfdd3a8543fa843922ff77787c544bf6f147740c96fddb1bcf2813",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:c482264d8abfdd3a8543fa843922ff77787c544bf6f147740c96fddb1bcf2813",
          "name": "proxysql"
        },
        {
          "digest": "sha256:bbac6fc1c48c5c2ff6e79a0214603817ec98d601a4d226ed355ae13c55ac4cf0",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:bbac6fc1c48c5c2ff6e79a0214603817ec98d601a4d226ed355ae13c55ac4cf0",
          "name": "logcollector"
        },
        {
          "digest": "sha256:f17a473b92bc68851ff09244e23819af5d0f6add7ac81d021abce8d44a53b0d5",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:f17a473b92bc68851ff09244e23819af5d0f6add7ac81d021abce8d44a53b0d5",
          "name": "pmm_client"
        },
        {
          "digest": "sha256:4c06c63bb5a20707c30e06768dea866e7879d716269f52f9eb35c3278ec05674",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:4c06c63bb5a20707c30e06768dea866e7879d716269f52f9eb35c3278ec05674",
          "name": "percona-xtradb-cluster-operator-containers-4c06c63bb5a20707c30e06768dea866e7879d716269f52f9eb35c3278ec05674-annotation"
        },
        {
          "digest": "sha256:f17a473b92bc68851ff09244e23819af5d0f6add7ac81d021abce8d44a53b0d5",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:f17a473b92bc68851ff09244e23819af5d0f6add7ac81d021abce8d44a53b0d5",
          "name": "percona-xtradb-cluster-operator-containers-f17a473b92bc68851ff09244e23819af5d0f6add7ac81d021abce8d44a53b0d5-annotation"
        },
        {
          "digest": "sha256:bbac6fc1c48c5c2ff6e79a0214603817ec98d601a4d226ed355ae13c55ac4cf0",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:bbac6fc1c48c5c2ff6e79a0214603817ec98d601a4d226ed355ae13c55ac4cf0",
          "name": "percona-xtradb-cluster-operator-containers-bbac6fc1c48c5c2ff6e79a0214603817ec98d601a4d226ed355ae13c55ac4cf0-annotation"
        },
        {
          "digest": "sha256:c482264d8abfdd3a8543fa843922ff77787c544bf6f147740c96fddb1bcf2813",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:c482264d8abfdd3a8543fa843922ff77787c544bf6f147740c96fddb1bcf2813",
          "name": "percona-xtradb-cluster-operator-containers-c482264d8abfdd3a8543fa843922ff77787c544bf6f147740c96fddb1bcf2813-annotation"
        },
        {
          "digest": "sha256:4be0482a6282c610a2beb6bd1bd57d5a48b96858d07cbc0b2df046c2e16ac7f0",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:4be0482a6282c610a2beb6bd1bd57d5a48b96858d07cbc0b2df046c2e16ac7f0",
          "name": "percona-xtradb-cluster-operator-containers-4be0482a6282c610a2beb6bd1bd57d5a48b96858d07cbc0b2df046c2e16ac7f0-annotation"
        },
        {
          "digest": "sha256:3d5b59ee9d25d46fc152034d7885061851866ddc0b277ad18676cb318f50c88e",
          "image": "registry.connect.redhat.com/percona/percona-xtradb-cluster-operator-containers@sha256:3d5b59ee9d25d46fc152034d7885061851866ddc0b277ad18676cb318f50c88e",
          "name": "percona-xtradb-cluster-operator-containers-3d5b59ee9d25d46fc152034d7885061851866ddc0b277ad18676cb318f50c88e-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "609aae74e2b160d361d25078",
      "alm_examples": [
        {
          "api_version": "memsql.com/v1alpha1",
          "kind": "MemsqlCluster",
          "metadata": {
            "name": "memsql-cluster"
          },
          "spec": {
            "adminHashedPassword": "*FABE5482D5AADF36D028AC443D117BE1180B9725",
            "aggregatorSpec": {
              "count": 3,
              "height": 0.5,
              "storageClass": "standard",
              "storageGB": 256
            },
            "leafSpec": {
              "count": 1,
              "height": 1,
              "storageClass": "standard",
              "storageGB": 1024
            },
            "license": "BDVhNDg5OWFjNTc3OTQxODRhOTVlMWVlZWY1YTFlNTlkAAAAAAAAAAAEAAAAAAAAAAwwNgIZAPXaOk16AZMCIzdmkvvO0VH57SIhkshiMAIZAJYHyL5vkNE4Sohz8BDqMuikVj9lNLvy4w==",
            "redundancyLevel": 1,
            "releaseID": "722ce44d-6f95-4855-b093-9802a9ae7cc9"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:1a400322ed8279e6ded73c7fd89c3cc5df2f74ebede9d192017268166a2bb97e",
      "bundle_path_digest": "sha256:1a400322ed8279e6ded73c7fd89c3cc5df2f74ebede9d192017268166a2bb97e",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-05-11T16:19:00.730000+00:00",
      "csv_description": "This package contains everything you need to run the MemSQL Kubernetes Operator\nin your own Kubernetes cluster.\n\n# Getting Started\n\n* Install RBAC resources\n    ```bash\n    kubectl create -f rbac.yaml\n    ```\n* Install the MemSQL Cluster CRD\n    ```bash\n    kubectl create -f memsql-cluster-crd.yaml\n    ```\n* Deploy the Operator\n    ```bash\n    kubectl create -f deployment.yaml\n    kubectl get deployments\n    kubectl get pods\n    ```\n\n# Creating a cluster\n\n* Edit the memsql-cluster.yaml file for your MemSQL cluster\n    * name -> cluster name of your choice\n    * license -> license key from portal.memsql.com\n    * releaseID -> use \"722ce44d-6f95-4855-b093-9802a9ae7cc9\" (MemSQL v6.7.14)\n    * adminHashedPassword -> `HASHED_PASSWORD`\n        * see below Python script to convert your password, include the leading `*`\n\n    * Python function to hash your password:\n        ```python\n        from hashlib import sha1\n        print(\"*\" + sha1(sha1('mypassword').digest()).hexdigest().upper())\n        ```\n\n    * redundancyLevel -> 1 or 2\n    * units -> number of nodes. Leaf nodes will automatically be doubled if redundancyLevel=2\n    * height -> height=1 corresponds to one MemSQL License Unit (8vCPU/32GB RAM)\n    * storageGB -> size of the persistent volume claim in GB\n    * storageClass -> name of the Kubernetes storage class for the\n      persistent volume claim\n    * NOTE: the minimum production config should be:\n        * 1 leaf unit @ height 1\n        * 3 aggregator units @ height 0.5\n        * redundancyLevel = 2\n\n* Create the cluster.\n    ```bash\n    kubectl create -f memsql-cluster.yaml\n    ```\n\n* To get logs for operator (or any MemSQL node), run the following after looking\n  up the PODNAME using `kubectl get pods`:\n    ```bash\n    kubectl logs PODNAME\n    ```\n\n* To get info about all MemSQL clusters running, use these commands. -oyaml will expose the DDL/DML endpoints for MemSQL.\n    ```bash\n    kubectl get memsql\n    kubectl describe memsql\n    ```\n\n* To see all the pods, services, stateful sets, & resources used by the MemSQL cluster, run:\n    ```bash\n    kubectl get all\n    ```\n\n* Connect to the MemSQL cluster.\n  Use the DDL endpoint for creating tables.\n  DML endpoint (load balancer amongst other aggregators) can be used for read/write\n  workload. Use the user called \"admin\" with the password you defined during\n  cluster creation.\n    ```bash\n    mysql -u admin -h <hostname> -P <port> -p<password>\n    ```\n\n* Notes on editing a MemSQL cluster:\n    * The MemSQL operator supports scaling and changing certain parts of the spec. Currently you can change:\n        * units\n        * height\n        * releaseID\n        * adminHashedPassword\n        * license\n        * redundancyLevel\n\n* To delete the MemSQL cluster:\n    ```bash\n    kubectl delete -f memsql-cluster.yaml\n    ```\n",
      "csv_display_name": "MemSQL",
      "csv_metadata_description": "Install a MemSQL Cluster",
      "csv_name": "memsql-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:27:15.805000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "MemSQL",
      "related_images": [
        {
          "digest": "sha256:7f4631fe156e28958c4f8f8c319ce514dffd40b6a06d45272061f2ad02db0ab9",
          "image": "registry.connect.redhat.com/memsql/operator@sha256:7f4631fe156e28958c4f8f8c319ce514dffd40b6a06d45272061f2ad02db0ab9",
          "name": "operator-7f4631fe156e28958c4f8f8c319ce514dffd40b6a06d45272061f2ad02db0ab9-annotation"
        },
        {
          "digest": "sha256:7f4631fe156e28958c4f8f8c319ce514dffd40b6a06d45272061f2ad02db0ab9",
          "image": "registry.connect.redhat.com/memsql/operator@sha256:7f4631fe156e28958c4f8f8c319ce514dffd40b6a06d45272061f2ad02db0ab9",
          "name": "memsql-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "609aae7a56933b164fe211ba",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:3ef303a68ac1ec0f5b6b8fcb4be8471180ee24e69ddb6e454ec00cac806fdfe6",
      "bundle_path_digest": "sha256:3ef303a68ac1ec0f5b6b8fcb4be8471180ee24e69ddb6e454ec00cac806fdfe6",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2021-05-11T16:19:06.165000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "neuvector-operator.v0.0.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:12:24.861000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.1",
      "version_original": "0.0.1"
    },
    {
      "_id": "609aae7b56933b164fe211bc",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/seldonio/seldon-core-operator-bundle@sha256:1f423936c3134391ba56414c05ece71e90347666f69a2193fe01370b21ce138f",
      "bundle_path_digest": "sha256:1f423936c3134391ba56414c05ece71e90347666f69a2193fe01370b21ce138f",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2021-05-11T16:19:07.255000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "seldon-operator.v1.2.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-09-19T12:00:15.756000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "seldon-operator-certified",
      "provided_apis": [
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha2"
        },
        {
          "group": "machinelearning.seldon.io",
          "kind": "SeldonDeployment",
          "plural": "seldondeployments",
          "version": "v1alpha3"
        }
      ],
      "provider": "",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.1",
      "version_original": "1.2.1"
    }
  ]
}

{
  "data": [
    {
      "_id": "6154cfe569cb9f1af5ba7475",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2021-09-29T20:43:17.155000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:53:06.191000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis Labs",
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6154cffed2c7f84a4d2edca2",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:b768b8641735bcad65f3763ebe87f41daafdeb3ce35a0a8af0ac20a336f6db28",
      "bundle_path_digest": "sha256:b768b8641735bcad65f3763ebe87f41daafdeb3ce35a0a8af0ac20a336f6db28",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T20:43:42.319000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:53:42.488000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.2",
      "version_original": "1.5.2"
    },
    {
      "_id": "6154d02ed2c7f84a4d2edca3",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "bundle_path_digest": "sha256:9ea442914977e8d29dc1f50a8d87d51363f729e2962a91ae993038b358916996",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:44:30.447000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-6",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T17:10:09.082000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-6",
      "version_original": "6.0.6-6"
    },
    {
      "_id": "6154d059d2c7f84a4d2edca4",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-97.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "bundle_path_digest": "sha256:5666acf5598f96dfbfac5704bb70e6578522979ef63b418ed2d1438a32d2440f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:45:13.838000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-12a",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:52:44.361000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator-f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730-annotation"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:f0312a08ad92a58669e1593e6202785d79a93b52709bc012d87bd0ee143b5730",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.20-12a",
      "version_original": "6.0.20-12a"
    },
    {
      "_id": "6154d067bc74e0be7ca671f7",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "bundle_path_digest": "sha256:33a2e21a069ff24af4bf0ffc51e83ddf398df5d9735d0123120768e9dc2c27f9",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-29T20:45:27.355000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.4-x5bfd7b3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:47:43.836000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Isovalent",
      "related_images": [
        {
          "digest": "sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:b45ff6a6552d71cbc26e358e0b25759d33818fd92301f1656453c5bcf826ff13",
          "name": "operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.10.4+x5bfd7b3",
      "version_original": "1.10.4+x5bfd7b3"
    },
    {
      "_id": "6154d080d36186823c2a55d2",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "externalArangoDBName": "arangodb",
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.3.1"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:1ae08df19d26498d2211249fcc758af8679d619f825d17ee8517c968873b149d",
      "bundle_path_digest": "sha256:1ae08df19d26498d2211249fcc758af8679d619f825d17ee8517c968873b149d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-29T20:45:52.560000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:43:17.884000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "42.0.0",
      "version_original": "42.0.0"
    },
    {
      "_id": "6154d091d36186823c2a55d3",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:205cb3eec37827db8d95099550a5bee4d17e5fc082316205cacedec42d66ba10",
      "bundle_path_digest": "sha256:205cb3eec37827db8d95099550a5bee4d17e5fc082316205cacedec42d66ba10",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-29T20:46:09.718000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.3.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:43:41.782000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "8.3.2",
      "version_original": "8.3.2"
    },
    {
      "_id": "6154d0b5d2c7f84a4d2edca6",
      "alm_examples": [
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Adam",
          "metadata": {
            "name": "example-adam",
            "namespace": "appdynamics"
          },
          "spec": {
            "controllerUrl": "https://saas.appdynamics.com"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "Clusteragent",
          "metadata": {
            "name": "k8s-cluster-agent",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "appName": "Cluster1",
            "controllerUrl": "https://saas.appdynamics.com",
            "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
            "serviceAccountName": "appdynamics-cluster-agent",
            "stdoutLogging": "true"
          }
        },
        {
          "api_version": "appdynamics.com/v1alpha1",
          "kind": "InfraViz",
          "metadata": {
            "name": "appd-infraviz",
            "namespace": "appdynamics"
          },
          "spec": {
            "account": "customer1",
            "controllerUrl": "https://saas.appdynamics.com",
            "enableDockerViz": "false",
            "enableMasters": true,
            "globalAccount": "customer1_12345",
            "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
            "netVizPort": 3892,
            "stdoutLogging": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/appdynamics/cluster-agent-operator-bundle@sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "bundle_path_digest": "sha256:8334d8638984099f3ef40793e62f1e68e0691c05c86326ae40a752e39bf3f316",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T20:46:45.521000+00:00",
      "csv_description": "AppDynamics Operator simplifies the configuration and lifecycle management of the AppDynamics ClusterAgent and the AppDynamics Machine Agent on different Kubernetes distributions and OpenShift. \nThe Operator encapsulates key operational knowledge on how to configure and upgrade the ClusterAgent and the Machine Agent. \nIt knows, for example, which configuration changes are benign and do not require restart of the ClusterAgent, \nwhich minimizes unnecesary load on the cluster API server.\n\n\n## Operator deployment\n\n* Create namespace for AppDynamics\n```\n  kubectl create namespace appdynamics\n```\n\n* Create Secret `cluster-agent-secret`. Set \"controller-key\" \nto the access key to the AppDynamics controller.  \n\n```\nkubectl -n appdynamics create secret generic cluster-agent-secret --from-literal=controller-key=\"<controller-access-key>\"\n```\n\n* Update the image reference in the Operator deployment spec, if necessary.  \n\nFor additional details refer to [this documentation](https://github.com/Appdynamics/appdynamics-operator)\n",
      "csv_display_name": "Appdynamics Operator",
      "csv_metadata_description": "End to end monitoring of applications on Kubernetes and OpenShift clusters with AppDynamics.",
      "csv_name": "appdynamics-operator.v0.6.12",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:49:07.555000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "appdynamics-operator",
      "provided_apis": [],
      "provider": "AppDynamics LLC",
      "related_images": [
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "cluster-agent-operator-9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950-annotation"
        },
        {
          "digest": "sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent-operator@sha256:9e992ba1274f818c0ca78d2654ac797e7139584a8e99919f3cf4b0676ac23950",
          "name": "appdynamics-operator"
        },
        {
          "digest": "sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "image": "registry.connect.redhat.com/appdynamics/machine-agent-analytics@sha256:b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65",
          "name": "machine-agent-analytics-b7ac0d5d6ed5028b97af3e49f79de95e1a78b3ce03ba93f7c4e648eb4b440f65-annotation"
        },
        {
          "digest": "sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "image": "registry.connect.redhat.com/appdynamics/cluster-agent@sha256:5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f",
          "name": "cluster-agent-5df48126b5e6c22cd73f8b3f3bdb8cc2fc6fae23085e922de32a586b754b6e7f-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.6.12",
      "version_original": "0.6.12"
    },
    {
      "_id": "6154d0e069cb9f1af5ba7477",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Xl",
          "metadata": {
            "name": "xl-release"
          },
          "spec": {
            "global": {
              "customImageNames": false,
              "externalArangoDBName": "arangodb",
              "repository": "registry.connect.redhat.com/turbonomic",
              "tag": "8.3.2"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/t8c-operator-bundle@sha256:072dc41461958a67d8eadc8e30843ac4dc187339e682c96d34af27e7a93529bb",
      "bundle_path_digest": "sha256:072dc41461958a67d8eadc8e30843ac4dc187339e682c96d34af27e7a93529bb",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-29T20:47:28.705000+00:00",
      "csv_description": "### Realtime Decision Automation for Multicloud Applications\nTurbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints:\n* Continuous placement of workload across multiple clouds both on-prem and public clouds providers.\n* Continuous scaling for applications and the underlying infrastructure.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a public APIs already exposed by application and infrastructure instrumentation to discover and monitor your environment.\nTurbonomic determines the right actions that drive continuous health, including continuous placement and continuous scaling for applications and the underlying cluster.\nTurbonomic leverages the built-on orchestration provided by the application and infrastructure deployment tools and automates the execution of these actions to continiously meet the respective service level objective of each application service.",
      "csv_display_name": "Turbonomic Platform Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "t8c-operator.v42.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:52:04.316000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "t8c-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Xl",
          "plural": "xls",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "42.1.0",
      "version_original": "42.1.0"
    },
    {
      "_id": "6154d103bc74e0be7ca671f8",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.25.7-2"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:55712df39fd00efa21711d24459e5a0610d9d2221af37a893fd80f7951838fab",
      "bundle_path_digest": "sha256:55712df39fd00efa21711d24459e5a0610d9d2221af37a893fd80f7951838fab",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T20:48:03.970000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:48:33.523000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": "JFrog",
      "related_images": [
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-operator-9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4-annotation"
        },
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:d71d368d6094a5777000a8d99164959ccb97fca355e855e24bd92c13a8df04f6",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "name": "init-175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.15",
      "version_original": "1.1.15"
    },
    {
      "_id": "6154d11bd2c7f84a4d2edca7",
      "alm_examples": [
        {
          "api_version": "operator.com/v1alpha1",
          "kind": "Bigid",
          "metadata": {
            "name": "bigid-sample"
          },
          "spec": {
            "global": {
              "bigid": {
                "bigidme": {
                  "create": false
                },
                "clustering": {
                  "create": true,
                  "gateway": {
                    "resources": {
                      "limits": {
                        "cpu": "2",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      }
                    }
                  },
                  "scheduler": {
                    "resources": {
                      "limits": {
                        "cpu": "1",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "250m",
                        "memory": "500Mi"
                      }
                    }
                  },
                  "worker": {
                    "resources": {
                      "limits": {
                        "cpu": "3",
                        "memory": "6Gi"
                      },
                      "requests": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      }
                    }
                  }
                },
                "configService": {
                  "logLevel": "info"
                },
                "confluent": {
                  "create": false
                },
                "correlator": {
                  "correlatorReplicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "3",
                      "memory": "14Gi"
                    },
                    "requests": {
                      "cpu": "3",
                      "memory": "14Gi"
                    }
                  }
                },
                "labler": {
                  "create": false
                },
                "ner": {
                  "create": true,
                  "nerReplicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "4",
                      "memory": "7Gi"
                    },
                    "requests": {
                      "cpu": "2",
                      "memory": "3Gi"
                    }
                  }
                },
                "reports": {
                  "logLevel": "info"
                },
                "scanner": {
                  "resources": {
                    "limits": {
                      "cpu": "7",
                      "memory": "14Gi"
                    },
                    "requests": {
                      "cpu": "7",
                      "memory": "14Gi"
                    }
                  },
                  "scannerJavaOpts": "-Xmx14g",
                  "scannerReplicas": 1,
                  "scannerUser": "bigid-scanner"
                },
                "web": {
                  "AuditLogPersistentVolumes": false
                }
              },
              "corrAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "bigid-corr-new"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              },
              "image": {
                "pullPolicy": "Always"
              },
              "imageCredentials": {
                "enabled": true
              },
              "ingress": {
                "bigidHost": "ui.roks-mongodb-01-84282b3126c7c2503a14ceb9855c347b-0000.us-south.containers.appdomain.cloud",
                "class": "nginx",
                "rabbitmqHost": "mq.roks-mongodb-01-84282b3126c7c2503a14ceb9855c347b-0000.us-south.containers.appdomain.cloud",
                "tlssecret": "bigid-tlssecret"
              },
              "mongodb": {
                "externalIP": "172.21.43.224",
                "image": "mongo:3.6",
                "password": "password",
                "port": 27017,
                "user": "bigid"
              },
              "monitoring": {
                "enabled": false
              },
              "namespace": "bigid",
              "nerAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "bigid-ner"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              },
              "scannerAffinity": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n  - labelSelector:\n      matchExpressions:\n      - key: app\n        operator: In\n        values:\n        - bigid-scanner\n    topologyKey: kubernetes.io/hostname\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/bigid/bigid-operator-bundle@sha256:8fdbb608a12ef1804f7a2ab752765964ebaa98d73a35203abb0bb73291ba7fbd",
      "bundle_path_digest": "sha256:8fdbb608a12ef1804f7a2ab752765964ebaa98d73a35203abb0bb73291ba7fbd",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T20:48:27.959000+00:00",
      "csv_description": "\"BigID is a data intelligence platform that scans your data repositories for sensitive and valuable information. BigID provides a wealth of analysis tools and configuration options that give you penetrating insight into the contents of your data stores, structured and unstructured, as well as integration capabilities with third-party data intelligence tools and even custom applications that you create yourself.\"",
      "csv_display_name": "BigID Operator",
      "csv_metadata_description": "",
      "csv_name": "bigid-operator.v1.1.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:20.994000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "bigid-operator",
      "provided_apis": [],
      "provider": "BigID",
      "related_images": [
        {
          "digest": "sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:d1b17c96188a5f2748755f4de355a0f103e93b488108dbefb4c4b5714759f510",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:20af5b6b09098a1e0db77557f19a8728bcff99c80af947486b04d8163f97e04f",
          "image": "registry.connect.redhat.com/bigid/bigid-operator@sha256:20af5b6b09098a1e0db77557f19a8728bcff99c80af947486b04d8163f97e04f",
          "name": "manager"
        },
        {
          "digest": "sha256:388c65b55244bfb30f7a9168a9f89d020672b6fca8d75e29a3af1c3663f3b053",
          "image": "registry.connect.redhat.com/bigid/bigid-me-agent@sha256:388c65b55244bfb30f7a9168a9f89d020672b6fca8d75e29a3af1c3663f3b053",
          "name": "bigid_bigidme"
        },
        {
          "digest": "sha256:20f113d50e424d93e4fae15bc8f3dcea15a191ead9ee9ecf0d82e2e4f7931dd5",
          "image": "registry.connect.redhat.com/bigid/bigid-ml@sha256:20f113d50e424d93e4fae15bc8f3dcea15a191ead9ee9ecf0d82e2e4f7931dd5",
          "name": "bigid_clustering"
        },
        {
          "digest": "sha256:7e00fa94d92bd1d8413861210c203dd1aae29ee6f76044f20a1644692ab1ff24",
          "image": "registry.connect.redhat.com/bigid/bigid-config-service@sha256:7e00fa94d92bd1d8413861210c203dd1aae29ee6f76044f20a1644692ab1ff24",
          "name": "bigid_configservice"
        },
        {
          "digest": "sha256:fbbf9a234ea4200330c877244b7fe37055909b0df359615d1b1a75e3dfb3cc1a",
          "image": "registry.connect.redhat.com/bigid/bigid-ner@sha256:fbbf9a234ea4200330c877244b7fe37055909b0df359615d1b1a75e3dfb3cc1a",
          "name": "bigid_ner"
        },
        {
          "digest": "sha256:688a8c2f8036f90fb77ec9a37ac68181853035d793a15ba14d4a01bc9fb1aac0",
          "image": "registry.connect.redhat.com/bigid/bigid-reports@sha256:688a8c2f8036f90fb77ec9a37ac68181853035d793a15ba14d4a01bc9fb1aac0",
          "name": "bigid_reports"
        },
        {
          "digest": "sha256:0ff71223b92c6ef6cf61faed4f4c65de15d7d6512d2cd9b94de65201ec0b8af0",
          "image": "registry.connect.redhat.com/bigid/bigid-corr-new@sha256:0ff71223b92c6ef6cf61faed4f4c65de15d7d6512d2cd9b94de65201ec0b8af0",
          "name": "bigid_corr"
        },
        {
          "digest": "sha256:db51c0b790fea3d211228bccf4b64f50878bc91bb1c2b3e840bd020e2994fcc6",
          "image": "registry.connect.redhat.com/bigid/bigid-orch@sha256:db51c0b790fea3d211228bccf4b64f50878bc91bb1c2b3e840bd020e2994fcc6",
          "name": "bigid_orch"
        },
        {
          "digest": "sha256:234d8497ee3a8140a7e848b3ffa4f7aaa06863a33cf91bbfebdc6a31b6a97304",
          "image": "registry.connect.redhat.com/bigid/bigid-rabbitmq@sha256:234d8497ee3a8140a7e848b3ffa4f7aaa06863a33cf91bbfebdc6a31b6a97304",
          "name": "bigid_rabbitmq"
        },
        {
          "digest": "sha256:f33c11f53c88112bcd1122c7f458bb42890f0fcdc49691fe0497c424e78df426",
          "image": "registry.connect.redhat.com/bigid/bigid-scanner@sha256:f33c11f53c88112bcd1122c7f458bb42890f0fcdc49691fe0497c424e78df426",
          "name": "bigid_scanner"
        },
        {
          "digest": "sha256:f851e542e5d19be937604f668160e524c3f0d3a4ca60f7329f394fb5af9b3b75",
          "image": "registry.connect.redhat.com/bigid/bigid-ui@sha256:f851e542e5d19be937604f668160e524c3f0d3a4ca60f7329f394fb5af9b3b75",
          "name": "bigid_ui"
        },
        {
          "digest": "sha256:367e2360b988583e76ce369f4159b07dd9b86b2d0d3ce5f4b1d71deeaacf0471",
          "image": "registry.connect.redhat.com/bigid/bigid-web@sha256:367e2360b988583e76ce369f4159b07dd9b86b2d0d3ce5f4b1d71deeaacf0471",
          "name": "bigid_web"
        },
        {
          "digest": "sha256:4b00fb9c2158fd091ed0d33752ecf9e4c2c96a89ea8d5a5a8d5cce79670eed58",
          "image": "registry.connect.redhat.com/bigid/bigid-data-catalog@sha256:4b00fb9c2158fd091ed0d33752ecf9e4c2c96a89ea8d5a5a8d5cce79670eed58",
          "name": "bigid_datacatalog"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.4",
      "version_original": "1.1.4"
    },
    {
      "_id": "6154d143bc74e0be7ca671f9",
      "alm_examples": [
        {
          "api_version": "can.avanseus.com/v1alpha1",
          "kind": "CAN",
          "metadata": {
            "name": "can"
          },
          "spec": {
            "can": {
              "maxreplica": 4,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                }
              },
              "tomcatoptions": "export JAVA_OPTS=\"$JAVA_OPTS -Xms1024m -Xmx4096m -Dmail.smtp.ssl.protocols=TLSv1.2\""
            },
            "cas": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "imagepullpolicy": "Always",
            "ldap": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "memcached": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "500Mi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "500Mi"
                }
              }
            },
            "predictioncontroller": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "predictionworker": {
              "maxreplica": 3,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "serviceaccount": "avanseus",
            "vbi": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/can-avanseus/can@sha256:d9aa9485cd205456c1a4d96fb7a6e78af4cb2bc2e190857dbd5fe603a1b71ec6",
      "bundle_path_digest": "sha256:d9aa9485cd205456c1a4d96fb7a6e78af4cb2bc2e190857dbd5fe603a1b71ec6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T20:49:07.552000+00:00",
      "csv_description": "# Overview\nThe Avanseus CAN operator deploys and manages the CAN (Cognitive assistant for networks)  predictive maintainence tool on any Kubernetes based cloud environment.\n\nAvanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens.  CAN operator bundles CAN, CAS, LDAP, VBI, Prediction controller & Prediction worker applications.\n\nSupporting links:\n- [CAN operator prerequisite & configuration](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_redhat_openshift_operator_installation.pdf): This is similar to the content mentioned from next section\n- [Password encryption](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_password_encryption.pdf):  Utility guide for encrypting password texts\n- [CAN user manual](https://avanseuscandev.com/releases/CAN/5.5/Release/CAN_5.5_User_Manual.pdf)\n- [CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n# Operator installation\nMentioned below are the pre-requisites & configuration steps to be followed to install the CAN operator.\n### Before you start\n\n - A MongoDB instance must be available to connect to from the pods. This is usually provided by the \nenterprise customer. If not, then this has to be installed separately.\n - An initial MongoDB data dump needs to be loaded in the database. Please contact [Avanseus \ndelivery](mailto:support@avanseus.com).\n - In case, LDAP is not provided by the customer, [Avanseus delivery](mailto:support@avanseus.com) team can be requested to\n provide a LDAP image which is essential for Web dashboard authentication.\n - Binary files of applications does not come as part of the operator. These need to be requested from [Avanseus delivery](mailto:support@avanseus.com) team.\n - Create a project, service account & configure that service account using the below commands\n   \n   ```sh\n   \n   oc new-project <PROJECT_OR_NAMESPACE>\n   \n   oc create sa avanseus\n   \n   oc adm policy add-scc-to-user anyuid system:serviceaccount:<PROJECT_OR_NAMESPACE>:avanseus\n   \n   ```\n   \n   Replace `<PROJECT_OR_NAMESPACE>` with relevant namespace where the configurations provided in the `Configuration prerequisites` section below will be done & also where the operator would be installed.\n   \n   \n\nAvanseus delivery team can be contacted  at <support@avanseus.com>.\nMentioned below are the prerequisite configurations required for installing CAN operator. \n## Third party software pre-requisites\nTable shown below, specifies the supported versions of the third party software or protocol.\n<table><tr><th>Compatible software/protocol</th><th>Supported version</th></tr><tr><td>MongoDB</td><td>v4.4.5</td></tr><tr><td>LDAP protocol</td><td>Version-3</td></tr><tr><td>Memcached</td><td>1.5</td></tr></table>\n\n### Third party software availability\n- ***MongoDB with initial data***\n\n  For the CAN application to come up successfully, it needs some initial data in MongoDB.\n  However if it is not available, then [Avanseus delivery](mailto:support@avanseus.com) team needs \n  to be contacted for an initial data dump that needs to be imported to a MongoDB schema. MongoDB \n  can either be within the Openshift platform or outside. This MongoDB schema must be accessible from the \n  CAN operator pods preferably on port 27017. \n  \n- ***LDAP with initial user data***\n\n  For the CAN application, authentication is made possible using LDAP. Usually customers provide an LDAP connection for integration. However, if LDAP is not made available by the customer, then a LDAP\npod comes as part of operator installation by default with one initial user. [Avanseus delivery](mailto:support@avanseus.com) team needs to be requested to get the user access details. \n  If customer provides LDAP, then it can be other Openshift or within the cluster. The LDAP Host and port details must be configured in a ConfigMap.\n  \n- ***Memcached***\n\n  Memcached is used by CAN to cache small data for fast retrieval. This is also used for tomcat session replication. This application comes by default with the operator.\n\n\n## Configuration prerequisites\n\n### PersistenceVolumeClaim to copy WAR files\nBy default, the CAN operator does not come with CAN binary. [Avanseus delivery](mailto:support@avanseus.com) team must be requested to obtain the WAR files. Before deploying, the binaries in need to be obtained and put into a PersistentVolume. Mentioned below is a method to do this.\n\nThese binaries are:\n\n\n - CAN.war\n - CAS.war\n - PredictionController.war\n - universal\n\n\nCreate a PersistenceVolumeClaim \"tmp-data\". Mentioned below is an example configuration YAML\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: tmp-data\nspec:\n accessModes:\n - ReadWriteOnce\n resources:\n  requests:\n   storage: 1G\n\n```\nCreate a dummy application (Apache server) and mount the created PersistenceVolumeClaim. Mentioned below is the YAML content\n```sh\napiVersion: v1\nkind: Pod\nmetadata:\n name: pod-httpd\n labels:\n  app: apache_webserver\nspec:\n containers:\n - name: cntr-httpd\n   image: httpd:latest\n   ports:\n   - containerPort: 80\n   volumeMounts:\n   - mountPath: /mnt\n     name: tmp-data\n volumes:\n - name: tmp-data\n   persistentVolumeClaim:\n    claimName: tmp-data\n\n```\nChange directory to the place where WAR files are available. Copy the WAR files provided by Avanseus into the mount point \"/mnt\" using the rsync command.\n```sh\noc rsync . pod-httpd:/mnt\n```\nOnce this is done, the dummy application pod can be stopped. Remember that \"tmp-data\" PersistentVolume must not be deleted as this is used by Operator components to pull the binaries.\n### PersistenceVolumeClaim for CAN application\nCreate a PersistenceVolumeClaim named \"candatapvc\" & \"canlogpvc\". This is needed for the CAN application to write files.  YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: candatapvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n---\n\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: canlogpvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n### PesistentVolumeClaim for LDAP application\nCreate a PersistentVolumeClaim named \"ldap-storage\". This is needed for LDAP module to store the user DB data in a persistent location. YAML configuration is given is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: ldap-storage\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n\n### Config Maps\nPods within the operator need configurations to startup the application. These configurations have to be stored in Config maps on Openshift platform.\nCAN operator comes with 5 applications which would run in 5 different pods:\n - CAN (Needs config map)\n - LDAP\n - VBI\n - Prediction controller (Needs config map)\n - Prediction worker\n\n### CAN config map (``canconfig``)\n\nMentioned below are the ConfigMap entries CAN application needs & hence create 3 files mentioned below:\n#### ``catalina.properties`` - Catalina file for tomcat:\n```sh\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageAccess unless the\n# corresponding RuntimePermission (\"accessClassInPackage.\"+package) has\n# been granted.\npackage.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageDefinition unless the\n# corresponding RuntimePermission (\"defineClassInPackage.\"+package) has\n# been granted.\n#\n# by default, no packages are restricted for definition, and none of\n# the class loaders supplied with the JDK call checkPackageDefinition.\n#\npackage.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,\\\norg.apache.jasper.,org.apache.naming.,org.apache.tomcat.\n\n\n#\n#\n# List of comma-separated paths defining the contents of the \"common\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank,the JVM system loader will be used as Catalina's \"common\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values are enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\ncommon.loader=\"${catalina.base}/lib\",\"${catalina.base}/lib/*.jar\",\"${catalina.home}/lib\",\"${catalina.home}/lib/*.jar\"\n\n\n#\n# List of comma-separated paths defining the contents of the \"server\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank, the \"common\" loader will be used as Catalina's \"server\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nserver.loader=\n\n\n#\n# List of comma-separated paths defining the contents of the \"shared\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,\n# the \"common\" loader will be used as Catalina's \"shared\" loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n# Please note that for single jars, e.g. bar.jar, you need the URL form\n# starting with file:.\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nshared.loader=\n\n\n# Default list of JAR files that should not be scanned using the JarScanner\n# functionality. This is typically used to scan JARs for configuration\n# information. JARs that do not contain such information may be excluded from\n# the scan to speed up the scanning process. This is the default list. JARs on\n# this list are excluded from all scans. The list must be a comma separated list\n# of JAR file names.\n# The list of JARs to skip may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\n# The JARs listed below include:\n# - Tomcat Bootstrap JARs\n# - Tomcat API JARs\n# - Catalina JARs\n# - Jasper JARs\n# - Tomcat JARs\n# - Common non-Tomcat JARs\n# - Test JARs (JUnit, Cobertura and dependencies)\ntomcat.util.scan.StandardJarScanFilter.jarsToSkip=\\\nannotations-api.jar,\\\nant-junit*.jar,\\\nant-launcher.jar,\\\nant.jar,\\\nasm-*.jar,\\\naspectj*.jar,\\\nbootstrap.jar,\\\ncatalina-ant.jar,\\\ncatalina-ha.jar,\\\ncatalina-jmx-remote.jar,\\\ncatalina-storeconfig.jar,\\\ncatalina-tribes.jar,\\\ncatalina-ws.jar,\\\ncatalina.jar,\\\ncglib-*.jar,\\\ncobertura-*.jar,\\\ncommons-beanutils*.jar,\\\ncommons-codec*.jar,\\\ncommons-collections*.jar,\\\ncommons-daemon.jar,\\\ncommons-dbcp*.jar,\\\ncommons-digester*.jar,\\\ncommons-fileupload*.jar,\\\ncommons-httpclient*.jar,\\\ncommons-io*.jar,\\\ncommons-lang*.jar,\\\ncommons-logging*.jar,\\\ncommons-math*.jar,\\\ncommons-pool*.jar,\\\ndom4j-*.jar,\\\neasymock-*.jar,\\\necj-*.jar,\\\nel-api.jar,\\\ngeronimo-spec-jaxrpc*.jar,\\\nh2*.jar,\\\nhamcrest-*.jar,\\\nhibernate*.jar,\\\nhttpclient*.jar,\\\nicu4j-*.jar,\\\njasper-el.jar,\\\njasper.jar,\\\njaspic-api.jar,\\\njaxb-*.jar,\\\njaxen-*.jar,\\\njdom-*.jar,\\\njetty-*.jar,\\\njmx-tools.jar,\\\njmx.jar,\\\njsp-api.jar,\\\njstl.jar,\\\njta*.jar,\\\njunit-*.jar,\\\njunit.jar,\\\nlog4j*.jar,\\\nmail*.jar,\\\nobjenesis-*.jar,\\\noraclepki.jar,\\\noro-*.jar,\\\nservlet-api-*.jar,\\\nservlet-api.jar,\\\nslf4j*.jar,\\\ntaglibs-standard-spec-*.jar,\\\ntagsoup-*.jar,\\\ntomcat-api.jar,\\\ntomcat-coyote.jar,\\\ntomcat-dbcp.jar,\\\ntomcat-i18n-*.jar,\\\ntomcat-jdbc.jar,\\\ntomcat-jni.jar,\\\ntomcat-juli-adapters.jar,\\\ntomcat-juli.jar,\\\ntomcat-util-scan.jar,\\\ntomcat-util.jar,\\\ntomcat-websocket.jar,\\\ntools.jar,\\\nwebsocket-api.jar,\\\nwsdl4j*.jar,\\\nxercesImpl.jar,\\\nxml-apis.jar,\\\nxmlParserAPIs-*.jar,\\\nxmlParserAPIs.jar,\\\nxom-*.jar\n\n\n# Default list of JAR files that should be scanned that overrides the default\n# jarsToSkip list above. This is typically used to include a specific JAR that\n# has been excluded by a broad file name pattern in the jarsToSkip list.\n# The list of JARs to scan may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\ntomcat.util.scan.StandardJarScanFilter.jarsToScan=\\\nlog4j-taglib*.jar,\\\nlog4j-web*.jar,\\\nlog4javascript*.jar,\\\nslf4j-taglib*.jar\n\n# String cache configuration.\ntomcat.util.buf.StringCache.byte.enabled=true\n#tomcat.util.buf.StringCache.char.enabled=true\n#tomcat.util.buf.StringCache.trainThreshold=500000\n#tomcat.util.buf.StringCache.cacheSize=5000\n\n\n# This system property is deprecated. Use the relaxedPathChars relaxedQueryChars\n# attributes of the Connector instead. These attributes permit a wider range of\n# characters to be configured as valid.\n# Allow for changes to HTTP request validation\n# WARNING: Using this option may expose the server to CVE-2016-6816\n#tomcat.util.http.parser.HttpParser.requestTargetAllow=|\nPASSWORD_KEY=<AVANSEUS_PASSWORD_KEY>    \n\n```\n#### ``config.properties`` - Application configuration\n```sh\n#Domain details\navanseus.app.cas.domain=cas-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\navanseus.app.can.domain=can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\n\n\navanseus.vbi.ip=vbi\navanseus.vbi.port=12001\n\n\n#Domain protocol\navanseus.protocol=https\n\n\n#Host details\navanseus.app.cas.host=canapp:2003\navanseus.app.can.host=canapp:2000\n\n\n#Memcached configuration\navanseus.memcached.url=memcached:11211\n\n\n#MongoDb configuration\navanseus.mongodb.ssl.enabled=<MONGODB_SSL_ENABLED>\navanseus.mongodb.validHostName=<MONGODB_VERIFY_HOST>\navanseus.mongodb.keystore.path=/data/workspace/pemfile/mongo.pkcs12\navanseus.mongodb.keystore.password=<MONGODB_KEYSTORE_PASSWORD>\navanseus.mongodb.ip=<MONGODB_IP_HOST>\navanseus.mongodb.port=<MONGODB_PORT>\navanseus.mongodb.username=<MONGODB_USERNAME>\navanseus.mongodb.password=<MONGODB_PASSWORD>\navanseus.mongodb.dbName=<MONGODB_SCHEMA_NAME>\n\n\navanseus.mongodb.admin.username=<MONGODB_ADMIN_USERNAME>\navanseus.mongodb.admin.password=<MONGODB_ADMIN_PASSWORD>\navanseus.mongodb.admin.dbName=<MONGODB_ADMIN_SCHEMA_NAME>\n\n\n#log configuration\navanseus.log.path=/data/workspace/logs/\navanseus.log.thread.poolsize=20\n\n\n#LDAP server configuration\navanseus.ldap.organisation=<LDAP_ORG>\navanseus.ldap.domain=<LDAP_DOMAIN>\navanseus.ldap.url1=ldap://<LDAP_URL1>:<LDAP_PORT1>\navanseus.ldap.url2=ldap://<LDAP_URL2>:<LDAP_PORT2>\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=<LDAP_PASSWORD>\n\n\navanseus.app.googleKey=<GOOGLE_MAP_KEY>\n#NAS path\navanseus.app.nas.path=/data/workspace/nasmount/\n\n\n#Email Config\navanseus.email.fromId=<EMAIL_FROM_ID>\navanseus.email.pwd=<EMAIL_PASSWORD>\navanseus.email.host=<EMAIL_SERVER>\navanseus.email.fromName=<EMAIL_SENDER_NAME>\navanseus.email.port=<EMAIL_PORT>\n\n\n#Cluster node configuration\navanseus.predictionNode.name=nodeA    \n```\n#### ``mongo.pkcs12`` - Use a valid key file if provided or create an empty file\n\nIn the above mentioned files, replace the text enclosed in `<>` with necessary information. Mentioned below are their details:\n\n - `<AVANSEUS_PASSWORD_KEY>` : Replace this with the password key to be used. Request the [Avanseus delivery](mailto:support@avanseus.com) team for this. This is very specific for a given DB dump.\n - `<NAMESPACE>` : Namespace where the operator and application would run.\n - `<ROUTER_DEFAULT_HOSTNAME>` : Replace this with the Openshift cluster default router hostname.\n - `<MONGODB_SSL_ENABLED>` : `true` when MongoDB is enabled with SSL. `false` otherwise.\n - `<MONGODB_VERIFY_HOST>` : `true` when MongoDB host name needs to be verified with SSL certificate. `false` otherwise.\n - `<MONGODB_KEYSTORE_PASSWORD>` : Encrypted password of MongoDB keystore. The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_IP>` : Replace this with MongoDB IP/Host which is reachable from the pods. \n - `<MONGODB_PORT>` : Replace this with MongoDB Port which is reachable from the pods.\n - `<MONGODB_USERNAME>` : Replace this with MongoDB schema read/write username.\n - `<MONGODB_PASSWORD>` : Replace this with above username's password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_SCHEMA_NAME>` : Replace this with DB schema name.\n - `<MONGODB_ADMIN_USERNAME>` : Replace this with MongoDB admin username\n - `<MONGODB_ADMIN_PASSWORD>` : Replace this with MongoDB admin password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_ADMIN_SCHEMA_NAME>` : Replace this with the MongoDB admin schema name.\n - `<GOOGLE_MAP_KEY>` : Google map key.\n - `<LDAP_URL1>` : Replace this with LDAP URL 1. LDAP IP reachable from pods.\n - `<LDAP_URL2>` : Replace this with LDAP URL 2. Same as above if the customer does not provide failover LDAP URL.\n - `<LDAP_PORT1>` : Replace this with LDAP Port 1. LDAP port reachable from pods.\n - `<LDAP_PORT2>` : Replace this with LDAP Port 2. Same as above if the customer does not provide failover LDAP instance.\n - `<LDAP_PASSWORD>` : Replace this with LDAP password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<LDAP_ORG>` : Replace this with LDAP organisation. Customers usually provide this or contact Avanseus support team for this.\n - `<LDAP_DOMAIN>` : Replace this with LDAP domain. Customers usually provide this or contact Avanseus support team for this.\n - `<EMAIL_FROM_ID>` : Replace this with Email ID of sender.\n - `<EMAIL_SENDER_NAME>` : Replace this with Email sender's name.\n - `<EMAIL_SERVER>` : Replace this with Email server host or domain.\n - `<EMAIL_PORT>` : Replace this with Email server port.\n - `<EMAIL_PASSWORD>` : Replace this with Email sender's password.\n\nThe last 5 entries must be filled up with relevant SMTP server or relay server information which is reachable from the Openshift cluster.\n\nIf you would use the Default LDAP server coming with the operator, then the LDAP configuration section can be as follows:\n```sh\n#LDAP server configuration\navanseus.ldap.organisation=employee\navanseus.ldap.domain=avanseus\navanseus.ldap.url1=ldap://ldap:1389\navanseus.ldap.url2=ldap://ldap:1389\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=r7qs0Kobh5s+q0Wtlj1JZbtkdqGxBdx/\n\n```\nFinally create the ConfigMap as follows:\n\n```sh\noc create configmap canconfig --from-file=catalina.properties --from-file=config.properties --from-file=mongo.pkcs12\n```\n### Prediction controller config map (``controllerconfig``)\nMentioned below is the ConfigMap entry Prediction controller application needs & hence create the file mentioned below:\n#### ``application.properties`` - Application configuration\n```sh\nserver.port=5052\nlogging.level.root = INFO\nspring.application.name=PredictionControllerApplication\npredictionworker.endpoint=http://avanseusworkernode:5050/PredictionWorker/\n#predictionworker.endpoint=http://localhost:5050/\n# Max file size.\nspring.servlet.multipart.max-file-size=40MB\n# Max request size.\nspring.servlet.multipart.max-request-size=50MB\n\n```\nFinally create the ConfigMap as follows:\n```sh\noc create configmap controllerconfig --from-file=application.properties\n```\n\n\n## Installation\nCAN Operator is available in the OperatorHub section. Mentioned below is a link to the video which shows how to install the CAN operator.\n\n[CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n## Post installation\nAfter installation, CAN application would be available on following URL:\n```sh\nhttps://can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>/CAN/\n```\nIf CAN tool was integrated with LDAP on customer premise, then the user credentials would be known. If CAN tool was integrated with Avanseus's default LDAP, then request the [Avanseus delivery](mailto:support@avanseus.com) team for credentials.\n",
      "csv_display_name": "can-operator",
      "csv_metadata_description": "Avanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens. CAN operator bundles CAN & VBI application.",
      "csv_name": "can-operator.v0.0.8",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:35:58.903000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "can-operator",
      "provided_apis": [],
      "provider": "Avanseus Holdings Pte. Ltd.",
      "related_images": [
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "docker-registry.apps.avanseus.avanseuscandev.com/release/5.5/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "5.5/can-operator-a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719-annotation"
        },
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "manager"
        },
        {
          "digest": "sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "image": "registry.connect.redhat.com/can-avanseus/vbi@sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "name": "vbi"
        },
        {
          "digest": "sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "image": "registry.connect.redhat.com/can-avanseus/ldap@sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "name": "ldap"
        },
        {
          "digest": "sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "image": "registry.connect.redhat.com/can-avanseus/canapp@sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "name": "can"
        },
        {
          "digest": "sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "image": "registry.connect.redhat.com/can-avanseus/casapp@sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "name": "cas"
        },
        {
          "digest": "sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "image": "registry.connect.redhat.com/can-avanseus/predictioncontroller@sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "name": "can_controller"
        },
        {
          "digest": "sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "image": "registry.connect.redhat.com/can-avanseus/predictionworker@sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "name": "can_worker"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.8",
      "version_original": "0.0.8"
    },
    {
      "_id": "6154d165d2c7f84a4d2edca9",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:49:41.044000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:52:10.240000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6154d17269cb9f1af5ba7478",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.6-39.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "bundle_path_digest": "sha256:b0edae8a793cf9e47a9d33a6341e2d2dfd3656ce8f2a4fbaa7d22a7407402b7f",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:49:54.048000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-24",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:47:05.467000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "redislabs/operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "operator-998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b-annotation"
        },
        {
          "digest": "sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:998d6be639f0ce0cb0c51f048845c4d7aaacdb820c2c0e0450392c966744507b",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.6-24",
      "version_original": "6.0.6-24"
    },
    {
      "_id": "6154d18c69cb9f1af5ba7479",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {
            "autopilot": {
              "enabled": false
            }
          }
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:b768b8641735bcad65f3763ebe87f41daafdeb3ce35a0a8af0ac20a336f6db28",
      "bundle_path_digest": "sha256:b768b8641735bcad65f3763ebe87f41daafdeb3ce35a0a8af0ac20a336f6db28",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-09-29T20:50:20.052000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:38:13.864000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        }
      ],
      "provider": "Portworx",
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.5.2",
      "version_original": "1.5.2"
    },
    {
      "_id": "6154d18fd2c7f84a4d2edcaa",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.8-30.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "bundle_path_digest": "sha256:889042a1600da27e338f688044802838bb1b8126e9fd900ff0fbccfdf29b75ec",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:50:23.354000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:42:52.147000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator-0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1-annotation"
        },
        {
          "digest": "sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:0b131c1b337c2d0a8d25cb137b0a039fb9c1f30806e90bd83441688aec2998b1",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.8-20",
      "version_original": "6.0.8-20"
    },
    {
      "_id": "6154d1c469cb9f1af5ba747b",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.20-69.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "bundle_path_digest": "sha256:6eba0d4cdc724698aa1d42dd74ae6b19e9446f601f337d5752531a14f10e41ef",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:51:16.795000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.20-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:57:03.369000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator-3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f-annotation"
        },
        {
          "digest": "sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:3a86275c1bebed1e756e0ddf44adf2892e3039104c9c0675e60be029faed3c9f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.20-4",
      "version_original": "6.0.20-4"
    },
    {
      "_id": "6154d22fd36186823c2a55d8",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1alpha1",
          "kind": "OpenshiftArtifactoryHa",
          "metadata": {
            "name": "openshiftartifactoryha"
          },
          "spec": {
            "artifactory-ha": {
              "artifactory": {
                "image": {
                  "registry": "registry.connect.redhat.com",
                  "repository": "jfrog/artifactory-pro",
                  "tag": "7.25.7-2"
                },
                "joinKey": "OVERRIDE",
                "masterKey": "OVERRIDE",
                "node": {
                  "replicaCount": 2,
                  "waitForPrimaryStartup": {
                    "enabled": false
                  }
                },
                "uid": "1000721030"
              },
              "database": {
                "driver": "OVERRIDE",
                "password": "OVERRIDE",
                "type": "OVERRIDE",
                "url": "OVERRIDE",
                "user": "OVERRIDE"
              },
              "databaseUpgradeReady": true,
              "initContainerImage": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
              "nginx": {
                "gid": "1000720107",
                "http": {
                  "externalPort": 80,
                  "internalPort": 8080
                },
                "https": {
                  "externalPort": 443,
                  "internalPort": 8443
                },
                "image": {
                  "registry": "registry.redhat.io",
                  "repository": "rhel8/nginx-116",
                  "tag": "latest"
                },
                "service": {
                  "ssloffload": false
                },
                "tlsSecretName": "OVERRIDE",
                "uid": "1000720104"
              },
              "postgresql": {
                "enabled": false
              },
              "waitForDatabase": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jfrog/artifactory-operator-bundle@sha256:49229329083f8836be365b25beda86290cf8c6985dbeb1c46991c2121b54dda9",
      "bundle_path_digest": "sha256:49229329083f8836be365b25beda86290cf8c6985dbeb1c46991c2121b54dda9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-09-29T20:53:03.057000+00:00",
      "csv_description": " ## Breaking change\nPlease update to version 1.1.10 of the operator.\nVersion 1.1.8 and 1.1.9 have issues. Please skip these versions.\n\n## Overview\nOpenshift Operator to deploy JFrog Artifactory Enterprise into your Openshift cluster.\n## Security Context Constraints\nTo deploy this helm chart you will need to be a cluster admin w/ access to the anyuid scc and add the operator service account to the anyuid scc.\n```\noc adm policy add-scc-to-user anyuid -z artifactory-ha-operator -n openshift-operators\n```\nAdd the service account for the Artifactory chart to deploy successfully:\n``` oc adm policy add-scc-to-user anyuid -z openshiftartifactoryha-artifactory-ha -n artifactory ```\n### Usage\n\nAn external DB is required. The operator will not deploy a DB but will require you to specify the configuration values to connect to it.\n\nSearch for JFrog and click JFrog Artifactory Enterprise Operator to install.\n\nGo to the Installed Operators.\n\nWait for the JFrog Artifactory Enterprise Operator to complete the installation.\n\nOpen the Operator and click on the provided API: Artifactory HA.\n\nClick Create New Instance and provide the following parameters for your DB configuration:\n\n```\nDATABASE_TYPE\nDATABASE_DRIVER\nDATABASE_URL\nDATABASE_USER\nDATABASE_PASSWORD\n```\nMaster key and Join key must be supplied. To generate a new key for each run the command below:\n\n```\n# Create a key\nexport JOIN_KEY=$(openssl rand -hex 32)\necho ${JOIN_KEY}\n```\n\nTo use TLS you will need to first create a k8s tls secret to store your .crt and .key file into.\nThen supply the value of this k8s secret into the TLS_SECRET field.\n``` oc create secret tls my_tls_secret --cert=tls.crt --key=tls.key --namespace=my_namespace ```\nClick Create for Artifactory Enterprise to deploy into OpenShift and connect to it on the external IP exposed by the load balancer.\n### Create a route\nTo expose Artifactory from Openshift we recommend you create a new route in Openshift.\nYou can either use the oc command line tool or the Openshift web console to generate a new route.\nDepending upon where you terminate TLS you will need to either specify pass through or edge.\nCommand Line (Edge):\n``` oc create route edge --service=openshiftartifactory-ha --cert=tls.crt --key=tls.key --ca-cert=ca.crt --hostname=www.example.com ```\nOr for more information visit the official Openshift documentation on routes here:\nhttps://docs.openshift.com/container-platform/4.6/networking/routes/route-configuration.html\n\n",
      "csv_display_name": "JFrog Artifactory Enterprise Operator",
      "csv_metadata_description": "JFrog Artifactory Enterprise deploys Artifactory in a high availability environment across multiple pods",
      "csv_name": "artifactory-ha-operator.v1.1.14",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:40:03.058000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "openshiftartifactoryha-operator",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "OpenshiftArtifactoryHa",
          "plural": "openshiftartifactoryhas",
          "version": "v1alpha1"
        }
      ],
      "provider": "JFrog",
      "related_images": [
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-operator-9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4-annotation"
        },
        {
          "digest": "sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "image": "registry.connect.redhat.com/jfrog/artifactory-operator@sha256:9b0b59194a052c63fa0d54d47220b7d2154ac38272694e54492cf2c029043cc4",
          "name": "artifactory-ha-operator"
        },
        {
          "digest": "sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "image": "registry.connect.redhat.com/jfrog/artifactory-pro@sha256:abd96a07bbeffcdcdf69b5998b9256b684e72bcecb9b94b9a623a0c02b276322",
          "name": "artifactory_image_repository"
        },
        {
          "digest": "sha256:225b9d8cac2b4d3a1d193782f4bba749194048b87bf31dcd12ea88422e6350c8",
          "image": "registry.redhat.io/rhel8/nginx-116@sha256:225b9d8cac2b4d3a1d193782f4bba749194048b87bf31dcd12ea88422e6350c8",
          "name": "nginx_image_repository"
        },
        {
          "digest": "sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "image": "registry.connect.redhat.com/jfrog/init@sha256:175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03",
          "name": "init-175efbb8c51f0c50c4d32e876b20083b92ec5a04bab94e93cb3cb92d86164d03-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.14",
      "version_original": "1.1.14"
    },
    {
      "_id": "6154d26ebc74e0be7ca671fd",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.2.4-55.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "bundle_path_digest": "sha256:c50c8d2b5c62f60b96314c3fe64cf073727ab699b85992443f96b8743269b8a4",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:54:06.065000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.4-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:56:49.252000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator-8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9-annotation"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:8e536825e5062bdda268ed1f0a88824b863ff7945a2f97b7ffc29422569c4bb9",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.2.4-1",
      "version_original": "6.2.4-1"
    },
    {
      "_id": "6154d2e0d36186823c2a55db",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:56:00.933000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-04-16T16:43:24.151000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "6154d32169cb9f1af5ba7480",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:57:05.317000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:42:22.865000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "6154d322d36186823c2a55dc",
      "alm_examples": [
        {
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2021-09-29T20:57:06.650000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-04-04T14:51:33.627000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "61575d8bc739c0a4123a875c",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:7d0915108bfaed2c382545e6603a46a72cf1394f28d3e22935e0406360bcebc2",
      "bundle_path_digest": "sha256:7d0915108bfaed2c382545e6603a46a72cf1394f28d3e22935e0406360bcebc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-01T19:12:11.512000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92814",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:19:07.572000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:5448635df26ff738f5dd39256c961ad2a5756ca8ee0cb66370b261a242ef6f7b",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:5448635df26ff738f5dd39256c961ad2a5756ca8ee0cb66370b261a242ef6f7b",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2021.2.92814",
      "version_original": "2021.2.92814"
    },
    {
      "_id": "61577a9e3f6014fa45ae1a8c",
      "alm_examples": [
        {
          "api_version": "crunchydata.com/v1",
          "kind": "Pgcluster",
          "metadata": {
            "annotations": {
              "current-primary": "hippo"
            },
            "labels": {
              "crunchy-pgha-scope": "hippo",
              "deployment-name": "hippo",
              "name": "hippo",
              "namespace": "pgo",
              "pg-cluster": "hippo",
              "pgo-version": "4.7.3"
            },
            "name": "hippo"
          },
          "spec": {
            "BackrestStorage": {
              "accessmode": "ReadWriteMany",
              "matchLabels": "",
              "name": "",
              "size": "5Gi",
              "storageclass": "",
              "storagetype": "dynamic",
              "supplementalgroups": ""
            },
            "PrimaryStorage": {
              "accessmode": "ReadWriteMany",
              "matchLabels": "",
              "name": "hippo",
              "size": "5Gi",
              "storageclass": "",
              "storagetype": "dynamic",
              "supplementalgroups": ""
            },
            "ReplicaStorage": {
              "accessmode": "ReadWriteMany",
              "matchLabels": "",
              "name": "",
              "size": "5Gi",
              "storageclass": "",
              "storagetype": "dynamic",
              "supplementalgroups": ""
            },
            "ccpimage": "crunchy-postgres-ha",
            "ccpimagetag": "ubi8-13.4-4.7.3",
            "clustername": "hippo",
            "database": "hippo",
            "exporterport": "9187",
            "name": "hippo",
            "namespace": "pgo",
            "pgbadgerport": "10000",
            "podAntiAffinity": {
              "default": "preferred"
            },
            "port": "5432",
            "user": "hippo",
            "userlabels": {
              "pgo-version": "4.7.3"
            }
          }
        },
        {
          "api_version": "crunchydata.com/v1",
          "kind": "Pgreplica",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "api_version": "crunchydata.com/v1",
          "kind": "Pgpolicy",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        },
        {
          "api_version": "crunchydata.com/v1",
          "kind": "Pgtask",
          "metadata": {
            "name": "example"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:670b56b26715f4a5f596a490ad7c0718e8507206aaae5c09cf7f45e8940d0d33",
      "bundle_path_digest": "sha256:670b56b26715f4a5f596a490ad7c0718e8507206aaae5c09cf7f45e8940d0d33",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-10-01T21:16:14.682000+00:00",
      "csv_description": "Crunchy PostgreSQL for OpenShift lets you run your own production-grade PostgreSQL-as-a-Service on OpenShift!\n\nPowered by the Crunchy [PostgreSQL Operator](https://github.com/CrunchyData/postgres-operator), Crunchy PostgreSQL\nfor OpenShift automates and simplifies deploying and managing open source PostgreSQL clusters on OpenShift by\nproviding the essential features you need to keep your PostgreSQL clusters up and running, including:\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: Backups and restores leverage the open source [pgBackRest][] utility\n  and [includes support for full, incremental, and differential backups as well as efficient delta restores][disaster-recovery].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: Track the health of your PostgreSQL clusters using the open source [pgMonitor][] library.\n- **Clone**: Create new clusters from your existing clusters or backups with a single [`pgo create cluster --restore-from`][pgo-create-cluster] command.\n- **TLS**: Secure communication between your applications and data servers by [enabling TLS for your PostgreSQL servers][pgo-task-tls], including the ability to enforce that all of your connections to use TLS.\n- **Connection Pooling**: Use [pgBouncer][] for connection pooling\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference with [node affinity][high-availability-node-affinity], or designate which nodes Kubernetes can schedule PostgreSQL instances to with Kubernetes [tolerations][high-availability-tolerations].\n- **Full Customizability**: Crunchy PostgreSQL for OpenShift makes it easy to get your own PostgreSQL-as-a-Service up and running on\n  and lets make further enhancements to customize your deployments, including:\n    - Selecting different storage classes for your primary, replica, and backup storage\n    - Select your own container resources class for each PostgreSQL cluster deployment; differentiate between resources applied for primary and replica clusters!\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - Bring your own trusted certificate authority (CA) for use with the Operator API server\n    - Override your PostgreSQL configuration for each cluster\n\nand much more!\n\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/high-availability/\n[high-availability-node-affinity]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/high-availability/#node-affinity\n[high-availability-tolerations]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/high-availability/#tolerations\n[pgo-create-cluster]: https://access.crunchydata.com/documentation/postgres-operator/latest/pgo-client/reference/pgo_create_cluster/\n[pgo-task-tls]: https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/tls/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/latest/architecture/provisioning/\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/pgbouncer/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n## Pre-Installation\n\nThere are a few manual steps that the cluster administrator must perform prior to installing the PostgreSQL Operator.\nAt the very least, it must be provided with an initial configuration.\n\nFirst, select a namespace in which to install the PostgreSQL Operator. PostgreSQL clusters will also be deployed here.\nIf it does not exist, create it now.\n\n```\nexport PGO_OPERATOR_NAMESPACE=pgo\noc create namespace \"$PGO_OPERATOR_NAMESPACE\"\n```\n\n### Security\n\nFor the PostgreSQL Operator and PostgreSQL clusters to run in the recommended `restricted` [Security Context Constraint][],\nedit `conf/postgres-operator/pgo.yaml` and set `DisableFSGroup` to `true`.\n\n[Security Context Constraint]: https://docs.openshift.com/container-platform/latest/authentication/managing-security-context-constraints.html\n\n### Secrets (optional)\n\nIf you plan to use AWS S3 to store backups, you can configure your environment to automatically provide your AWS S3 credentials to all newly created PostgreSQL clusters:\n\n```\noc -n \"$PGO_OPERATOR_NAMESPACE\" create secret generic pgo-backrest-repo-config \\\n  --from-literal=aws-s3-key=\"<your-aws-s3-key>\" \\\n  --from-literal=aws-s3-key-secret=\"<your-aws-s3-key-secret>\"\noc -n \"$PGO_OPERATOR_NAMESPACE\" label secret pgo-backrest-repo-config vendor=crunchydata\n```\n\n### Certificates (optional)\n\nThe PostgreSQL Operator has an API that uses TLS to communicate securely with clients. If one is not provided, the API will automatically generated one for you.\n\nIf you have a certificate bundle validated by your organization, you can install it now.\n\n```\noc -n \"$PGO_OPERATOR_NAMESPACE\" create secret tls pgo.tls \\\n  --cert=/path/to/server.crt \\\n  --key=/path/to/server.key\n```\n\nOnce these resources are in place, the PostgreSQL Operator can be installed into the cluster.\n\n## Installation\n\nYou can now go ahead and install the PostgreSQL Operator from OperatorHub.\n\n### Security\n\nFor the PostgreSQL Operator and PostgreSQL clusters to run in the recommended `restricted` [Security Context Constraint][],\nedit the ConfigMap `pgo-config`, find the `pgo.yaml` entry, and set `DisableFSGroup` to `true`.\n\n[Security Context Constraint]: https://docs.openshift.com/container-platform/latest/authentication/managing-security-context-constraints.html\n\nYou will have to scale the `postgres-operator` Deployment down and up for the above change to take effect:\n\n```\noc -n pgo scale --replicas 0 deployment/postgres-operator\noc -n pgo scale --replicas 1 deployment/postgres-operator\n```\n\n## Post-Installation\n\n### Tutorial\n\nFor a guide on how to perform many of the daily functions of the PostgreSQL Operator, we recommend that you read the [Postgres Operator tutorial][pgo-tutorial]\n\n[pgo-tutorial]: https://access.crunchydata.com/documentation/postgres-operator/latest/tutorial/create-cluster/\n\nHowever, the below guide will show you how to create a Postgres cluster from a custom resource or from using the `pgo-client`.\n\n### Create a PostgreSQL Cluster from a Custom Resource\n\nThe fundamental workflow for interfacing with a PostgreSQL Operator Custom\nResource Definition is for creating a PostgreSQL cluster. There are several\nthat a PostgreSQL cluster requires to be deployed, including:\n\n- Secrets\n  - Information for setting up a pgBackRest repository\n  - PostgreSQL superuser bootstrap credentials\n  - PostgreSQL replication user bootstrap credentials\n  - PostgresQL standard user bootstrap credentials\n\nAdditionally, if you want to add some of the other sidecars, you may need to\ncreate additional secrets.\n\nThe good news is that if you do not provide these objects, the PostgreSQL\nOperator will create them for you to get your Postgres cluster up and running!\n\nThe following goes through how to create a PostgreSQL cluster called\n`hippo` by creating a new custom resource.\n\n```\n# this variable is the name of the cluster being created\nexport pgo_cluster_name=hippo\n# this variable is the namespace the cluster is being deployed into\nexport cluster_namespace=pgo\n# this variable is set to the location of your image repository\nexport cluster_image_prefix=registry.developers.crunchydata.com/crunchydata\n\ncat <<-EOF > \"${pgo_cluster_name}-pgcluster.yaml\"\napiVersion: crunchydata.com/v1\nkind: Pgcluster\nmetadata:\n  annotations:\n    current-primary: ${pgo_cluster_name}\n  labels:\n    crunchy-pgha-scope: ${pgo_cluster_name}\n    deployment-name: ${pgo_cluster_name}\n    name: ${pgo_cluster_name}\n    pg-cluster: ${pgo_cluster_name}\n    pgo-version: 4.7.3\n    pgouser: admin\n  name: ${pgo_cluster_name}\n  namespace: ${cluster_namespace}\nspec:\n  BackrestStorage:\n    accessmode: ReadWriteMany\n    matchLabels: \"\"\n    name: \"\"\n    size: 1G\n    storageclass: \"\"\n    storagetype: create\n    supplementalgroups: \"\"\n  PrimaryStorage:\n    accessmode: ReadWriteMany\n    matchLabels: \"\"\n    name: ${pgo_cluster_name}\n    size: 1G\n    storageclass: \"\"\n    storagetype: create\n    supplementalgroups: \"\"\n  ReplicaStorage:\n    accessmode: ReadWriteMany\n    matchLabels: \"\"\n    name: \"\"\n    size: 1G\n    storageclass: \"\"\n    storagetype: create\n    supplementalgroups: \"\"\n  annotations: {}\n  ccpimage: crunchy-postgres-ha\n  ccpimageprefix: ${cluster_image_prefix}\n  ccpimagetag: centos8-13.4-4.7.3\n  clustername: ${pgo_cluster_name}\n  database: ${pgo_cluster_name}\n  exporterport: \"9187\"\n  limits: {}\n  name: ${pgo_cluster_name}\n  pgDataSource:\n    restoreFrom: \"\"\n    restoreOpts: \"\"\n  pgbadgerport: \"10000\"\n  pgoimageprefix: ${cluster_image_prefix}\n  podAntiAffinity:\n    default: preferred\n    pgBackRest: preferred\n    pgBouncer: preferred\n  port: \"5432\"\n  tolerations: []\n  user: hippo\n  userlabels:\n    pgo-version: 4.7.3\nEOF\n\noc apply -f \"${pgo_cluster_name}-pgcluster.yaml\"\n```\n\nAnd that's all! The PostgreSQL Operator will go ahead and create the cluster.\n\nIf you have the PostgreSQL client `psql` installed on your host machine, you can\ntest connection to the PostgreSQL cluster using the following command:\n\n```\n# namespace that the cluster is running in\nexport PGO_OPERATOR_NAMESPACE=pgo\n# name of the cluster\nexport pgo_cluster_name=hippo\n# name of the user whose password we want to get\nexport pgo_cluster_username=hippo\n\n# get the password of the user and set it to a recognized psql environmental variable\nexport PGPASSWORD=$(oc -n \"${PGO_OPERATOR_NAMESPACE}\" get secrets \\\n  \"${pgo_cluster_name}-${pgo_cluster_username}-secret\" -o \"jsonpath={.data['password']}\" | base64 -d)\n\n# set up a port-forward either in a new terminal, or in the same terminal in the background:\noc -n pgo port-forward svc/hippo 5432:5432 &\n\npsql -h localhost -U \"${pgo_cluster_username}\" \"${pgo_cluster_name}\"\n```\n\n### Create a PostgreSQL Cluster the `pgo` Client\n\nOnce the PostgreSQL Operator is installed in your OpenShift cluster, you will need to do a few things\nto use the [PostgreSQL Operator Client][pgo-client].\n\n[pgo-client]: https://access.crunchydata.com/documentation/postgres-operator/latest/pgo-client/\n\nInstall the first set of client credentials and download the `pgo` binary and client certificates.\n\n```\ncurl https://raw.githubusercontent.com/CrunchyData/postgres-operator/v4.7.3/deploy/install-bootstrap-creds.sh > install-bootstrap-creds.sh\ncurl https://raw.githubusercontent.com/CrunchyData/postgres-operator/v4.7.3/installers/kubectl/client-setup.sh > client-setup.sh\n\nchmod +x install-bootstrap-creds.sh client-setup.sh\n\nPGO_CMD=oc ./install-bootstrap-creds.sh\nPGO_CMD=oc ./client-setup.sh\n```\n\nThe client needs to be able to reach the PostgreSQL Operator API from outside the OpenShift cluster.\nCreate an external service or forward a port locally.\n\n```\noc -n \"$PGO_OPERATOR_NAMESPACE\" expose deployment postgres-operator\noc -n \"$PGO_OPERATOR_NAMESPACE\" create route passthrough postgres-operator --service=postgres-operator\n\nexport PGO_APISERVER_URL=\"https://$(oc -n \"$PGO_OPERATOR_NAMESPACE\" get route postgres-operator -o jsonpath=\"{.spec.host}\")\"\n```\n_or_\n```\noc -n \"$PGO_OPERATOR_NAMESPACE\" port-forward deployment/postgres-operator 8443\n\nexport PGO_APISERVER_URL=\"https://127.0.0.1:8443\"\n```\n\nVerify connectivity using the `pgo` command.\n\n```\npgo version\n# pgo client version 4.7.3\n# pgo-apiserver version 4.7.3\n```\n\n\nYou can then create a cluster with the `pgo` client as simply as this:\n\n```\npgo create cluster -n pgo hippo\n```\n\nThe cluster may take a few moments to provision. You can verify that the cluster is up and running by using the `pgo test` command:\n\n```\npgo test cluster -n pgo hippo\n```\n\nIf you have the PostgreSQL client `psql` installed on your host machine, you can\ntest connection to the PostgreSQL cluster using the following command:\n\n```\n# namespace that the cluster is running in\nexport PGO_OPERATOR_NAMESPACE=pgo\n# name of the cluster\nexport pgo_cluster_name=hippo\n# name of the user whose password we want to get\nexport pgo_cluster_username=hippo\n\n# get the password of the user and set it to a recognized psql environmental variable\nexport PGPASSWORD=$(kubectl -n \"${PGO_OPERATOR_NAMESPACE}\" get secrets \\\n  \"${pgo_cluster_name}-${pgo_cluster_username}-secret\" -o \"jsonpath={.data['password']}\" | base64 -d)\n\n# set up a port-forward either in a new terminal, or in the same terminal in the background:\nkubectl -n pgo port-forward svc/hippo 5432:5432 &\n\npsql -h localhost -U \"${pgo_cluster_username}\" \"${pgo_cluster_name}\"\n```",
      "csv_display_name": "Crunchy PostgreSQL for OpenShift",
      "csv_metadata_description": "Enterprise open source PostgreSQL-as-a-Service",
      "csv_name": "postgresoperator.v4.7.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:36:27.313000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "crunchydata.com",
          "kind": "Pgpolicy",
          "plural": "pgpolicies",
          "version": "v1"
        },
        {
          "group": "crunchydata.com",
          "kind": "Pgreplica",
          "plural": "pgreplicas",
          "version": "v1"
        },
        {
          "group": "crunchydata.com",
          "kind": "Pgtask",
          "plural": "pgtasks",
          "version": "v1"
        },
        {
          "group": "crunchydata.com",
          "kind": "Pgcluster",
          "plural": "pgclusters",
          "version": "v1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:c4d38561ff0daca70411638bc0d0fc76df188f8ede001d235a2bc27532740d84",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:c4d38561ff0daca70411638bc0d0fc76df188f8ede001d235a2bc27532740d84",
          "name": "postgres-operator-c4d38561ff0daca70411638bc0d0fc76df188f8ede001d235a2bc27532740d84-annotation"
        },
        {
          "digest": "sha256:4f63faf2ac3267ed0126bf178f857f12f31ad672f9219d472b9acd707246d593",
          "image": "registry.connect.redhat.com/crunchydata/pgo-apiserver@sha256:4f63faf2ac3267ed0126bf178f857f12f31ad672f9219d472b9acd707246d593",
          "name": "apiserver"
        },
        {
          "digest": "sha256:c4d38561ff0daca70411638bc0d0fc76df188f8ede001d235a2bc27532740d84",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:c4d38561ff0daca70411638bc0d0fc76df188f8ede001d235a2bc27532740d84",
          "name": "operator"
        },
        {
          "digest": "sha256:84fb3597e5302be382c28bb605f1aa2c087052e9ca177a673aa0c2e81d109017",
          "image": "registry.connect.redhat.com/crunchydata/pgo-scheduler@sha256:84fb3597e5302be382c28bb605f1aa2c087052e9ca177a673aa0c2e81d109017",
          "name": "scheduler"
        },
        {
          "digest": "sha256:30b01eb95faf3aa444cb4aa2cb5e3bc6cde0a269d418ccf4569d74a04c78e81f",
          "image": "registry.connect.redhat.com/crunchydata/pgo-event@sha256:30b01eb95faf3aa444cb4aa2cb5e3bc6cde0a269d418ccf4569d74a04c78e81f",
          "name": "event"
        },
        {
          "digest": "sha256:6169c98ed0e3b5ae4a7eac9685bc4ecd8585d826fb28d687ac245b68e930772f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:6169c98ed0e3b5ae4a7eac9685bc4ecd8585d826fb28d687ac245b68e930772f",
          "name": "pgo_backrest"
        },
        {
          "digest": "sha256:70091d6cf42cae70fdb88cb3b3ef0f222b512f8e27d2fcceb91484d8fcc8e4b2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest-repo@sha256:70091d6cf42cae70fdb88cb3b3ef0f222b512f8e27d2fcceb91484d8fcc8e4b2",
          "name": "pgo_backrest_repo"
        },
        {
          "digest": "sha256:e62aa459bf9365f30d3a272a3ffd3057cb24ea1b975f6c88220f8b7890474dfe",
          "image": "registry.connect.redhat.com/crunchydata/pgo-client@sha256:e62aa459bf9365f30d3a272a3ffd3057cb24ea1b975f6c88220f8b7890474dfe",
          "name": "pgo_client"
        },
        {
          "digest": "sha256:7f12d4fa0e7716729aafce9072fc0bf769b4fdd485cc0f5c98072dfe8ba77f1b",
          "image": "registry.connect.redhat.com/crunchydata/pgo-rmdata@sha256:7f12d4fa0e7716729aafce9072fc0bf769b4fdd485cc0f5c98072dfe8ba77f1b",
          "name": "pgo_rmdata"
        },
        {
          "digest": "sha256:de2fdc66753bb2558a7957d6bcda30791015ad363dd53677b018e831c72ce4e1",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:de2fdc66753bb2558a7957d6bcda30791015ad363dd53677b018e831c72ce4e1",
          "name": "crunchy_postgres_exporter"
        },
        {
          "digest": "sha256:eddce32b51320eb5aec68eb2f366197550ede44744d2a8a3be6e29177b752157",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:eddce32b51320eb5aec68eb2f366197550ede44744d2a8a3be6e29177b752157",
          "name": "crunchy_pgadmin"
        },
        {
          "digest": "sha256:1a03c20e67ab94688fc3821f71558c711bd80c79330525da709f7b0faa69bc4f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbadger@sha256:1a03c20e67ab94688fc3821f71558c711bd80c79330525da709f7b0faa69bc4f",
          "name": "crunchy_pgbadger"
        },
        {
          "digest": "sha256:d4b48b0094a89f91314520a6dc8664508053e1d8a0baa88e24473ffaa084951f",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:d4b48b0094a89f91314520a6dc8664508053e1d8a0baa88e24473ffaa084951f",
          "name": "crunchy_pgbouncer"
        },
        {
          "digest": "sha256:2c2d486e159222f4a3347c9268d8489773e0cf75a654e54f18f030c883311d05",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-ha@sha256:2c2d486e159222f4a3347c9268d8489773e0cf75a654e54f18f030c883311d05",
          "name": "crunchy_postgres_ha"
        },
        {
          "digest": "sha256:100f18233b0bd43750ccd039d83ac49dae7bb27340f67204b65638410d41810c",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis-ha@sha256:100f18233b0bd43750ccd039d83ac49dae7bb27340f67204b65638410d41810c",
          "name": "crunchy_postgres_gis_ha"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "4.7.3",
      "version_original": "4.7.3"
    },
    {
      "_id": "6157b894c739c0a4123a8784",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:db2074b8ef12a3037a7aaa515c9055f080e546706f769404d6f9005a28f57e61",
      "bundle_path_digest": "sha256:db2074b8ef12a3037a7aaa515c9055f080e546706f769404d6f9005a28f57e61",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-02T01:40:36.721000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92911",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:48:44.172000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:6c55351004f5b04f901a2a3ad3ffab01c7b7d237dde9943dda3116e354d3cfe7",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:6c55351004f5b04f901a2a3ad3ffab01c7b7d237dde9943dda3116e354d3cfe7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2021.2.92911",
      "version_original": "2021.2.92911"
    },
    {
      "_id": "6157b9eec739c0a4123a8786",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:db2074b8ef12a3037a7aaa515c9055f080e546706f769404d6f9005a28f57e61",
      "bundle_path_digest": "sha256:db2074b8ef12a3037a7aaa515c9055f080e546706f769404d6f9005a28f57e61",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-02T01:46:22.891000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92911",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:24:07.804000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:6c55351004f5b04f901a2a3ad3ffab01c7b7d237dde9943dda3116e354d3cfe7",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:6c55351004f5b04f901a2a3ad3ffab01c7b7d237dde9943dda3116e354d3cfe7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2021.2.92911",
      "version_original": "2021.2.92911"
    },
    {
      "_id": "6157bb16075b022acc111b6c",
      "alm_examples": [
        {
          "api_version": "aikit.intel/v1alpha1",
          "kind": "AIKitContainer",
          "metadata": {
            "name": "intel-aikit-container",
            "namespace": "redhat-ods-applications"
          },
          "spec": {
            "fullnameOverride": "",
            "imagestream": {
              "name": "oneapi-aikit",
              "namespace": "redhat-ods-applications",
              "registry": {
                "name": "oneapi-aikit",
                "repo": "intel",
                "root": "registry.connect.redhat.com",
                "version": "latest"
              }
            },
            "nameOverride": ""
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/aikit-operator-bundle@sha256:db2074b8ef12a3037a7aaa515c9055f080e546706f769404d6f9005a28f57e61",
      "bundle_path_digest": "sha256:db2074b8ef12a3037a7aaa515c9055f080e546706f769404d6f9005a28f57e61",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-02T01:51:18.537000+00:00",
      "csv_description": "The Intel\u00ae oneAPI AI Analytics Toolkit gives data scientists, AI developers, and researchers familiar Python* tools and frameworks to accelerate end-to-end data science and machine learning pipelines on Intel\u00ae architectures. The components are built using oneAPI libraries for low-level compute optimizations. This toolkit maximizes performance from preprocessing through machine and deep learning phases and provides interoperability for efficient model development and deployment across single and multinodes.\n",
      "csv_display_name": "Intel\u00ae oneAPI AI Analytics Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "aikit-operator.v2021.2.92911",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:21:06.454000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aikit-operator",
      "provided_apis": [
        {
          "group": "aikit.intel",
          "kind": "AIKitContainer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:6c55351004f5b04f901a2a3ad3ffab01c7b7d237dde9943dda3116e354d3cfe7",
          "image": "registry.connect.redhat.com/intel/aikit-operator@sha256:6c55351004f5b04f901a2a3ad3ffab01c7b7d237dde9943dda3116e354d3cfe7",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2021.2.92911",
      "version_original": "2021.2.92911"
    },
    {
      "_id": "615d39d34ac064fc83b19dc3",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.1",
      "creation_date": "2021-10-06T05:53:23.520000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:58:15.968000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "615d3a214ac064fc83b19dca",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:be378b1a6ce701b5f76d57d8b3e46c7424d5862cbb90892194d47403eef893ea",
      "bundle_path_digest": "sha256:be378b1a6ce701b5f76d57d8b3e46c7424d5862cbb90892194d47403eef893ea",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.1",
      "creation_date": "2021-10-06T05:54:41.753000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:40:54.476000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "615d3a68b5e93d6997c90fa6",
      "alm_examples": [
        {
          "api_version": "operator.com/v1alpha1",
          "kind": "Bigid",
          "metadata": {
            "name": "bigid-sample"
          },
          "spec": {
            "global": {
              "bigid": {
                "bigidme": {
                  "create": false
                },
                "clustering": {
                  "create": true,
                  "gateway": {
                    "resources": {
                      "limits": {
                        "cpu": "2",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      }
                    }
                  },
                  "scheduler": {
                    "resources": {
                      "limits": {
                        "cpu": "1",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "250m",
                        "memory": "500Mi"
                      }
                    }
                  },
                  "worker": {
                    "resources": {
                      "limits": {
                        "cpu": "3",
                        "memory": "6Gi"
                      },
                      "requests": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      }
                    }
                  }
                },
                "configService": {
                  "logLevel": "info"
                },
                "confluent": {
                  "create": false
                },
                "correlator": {
                  "correlatorReplicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "3",
                      "memory": "14Gi"
                    },
                    "requests": {
                      "cpu": "3",
                      "memory": "14Gi"
                    }
                  }
                },
                "labler": {
                  "create": false
                },
                "ner": {
                  "create": true,
                  "nerReplicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "4",
                      "memory": "7Gi"
                    },
                    "requests": {
                      "cpu": "2",
                      "memory": "3Gi"
                    }
                  }
                },
                "reports": {
                  "logLevel": "info"
                },
                "scanner": {
                  "resources": {
                    "limits": {
                      "cpu": "7",
                      "memory": "14Gi"
                    },
                    "requests": {
                      "cpu": "7",
                      "memory": "14Gi"
                    }
                  },
                  "scannerJavaOpts": "-Xmx14g",
                  "scannerReplicas": 1,
                  "scannerUser": "bigid-scanner"
                },
                "web": {
                  "AuditLogPersistentVolumes": false
                }
              },
              "corrAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "bigid-corr-new"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              },
              "image": {
                "pullPolicy": "Always"
              },
              "imageCredentials": {
                "enabled": true
              },
              "ingress": {
                "bigidHost": "ui.CHANGEME.COM",
                "class": "nginx",
                "rabbitmqHost": "mq.CHANGEME.COM",
                "tlssecret": "bigid-tlssecret"
              },
              "mongodb": {
                "externalIP": "CHANGEME",
                "image": "mongo:3.6",
                "password": "password",
                "port": 27017,
                "user": "bigid"
              },
              "monitoring": {
                "enabled": false
              },
              "namespace": "bigid",
              "nerAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "bigid-ner"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              },
              "scannerAffinity": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n  - labelSelector:\n      matchExpressions:\n      - key: app\n        operator: In\n        values:\n        - bigid-scanner\n    topologyKey: kubernetes.io/hostname\n",
              "secretKey": "CHANGEME"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/bigid/bigid-operator-bundle@sha256:9342a4515d668b5a1efe33523cae3b28ee0a54ef51c8e6fb8acd30c482f5a7e4",
      "bundle_path_digest": "sha256:9342a4515d668b5a1efe33523cae3b28ee0a54ef51c8e6fb8acd30c482f5a7e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-06T05:55:52.565000+00:00",
      "csv_description": "\"BigID is a data intelligence platform that scans your data repositories for sensitive and valuable information. BigID provides a wealth of analysis tools and configuration options that give you penetrating insight into the contents of your data stores, structured and unstructured, as well as integration capabilities with third-party data intelligence tools and even custom applications that you create yourself.\"",
      "csv_display_name": "BigID Operator",
      "csv_metadata_description": "",
      "csv_name": "bigid-operator.v1.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:39:12.772000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "bigid-operator",
      "provided_apis": [
        {
          "group": "operator.com",
          "kind": "Bigid",
          "version": "v1alpha1"
        }
      ],
      "provider": "BigID",
      "related_images": [
        {
          "digest": "sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:0d7eb521e831c869a47dd22601239e93b1a020fbb81077198fc2a7b7f417b13b",
          "image": "registry.connect.redhat.com/bigid/bigid-operator@sha256:0d7eb521e831c869a47dd22601239e93b1a020fbb81077198fc2a7b7f417b13b",
          "name": "manager"
        },
        {
          "digest": "sha256:388c65b55244bfb30f7a9168a9f89d020672b6fca8d75e29a3af1c3663f3b053",
          "image": "registry.connect.redhat.com/bigid/bigid-me-agent@sha256:388c65b55244bfb30f7a9168a9f89d020672b6fca8d75e29a3af1c3663f3b053",
          "name": "bigid_bigidme"
        },
        {
          "digest": "sha256:20f113d50e424d93e4fae15bc8f3dcea15a191ead9ee9ecf0d82e2e4f7931dd5",
          "image": "registry.connect.redhat.com/bigid/bigid-ml@sha256:20f113d50e424d93e4fae15bc8f3dcea15a191ead9ee9ecf0d82e2e4f7931dd5",
          "name": "bigid_clustering"
        },
        {
          "digest": "sha256:7e00fa94d92bd1d8413861210c203dd1aae29ee6f76044f20a1644692ab1ff24",
          "image": "registry.connect.redhat.com/bigid/bigid-config-service@sha256:7e00fa94d92bd1d8413861210c203dd1aae29ee6f76044f20a1644692ab1ff24",
          "name": "bigid_configservice"
        },
        {
          "digest": "sha256:fbbf9a234ea4200330c877244b7fe37055909b0df359615d1b1a75e3dfb3cc1a",
          "image": "registry.connect.redhat.com/bigid/bigid-ner@sha256:fbbf9a234ea4200330c877244b7fe37055909b0df359615d1b1a75e3dfb3cc1a",
          "name": "bigid_ner"
        },
        {
          "digest": "sha256:688a8c2f8036f90fb77ec9a37ac68181853035d793a15ba14d4a01bc9fb1aac0",
          "image": "registry.connect.redhat.com/bigid/bigid-reports@sha256:688a8c2f8036f90fb77ec9a37ac68181853035d793a15ba14d4a01bc9fb1aac0",
          "name": "bigid_reports"
        },
        {
          "digest": "sha256:0ff71223b92c6ef6cf61faed4f4c65de15d7d6512d2cd9b94de65201ec0b8af0",
          "image": "registry.connect.redhat.com/bigid/bigid-corr-new@sha256:0ff71223b92c6ef6cf61faed4f4c65de15d7d6512d2cd9b94de65201ec0b8af0",
          "name": "bigid_corr"
        },
        {
          "digest": "sha256:db51c0b790fea3d211228bccf4b64f50878bc91bb1c2b3e840bd020e2994fcc6",
          "image": "registry.connect.redhat.com/bigid/bigid-orch@sha256:db51c0b790fea3d211228bccf4b64f50878bc91bb1c2b3e840bd020e2994fcc6",
          "name": "bigid_orch"
        },
        {
          "digest": "sha256:327340e05873ae4a6a7dec1aee855a32995b2994b60469f27bba66c1a06819d9",
          "image": "registry.connect.redhat.com/bigid/bigid-rabbitmq@sha256:327340e05873ae4a6a7dec1aee855a32995b2994b60469f27bba66c1a06819d9",
          "name": "bigid_rabbitmq"
        },
        {
          "digest": "sha256:f33c11f53c88112bcd1122c7f458bb42890f0fcdc49691fe0497c424e78df426",
          "image": "registry.connect.redhat.com/bigid/bigid-scanner@sha256:f33c11f53c88112bcd1122c7f458bb42890f0fcdc49691fe0497c424e78df426",
          "name": "bigid_scanner"
        },
        {
          "digest": "sha256:f851e542e5d19be937604f668160e524c3f0d3a4ca60f7329f394fb5af9b3b75",
          "image": "registry.connect.redhat.com/bigid/bigid-ui@sha256:f851e542e5d19be937604f668160e524c3f0d3a4ca60f7329f394fb5af9b3b75",
          "name": "bigid_ui"
        },
        {
          "digest": "sha256:367e2360b988583e76ce369f4159b07dd9b86b2d0d3ce5f4b1d71deeaacf0471",
          "image": "registry.connect.redhat.com/bigid/bigid-web@sha256:367e2360b988583e76ce369f4159b07dd9b86b2d0d3ce5f4b1d71deeaacf0471",
          "name": "bigid_web"
        },
        {
          "digest": "sha256:4b00fb9c2158fd091ed0d33752ecf9e4c2c96a89ea8d5a5a8d5cce79670eed58",
          "image": "registry.connect.redhat.com/bigid/bigid-data-catalog@sha256:4b00fb9c2158fd091ed0d33752ecf9e4c2c96a89ea8d5a5a8d5cce79670eed58",
          "name": "bigid_datacatalog"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.6",
      "version_original": "1.1.6"
    },
    {
      "_id": "615d45c8a683b2bc62f43eb3",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:be378b1a6ce701b5f76d57d8b3e46c7424d5862cbb90892194d47403eef893ea",
      "bundle_path_digest": "sha256:be378b1a6ce701b5f76d57d8b3e46c7424d5862cbb90892194d47403eef893ea",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.1",
      "creation_date": "2021-10-06T06:44:24.515000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:16:54.718000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "615d46bba683b2bc62f43eb7",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.1",
      "creation_date": "2021-10-06T06:48:27.171000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:54:39.899000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "615d47664c6fab03ef8eda39",
      "alm_examples": [
        {
          "api_version": "operator.com/v1alpha1",
          "kind": "Bigid",
          "metadata": {
            "name": "bigid-sample"
          },
          "spec": {
            "global": {
              "bigid": {
                "bigidme": {
                  "create": false
                },
                "clustering": {
                  "create": true,
                  "gateway": {
                    "resources": {
                      "limits": {
                        "cpu": "2",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      }
                    }
                  },
                  "scheduler": {
                    "resources": {
                      "limits": {
                        "cpu": "1",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "250m",
                        "memory": "500Mi"
                      }
                    }
                  },
                  "worker": {
                    "resources": {
                      "limits": {
                        "cpu": "3",
                        "memory": "6Gi"
                      },
                      "requests": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      }
                    }
                  }
                },
                "configService": {
                  "logLevel": "info"
                },
                "confluent": {
                  "create": false
                },
                "correlator": {
                  "correlatorReplicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "3",
                      "memory": "14Gi"
                    },
                    "requests": {
                      "cpu": "3",
                      "memory": "14Gi"
                    }
                  }
                },
                "labler": {
                  "create": false
                },
                "ner": {
                  "create": true,
                  "nerReplicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "4",
                      "memory": "7Gi"
                    },
                    "requests": {
                      "cpu": "2",
                      "memory": "3Gi"
                    }
                  }
                },
                "reports": {
                  "logLevel": "info"
                },
                "scanner": {
                  "resources": {
                    "limits": {
                      "cpu": "7",
                      "memory": "14Gi"
                    },
                    "requests": {
                      "cpu": "7",
                      "memory": "14Gi"
                    }
                  },
                  "scannerJavaOpts": "-Xmx14g",
                  "scannerReplicas": 1,
                  "scannerUser": "bigid-scanner"
                },
                "web": {
                  "AuditLogPersistentVolumes": false
                }
              },
              "corrAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "bigid-corr-new"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              },
              "image": {
                "pullPolicy": "Always"
              },
              "imageCredentials": {
                "enabled": true
              },
              "ingress": {
                "bigidHost": "ui.CHANGEME.COM",
                "class": "nginx",
                "rabbitmqHost": "mq.CHANGEME.COM",
                "tlssecret": "bigid-tlssecret"
              },
              "mongodb": {
                "externalIP": "CHANGEME",
                "image": "mongo:3.6",
                "password": "password",
                "port": 27017,
                "user": "bigid"
              },
              "monitoring": {
                "enabled": false
              },
              "namespace": "bigid",
              "nerAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "bigid-ner"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              },
              "scannerAffinity": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n  - labelSelector:\n      matchExpressions:\n      - key: app\n        operator: In\n        values:\n        - bigid-scanner\n    topologyKey: kubernetes.io/hostname\n",
              "secretKey": "CHANGEME"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/bigid/bigid-operator-bundle@sha256:9342a4515d668b5a1efe33523cae3b28ee0a54ef51c8e6fb8acd30c482f5a7e4",
      "bundle_path_digest": "sha256:9342a4515d668b5a1efe33523cae3b28ee0a54ef51c8e6fb8acd30c482f5a7e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-06T06:51:18.738000+00:00",
      "csv_description": "\"BigID is a data intelligence platform that scans your data repositories for sensitive and valuable information. BigID provides a wealth of analysis tools and configuration options that give you penetrating insight into the contents of your data stores, structured and unstructured, as well as integration capabilities with third-party data intelligence tools and even custom applications that you create yourself.\"",
      "csv_display_name": "BigID Operator",
      "csv_metadata_description": "",
      "csv_name": "bigid-operator.v1.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:54:00.828000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "bigid-operator",
      "provided_apis": [
        {
          "group": "operator.com",
          "kind": "Bigid",
          "version": "v1alpha1"
        }
      ],
      "provider": "BigID",
      "related_images": [
        {
          "digest": "sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:0d7eb521e831c869a47dd22601239e93b1a020fbb81077198fc2a7b7f417b13b",
          "image": "registry.connect.redhat.com/bigid/bigid-operator@sha256:0d7eb521e831c869a47dd22601239e93b1a020fbb81077198fc2a7b7f417b13b",
          "name": "manager"
        },
        {
          "digest": "sha256:388c65b55244bfb30f7a9168a9f89d020672b6fca8d75e29a3af1c3663f3b053",
          "image": "registry.connect.redhat.com/bigid/bigid-me-agent@sha256:388c65b55244bfb30f7a9168a9f89d020672b6fca8d75e29a3af1c3663f3b053",
          "name": "bigid_bigidme"
        },
        {
          "digest": "sha256:20f113d50e424d93e4fae15bc8f3dcea15a191ead9ee9ecf0d82e2e4f7931dd5",
          "image": "registry.connect.redhat.com/bigid/bigid-ml@sha256:20f113d50e424d93e4fae15bc8f3dcea15a191ead9ee9ecf0d82e2e4f7931dd5",
          "name": "bigid_clustering"
        },
        {
          "digest": "sha256:7e00fa94d92bd1d8413861210c203dd1aae29ee6f76044f20a1644692ab1ff24",
          "image": "registry.connect.redhat.com/bigid/bigid-config-service@sha256:7e00fa94d92bd1d8413861210c203dd1aae29ee6f76044f20a1644692ab1ff24",
          "name": "bigid_configservice"
        },
        {
          "digest": "sha256:fbbf9a234ea4200330c877244b7fe37055909b0df359615d1b1a75e3dfb3cc1a",
          "image": "registry.connect.redhat.com/bigid/bigid-ner@sha256:fbbf9a234ea4200330c877244b7fe37055909b0df359615d1b1a75e3dfb3cc1a",
          "name": "bigid_ner"
        },
        {
          "digest": "sha256:688a8c2f8036f90fb77ec9a37ac68181853035d793a15ba14d4a01bc9fb1aac0",
          "image": "registry.connect.redhat.com/bigid/bigid-reports@sha256:688a8c2f8036f90fb77ec9a37ac68181853035d793a15ba14d4a01bc9fb1aac0",
          "name": "bigid_reports"
        },
        {
          "digest": "sha256:0ff71223b92c6ef6cf61faed4f4c65de15d7d6512d2cd9b94de65201ec0b8af0",
          "image": "registry.connect.redhat.com/bigid/bigid-corr-new@sha256:0ff71223b92c6ef6cf61faed4f4c65de15d7d6512d2cd9b94de65201ec0b8af0",
          "name": "bigid_corr"
        },
        {
          "digest": "sha256:db51c0b790fea3d211228bccf4b64f50878bc91bb1c2b3e840bd020e2994fcc6",
          "image": "registry.connect.redhat.com/bigid/bigid-orch@sha256:db51c0b790fea3d211228bccf4b64f50878bc91bb1c2b3e840bd020e2994fcc6",
          "name": "bigid_orch"
        },
        {
          "digest": "sha256:327340e05873ae4a6a7dec1aee855a32995b2994b60469f27bba66c1a06819d9",
          "image": "registry.connect.redhat.com/bigid/bigid-rabbitmq@sha256:327340e05873ae4a6a7dec1aee855a32995b2994b60469f27bba66c1a06819d9",
          "name": "bigid_rabbitmq"
        },
        {
          "digest": "sha256:f33c11f53c88112bcd1122c7f458bb42890f0fcdc49691fe0497c424e78df426",
          "image": "registry.connect.redhat.com/bigid/bigid-scanner@sha256:f33c11f53c88112bcd1122c7f458bb42890f0fcdc49691fe0497c424e78df426",
          "name": "bigid_scanner"
        },
        {
          "digest": "sha256:f851e542e5d19be937604f668160e524c3f0d3a4ca60f7329f394fb5af9b3b75",
          "image": "registry.connect.redhat.com/bigid/bigid-ui@sha256:f851e542e5d19be937604f668160e524c3f0d3a4ca60f7329f394fb5af9b3b75",
          "name": "bigid_ui"
        },
        {
          "digest": "sha256:367e2360b988583e76ce369f4159b07dd9b86b2d0d3ce5f4b1d71deeaacf0471",
          "image": "registry.connect.redhat.com/bigid/bigid-web@sha256:367e2360b988583e76ce369f4159b07dd9b86b2d0d3ce5f4b1d71deeaacf0471",
          "name": "bigid_web"
        },
        {
          "digest": "sha256:4b00fb9c2158fd091ed0d33752ecf9e4c2c96a89ea8d5a5a8d5cce79670eed58",
          "image": "registry.connect.redhat.com/bigid/bigid-data-catalog@sha256:4b00fb9c2158fd091ed0d33752ecf9e4c2c96a89ea8d5a5a8d5cce79670eed58",
          "name": "bigid_datacatalog"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.6",
      "version_original": "1.1.6"
    },
    {
      "_id": "615d58a04c6fab03ef8eda65",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "bundle_path_digest": "sha256:f7fa9a0e8cd1524d7048d6e563a05ec2890941427211f02ca3f1c0faf19b7ce7",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.1",
      "creation_date": "2021-10-06T08:04:48.302000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:52:20.688000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "615d5942a683b2bc62f43ef1",
      "alm_examples": [
        {
          "api_version": "operator.com/v1alpha1",
          "kind": "Bigid",
          "metadata": {
            "name": "bigid-sample"
          },
          "spec": {
            "global": {
              "bigid": {
                "bigidme": {
                  "create": false
                },
                "clustering": {
                  "create": true,
                  "gateway": {
                    "resources": {
                      "limits": {
                        "cpu": "2",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      }
                    }
                  },
                  "scheduler": {
                    "resources": {
                      "limits": {
                        "cpu": "1",
                        "memory": "2Gi"
                      },
                      "requests": {
                        "cpu": "250m",
                        "memory": "500Mi"
                      }
                    }
                  },
                  "worker": {
                    "resources": {
                      "limits": {
                        "cpu": "3",
                        "memory": "6Gi"
                      },
                      "requests": {
                        "cpu": "500m",
                        "memory": "500Mi"
                      }
                    }
                  }
                },
                "configService": {
                  "logLevel": "info"
                },
                "confluent": {
                  "create": false
                },
                "correlator": {
                  "correlatorReplicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "3",
                      "memory": "14Gi"
                    },
                    "requests": {
                      "cpu": "3",
                      "memory": "14Gi"
                    }
                  }
                },
                "labler": {
                  "create": false
                },
                "ner": {
                  "create": true,
                  "nerReplicas": 1,
                  "resources": {
                    "limits": {
                      "cpu": "4",
                      "memory": "7Gi"
                    },
                    "requests": {
                      "cpu": "2",
                      "memory": "3Gi"
                    }
                  }
                },
                "reports": {
                  "logLevel": "info"
                },
                "scanner": {
                  "resources": {
                    "limits": {
                      "cpu": "7",
                      "memory": "14Gi"
                    },
                    "requests": {
                      "cpu": "7",
                      "memory": "14Gi"
                    }
                  },
                  "scannerJavaOpts": "-Xmx14g",
                  "scannerReplicas": 1,
                  "scannerUser": "bigid-scanner"
                },
                "web": {
                  "AuditLogPersistentVolumes": false
                }
              },
              "corrAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "bigid-corr-new"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              },
              "image": {
                "pullPolicy": "Always"
              },
              "imageCredentials": {
                "enabled": true
              },
              "ingress": {
                "bigidHost": "ui.CHANGEME.COM",
                "class": "nginx",
                "rabbitmqHost": "mq.CHANGEME.COM",
                "tlssecret": "bigid-tlssecret"
              },
              "mongodb": {
                "externalIP": "CHANGEME",
                "image": "mongo:3.6",
                "password": "password",
                "port": 27017,
                "user": "bigid"
              },
              "monitoring": {
                "enabled": false
              },
              "namespace": "bigid",
              "nerAffinity": {
                "requiredDuringSchedulingIgnoredDuringExecution": [
                  {
                    "labelSelector": {
                      "matchExpressions": [
                        {
                          "key": "app",
                          "operator": "In",
                          "values": [
                            "bigid-ner"
                          ]
                        }
                      ]
                    },
                    "topologyKey": "kubernetes.io/hostname"
                  }
                ]
              },
              "scannerAffinity": "podAntiAffinity:\n  requiredDuringSchedulingIgnoredDuringExecution:\n  - labelSelector:\n      matchExpressions:\n      - key: app\n        operator: In\n        values:\n        - bigid-scanner\n    topologyKey: kubernetes.io/hostname\n",
              "secretKey": "CHANGEME"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/bigid/bigid-operator-bundle@sha256:9342a4515d668b5a1efe33523cae3b28ee0a54ef51c8e6fb8acd30c482f5a7e4",
      "bundle_path_digest": "sha256:9342a4515d668b5a1efe33523cae3b28ee0a54ef51c8e6fb8acd30c482f5a7e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-06T08:07:30.173000+00:00",
      "csv_description": "\"BigID is a data intelligence platform that scans your data repositories for sensitive and valuable information. BigID provides a wealth of analysis tools and configuration options that give you penetrating insight into the contents of your data stores, structured and unstructured, as well as integration capabilities with third-party data intelligence tools and even custom applications that you create yourself.\"",
      "csv_display_name": "BigID Operator",
      "csv_metadata_description": "",
      "csv_name": "bigid-operator.v1.1.6",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:17:50.025000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "bigid-operator",
      "provided_apis": [
        {
          "group": "operator.com",
          "kind": "Bigid",
          "version": "v1alpha1"
        }
      ],
      "provider": "BigID",
      "related_images": [
        {
          "digest": "sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:c517c5e91c22279414fc56c777e44641602f01440938cca0bee02a6929fe558e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:0d7eb521e831c869a47dd22601239e93b1a020fbb81077198fc2a7b7f417b13b",
          "image": "registry.connect.redhat.com/bigid/bigid-operator@sha256:0d7eb521e831c869a47dd22601239e93b1a020fbb81077198fc2a7b7f417b13b",
          "name": "manager"
        },
        {
          "digest": "sha256:388c65b55244bfb30f7a9168a9f89d020672b6fca8d75e29a3af1c3663f3b053",
          "image": "registry.connect.redhat.com/bigid/bigid-me-agent@sha256:388c65b55244bfb30f7a9168a9f89d020672b6fca8d75e29a3af1c3663f3b053",
          "name": "bigid_bigidme"
        },
        {
          "digest": "sha256:20f113d50e424d93e4fae15bc8f3dcea15a191ead9ee9ecf0d82e2e4f7931dd5",
          "image": "registry.connect.redhat.com/bigid/bigid-ml@sha256:20f113d50e424d93e4fae15bc8f3dcea15a191ead9ee9ecf0d82e2e4f7931dd5",
          "name": "bigid_clustering"
        },
        {
          "digest": "sha256:7e00fa94d92bd1d8413861210c203dd1aae29ee6f76044f20a1644692ab1ff24",
          "image": "registry.connect.redhat.com/bigid/bigid-config-service@sha256:7e00fa94d92bd1d8413861210c203dd1aae29ee6f76044f20a1644692ab1ff24",
          "name": "bigid_configservice"
        },
        {
          "digest": "sha256:fbbf9a234ea4200330c877244b7fe37055909b0df359615d1b1a75e3dfb3cc1a",
          "image": "registry.connect.redhat.com/bigid/bigid-ner@sha256:fbbf9a234ea4200330c877244b7fe37055909b0df359615d1b1a75e3dfb3cc1a",
          "name": "bigid_ner"
        },
        {
          "digest": "sha256:688a8c2f8036f90fb77ec9a37ac68181853035d793a15ba14d4a01bc9fb1aac0",
          "image": "registry.connect.redhat.com/bigid/bigid-reports@sha256:688a8c2f8036f90fb77ec9a37ac68181853035d793a15ba14d4a01bc9fb1aac0",
          "name": "bigid_reports"
        },
        {
          "digest": "sha256:0ff71223b92c6ef6cf61faed4f4c65de15d7d6512d2cd9b94de65201ec0b8af0",
          "image": "registry.connect.redhat.com/bigid/bigid-corr-new@sha256:0ff71223b92c6ef6cf61faed4f4c65de15d7d6512d2cd9b94de65201ec0b8af0",
          "name": "bigid_corr"
        },
        {
          "digest": "sha256:db51c0b790fea3d211228bccf4b64f50878bc91bb1c2b3e840bd020e2994fcc6",
          "image": "registry.connect.redhat.com/bigid/bigid-orch@sha256:db51c0b790fea3d211228bccf4b64f50878bc91bb1c2b3e840bd020e2994fcc6",
          "name": "bigid_orch"
        },
        {
          "digest": "sha256:327340e05873ae4a6a7dec1aee855a32995b2994b60469f27bba66c1a06819d9",
          "image": "registry.connect.redhat.com/bigid/bigid-rabbitmq@sha256:327340e05873ae4a6a7dec1aee855a32995b2994b60469f27bba66c1a06819d9",
          "name": "bigid_rabbitmq"
        },
        {
          "digest": "sha256:f33c11f53c88112bcd1122c7f458bb42890f0fcdc49691fe0497c424e78df426",
          "image": "registry.connect.redhat.com/bigid/bigid-scanner@sha256:f33c11f53c88112bcd1122c7f458bb42890f0fcdc49691fe0497c424e78df426",
          "name": "bigid_scanner"
        },
        {
          "digest": "sha256:f851e542e5d19be937604f668160e524c3f0d3a4ca60f7329f394fb5af9b3b75",
          "image": "registry.connect.redhat.com/bigid/bigid-ui@sha256:f851e542e5d19be937604f668160e524c3f0d3a4ca60f7329f394fb5af9b3b75",
          "name": "bigid_ui"
        },
        {
          "digest": "sha256:367e2360b988583e76ce369f4159b07dd9b86b2d0d3ce5f4b1d71deeaacf0471",
          "image": "registry.connect.redhat.com/bigid/bigid-web@sha256:367e2360b988583e76ce369f4159b07dd9b86b2d0d3ce5f4b1d71deeaacf0471",
          "name": "bigid_web"
        },
        {
          "digest": "sha256:4b00fb9c2158fd091ed0d33752ecf9e4c2c96a89ea8d5a5a8d5cce79670eed58",
          "image": "registry.connect.redhat.com/bigid/bigid-data-catalog@sha256:4b00fb9c2158fd091ed0d33752ecf9e4c2c96a89ea8d5a5a8d5cce79670eed58",
          "name": "bigid_datacatalog"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.6",
      "version_original": "1.1.6"
    },
    {
      "_id": "615d5a4c4c6fab03ef8eda6a",
      "alm_examples": [
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "CouchDBCluster",
          "metadata": {
            "name": "example-couchdbcluster"
          },
          "spec": {
            "cpu": "1",
            "disk": "1Gi",
            "environment": {
              "adminPassword": "changeme",
              "search": true
            },
            "memory": "1Gi",
            "size": 3,
            "storageClass": ""
          }
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "FormationLock",
          "metadata": {
            "name": "example-formationlock"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Recipe",
          "metadata": {
            "name": "example-recipe"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "RecipeTemplate",
          "metadata": {
            "name": "example-recipetemplate"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Backup",
          "metadata": {
            "name": "example-backup"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Bucket",
          "metadata": {
            "name": "example-bucket"
          },
          "spec": {}
        },
        {
          "api_version": "couchdb.databases.cloud.ibm.com/v1",
          "kind": "Formation",
          "metadata": {
            "name": "example-formation"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/couchdb-operator-certified-bundle@sha256:be378b1a6ce701b5f76d57d8b3e46c7424d5862cbb90892194d47403eef893ea",
      "bundle_path_digest": "sha256:be378b1a6ce701b5f76d57d8b3e46c7424d5862cbb90892194d47403eef893ea",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "v2.1",
      "creation_date": "2021-10-06T08:11:56.923000+00:00",
      "csv_description": "Apache CouchDB lets you access your data where you need it. The [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) is implemented in a variety of projects and products that span every imaginable computing environment from globally distributed server-clusters, over mobile phones to web browsers.\n\nStore your data safely, on your own servers, or with any leading cloud provider. Your web- and native applications love CouchDB, because it speaks JSON natively and supports binary data for all your data storage needs.\n\nThe [Couch Replication Protocol](http://docs.couchdb.org/en/master/replication/protocol.html) lets your data flow seamlessly between server clusters to mobile phones and web browsers, enabling a compelling [offline-first](http://offlinefirst.org/) user-experience while maintaining high performance and strong reliability. CouchDB comes with a developer-friendly query language, and optionally MapReduce for simple, efficient, and comprehensive data retrieval.\n\n### Operator for Apache CouchDB Features\n* Fully automated deployment and configuration of Apache CouchDB clusters.\n* Support single, multiple, or all namespace install modes.\n\n#### Security\n* TLS - TLS  is supported using Red Hat Service certificates or user-provided certificates.\n* Authentication - The parameter `require_valid_user` defaults to `true`, which means that no requests are allowed from anonymous users. Every request must be authenticated.\n* Authorization - Databases are initially accessible by Apache CouchDB admins only.\n\n#### High Availability\n* Nodes - Each database node in an Apache CouchDB cluster requires its own Kubernetes node. It's recommended that you run it with a minimum of three nodes for any production deployment.\n* Zones - The Apache CouchDB cluster database nodes are spread across available Kubernetes fault zones where available.\n* Replicas - The default configuration for each database is two shards (Q=2) and three shard copies (N=3), where each shard copy is deployed on a separate node in the cluster.\n\n### Reading and writing to Apache CouchDB\n\nThe Operator for Apache CouchDB automatically generates a Service. This can be accessed using port-forwarding e.g. `kubectl port-forward svc/my-couchdb-cluster 443:443 -u admin:mypassword`. Alternatively, configure an OpenShift Route to expose the service externally.\n\n### CouchDB 2.3.1 Update Instructions\nWhen the operator is updated to v2.0 or above any existing CouchDB 2.3.1 cluster will not be automatically upgraded to CouchDB 3. The user must manually trigger this process by removing the version statement `version: 2.3.1` in the CouchDBCluster CR for each CouchDB cluster\nThe operator will then perform a rolling update, with the new pods running CouchDB3.\nIt is advised that customers do this straightaway as CouchDB 2.3.1 is no longer supported.\n\n[Read the complete guide to using the Operator for Apache CouchDB](https://ibm.biz/BdfGQy)\n",
      "csv_display_name": "Operator for Apache CouchDB",
      "csv_metadata_description": "Apache CouchDB is a highly available NOSQL database for web and mobile applications\n",
      "csv_name": "couchdb-operator.v2.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:02:05.634000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "couchdb-operator-certified",
      "provided_apis": [
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "RecipeTemplate",
          "plural": "recipetemplates",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "CouchDBCluster",
          "plural": "couchdbclusters",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "FormationLock",
          "plural": "formationlocks",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Formation",
          "plural": "formations",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Bucket",
          "plural": "buckets",
          "version": "v1"
        },
        {
          "group": "couchdb.databases.cloud.ibm.com",
          "kind": "Recipe",
          "plural": "recipes",
          "version": "v1"
        }
      ],
      "provider": "IBM",
      "related_images": [
        {
          "digest": "sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "image": "registry.connect.redhat.com/ibm/couchdb3@sha256:2672b203f768e62ef507de23bf771764266b958acded02ca3c9aedbb08338aef",
          "name": "COUCHDB3"
        },
        {
          "digest": "sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "image": "registry.connect.redhat.com/ibm/couchdb-operator-mgmt@sha256:27ebeed0e96dcc7d6c2ab15149bfb324c428f4aee3346e54d5200d1c72435591",
          "name": "COUCHDB-MGMT"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.1",
      "version_original": "2.0.1"
    },
    {
      "_id": "615d8af7b5e93d6997c91026",
      "alm_examples": [
        {
          "api_version": "federatorai.containers.ai/v1alpha1",
          "kind": "AlamedaService",
          "metadata": {
            "name": "my-alamedaservice"
          },
          "spec": {
            "alamedaAi": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "alamedaInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "100Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "fedemeterInfluxdb": {
              "storages": [
                {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "size": "10Gi",
                  "type": "pvc",
                  "usage": "data"
                }
              ]
            },
            "imageLocation": "registry.connect.redhat.com/prophetstor",
            "keycode": {
              "codeNumber": ""
            },
            "storages": [
              {
                "accessMode": [
                  "ReadWriteOnce"
                ],
                "size": "2Gi",
                "type": "pvc",
                "usage": "log"
              }
            ],
            "version": "v4.6.1-b1655-2"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/prophetstor/federatorai-operator-bundle@sha256:66fa5c8e525ce32eef696b286ba2278c0fca6be668bda76d28f5f78dc45c37e3",
      "bundle_path_digest": "sha256:66fa5c8e525ce32eef696b286ba2278c0fca6be668bda76d28f5f78dc45c37e3",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2021-10-06T11:39:35.522000+00:00",
      "csv_description": "Federator.ai helps enterprises optimize cloud resources, maximize application performance, and save significant cost without excessive over-provisioning or under-provisioning of resources, meeting the service-level requirements of their applications.\n\nEnterprises often lack understanding of the resources needed to support their applications. This leads to either excessive over-provisioning or under-provisioning of resources (CPU, memory, storage). Using machine learning, Federator.ai determines the optimal cloud resources needed to support any workload on OpenShift and helps users find the best-cost instances from cloud providers for their applications.\n\n\n**Multi-layer workload prediction**\n\nUsing machine learning and math-based algorithms, Federator.ai predicts containerized application and cluster node resource usage as the basis for resource recommendations at application level as well as at cluster node level. Federator.ai supports prediction for both physical/virtual CPUs and memories.\n\n\n**Auto-scaling via resource recommendation**\n\nFederator.ai utilizes the predicted resource usage to recommend the right number and size of pods for applications. Integrated with Datadog's WPA, applications are automatically scaled to meet the predicted resource usage.\n\n\n**Application-aware recommendation execution**\n\nOptimizing the resource usage and performance goals, Federator.ai uses application specific metrics for workload prediction and pod capacity estimation to auto-scale the right number of pods for best performance without overprovisioning.\n\n\n**Multi-cloud Cost Analysis**\n\nWith resource usage prediction, Federator.ai analyzes potential cost of a cluster on different public cloud providers. It also recommend appropriate cluster nodes and instance types based on resource usage.\n\n\n**Custom Datadog/Sysdig Dashboards**\n\nPredefined custom Datadog/Sysdig Dashboards for workload prediction/recommendation visualization for cluster nodes and applications.\n\n\n**Additional resources**\n\nWant more product information? Explore detailed information about using this product and where to find additional help.\n\n* [Federator.ai Datasheet](https://prophetstor.com/wp-content/uploads/datasheets/Federator.ai.pdf)\n* [Quick Start Guide](https://prophetstor.com/wp-content/uploads/documentation/Federator.ai/Latest%20Version/ProphetStor%20Federator.ai%20Quick%20Installation%20Guide.pdf)\n* [Installation Guide](https://prophetstor.com/wp-content/uploads/2021/07/ProphetStor-Federator.ai-v4.6.1-Installation-Guide-v1.0.pdf)\n* [User Guide](https://prophetstor.com/wp-content/uploads/2021/07/Federator.ai-4.6.1-User-Guide.pdf)\n* [Company Information](https://www.prophetstor.com/)\n\n\n### Prerequisite\n*  The [Openshift](https://www.openshift.com) version 4.4.x or later if using OpenShift platform.\n*  The [Kubernetes](https://kubernetes.io/) version 1.16 or later if using Kubernetes environment.",
      "csv_display_name": "Federator.ai",
      "csv_metadata_description": "Federator.ai Operator provides easy configuration and management of AI-based Kubernetes resource orchestrator",
      "csv_name": "federatorai.v4.6.1-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:40:05.266000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "federatorai-certified",
      "provided_apis": [],
      "provider": "ProphetStor Data Services, Inc.",
      "related_images": [
        {
          "digest": "sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "name": "federatorai-operator-2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d-annotation"
        },
        {
          "digest": "sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "name": "federatorai-operator"
        },
        {
          "digest": "sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-operator@sha256:2c7070dcd426598c97e528b4fbc79de5585c4aeb4e5902406435a9e6d7e3bf0d",
          "name": "upgrader"
        },
        {
          "digest": "sha256:17aed4cd6a97f8ee5655660d2d13911e7c99c9f304b2fa09de891e4bf3141c69",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai-dispatcher@sha256:17aed4cd6a97f8ee5655660d2d13911e7c99c9f304b2fa09de891e4bf3141c69",
          "name": "ai_dispatcher"
        },
        {
          "digest": "sha256:0f946dde5fcb2f631153ea778ea24cac3e53b052a6bc97d09a0d2c04a8860446",
          "image": "registry.connect.redhat.com/prophetstor/alameda-ai@sha256:0f946dde5fcb2f631153ea778ea24cac3e53b052a6bc97d09a0d2c04a8860446",
          "name": "ai_engine"
        },
        {
          "digest": "sha256:222f6166fef3c74f187446adf5ab6361a03231eabab88a54ebd8f6f2a0ebd5c4",
          "image": "registry.connect.redhat.com/prophetstor/alameda-analyzer-ubi@sha256:222f6166fef3c74f187446adf5ab6361a03231eabab88a54ebd8f6f2a0ebd5c4",
          "name": "analyzer"
        },
        {
          "digest": "sha256:7601000fdaf7b937847cea40c4ac1b60ab843b1439e8a0c7e9dc4723408055ba",
          "image": "registry.connect.redhat.com/prophetstor/alameda-datahub-ubi@sha256:7601000fdaf7b937847cea40c4ac1b60ab843b1439e8a0c7e9dc4723408055ba",
          "name": "datahub"
        },
        {
          "digest": "sha256:d59db2fa0cdf0b0a66955297174641bef668db1d010e306b2bb711756ca57c38",
          "image": "registry.connect.redhat.com/prophetstor/alameda-executor-ubi@sha256:d59db2fa0cdf0b0a66955297174641bef668db1d010e306b2bb711756ca57c38",
          "name": "executor"
        },
        {
          "digest": "sha256:ae1e6994e8e1414a117308d7fb24bccfb093aaa8492d1d357a26f9e2ab7acf7c",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-api-ubi@sha256:ae1e6994e8e1414a117308d7fb24bccfb093aaa8492d1d357a26f9e2ab7acf7c",
          "name": "fedemeter_api"
        },
        {
          "digest": "sha256:d3b5505dd4fe688071f2d685773ed691cebcb04ff35eaf41e4f7a0331ff6e688",
          "image": "registry.connect.redhat.com/prophetstor/fedemeter-influxdb@sha256:d3b5505dd4fe688071f2d685773ed691cebcb04ff35eaf41e4f7a0331ff6e688",
          "name": "fedemeter_influxdb"
        },
        {
          "digest": "sha256:c5c2794413aea8384e8325a8cd9d86b4ec29ee5652e6b3bd172f15269e1d8ae0",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-ubi@sha256:c5c2794413aea8384e8325a8cd9d86b4ec29ee5652e6b3bd172f15269e1d8ae0",
          "name": "federatorai_agent"
        },
        {
          "digest": "sha256:468dfd11a6877103809cb17f56165d06e00d93a3c89411307249f921289fc1e4",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-agent-preloader@sha256:468dfd11a6877103809cb17f56165d06e00d93a3c89411307249f921289fc1e4",
          "name": "federatorai_agent_preloader"
        },
        {
          "digest": "sha256:5a552ec0a78ae167ad7ff8dbdb02ac3de49d60df49bcbe6ca11091077e744a12",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-frontend@sha256:5a552ec0a78ae167ad7ff8dbdb02ac3de49d60df49bcbe6ca11091077e744a12",
          "name": "federatorai_dashboard_frontend"
        },
        {
          "digest": "sha256:77709a35443202cffd2ef4df9daabd6a00ab4e536525ce99a9fd4203a0669e9a",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-dashboard-backend@sha256:77709a35443202cffd2ef4df9daabd6a00ab4e536525ce99a9fd4203a0669e9a",
          "name": "federatorai_dashboard_backend"
        },
        {
          "digest": "sha256:9c4ce48758ea58003cd25351c440e9aa12664cd59ee75bed8063374815f4d4da",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-data-adapter@sha256:9c4ce48758ea58003cd25351c440e9aa12664cd59ee75bed8063374815f4d4da",
          "name": "federatorai_data_adapter"
        },
        {
          "digest": "sha256:801059280ae54de7eaa518f5701ea320696e5aa83b3cd7ef3ad82ba1e3e1d395",
          "image": "registry.connect.redhat.com/prophetstor/federatorai-rest-ubi@sha256:801059280ae54de7eaa518f5701ea320696e5aa83b3cd7ef3ad82ba1e3e1d395",
          "name": "federatorai_restapi"
        },
        {
          "digest": "sha256:a20096b566e7dde77e7e5885a60d47e6c8824f8db896f20b90676d14f7d2bcc8",
          "image": "registry.connect.redhat.com/prophetstor/alameda-influxdb@sha256:a20096b566e7dde77e7e5885a60d47e6c8824f8db896f20b90676d14f7d2bcc8",
          "name": "influxdb"
        },
        {
          "digest": "sha256:87afe424d8d205b8a2f01262e3edac73e8f3eee0aa597610b8a4ee57e17f4ac0",
          "image": "registry.connect.redhat.com/prophetstor/alameda-notifier-ubi@sha256:87afe424d8d205b8a2f01262e3edac73e8f3eee0aa597610b8a4ee57e17f4ac0",
          "name": "notifier"
        },
        {
          "digest": "sha256:d4fceace6cc1f0e80b8b6abe870ec9722ea69e91c481246b13e3d50a2c3e1ffb",
          "image": "registry.connect.redhat.com/prophetstor/alameda-operator-ubi@sha256:d4fceace6cc1f0e80b8b6abe870ec9722ea69e91c481246b13e3d50a2c3e1ffb",
          "name": "operator"
        },
        {
          "digest": "sha256:2b61bfd1ba9186cc50b8f960f54d0ec94643715292bb874762009b3045477799",
          "image": "registry.connect.redhat.com/prophetstor/alameda-rabbitmq@sha256:2b61bfd1ba9186cc50b8f960f54d0ec94643715292bb874762009b3045477799",
          "name": "rabbitmq"
        },
        {
          "digest": "sha256:288cb6c29200d07451b8e2ab53b9a5112108cb5f2b6dc288026f9c2f12f5f9fd",
          "image": "registry.connect.redhat.com/prophetstor/alameda-recommender-ubi@sha256:288cb6c29200d07451b8e2ab53b9a5112108cb5f2b6dc288026f9c2f12f5f9fd",
          "name": "recommender"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "4.6.1-4",
      "version_original": "4.6.1-4"
    },
    {
      "_id": "615e16c74ac064fc83b19e9f",
      "alm_examples": [
        {
          "api_version": "k8s.nginx.org/v1alpha1",
          "kind": "NginxIngressController",
          "metadata": {
            "name": "my-nginx-ingress-controller"
          },
          "spec": {
            "image": {
              "pullPolicy": "Always",
              "repository": "docker.io/nginx/nginx-ingress",
              "tag": "2.0.0-ubi"
            },
            "ingressClass": "nginx",
            "nginxPlus": false,
            "serviceType": "NodePort",
            "type": "deployment"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nginx/nginx-ingress-operator-bundle@sha256:177b0e39c4ed3113932a2392ec86515b35994bb2c9e3740c92baefc139dfef6c",
      "bundle_path_digest": "sha256:177b0e39c4ed3113932a2392ec86515b35994bb2c9e3740c92baefc139dfef6c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-06T21:36:07.426000+00:00",
      "csv_description": "The NGINX Ingress Operator is a Kubernetes/OpenShift component which deploys and manages one or more NGINX/NGINX Plus Ingress Controllers",
      "csv_display_name": "Nginx Ingress Operator",
      "csv_metadata_description": "",
      "csv_name": "nginx-ingress-operator.v0.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:37:52.072000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nginx-ingress-operator",
      "provided_apis": [],
      "provider": "NGINX Inc",
      "related_images": [
        {
          "digest": "sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:b7766e1dd702cee4443df2c089058d4cc7b154d5dda574bd432d02ef10313f57",
          "image": "registry.connect.redhat.com/nginx/nginx-ingress-operator@sha256:b7766e1dd702cee4443df2c089058d4cc7b154d5dda574bd432d02ef10313f57",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.4.0",
      "version_original": "0.4.0"
    },
    {
      "_id": "615f7d655ac6c12504901fd2",
      "alm_examples": [
        {
          "api_version": "cache.nethopper/v1alpha1",
          "kind": "Nethopper",
          "metadata": {
            "name": "nethopper-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nethopper/nethopper-operator-bundle@sha256:f5deae0457a04c1ab7895567f88ec10228e2f6b9457f1f8099771194df0e0f55",
      "bundle_path_digest": "sha256:f5deae0457a04c1ab7895567f88ec10228e2f6b9457f1f8099771194df0e0f55",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-10-07T23:06:13.308000+00:00",
      "csv_description": "Multi-Cloud Kubernetes Networking as a Service",
      "csv_display_name": "Nethopper Operator",
      "csv_metadata_description": "",
      "csv_name": "nethopper-operator.v0.1.32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:49:34.089000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nethopper-operator",
      "provided_apis": [
        {
          "group": "cache.nethopper",
          "kind": "Nethopper",
          "version": "v1alpha1"
        }
      ],
      "provider": "nethopper.io",
      "related_images": [
        {
          "digest": "sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a7b0af6dee1c1b0be6b1d5c895c6032152e9c98cde435b17b378ded9085fd4e5",
          "image": "registry.connect.redhat.com/nethopper/nethopper-operator@sha256:a7b0af6dee1c1b0be6b1d5c895c6032152e9c98cde435b17b378ded9085fd4e5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.32",
      "version_original": "0.1.32"
    },
    {
      "_id": "615f7e3404fd1c67039dbc90",
      "alm_examples": [
        {
          "api_version": "cache.nethopper/v1alpha1",
          "kind": "Nethopper",
          "metadata": {
            "name": "nethopper-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nethopper/nethopper-operator-bundle@sha256:f5deae0457a04c1ab7895567f88ec10228e2f6b9457f1f8099771194df0e0f55",
      "bundle_path_digest": "sha256:f5deae0457a04c1ab7895567f88ec10228e2f6b9457f1f8099771194df0e0f55",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-10-07T23:09:40.049000+00:00",
      "csv_description": "Multi-Cloud Kubernetes Networking as a Service",
      "csv_display_name": "Nethopper Operator",
      "csv_metadata_description": "",
      "csv_name": "nethopper-operator.v0.1.32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:01:18.539000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nethopper-operator",
      "provided_apis": [
        {
          "group": "cache.nethopper",
          "kind": "Nethopper",
          "version": "v1alpha1"
        }
      ],
      "provider": "nethopper.io",
      "related_images": [
        {
          "digest": "sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a7b0af6dee1c1b0be6b1d5c895c6032152e9c98cde435b17b378ded9085fd4e5",
          "image": "registry.connect.redhat.com/nethopper/nethopper-operator@sha256:a7b0af6dee1c1b0be6b1d5c895c6032152e9c98cde435b17b378ded9085fd4e5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.32",
      "version_original": "0.1.32"
    },
    {
      "_id": "615f83375ac6c12504901fd6",
      "alm_examples": [
        {
          "api_version": "cache.nethopper/v1alpha1",
          "kind": "Nethopper",
          "metadata": {
            "name": "nethopper-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nethopper/nethopper-operator-bundle@sha256:f5deae0457a04c1ab7895567f88ec10228e2f6b9457f1f8099771194df0e0f55",
      "bundle_path_digest": "sha256:f5deae0457a04c1ab7895567f88ec10228e2f6b9457f1f8099771194df0e0f55",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-10-07T23:31:03.691000+00:00",
      "csv_description": "Multi-Cloud Kubernetes Networking as a Service",
      "csv_display_name": "Nethopper Operator",
      "csv_metadata_description": "",
      "csv_name": "nethopper-operator.v0.1.32",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:36:41.177000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nethopper-operator",
      "provided_apis": [
        {
          "group": "cache.nethopper",
          "kind": "Nethopper",
          "version": "v1alpha1"
        }
      ],
      "provider": "nethopper.io",
      "related_images": [
        {
          "digest": "sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:484e26e348354e6dd28934aedbcd139c786284a88a4e16a7652b5a52bd0beeac",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:a7b0af6dee1c1b0be6b1d5c895c6032152e9c98cde435b17b378ded9085fd4e5",
          "image": "registry.connect.redhat.com/nethopper/nethopper-operator@sha256:a7b0af6dee1c1b0be6b1d5c895c6032152e9c98cde435b17b378ded9085fd4e5",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.32",
      "version_original": "0.1.32"
    },
    {
      "_id": "615f8c6390fb938ecf600961",
      "alm_examples": [
        {
          "api_version": "charts.anchore.io/v1alpha1",
          "kind": "AnchoreEngine",
          "metadata": {
            "name": "anchoreengine-sample"
          },
          "spec": {
            "anchoreGlobal": {
              "defaultAdminEmail": "example@email.com"
            },
            "postgresql": {
              "extraEnv": [
                {
                  "name": "POSTGRESQL_USER",
                  "value": "anchoreengine"
                },
                {
                  "name": "POSTGRESQL_PASSWORD",
                  "value": "anchore-postgres,123"
                },
                {
                  "name": "POSTGRESQL_DATABASE",
                  "value": "anchore"
                },
                {
                  "name": "PGUSER",
                  "value": "postgres"
                }
              ],
              "postgresDatabase": "anchore",
              "postgresPassword": "anchore-postgres,123",
              "postgresUser": "anchoreengine"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/anchore/engine-operator-bundle@sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "bundle_path_digest": "sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T00:10:11.458000+00:00",
      "csv_description": "Anchore Engine is an open source software system that provides a centralized service for analyzing container images, \n scanning for security vulnerabilities, and enforcing deployment policies. Anchore Engine is provided as a Docker \n container image that can be run standalone or with an orchestration platform such as Kubernetes. Anchore Engine allows \n users to perform detailed analysis on their container images, run queries, produce reports, and define policies that \n can be used in CI/CD pipelines. Users can extend Anchore Engine with plugins that add new queries, image analysis, and \n policies. Anchore Engine can be accessed directly through a RESTful API or via the Anchore CLI.\n\n The Anchore Engine Operator is based on the official stable [Helm Chart](https://github.com/anchore/anchore-charts/tree/master/stable/anchore-engine).",
      "csv_display_name": "Anchore Engine Operator",
      "csv_metadata_description": "Anchore Engine - container image scanning service for policy-based security, best-practice and compliance enforcement.",
      "csv_name": "anchore-engine.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:01:35.878000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "anchore-engine",
      "provided_apis": [
        {
          "group": "charts.anchore.io",
          "kind": "AnchoreEngine",
          "version": "v1alpha1"
        }
      ],
      "provider": "Anchore Inc.",
      "related_images": [
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "engine-operator-baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6-annotation"
        },
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "manager"
        },
        {
          "digest": "sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "image": "registry.connect.redhat.com/anchore/engine0@sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "name": "anchore_engine"
        },
        {
          "digest": "sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "image": "registry.redhat.io/rhel8/postgresql-96@sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "name": "anchore_postgresql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "615f8cef5ac6c12504901fda",
      "alm_examples": [
        {
          "api_version": "charts.anchore.io/v1alpha1",
          "kind": "AnchoreEngine",
          "metadata": {
            "name": "anchoreengine-sample"
          },
          "spec": {
            "anchoreGlobal": {
              "defaultAdminEmail": "example@email.com"
            },
            "postgresql": {
              "extraEnv": [
                {
                  "name": "POSTGRESQL_USER",
                  "value": "anchoreengine"
                },
                {
                  "name": "POSTGRESQL_PASSWORD",
                  "value": "anchore-postgres,123"
                },
                {
                  "name": "POSTGRESQL_DATABASE",
                  "value": "anchore"
                },
                {
                  "name": "PGUSER",
                  "value": "postgres"
                }
              ],
              "postgresDatabase": "anchore",
              "postgresPassword": "anchore-postgres,123",
              "postgresUser": "anchoreengine"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/anchore/engine-operator-bundle@sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "bundle_path_digest": "sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T00:12:31.746000+00:00",
      "csv_description": "Anchore Engine is an open source software system that provides a centralized service for analyzing container images, \n scanning for security vulnerabilities, and enforcing deployment policies. Anchore Engine is provided as a Docker \n container image that can be run standalone or with an orchestration platform such as Kubernetes. Anchore Engine allows \n users to perform detailed analysis on their container images, run queries, produce reports, and define policies that \n can be used in CI/CD pipelines. Users can extend Anchore Engine with plugins that add new queries, image analysis, and \n policies. Anchore Engine can be accessed directly through a RESTful API or via the Anchore CLI.\n\n The Anchore Engine Operator is based on the official stable [Helm Chart](https://github.com/anchore/anchore-charts/tree/master/stable/anchore-engine).",
      "csv_display_name": "Anchore Engine Operator",
      "csv_metadata_description": "Anchore Engine - container image scanning service for policy-based security, best-practice and compliance enforcement.",
      "csv_name": "anchore-engine.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:45:42.531000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "anchore-engine",
      "provided_apis": [
        {
          "group": "charts.anchore.io",
          "kind": "AnchoreEngine",
          "version": "v1alpha1"
        }
      ],
      "provider": "Anchore Inc.",
      "related_images": [
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "engine-operator-baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6-annotation"
        },
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "manager"
        },
        {
          "digest": "sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "image": "registry.connect.redhat.com/anchore/engine0@sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "name": "anchore_engine"
        },
        {
          "digest": "sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "image": "registry.redhat.io/rhel8/postgresql-96@sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "name": "anchore_postgresql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "615f92625ac6c12504901fdd",
      "alm_examples": [
        {
          "api_version": "charts.anchore.io/v1alpha1",
          "kind": "AnchoreEngine",
          "metadata": {
            "name": "anchoreengine-sample"
          },
          "spec": {
            "anchoreGlobal": {
              "defaultAdminEmail": "example@email.com"
            },
            "postgresql": {
              "extraEnv": [
                {
                  "name": "POSTGRESQL_USER",
                  "value": "anchoreengine"
                },
                {
                  "name": "POSTGRESQL_PASSWORD",
                  "value": "anchore-postgres,123"
                },
                {
                  "name": "POSTGRESQL_DATABASE",
                  "value": "anchore"
                },
                {
                  "name": "PGUSER",
                  "value": "postgres"
                }
              ],
              "postgresDatabase": "anchore",
              "postgresPassword": "anchore-postgres,123",
              "postgresUser": "anchoreengine"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/anchore/engine-operator-bundle@sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "bundle_path_digest": "sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T00:35:46.374000+00:00",
      "csv_description": "Anchore Engine is an open source software system that provides a centralized service for analyzing container images, \n scanning for security vulnerabilities, and enforcing deployment policies. Anchore Engine is provided as a Docker \n container image that can be run standalone or with an orchestration platform such as Kubernetes. Anchore Engine allows \n users to perform detailed analysis on their container images, run queries, produce reports, and define policies that \n can be used in CI/CD pipelines. Users can extend Anchore Engine with plugins that add new queries, image analysis, and \n policies. Anchore Engine can be accessed directly through a RESTful API or via the Anchore CLI.\n\n The Anchore Engine Operator is based on the official stable [Helm Chart](https://github.com/anchore/anchore-charts/tree/master/stable/anchore-engine).",
      "csv_display_name": "Anchore Engine Operator",
      "csv_metadata_description": "Anchore Engine - container image scanning service for policy-based security, best-practice and compliance enforcement.",
      "csv_name": "anchore-engine.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:49:02.595000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "anchore-engine",
      "provided_apis": [
        {
          "group": "charts.anchore.io",
          "kind": "AnchoreEngine",
          "version": "v1alpha1"
        }
      ],
      "provider": "Anchore Inc.",
      "related_images": [
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "engine-operator-baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6-annotation"
        },
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "manager"
        },
        {
          "digest": "sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "image": "registry.connect.redhat.com/anchore/engine0@sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "name": "anchore_engine"
        },
        {
          "digest": "sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "image": "registry.redhat.io/rhel8/postgresql-96@sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "name": "anchore_postgresql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "615f92975ac6c12504901fde",
      "alm_examples": [
        {
          "api_version": "charts.anchore.io/v1alpha1",
          "kind": "AnchoreEngine",
          "metadata": {
            "name": "anchoreengine-sample"
          },
          "spec": {
            "anchoreGlobal": {
              "defaultAdminEmail": "example@email.com"
            },
            "postgresql": {
              "extraEnv": [
                {
                  "name": "POSTGRESQL_USER",
                  "value": "anchoreengine"
                },
                {
                  "name": "POSTGRESQL_PASSWORD",
                  "value": "anchore-postgres,123"
                },
                {
                  "name": "POSTGRESQL_DATABASE",
                  "value": "anchore"
                },
                {
                  "name": "PGUSER",
                  "value": "postgres"
                }
              ],
              "postgresDatabase": "anchore",
              "postgresPassword": "anchore-postgres,123",
              "postgresUser": "anchoreengine"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/anchore/engine-operator-bundle@sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "bundle_path_digest": "sha256:fbbe7e6c1d75c4de2f47e2c825c930568e85f1134545e9d890a0c9f3d9187a4d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T00:36:39.857000+00:00",
      "csv_description": "Anchore Engine is an open source software system that provides a centralized service for analyzing container images, \n scanning for security vulnerabilities, and enforcing deployment policies. Anchore Engine is provided as a Docker \n container image that can be run standalone or with an orchestration platform such as Kubernetes. Anchore Engine allows \n users to perform detailed analysis on their container images, run queries, produce reports, and define policies that \n can be used in CI/CD pipelines. Users can extend Anchore Engine with plugins that add new queries, image analysis, and \n policies. Anchore Engine can be accessed directly through a RESTful API or via the Anchore CLI.\n\n The Anchore Engine Operator is based on the official stable [Helm Chart](https://github.com/anchore/anchore-charts/tree/master/stable/anchore-engine).",
      "csv_display_name": "Anchore Engine Operator",
      "csv_metadata_description": "Anchore Engine - container image scanning service for policy-based security, best-practice and compliance enforcement.",
      "csv_name": "anchore-engine.v1.0.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:40:53.391000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "anchore-engine",
      "provided_apis": [
        {
          "group": "charts.anchore.io",
          "kind": "AnchoreEngine",
          "version": "v1alpha1"
        }
      ],
      "provider": "Anchore Inc.",
      "related_images": [
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "engine-operator-baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6-annotation"
        },
        {
          "digest": "sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "image": "registry.connect.redhat.com/anchore/engine-operator@sha256:baf0f5acd319bc4d0132c88922ee3f357fdcdc278d931f243d0cbec3f6d416c6",
          "name": "manager"
        },
        {
          "digest": "sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "image": "registry.connect.redhat.com/anchore/engine0@sha256:68e09d5ff695b46f24de3d7610f88dfc14b77b38758bbd68d03350dbae3deb0f",
          "name": "anchore_engine"
        },
        {
          "digest": "sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "image": "registry.redhat.io/rhel8/postgresql-96@sha256:e8177c5de05ccdd6d12e360b65c63c889b2de725d573ffdedd8914230b118639",
          "name": "anchore_postgresql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.1",
      "version_original": "1.0.1"
    },
    {
      "_id": "615f935f5ac6c12504901fe0",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "bundle_path_digest": "sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T00:39:59.918000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:01:53.078000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "operator-379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a-annotation"
        },
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.20.1",
      "version_original": "1.20.1"
    },
    {
      "_id": "615f951390fb938ecf600967",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "bundle_path_digest": "sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T00:47:15.738000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:47:40.384000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "operator-379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a-annotation"
        },
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.20.1",
      "version_original": "1.20.1"
    },
    {
      "_id": "615f998804fd1c67039dbc98",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "bundle_path_digest": "sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T01:06:16.178000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:40:08.824000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "operator-379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a-annotation"
        },
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.20.1",
      "version_original": "1.20.1"
    },
    {
      "_id": "615f9ab65cfcf7adc247abe7",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "bundle_path_digest": "sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T01:11:18.127000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:12:39.235000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "operator-379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a-annotation"
        },
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.20.1",
      "version_original": "1.20.1"
    },
    {
      "_id": "615f9ae404fd1c67039dbc99",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "bundle_path_digest": "sha256:e12119fa5cca31b75f9be94ea70e1980b7fe5da1783475a073ac7ade2fbb360b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T01:12:04.218000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:29:55.620000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "operator-379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a-annotation"
        },
        {
          "digest": "sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "image": "quay.io/tigera/operator@sha256:379efe0c2541e1080aae564eb0ebb697b0995fc447623c037a37b8bcfb3a4e9a",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.20.1",
      "version_original": "1.20.1"
    },
    {
      "_id": "615fc3f704fd1c67039dbcb1",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "bundle_path_digest": "sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T04:07:19.894000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:57:28.639000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "operator-078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98-annotation"
        },
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.20.2",
      "version_original": "1.20.2"
    },
    {
      "_id": "615fc42f5ac6c12504901fff",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "bundle_path_digest": "sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T04:08:15.199000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:34:55.885000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "operator-078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98-annotation"
        },
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.20.2",
      "version_original": "1.20.2"
    },
    {
      "_id": "615fc4855ac6c12504902000",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "bundle_path_digest": "sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T04:09:41.160000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:12:44.440000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "operator-078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98-annotation"
        },
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.20.2",
      "version_original": "1.20.2"
    },
    {
      "_id": "615fc49e90fb938ecf600979",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "bundle_path_digest": "sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T04:10:06.156000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:34:43.165000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "operator-078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98-annotation"
        },
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.20.2",
      "version_original": "1.20.2"
    },
    {
      "_id": "615fc5615ac6c12504902001",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "bundle_path_digest": "sha256:953d43c1d576ca70a0856d9f0cf8bd2a2e98e7fcb9e2fbff8cf5a214eae220aa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T04:13:21.933000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:24:26.011000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "operator-078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98-annotation"
        },
        {
          "digest": "sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "image": "quay.io/tigera/operator@sha256:078961af067649277ecfb6473a0ab9f098847b73821fd6b7fd87cc31cd733c98",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.20.2",
      "version_original": "1.20.2"
    },
    {
      "_id": "615fd8c95cfcf7adc247ac02",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "bundle_path_digest": "sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T05:36:09.333000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:47:08.589000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "operator-b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068-annotation"
        },
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.20.3",
      "version_original": "1.20.3"
    },
    {
      "_id": "615fd8f890fb938ecf600991",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "bundle_path_digest": "sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T05:36:56.847000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:32:02.712000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "operator-b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068-annotation"
        },
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.20.3",
      "version_original": "1.20.3"
    },
    {
      "_id": "615fd9c25ac6c12504902011",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "bundle_path_digest": "sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T05:40:18.862000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:57:33.798000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "operator-b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068-annotation"
        },
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.20.3",
      "version_original": "1.20.3"
    },
    {
      "_id": "615fd9c95cfcf7adc247ac05",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "bundle_path_digest": "sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T05:40:25.282000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:39:16.883000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "operator-b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068-annotation"
        },
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.20.3",
      "version_original": "1.20.3"
    },
    {
      "_id": "615fd9f85ac6c12504902012",
      "alm_examples": [
        {
          "api_version": "can.avanseus.com/v1alpha1",
          "kind": "CAN",
          "metadata": {
            "name": "can"
          },
          "spec": {
            "can": {
              "maxreplica": 4,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                }
              },
              "tomcatoptions": "export JAVA_OPTS=\"$JAVA_OPTS -Xms1024m -Xmx4096m -Dmail.smtp.ssl.protocols=TLSv1.2\""
            },
            "cas": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "imagepullpolicy": "Always",
            "ldap": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "memcached": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "500Mi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "500Mi"
                }
              }
            },
            "predictioncontroller": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "predictionworker": {
              "maxreplica": 3,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "serviceaccount": "avanseus",
            "vbi": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/can-avanseus/can@sha256:b820620865b4cac08e069406173e21bd95a881eadf9ba49253aa84ba286d1372",
      "bundle_path_digest": "sha256:b820620865b4cac08e069406173e21bd95a881eadf9ba49253aa84ba286d1372",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T05:41:12.464000+00:00",
      "csv_description": "# Overview\nThe Avanseus CAN operator deploys and manages the CAN (Cognitive assistant for networks)  predictive maintainence tool on any Kubernetes based cloud environment.\n\nAvanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens.  CAN operator bundles CAN, CAS, LDAP, VBI, Prediction controller & Prediction worker applications.\n\nSupporting links:\n- [CAN operator prerequisite & configuration](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_redhat_openshift_operator_installation.pdf): This is similar to the content mentioned from next section\n- [Password encryption](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_password_encryption.pdf):  Utility guide for encrypting password texts\n- [CAN user manual](https://avanseuscandev.com/releases/CAN/5.5/Release/CAN_5.5_User_Manual.pdf)\n- [CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n# Operator installation\nMentioned below are the pre-requisites & configuration steps to be followed to install the CAN operator.\n### Before you start\n\n - A MongoDB instance must be available to connect to from the pods. This is usually provided by the \nenterprise customer. If not, then this has to be installed separately.\n - An initial MongoDB data dump needs to be loaded in the database. Please contact [Avanseus \ndelivery](mailto:support@avanseus.com).\n - In case, LDAP is not provided by the customer, [Avanseus delivery](mailto:support@avanseus.com) team can be requested to\n provide a LDAP image which is essential for Web dashboard authentication.\n - Binary files of applications does not come as part of the operator. These need to be requested from [Avanseus delivery](mailto:support@avanseus.com) team.\n - Create a project, service account & configure that service account using the below commands\n   \n   ```sh\n   \n   oc new-project <PROJECT_OR_NAMESPACE>\n   \n   oc create sa avanseus\n   \n   oc adm policy add-scc-to-user anyuid system:serviceaccount:<PROJECT_OR_NAMESPACE>:avanseus\n   \n   ```\n   \n   Replace `<PROJECT_OR_NAMESPACE>` with relevant namespace where the configurations provided in the `Configuration prerequisites` section below will be done & also where the operator would be installed.\n   \n   \n\nAvanseus delivery team can be contacted  at <support@avanseus.com>.\nMentioned below are the prerequisite configurations required for installing CAN operator. \n## Third party software pre-requisites\nTable shown below, specifies the supported versions of the third party software or protocol.\n<table><tr><th>Compatible software/protocol</th><th>Supported version</th></tr><tr><td>MongoDB</td><td>v4.4.5</td></tr><tr><td>LDAP protocol</td><td>Version-3</td></tr><tr><td>Memcached</td><td>1.5</td></tr></table>\n\n### Third party software availability\n- ***MongoDB with initial data***\n\n  For the CAN application to come up successfully, it needs some initial data in MongoDB.\n  However if it is not available, then [Avanseus delivery](mailto:support@avanseus.com) team needs \n  to be contacted for an initial data dump that needs to be imported to a MongoDB schema. MongoDB \n  can either be within the Openshift platform or outside. This MongoDB schema must be accessible from the \n  CAN operator pods preferably on port 27017. \n  \n- ***LDAP with initial user data***\n\n  For the CAN application, authentication is made possible using LDAP. Usually customers provide an LDAP connection for integration. However, if LDAP is not made available by the customer, then a LDAP\npod comes as part of operator installation by default with one initial user. [Avanseus delivery](mailto:support@avanseus.com) team needs to be requested to get the user access details. \n  If customer provides LDAP, then it can be outside Openshift or within the cluster. The LDAP Host and port details must be configured in a ConfigMap.\n  \n- ***Memcached***\n\n  Memcached is used by CAN to cache small data for fast retrieval. This is also used for tomcat session replication. This application comes by default with the operator.\n\n\n## Configuration prerequisites\n\n### PersistentVolumeClaim to copy WAR files\nBy default, the CAN operator does not come with CAN binary. [Avanseus delivery](mailto:support@avanseus.com) team must be requested to obtain the WAR files. Before deploying, the binaries in need to be obtained and put into a PersistentVolume. Mentioned below is a method to do this.\n\nThese binaries are:\n\n\n - CAN.war\n - CAS.war\n - PredictionController.war\n - universal\n\n\nCreate a PersistentVolumeClaim \"tmp-data\". Mentioned below is an example configuration YAML\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: tmp-data\nspec:\n accessModes:\n - ReadWriteOnce\n resources:\n  requests:\n   storage: 1G\n\n```\nCreate a dummy application (Apache server) and mount the created PersistentVolumeClaim. Mentioned below is the YAML content\n```sh\napiVersion: v1\nkind: Pod\nmetadata:\n name: pod-httpd\n labels:\n  app: apache_webserver\nspec:\n containers:\n - name: cntr-httpd\n   image: httpd:latest\n   ports:\n   - containerPort: 80\n   volumeMounts:\n   - mountPath: /mnt\n     name: tmp-data\n volumes:\n - name: tmp-data\n   persistentVolumeClaim:\n    claimName: tmp-data\n\n```\nChange directory to the place where WAR files are available. Copy the WAR files provided by Avanseus into the mount point \"/mnt\" using the rsync command.\n```sh\noc rsync . pod-httpd:/mnt\n```\nOnce this is done, the dummy application pod can be stopped. Remember that \"tmp-data\" PersistentVolume must not be deleted as this is used by Operator components to pull the binaries.\n### PersistentVolumeClaim for CAN application\nCreate a PersistentVolumeClaim named \"candatapvc\" & \"canlogpvc\". This is needed for the CAN application to write files.  YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: candatapvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n---\n\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: canlogpvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n### PesistentVolumeClaim for LDAP application\nCreate a PersistentVolumeClaim named \"ldap-storage\". This is needed for LDAP module to store the user DB data in a persistent location. YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: ldap-storage\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n\n### Config Maps\nPods within the operator need configurations to startup the application. These configurations have to be stored in Config maps on Openshift platform.\nCAN operator comes with 5 applications which would run in 5 different pods:\n - CAN (Needs config map)\n - LDAP\n - VBI\n - Prediction controller (Needs config map)\n - Prediction worker\n\n### CAN config map (``canconfig``)\n\nMentioned below are the ConfigMap entries CAN application needs & hence create 3 files mentioned below:\n#### ``catalina.properties`` - Catalina file for tomcat:\n```sh\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageAccess unless the\n# corresponding RuntimePermission (\"accessClassInPackage.\"+package) has\n# been granted.\npackage.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageDefinition unless the\n# corresponding RuntimePermission (\"defineClassInPackage.\"+package) has\n# been granted.\n#\n# by default, no packages are restricted for definition, and none of\n# the class loaders supplied with the JDK call checkPackageDefinition.\n#\npackage.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,\\\norg.apache.jasper.,org.apache.naming.,org.apache.tomcat.\n\n\n#\n#\n# List of comma-separated paths defining the contents of the \"common\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank,the JVM system loader will be used as Catalina's \"common\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values are enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\ncommon.loader=\"${catalina.base}/lib\",\"${catalina.base}/lib/*.jar\",\"${catalina.home}/lib\",\"${catalina.home}/lib/*.jar\"\n\n\n#\n# List of comma-separated paths defining the contents of the \"server\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank, the \"common\" loader will be used as Catalina's \"server\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nserver.loader=\n\n\n#\n# List of comma-separated paths defining the contents of the \"shared\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,\n# the \"common\" loader will be used as Catalina's \"shared\" loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n# Please note that for single jars, e.g. bar.jar, you need the URL form\n# starting with file:.\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nshared.loader=\n\n\n# Default list of JAR files that should not be scanned using the JarScanner\n# functionality. This is typically used to scan JARs for configuration\n# information. JARs that do not contain such information may be excluded from\n# the scan to speed up the scanning process. This is the default list. JARs on\n# this list are excluded from all scans. The list must be a comma separated list\n# of JAR file names.\n# The list of JARs to skip may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\n# The JARs listed below include:\n# - Tomcat Bootstrap JARs\n# - Tomcat API JARs\n# - Catalina JARs\n# - Jasper JARs\n# - Tomcat JARs\n# - Common non-Tomcat JARs\n# - Test JARs (JUnit, Cobertura and dependencies)\ntomcat.util.scan.StandardJarScanFilter.jarsToSkip=\\\nannotations-api.jar,\\\nant-junit*.jar,\\\nant-launcher.jar,\\\nant.jar,\\\nasm-*.jar,\\\naspectj*.jar,\\\nbootstrap.jar,\\\ncatalina-ant.jar,\\\ncatalina-ha.jar,\\\ncatalina-jmx-remote.jar,\\\ncatalina-storeconfig.jar,\\\ncatalina-tribes.jar,\\\ncatalina-ws.jar,\\\ncatalina.jar,\\\ncglib-*.jar,\\\ncobertura-*.jar,\\\ncommons-beanutils*.jar,\\\ncommons-codec*.jar,\\\ncommons-collections*.jar,\\\ncommons-daemon.jar,\\\ncommons-dbcp*.jar,\\\ncommons-digester*.jar,\\\ncommons-fileupload*.jar,\\\ncommons-httpclient*.jar,\\\ncommons-io*.jar,\\\ncommons-lang*.jar,\\\ncommons-logging*.jar,\\\ncommons-math*.jar,\\\ncommons-pool*.jar,\\\ndom4j-*.jar,\\\neasymock-*.jar,\\\necj-*.jar,\\\nel-api.jar,\\\ngeronimo-spec-jaxrpc*.jar,\\\nh2*.jar,\\\nhamcrest-*.jar,\\\nhibernate*.jar,\\\nhttpclient*.jar,\\\nicu4j-*.jar,\\\njasper-el.jar,\\\njasper.jar,\\\njaspic-api.jar,\\\njaxb-*.jar,\\\njaxen-*.jar,\\\njdom-*.jar,\\\njetty-*.jar,\\\njmx-tools.jar,\\\njmx.jar,\\\njsp-api.jar,\\\njstl.jar,\\\njta*.jar,\\\njunit-*.jar,\\\njunit.jar,\\\nlog4j*.jar,\\\nmail*.jar,\\\nobjenesis-*.jar,\\\noraclepki.jar,\\\noro-*.jar,\\\nservlet-api-*.jar,\\\nservlet-api.jar,\\\nslf4j*.jar,\\\ntaglibs-standard-spec-*.jar,\\\ntagsoup-*.jar,\\\ntomcat-api.jar,\\\ntomcat-coyote.jar,\\\ntomcat-dbcp.jar,\\\ntomcat-i18n-*.jar,\\\ntomcat-jdbc.jar,\\\ntomcat-jni.jar,\\\ntomcat-juli-adapters.jar,\\\ntomcat-juli.jar,\\\ntomcat-util-scan.jar,\\\ntomcat-util.jar,\\\ntomcat-websocket.jar,\\\ntools.jar,\\\nwebsocket-api.jar,\\\nwsdl4j*.jar,\\\nxercesImpl.jar,\\\nxml-apis.jar,\\\nxmlParserAPIs-*.jar,\\\nxmlParserAPIs.jar,\\\nxom-*.jar\n\n\n# Default list of JAR files that should be scanned that overrides the default\n# jarsToSkip list above. This is typically used to include a specific JAR that\n# has been excluded by a broad file name pattern in the jarsToSkip list.\n# The list of JARs to scan may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\ntomcat.util.scan.StandardJarScanFilter.jarsToScan=\\\nlog4j-taglib*.jar,\\\nlog4j-web*.jar,\\\nlog4javascript*.jar,\\\nslf4j-taglib*.jar\n\n# String cache configuration.\ntomcat.util.buf.StringCache.byte.enabled=true\n#tomcat.util.buf.StringCache.char.enabled=true\n#tomcat.util.buf.StringCache.trainThreshold=500000\n#tomcat.util.buf.StringCache.cacheSize=5000\n\n\n# This system property is deprecated. Use the relaxedPathChars relaxedQueryChars\n# attributes of the Connector instead. These attributes permit a wider range of\n# characters to be configured as valid.\n# Allow for changes to HTTP request validation\n# WARNING: Using this option may expose the server to CVE-2016-6816\n#tomcat.util.http.parser.HttpParser.requestTargetAllow=|\nPASSWORD_KEY=<AVANSEUS_PASSWORD_KEY>    \n\n```\n#### ``config.properties`` - Application configuration\n```sh\n#Domain details\navanseus.app.cas.domain=cas-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\navanseus.app.can.domain=can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\n\n\navanseus.vbi.ip=vbi\navanseus.vbi.port=12001\n\n\n#Domain protocol\navanseus.protocol=https\n\n\n#Host details\navanseus.app.cas.host=canapp:2003\navanseus.app.can.host=canapp:2000\n\n\n#Memcached configuration\navanseus.memcached.url=memcached:11211\n\n\n#MongoDb configuration\navanseus.mongodb.ssl.enabled=<MONGODB_SSL_ENABLED>\navanseus.mongodb.validHostName=<MONGODB_VERIFY_HOST>\navanseus.mongodb.keystore.path=/data/workspace/pemfile/mongo.pkcs12\navanseus.mongodb.keystore.password=<MONGODB_KEYSTORE_PASSWORD>\navanseus.mongodb.ip=<MONGODB_IP_HOST>\navanseus.mongodb.port=<MONGODB_PORT>\navanseus.mongodb.username=<MONGODB_USERNAME>\navanseus.mongodb.password=<MONGODB_PASSWORD>\navanseus.mongodb.dbName=<MONGODB_SCHEMA_NAME>\n\n\navanseus.mongodb.admin.username=<MONGODB_ADMIN_USERNAME>\navanseus.mongodb.admin.password=<MONGODB_ADMIN_PASSWORD>\navanseus.mongodb.admin.dbName=<MONGODB_ADMIN_SCHEMA_NAME>\n\n\n#log configuration\navanseus.log.path=/data/workspace/logs/\navanseus.log.thread.poolsize=20\n\n\n#LDAP server configuration\navanseus.ldap.organisation=<LDAP_ORG>\navanseus.ldap.domain=<LDAP_DOMAIN>\navanseus.ldap.url1=ldap://<LDAP_URL1>:<LDAP_PORT1>\navanseus.ldap.url2=ldap://<LDAP_URL2>:<LDAP_PORT2>\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=<LDAP_PASSWORD>\n\n\navanseus.app.googleKey=<GOOGLE_MAP_KEY>\n#NAS path\navanseus.app.nas.path=/data/workspace/nasmount/\n\n\n#Email Config\navanseus.email.fromId=<EMAIL_FROM_ID>\navanseus.email.pwd=<EMAIL_PASSWORD>\navanseus.email.host=<EMAIL_SERVER>\navanseus.email.fromName=<EMAIL_SENDER_NAME>\navanseus.email.port=<EMAIL_PORT>\n\n\n#Cluster node configuration\navanseus.predictionNode.name=nodeA    \n```\n#### ``mongo.pkcs12`` - Use a valid key file if provided or create an empty file\n\nIn the above mentioned files, replace the text enclosed in `<>` with necessary information. Mentioned below are their details:\n\n - `<AVANSEUS_PASSWORD_KEY>` : Replace this with the password key to be used. Request the [Avanseus delivery](mailto:support@avanseus.com) team for this. This is very specific for a given DB dump.\n - `<NAMESPACE>` : Namespace where the operator and application would run.\n - `<ROUTER_DEFAULT_HOSTNAME>` : Replace this with the Openshift cluster default router hostname.\n - `<MONGODB_SSL_ENABLED>` : `true` when MongoDB is enabled with SSL. `false` otherwise.\n - `<MONGODB_VERIFY_HOST>` : `true` when MongoDB host name needs to be verified with SSL certificate. `false` otherwise.\n - `<MONGODB_KEYSTORE_PASSWORD>` : Encrypted password of MongoDB keystore. The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_IP>` : Replace this with MongoDB IP/Host which is reachable from the pods. \n - `<MONGODB_PORT>` : Replace this with MongoDB Port which is reachable from the pods.\n - `<MONGODB_USERNAME>` : Replace this with MongoDB schema read/write username.\n - `<MONGODB_PASSWORD>` : Replace this with above username's password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_SCHEMA_NAME>` : Replace this with DB schema name.\n - `<MONGODB_ADMIN_USERNAME>` : Replace this with MongoDB admin username\n - `<MONGODB_ADMIN_PASSWORD>` : Replace this with MongoDB admin password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_ADMIN_SCHEMA_NAME>` : Replace this with the MongoDB admin schema name.\n - `<GOOGLE_MAP_KEY>` : Google map key.\n - `<LDAP_URL1>` : Replace this with LDAP URL 1. LDAP IP reachable from pods.\n - `<LDAP_URL2>` : Replace this with LDAP URL 2. Same as above if the customer does not provide failover LDAP URL.\n - `<LDAP_PORT1>` : Replace this with LDAP Port 1. LDAP port reachable from pods.\n - `<LDAP_PORT2>` : Replace this with LDAP Port 2. Same as above if the customer does not provide failover LDAP instance.\n - `<LDAP_PASSWORD>` : Replace this with LDAP password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<LDAP_ORG>` : Replace this with LDAP organisation. Customers usually provide this or contact Avanseus support team for this.\n - `<LDAP_DOMAIN>` : Replace this with LDAP domain. Customers usually provide this or contact Avanseus support team for this.\n - `<EMAIL_FROM_ID>` : Replace this with Email ID of sender.\n - `<EMAIL_SENDER_NAME>` : Replace this with Email sender's name.\n - `<EMAIL_SERVER>` : Replace this with Email server host or domain.\n - `<EMAIL_PORT>` : Replace this with Email server port.\n - `<EMAIL_PASSWORD>` : Replace this with Email sender's password.\n\nThe last 5 entries must be filled up with relevant SMTP server or relay server information which is reachable from the Openshift cluster.\n\nIf you would use the Default LDAP server coming with the operator, then the LDAP configuration section can be as follows:\n```sh\n#LDAP server configuration\navanseus.ldap.organisation=employee\navanseus.ldap.domain=avanseus\navanseus.ldap.url1=ldap://ldap:1389\navanseus.ldap.url2=ldap://ldap:1389\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=r7qs0Kobh5s+q0Wtlj1JZbtkdqGxBdx/\n\n```\nFinally create the ConfigMap as follows:\n\n```sh\noc create configmap canconfig --from-file=catalina.properties --from-file=config.properties --from-file=mongo.pkcs12\n```\n### Prediction controller config map (``controllerconfig``)\nMentioned below is the ConfigMap entry Prediction controller application needs & hence create the file mentioned below:\n#### ``application.properties`` - Application configuration\n```sh\nserver.port=5052\nlogging.level.root = INFO\nspring.application.name=PredictionControllerApplication\npredictionworker.endpoint=http://avanseusworkernode:5050/PredictionWorker/\n#predictionworker.endpoint=http://localhost:5050/\n# Max file size.\nspring.servlet.multipart.max-file-size=40MB\n# Max request size.\nspring.servlet.multipart.max-request-size=50MB\n\n```\nFinally create the ConfigMap as follows:\n```sh\noc create configmap controllerconfig --from-file=application.properties\n```\n\n\n## Installation\nCAN Operator is available in the OperatorHub section. Mentioned below is a link to the video which shows how to install the CAN operator.\n\n[CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n## Post installation\nAfter installation, CAN application would be available on following URL:\n```sh\nhttps://can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>/CAN/\n```\nIf CAN tool was integrated with LDAP on customer premise, then the user credentials would be known. If CAN tool was integrated with Avanseus's default LDAP, then request the [Avanseus delivery](mailto:support@avanseus.com) team for credentials.\n",
      "csv_display_name": "can-operator",
      "csv_metadata_description": "Avanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens. CAN operator bundles CAN & VBI application.",
      "csv_name": "can-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:13:37.388000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "can-operator",
      "provided_apis": [
        {
          "group": "can.avanseus.com",
          "kind": "CAN",
          "version": "v1alpha1"
        }
      ],
      "provider": "Avanseus Holdings Pte. Ltd.",
      "related_images": [
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "can-operator-a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719-annotation"
        },
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "manager"
        },
        {
          "digest": "sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "image": "registry.connect.redhat.com/can-avanseus/vbi@sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "name": "vbi"
        },
        {
          "digest": "sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "image": "registry.connect.redhat.com/can-avanseus/ldap@sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "name": "ldap"
        },
        {
          "digest": "sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "image": "registry.connect.redhat.com/can-avanseus/canapp@sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "name": "can"
        },
        {
          "digest": "sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "image": "registry.connect.redhat.com/can-avanseus/casapp@sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "name": "cas"
        },
        {
          "digest": "sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "image": "registry.connect.redhat.com/can-avanseus/predictioncontroller@sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "name": "can_controller"
        },
        {
          "digest": "sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "image": "registry.connect.redhat.com/can-avanseus/predictionworker@sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "name": "can_worker"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "615fda305cfcf7adc247ac06",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "bundle_path_digest": "sha256:af132b6324918a5acfd1523acce674552d62035314bbb55f92ef11ea3081a09d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T05:42:08.076000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:12:51.520000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "operator-b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068-annotation"
        },
        {
          "digest": "sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "image": "quay.io/tigera/operator@sha256:b9c32848a367986af987793cef0ca7b656d235f689d57270027225f8a0dee068",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.3",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.20.3",
      "version_original": "1.20.3"
    },
    {
      "_id": "615fe15f04fd1c67039dbcc5",
      "alm_examples": [
        {
          "api_version": "can.avanseus.com/v1alpha1",
          "kind": "CAN",
          "metadata": {
            "name": "can"
          },
          "spec": {
            "can": {
              "maxreplica": 4,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                }
              },
              "tomcatoptions": "export JAVA_OPTS=\"$JAVA_OPTS -Xms1024m -Xmx4096m -Dmail.smtp.ssl.protocols=TLSv1.2\""
            },
            "cas": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "imagepullpolicy": "Always",
            "ldap": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "memcached": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "500Mi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "500Mi"
                }
              }
            },
            "predictioncontroller": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "predictionworker": {
              "maxreplica": 3,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "serviceaccount": "avanseus",
            "vbi": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/can-avanseus/can@sha256:b820620865b4cac08e069406173e21bd95a881eadf9ba49253aa84ba286d1372",
      "bundle_path_digest": "sha256:b820620865b4cac08e069406173e21bd95a881eadf9ba49253aa84ba286d1372",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T06:12:47.043000+00:00",
      "csv_description": "# Overview\nThe Avanseus CAN operator deploys and manages the CAN (Cognitive assistant for networks)  predictive maintainence tool on any Kubernetes based cloud environment.\n\nAvanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens.  CAN operator bundles CAN, CAS, LDAP, VBI, Prediction controller & Prediction worker applications.\n\nSupporting links:\n- [CAN operator prerequisite & configuration](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_redhat_openshift_operator_installation.pdf): This is similar to the content mentioned from next section\n- [Password encryption](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_password_encryption.pdf):  Utility guide for encrypting password texts\n- [CAN user manual](https://avanseuscandev.com/releases/CAN/5.5/Release/CAN_5.5_User_Manual.pdf)\n- [CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n# Operator installation\nMentioned below are the pre-requisites & configuration steps to be followed to install the CAN operator.\n### Before you start\n\n - A MongoDB instance must be available to connect to from the pods. This is usually provided by the \nenterprise customer. If not, then this has to be installed separately.\n - An initial MongoDB data dump needs to be loaded in the database. Please contact [Avanseus \ndelivery](mailto:support@avanseus.com).\n - In case, LDAP is not provided by the customer, [Avanseus delivery](mailto:support@avanseus.com) team can be requested to\n provide a LDAP image which is essential for Web dashboard authentication.\n - Binary files of applications does not come as part of the operator. These need to be requested from [Avanseus delivery](mailto:support@avanseus.com) team.\n - Create a project, service account & configure that service account using the below commands\n   \n   ```sh\n   \n   oc new-project <PROJECT_OR_NAMESPACE>\n   \n   oc create sa avanseus\n   \n   oc adm policy add-scc-to-user anyuid system:serviceaccount:<PROJECT_OR_NAMESPACE>:avanseus\n   \n   ```\n   \n   Replace `<PROJECT_OR_NAMESPACE>` with relevant namespace where the configurations provided in the `Configuration prerequisites` section below will be done & also where the operator would be installed.\n   \n   \n\nAvanseus delivery team can be contacted  at <support@avanseus.com>.\nMentioned below are the prerequisite configurations required for installing CAN operator. \n## Third party software pre-requisites\nTable shown below, specifies the supported versions of the third party software or protocol.\n<table><tr><th>Compatible software/protocol</th><th>Supported version</th></tr><tr><td>MongoDB</td><td>v4.4.5</td></tr><tr><td>LDAP protocol</td><td>Version-3</td></tr><tr><td>Memcached</td><td>1.5</td></tr></table>\n\n### Third party software availability\n- ***MongoDB with initial data***\n\n  For the CAN application to come up successfully, it needs some initial data in MongoDB.\n  However if it is not available, then [Avanseus delivery](mailto:support@avanseus.com) team needs \n  to be contacted for an initial data dump that needs to be imported to a MongoDB schema. MongoDB \n  can either be within the Openshift platform or outside. This MongoDB schema must be accessible from the \n  CAN operator pods preferably on port 27017. \n  \n- ***LDAP with initial user data***\n\n  For the CAN application, authentication is made possible using LDAP. Usually customers provide an LDAP connection for integration. However, if LDAP is not made available by the customer, then a LDAP\npod comes as part of operator installation by default with one initial user. [Avanseus delivery](mailto:support@avanseus.com) team needs to be requested to get the user access details. \n  If customer provides LDAP, then it can be outside Openshift or within the cluster. The LDAP Host and port details must be configured in a ConfigMap.\n  \n- ***Memcached***\n\n  Memcached is used by CAN to cache small data for fast retrieval. This is also used for tomcat session replication. This application comes by default with the operator.\n\n\n## Configuration prerequisites\n\n### PersistentVolumeClaim to copy WAR files\nBy default, the CAN operator does not come with CAN binary. [Avanseus delivery](mailto:support@avanseus.com) team must be requested to obtain the WAR files. Before deploying, the binaries in need to be obtained and put into a PersistentVolume. Mentioned below is a method to do this.\n\nThese binaries are:\n\n\n - CAN.war\n - CAS.war\n - PredictionController.war\n - universal\n\n\nCreate a PersistentVolumeClaim \"tmp-data\". Mentioned below is an example configuration YAML\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: tmp-data\nspec:\n accessModes:\n - ReadWriteOnce\n resources:\n  requests:\n   storage: 1G\n\n```\nCreate a dummy application (Apache server) and mount the created PersistentVolumeClaim. Mentioned below is the YAML content\n```sh\napiVersion: v1\nkind: Pod\nmetadata:\n name: pod-httpd\n labels:\n  app: apache_webserver\nspec:\n containers:\n - name: cntr-httpd\n   image: httpd:latest\n   ports:\n   - containerPort: 80\n   volumeMounts:\n   - mountPath: /mnt\n     name: tmp-data\n volumes:\n - name: tmp-data\n   persistentVolumeClaim:\n    claimName: tmp-data\n\n```\nChange directory to the place where WAR files are available. Copy the WAR files provided by Avanseus into the mount point \"/mnt\" using the rsync command.\n```sh\noc rsync . pod-httpd:/mnt\n```\nOnce this is done, the dummy application pod can be stopped. Remember that \"tmp-data\" PersistentVolume must not be deleted as this is used by Operator components to pull the binaries.\n### PersistentVolumeClaim for CAN application\nCreate a PersistentVolumeClaim named \"candatapvc\" & \"canlogpvc\". This is needed for the CAN application to write files.  YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: candatapvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n---\n\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: canlogpvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n### PesistentVolumeClaim for LDAP application\nCreate a PersistentVolumeClaim named \"ldap-storage\". This is needed for LDAP module to store the user DB data in a persistent location. YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: ldap-storage\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n\n### Config Maps\nPods within the operator need configurations to startup the application. These configurations have to be stored in Config maps on Openshift platform.\nCAN operator comes with 5 applications which would run in 5 different pods:\n - CAN (Needs config map)\n - LDAP\n - VBI\n - Prediction controller (Needs config map)\n - Prediction worker\n\n### CAN config map (``canconfig``)\n\nMentioned below are the ConfigMap entries CAN application needs & hence create 3 files mentioned below:\n#### ``catalina.properties`` - Catalina file for tomcat:\n```sh\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageAccess unless the\n# corresponding RuntimePermission (\"accessClassInPackage.\"+package) has\n# been granted.\npackage.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageDefinition unless the\n# corresponding RuntimePermission (\"defineClassInPackage.\"+package) has\n# been granted.\n#\n# by default, no packages are restricted for definition, and none of\n# the class loaders supplied with the JDK call checkPackageDefinition.\n#\npackage.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,\\\norg.apache.jasper.,org.apache.naming.,org.apache.tomcat.\n\n\n#\n#\n# List of comma-separated paths defining the contents of the \"common\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank,the JVM system loader will be used as Catalina's \"common\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values are enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\ncommon.loader=\"${catalina.base}/lib\",\"${catalina.base}/lib/*.jar\",\"${catalina.home}/lib\",\"${catalina.home}/lib/*.jar\"\n\n\n#\n# List of comma-separated paths defining the contents of the \"server\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank, the \"common\" loader will be used as Catalina's \"server\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nserver.loader=\n\n\n#\n# List of comma-separated paths defining the contents of the \"shared\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,\n# the \"common\" loader will be used as Catalina's \"shared\" loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n# Please note that for single jars, e.g. bar.jar, you need the URL form\n# starting with file:.\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nshared.loader=\n\n\n# Default list of JAR files that should not be scanned using the JarScanner\n# functionality. This is typically used to scan JARs for configuration\n# information. JARs that do not contain such information may be excluded from\n# the scan to speed up the scanning process. This is the default list. JARs on\n# this list are excluded from all scans. The list must be a comma separated list\n# of JAR file names.\n# The list of JARs to skip may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\n# The JARs listed below include:\n# - Tomcat Bootstrap JARs\n# - Tomcat API JARs\n# - Catalina JARs\n# - Jasper JARs\n# - Tomcat JARs\n# - Common non-Tomcat JARs\n# - Test JARs (JUnit, Cobertura and dependencies)\ntomcat.util.scan.StandardJarScanFilter.jarsToSkip=\\\nannotations-api.jar,\\\nant-junit*.jar,\\\nant-launcher.jar,\\\nant.jar,\\\nasm-*.jar,\\\naspectj*.jar,\\\nbootstrap.jar,\\\ncatalina-ant.jar,\\\ncatalina-ha.jar,\\\ncatalina-jmx-remote.jar,\\\ncatalina-storeconfig.jar,\\\ncatalina-tribes.jar,\\\ncatalina-ws.jar,\\\ncatalina.jar,\\\ncglib-*.jar,\\\ncobertura-*.jar,\\\ncommons-beanutils*.jar,\\\ncommons-codec*.jar,\\\ncommons-collections*.jar,\\\ncommons-daemon.jar,\\\ncommons-dbcp*.jar,\\\ncommons-digester*.jar,\\\ncommons-fileupload*.jar,\\\ncommons-httpclient*.jar,\\\ncommons-io*.jar,\\\ncommons-lang*.jar,\\\ncommons-logging*.jar,\\\ncommons-math*.jar,\\\ncommons-pool*.jar,\\\ndom4j-*.jar,\\\neasymock-*.jar,\\\necj-*.jar,\\\nel-api.jar,\\\ngeronimo-spec-jaxrpc*.jar,\\\nh2*.jar,\\\nhamcrest-*.jar,\\\nhibernate*.jar,\\\nhttpclient*.jar,\\\nicu4j-*.jar,\\\njasper-el.jar,\\\njasper.jar,\\\njaspic-api.jar,\\\njaxb-*.jar,\\\njaxen-*.jar,\\\njdom-*.jar,\\\njetty-*.jar,\\\njmx-tools.jar,\\\njmx.jar,\\\njsp-api.jar,\\\njstl.jar,\\\njta*.jar,\\\njunit-*.jar,\\\njunit.jar,\\\nlog4j*.jar,\\\nmail*.jar,\\\nobjenesis-*.jar,\\\noraclepki.jar,\\\noro-*.jar,\\\nservlet-api-*.jar,\\\nservlet-api.jar,\\\nslf4j*.jar,\\\ntaglibs-standard-spec-*.jar,\\\ntagsoup-*.jar,\\\ntomcat-api.jar,\\\ntomcat-coyote.jar,\\\ntomcat-dbcp.jar,\\\ntomcat-i18n-*.jar,\\\ntomcat-jdbc.jar,\\\ntomcat-jni.jar,\\\ntomcat-juli-adapters.jar,\\\ntomcat-juli.jar,\\\ntomcat-util-scan.jar,\\\ntomcat-util.jar,\\\ntomcat-websocket.jar,\\\ntools.jar,\\\nwebsocket-api.jar,\\\nwsdl4j*.jar,\\\nxercesImpl.jar,\\\nxml-apis.jar,\\\nxmlParserAPIs-*.jar,\\\nxmlParserAPIs.jar,\\\nxom-*.jar\n\n\n# Default list of JAR files that should be scanned that overrides the default\n# jarsToSkip list above. This is typically used to include a specific JAR that\n# has been excluded by a broad file name pattern in the jarsToSkip list.\n# The list of JARs to scan may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\ntomcat.util.scan.StandardJarScanFilter.jarsToScan=\\\nlog4j-taglib*.jar,\\\nlog4j-web*.jar,\\\nlog4javascript*.jar,\\\nslf4j-taglib*.jar\n\n# String cache configuration.\ntomcat.util.buf.StringCache.byte.enabled=true\n#tomcat.util.buf.StringCache.char.enabled=true\n#tomcat.util.buf.StringCache.trainThreshold=500000\n#tomcat.util.buf.StringCache.cacheSize=5000\n\n\n# This system property is deprecated. Use the relaxedPathChars relaxedQueryChars\n# attributes of the Connector instead. These attributes permit a wider range of\n# characters to be configured as valid.\n# Allow for changes to HTTP request validation\n# WARNING: Using this option may expose the server to CVE-2016-6816\n#tomcat.util.http.parser.HttpParser.requestTargetAllow=|\nPASSWORD_KEY=<AVANSEUS_PASSWORD_KEY>    \n\n```\n#### ``config.properties`` - Application configuration\n```sh\n#Domain details\navanseus.app.cas.domain=cas-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\navanseus.app.can.domain=can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\n\n\navanseus.vbi.ip=vbi\navanseus.vbi.port=12001\n\n\n#Domain protocol\navanseus.protocol=https\n\n\n#Host details\navanseus.app.cas.host=canapp:2003\navanseus.app.can.host=canapp:2000\n\n\n#Memcached configuration\navanseus.memcached.url=memcached:11211\n\n\n#MongoDb configuration\navanseus.mongodb.ssl.enabled=<MONGODB_SSL_ENABLED>\navanseus.mongodb.validHostName=<MONGODB_VERIFY_HOST>\navanseus.mongodb.keystore.path=/data/workspace/pemfile/mongo.pkcs12\navanseus.mongodb.keystore.password=<MONGODB_KEYSTORE_PASSWORD>\navanseus.mongodb.ip=<MONGODB_IP_HOST>\navanseus.mongodb.port=<MONGODB_PORT>\navanseus.mongodb.username=<MONGODB_USERNAME>\navanseus.mongodb.password=<MONGODB_PASSWORD>\navanseus.mongodb.dbName=<MONGODB_SCHEMA_NAME>\n\n\navanseus.mongodb.admin.username=<MONGODB_ADMIN_USERNAME>\navanseus.mongodb.admin.password=<MONGODB_ADMIN_PASSWORD>\navanseus.mongodb.admin.dbName=<MONGODB_ADMIN_SCHEMA_NAME>\n\n\n#log configuration\navanseus.log.path=/data/workspace/logs/\navanseus.log.thread.poolsize=20\n\n\n#LDAP server configuration\navanseus.ldap.organisation=<LDAP_ORG>\navanseus.ldap.domain=<LDAP_DOMAIN>\navanseus.ldap.url1=ldap://<LDAP_URL1>:<LDAP_PORT1>\navanseus.ldap.url2=ldap://<LDAP_URL2>:<LDAP_PORT2>\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=<LDAP_PASSWORD>\n\n\navanseus.app.googleKey=<GOOGLE_MAP_KEY>\n#NAS path\navanseus.app.nas.path=/data/workspace/nasmount/\n\n\n#Email Config\navanseus.email.fromId=<EMAIL_FROM_ID>\navanseus.email.pwd=<EMAIL_PASSWORD>\navanseus.email.host=<EMAIL_SERVER>\navanseus.email.fromName=<EMAIL_SENDER_NAME>\navanseus.email.port=<EMAIL_PORT>\n\n\n#Cluster node configuration\navanseus.predictionNode.name=nodeA    \n```\n#### ``mongo.pkcs12`` - Use a valid key file if provided or create an empty file\n\nIn the above mentioned files, replace the text enclosed in `<>` with necessary information. Mentioned below are their details:\n\n - `<AVANSEUS_PASSWORD_KEY>` : Replace this with the password key to be used. Request the [Avanseus delivery](mailto:support@avanseus.com) team for this. This is very specific for a given DB dump.\n - `<NAMESPACE>` : Namespace where the operator and application would run.\n - `<ROUTER_DEFAULT_HOSTNAME>` : Replace this with the Openshift cluster default router hostname.\n - `<MONGODB_SSL_ENABLED>` : `true` when MongoDB is enabled with SSL. `false` otherwise.\n - `<MONGODB_VERIFY_HOST>` : `true` when MongoDB host name needs to be verified with SSL certificate. `false` otherwise.\n - `<MONGODB_KEYSTORE_PASSWORD>` : Encrypted password of MongoDB keystore. The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_IP>` : Replace this with MongoDB IP/Host which is reachable from the pods. \n - `<MONGODB_PORT>` : Replace this with MongoDB Port which is reachable from the pods.\n - `<MONGODB_USERNAME>` : Replace this with MongoDB schema read/write username.\n - `<MONGODB_PASSWORD>` : Replace this with above username's password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_SCHEMA_NAME>` : Replace this with DB schema name.\n - `<MONGODB_ADMIN_USERNAME>` : Replace this with MongoDB admin username\n - `<MONGODB_ADMIN_PASSWORD>` : Replace this with MongoDB admin password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_ADMIN_SCHEMA_NAME>` : Replace this with the MongoDB admin schema name.\n - `<GOOGLE_MAP_KEY>` : Google map key.\n - `<LDAP_URL1>` : Replace this with LDAP URL 1. LDAP IP reachable from pods.\n - `<LDAP_URL2>` : Replace this with LDAP URL 2. Same as above if the customer does not provide failover LDAP URL.\n - `<LDAP_PORT1>` : Replace this with LDAP Port 1. LDAP port reachable from pods.\n - `<LDAP_PORT2>` : Replace this with LDAP Port 2. Same as above if the customer does not provide failover LDAP instance.\n - `<LDAP_PASSWORD>` : Replace this with LDAP password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<LDAP_ORG>` : Replace this with LDAP organisation. Customers usually provide this or contact Avanseus support team for this.\n - `<LDAP_DOMAIN>` : Replace this with LDAP domain. Customers usually provide this or contact Avanseus support team for this.\n - `<EMAIL_FROM_ID>` : Replace this with Email ID of sender.\n - `<EMAIL_SENDER_NAME>` : Replace this with Email sender's name.\n - `<EMAIL_SERVER>` : Replace this with Email server host or domain.\n - `<EMAIL_PORT>` : Replace this with Email server port.\n - `<EMAIL_PASSWORD>` : Replace this with Email sender's password.\n\nThe last 5 entries must be filled up with relevant SMTP server or relay server information which is reachable from the Openshift cluster.\n\nIf you would use the Default LDAP server coming with the operator, then the LDAP configuration section can be as follows:\n```sh\n#LDAP server configuration\navanseus.ldap.organisation=employee\navanseus.ldap.domain=avanseus\navanseus.ldap.url1=ldap://ldap:1389\navanseus.ldap.url2=ldap://ldap:1389\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=r7qs0Kobh5s+q0Wtlj1JZbtkdqGxBdx/\n\n```\nFinally create the ConfigMap as follows:\n\n```sh\noc create configmap canconfig --from-file=catalina.properties --from-file=config.properties --from-file=mongo.pkcs12\n```\n### Prediction controller config map (``controllerconfig``)\nMentioned below is the ConfigMap entry Prediction controller application needs & hence create the file mentioned below:\n#### ``application.properties`` - Application configuration\n```sh\nserver.port=5052\nlogging.level.root = INFO\nspring.application.name=PredictionControllerApplication\npredictionworker.endpoint=http://avanseusworkernode:5050/PredictionWorker/\n#predictionworker.endpoint=http://localhost:5050/\n# Max file size.\nspring.servlet.multipart.max-file-size=40MB\n# Max request size.\nspring.servlet.multipart.max-request-size=50MB\n\n```\nFinally create the ConfigMap as follows:\n```sh\noc create configmap controllerconfig --from-file=application.properties\n```\n\n\n## Installation\nCAN Operator is available in the OperatorHub section. Mentioned below is a link to the video which shows how to install the CAN operator.\n\n[CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n## Post installation\nAfter installation, CAN application would be available on following URL:\n```sh\nhttps://can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>/CAN/\n```\nIf CAN tool was integrated with LDAP on customer premise, then the user credentials would be known. If CAN tool was integrated with Avanseus's default LDAP, then request the [Avanseus delivery](mailto:support@avanseus.com) team for credentials.\n",
      "csv_display_name": "can-operator",
      "csv_metadata_description": "Avanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens. CAN operator bundles CAN & VBI application.",
      "csv_name": "can-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:55:31.318000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "can-operator",
      "provided_apis": [
        {
          "group": "can.avanseus.com",
          "kind": "CAN",
          "version": "v1alpha1"
        }
      ],
      "provider": "Avanseus Holdings Pte. Ltd.",
      "related_images": [
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "can-operator-a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719-annotation"
        },
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "manager"
        },
        {
          "digest": "sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "image": "registry.connect.redhat.com/can-avanseus/vbi@sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "name": "vbi"
        },
        {
          "digest": "sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "image": "registry.connect.redhat.com/can-avanseus/ldap@sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "name": "ldap"
        },
        {
          "digest": "sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "image": "registry.connect.redhat.com/can-avanseus/canapp@sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "name": "can"
        },
        {
          "digest": "sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "image": "registry.connect.redhat.com/can-avanseus/casapp@sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "name": "cas"
        },
        {
          "digest": "sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "image": "registry.connect.redhat.com/can-avanseus/predictioncontroller@sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "name": "can_controller"
        },
        {
          "digest": "sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "image": "registry.connect.redhat.com/can-avanseus/predictionworker@sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "name": "can_worker"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "615fe19d5cfcf7adc247ac07",
      "alm_examples": [
        {
          "api_version": "can.avanseus.com/v1alpha1",
          "kind": "CAN",
          "metadata": {
            "name": "can"
          },
          "spec": {
            "can": {
              "maxreplica": 4,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                }
              },
              "tomcatoptions": "export JAVA_OPTS=\"$JAVA_OPTS -Xms1024m -Xmx4096m -Dmail.smtp.ssl.protocols=TLSv1.2\""
            },
            "cas": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "imagepullpolicy": "Always",
            "ldap": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "memcached": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "500Mi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "500Mi"
                }
              }
            },
            "predictioncontroller": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "predictionworker": {
              "maxreplica": 3,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "serviceaccount": "avanseus",
            "vbi": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/can-avanseus/can@sha256:b820620865b4cac08e069406173e21bd95a881eadf9ba49253aa84ba286d1372",
      "bundle_path_digest": "sha256:b820620865b4cac08e069406173e21bd95a881eadf9ba49253aa84ba286d1372",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T06:13:49.482000+00:00",
      "csv_description": "# Overview\nThe Avanseus CAN operator deploys and manages the CAN (Cognitive assistant for networks)  predictive maintainence tool on any Kubernetes based cloud environment.\n\nAvanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens.  CAN operator bundles CAN, CAS, LDAP, VBI, Prediction controller & Prediction worker applications.\n\nSupporting links:\n- [CAN operator prerequisite & configuration](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_redhat_openshift_operator_installation.pdf): This is similar to the content mentioned from next section\n- [Password encryption](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_password_encryption.pdf):  Utility guide for encrypting password texts\n- [CAN user manual](https://avanseuscandev.com/releases/CAN/5.5/Release/CAN_5.5_User_Manual.pdf)\n- [CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n# Operator installation\nMentioned below are the pre-requisites & configuration steps to be followed to install the CAN operator.\n### Before you start\n\n - A MongoDB instance must be available to connect to from the pods. This is usually provided by the \nenterprise customer. If not, then this has to be installed separately.\n - An initial MongoDB data dump needs to be loaded in the database. Please contact [Avanseus \ndelivery](mailto:support@avanseus.com).\n - In case, LDAP is not provided by the customer, [Avanseus delivery](mailto:support@avanseus.com) team can be requested to\n provide a LDAP image which is essential for Web dashboard authentication.\n - Binary files of applications does not come as part of the operator. These need to be requested from [Avanseus delivery](mailto:support@avanseus.com) team.\n - Create a project, service account & configure that service account using the below commands\n   \n   ```sh\n   \n   oc new-project <PROJECT_OR_NAMESPACE>\n   \n   oc create sa avanseus\n   \n   oc adm policy add-scc-to-user anyuid system:serviceaccount:<PROJECT_OR_NAMESPACE>:avanseus\n   \n   ```\n   \n   Replace `<PROJECT_OR_NAMESPACE>` with relevant namespace where the configurations provided in the `Configuration prerequisites` section below will be done & also where the operator would be installed.\n   \n   \n\nAvanseus delivery team can be contacted  at <support@avanseus.com>.\nMentioned below are the prerequisite configurations required for installing CAN operator. \n## Third party software pre-requisites\nTable shown below, specifies the supported versions of the third party software or protocol.\n<table><tr><th>Compatible software/protocol</th><th>Supported version</th></tr><tr><td>MongoDB</td><td>v4.4.5</td></tr><tr><td>LDAP protocol</td><td>Version-3</td></tr><tr><td>Memcached</td><td>1.5</td></tr></table>\n\n### Third party software availability\n- ***MongoDB with initial data***\n\n  For the CAN application to come up successfully, it needs some initial data in MongoDB.\n  However if it is not available, then [Avanseus delivery](mailto:support@avanseus.com) team needs \n  to be contacted for an initial data dump that needs to be imported to a MongoDB schema. MongoDB \n  can either be within the Openshift platform or outside. This MongoDB schema must be accessible from the \n  CAN operator pods preferably on port 27017. \n  \n- ***LDAP with initial user data***\n\n  For the CAN application, authentication is made possible using LDAP. Usually customers provide an LDAP connection for integration. However, if LDAP is not made available by the customer, then a LDAP\npod comes as part of operator installation by default with one initial user. [Avanseus delivery](mailto:support@avanseus.com) team needs to be requested to get the user access details. \n  If customer provides LDAP, then it can be outside Openshift or within the cluster. The LDAP Host and port details must be configured in a ConfigMap.\n  \n- ***Memcached***\n\n  Memcached is used by CAN to cache small data for fast retrieval. This is also used for tomcat session replication. This application comes by default with the operator.\n\n\n## Configuration prerequisites\n\n### PersistentVolumeClaim to copy WAR files\nBy default, the CAN operator does not come with CAN binary. [Avanseus delivery](mailto:support@avanseus.com) team must be requested to obtain the WAR files. Before deploying, the binaries in need to be obtained and put into a PersistentVolume. Mentioned below is a method to do this.\n\nThese binaries are:\n\n\n - CAN.war\n - CAS.war\n - PredictionController.war\n - universal\n\n\nCreate a PersistentVolumeClaim \"tmp-data\". Mentioned below is an example configuration YAML\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: tmp-data\nspec:\n accessModes:\n - ReadWriteOnce\n resources:\n  requests:\n   storage: 1G\n\n```\nCreate a dummy application (Apache server) and mount the created PersistentVolumeClaim. Mentioned below is the YAML content\n```sh\napiVersion: v1\nkind: Pod\nmetadata:\n name: pod-httpd\n labels:\n  app: apache_webserver\nspec:\n containers:\n - name: cntr-httpd\n   image: httpd:latest\n   ports:\n   - containerPort: 80\n   volumeMounts:\n   - mountPath: /mnt\n     name: tmp-data\n volumes:\n - name: tmp-data\n   persistentVolumeClaim:\n    claimName: tmp-data\n\n```\nChange directory to the place where WAR files are available. Copy the WAR files provided by Avanseus into the mount point \"/mnt\" using the rsync command.\n```sh\noc rsync . pod-httpd:/mnt\n```\nOnce this is done, the dummy application pod can be stopped. Remember that \"tmp-data\" PersistentVolume must not be deleted as this is used by Operator components to pull the binaries.\n### PersistentVolumeClaim for CAN application\nCreate a PersistentVolumeClaim named \"candatapvc\" & \"canlogpvc\". This is needed for the CAN application to write files.  YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: candatapvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n---\n\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: canlogpvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n### PesistentVolumeClaim for LDAP application\nCreate a PersistentVolumeClaim named \"ldap-storage\". This is needed for LDAP module to store the user DB data in a persistent location. YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: ldap-storage\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n\n### Config Maps\nPods within the operator need configurations to startup the application. These configurations have to be stored in Config maps on Openshift platform.\nCAN operator comes with 5 applications which would run in 5 different pods:\n - CAN (Needs config map)\n - LDAP\n - VBI\n - Prediction controller (Needs config map)\n - Prediction worker\n\n### CAN config map (``canconfig``)\n\nMentioned below are the ConfigMap entries CAN application needs & hence create 3 files mentioned below:\n#### ``catalina.properties`` - Catalina file for tomcat:\n```sh\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageAccess unless the\n# corresponding RuntimePermission (\"accessClassInPackage.\"+package) has\n# been granted.\npackage.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageDefinition unless the\n# corresponding RuntimePermission (\"defineClassInPackage.\"+package) has\n# been granted.\n#\n# by default, no packages are restricted for definition, and none of\n# the class loaders supplied with the JDK call checkPackageDefinition.\n#\npackage.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,\\\norg.apache.jasper.,org.apache.naming.,org.apache.tomcat.\n\n\n#\n#\n# List of comma-separated paths defining the contents of the \"common\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank,the JVM system loader will be used as Catalina's \"common\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values are enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\ncommon.loader=\"${catalina.base}/lib\",\"${catalina.base}/lib/*.jar\",\"${catalina.home}/lib\",\"${catalina.home}/lib/*.jar\"\n\n\n#\n# List of comma-separated paths defining the contents of the \"server\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank, the \"common\" loader will be used as Catalina's \"server\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nserver.loader=\n\n\n#\n# List of comma-separated paths defining the contents of the \"shared\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,\n# the \"common\" loader will be used as Catalina's \"shared\" loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n# Please note that for single jars, e.g. bar.jar, you need the URL form\n# starting with file:.\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nshared.loader=\n\n\n# Default list of JAR files that should not be scanned using the JarScanner\n# functionality. This is typically used to scan JARs for configuration\n# information. JARs that do not contain such information may be excluded from\n# the scan to speed up the scanning process. This is the default list. JARs on\n# this list are excluded from all scans. The list must be a comma separated list\n# of JAR file names.\n# The list of JARs to skip may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\n# The JARs listed below include:\n# - Tomcat Bootstrap JARs\n# - Tomcat API JARs\n# - Catalina JARs\n# - Jasper JARs\n# - Tomcat JARs\n# - Common non-Tomcat JARs\n# - Test JARs (JUnit, Cobertura and dependencies)\ntomcat.util.scan.StandardJarScanFilter.jarsToSkip=\\\nannotations-api.jar,\\\nant-junit*.jar,\\\nant-launcher.jar,\\\nant.jar,\\\nasm-*.jar,\\\naspectj*.jar,\\\nbootstrap.jar,\\\ncatalina-ant.jar,\\\ncatalina-ha.jar,\\\ncatalina-jmx-remote.jar,\\\ncatalina-storeconfig.jar,\\\ncatalina-tribes.jar,\\\ncatalina-ws.jar,\\\ncatalina.jar,\\\ncglib-*.jar,\\\ncobertura-*.jar,\\\ncommons-beanutils*.jar,\\\ncommons-codec*.jar,\\\ncommons-collections*.jar,\\\ncommons-daemon.jar,\\\ncommons-dbcp*.jar,\\\ncommons-digester*.jar,\\\ncommons-fileupload*.jar,\\\ncommons-httpclient*.jar,\\\ncommons-io*.jar,\\\ncommons-lang*.jar,\\\ncommons-logging*.jar,\\\ncommons-math*.jar,\\\ncommons-pool*.jar,\\\ndom4j-*.jar,\\\neasymock-*.jar,\\\necj-*.jar,\\\nel-api.jar,\\\ngeronimo-spec-jaxrpc*.jar,\\\nh2*.jar,\\\nhamcrest-*.jar,\\\nhibernate*.jar,\\\nhttpclient*.jar,\\\nicu4j-*.jar,\\\njasper-el.jar,\\\njasper.jar,\\\njaspic-api.jar,\\\njaxb-*.jar,\\\njaxen-*.jar,\\\njdom-*.jar,\\\njetty-*.jar,\\\njmx-tools.jar,\\\njmx.jar,\\\njsp-api.jar,\\\njstl.jar,\\\njta*.jar,\\\njunit-*.jar,\\\njunit.jar,\\\nlog4j*.jar,\\\nmail*.jar,\\\nobjenesis-*.jar,\\\noraclepki.jar,\\\noro-*.jar,\\\nservlet-api-*.jar,\\\nservlet-api.jar,\\\nslf4j*.jar,\\\ntaglibs-standard-spec-*.jar,\\\ntagsoup-*.jar,\\\ntomcat-api.jar,\\\ntomcat-coyote.jar,\\\ntomcat-dbcp.jar,\\\ntomcat-i18n-*.jar,\\\ntomcat-jdbc.jar,\\\ntomcat-jni.jar,\\\ntomcat-juli-adapters.jar,\\\ntomcat-juli.jar,\\\ntomcat-util-scan.jar,\\\ntomcat-util.jar,\\\ntomcat-websocket.jar,\\\ntools.jar,\\\nwebsocket-api.jar,\\\nwsdl4j*.jar,\\\nxercesImpl.jar,\\\nxml-apis.jar,\\\nxmlParserAPIs-*.jar,\\\nxmlParserAPIs.jar,\\\nxom-*.jar\n\n\n# Default list of JAR files that should be scanned that overrides the default\n# jarsToSkip list above. This is typically used to include a specific JAR that\n# has been excluded by a broad file name pattern in the jarsToSkip list.\n# The list of JARs to scan may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\ntomcat.util.scan.StandardJarScanFilter.jarsToScan=\\\nlog4j-taglib*.jar,\\\nlog4j-web*.jar,\\\nlog4javascript*.jar,\\\nslf4j-taglib*.jar\n\n# String cache configuration.\ntomcat.util.buf.StringCache.byte.enabled=true\n#tomcat.util.buf.StringCache.char.enabled=true\n#tomcat.util.buf.StringCache.trainThreshold=500000\n#tomcat.util.buf.StringCache.cacheSize=5000\n\n\n# This system property is deprecated. Use the relaxedPathChars relaxedQueryChars\n# attributes of the Connector instead. These attributes permit a wider range of\n# characters to be configured as valid.\n# Allow for changes to HTTP request validation\n# WARNING: Using this option may expose the server to CVE-2016-6816\n#tomcat.util.http.parser.HttpParser.requestTargetAllow=|\nPASSWORD_KEY=<AVANSEUS_PASSWORD_KEY>    \n\n```\n#### ``config.properties`` - Application configuration\n```sh\n#Domain details\navanseus.app.cas.domain=cas-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\navanseus.app.can.domain=can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\n\n\navanseus.vbi.ip=vbi\navanseus.vbi.port=12001\n\n\n#Domain protocol\navanseus.protocol=https\n\n\n#Host details\navanseus.app.cas.host=canapp:2003\navanseus.app.can.host=canapp:2000\n\n\n#Memcached configuration\navanseus.memcached.url=memcached:11211\n\n\n#MongoDb configuration\navanseus.mongodb.ssl.enabled=<MONGODB_SSL_ENABLED>\navanseus.mongodb.validHostName=<MONGODB_VERIFY_HOST>\navanseus.mongodb.keystore.path=/data/workspace/pemfile/mongo.pkcs12\navanseus.mongodb.keystore.password=<MONGODB_KEYSTORE_PASSWORD>\navanseus.mongodb.ip=<MONGODB_IP_HOST>\navanseus.mongodb.port=<MONGODB_PORT>\navanseus.mongodb.username=<MONGODB_USERNAME>\navanseus.mongodb.password=<MONGODB_PASSWORD>\navanseus.mongodb.dbName=<MONGODB_SCHEMA_NAME>\n\n\navanseus.mongodb.admin.username=<MONGODB_ADMIN_USERNAME>\navanseus.mongodb.admin.password=<MONGODB_ADMIN_PASSWORD>\navanseus.mongodb.admin.dbName=<MONGODB_ADMIN_SCHEMA_NAME>\n\n\n#log configuration\navanseus.log.path=/data/workspace/logs/\navanseus.log.thread.poolsize=20\n\n\n#LDAP server configuration\navanseus.ldap.organisation=<LDAP_ORG>\navanseus.ldap.domain=<LDAP_DOMAIN>\navanseus.ldap.url1=ldap://<LDAP_URL1>:<LDAP_PORT1>\navanseus.ldap.url2=ldap://<LDAP_URL2>:<LDAP_PORT2>\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=<LDAP_PASSWORD>\n\n\navanseus.app.googleKey=<GOOGLE_MAP_KEY>\n#NAS path\navanseus.app.nas.path=/data/workspace/nasmount/\n\n\n#Email Config\navanseus.email.fromId=<EMAIL_FROM_ID>\navanseus.email.pwd=<EMAIL_PASSWORD>\navanseus.email.host=<EMAIL_SERVER>\navanseus.email.fromName=<EMAIL_SENDER_NAME>\navanseus.email.port=<EMAIL_PORT>\n\n\n#Cluster node configuration\navanseus.predictionNode.name=nodeA    \n```\n#### ``mongo.pkcs12`` - Use a valid key file if provided or create an empty file\n\nIn the above mentioned files, replace the text enclosed in `<>` with necessary information. Mentioned below are their details:\n\n - `<AVANSEUS_PASSWORD_KEY>` : Replace this with the password key to be used. Request the [Avanseus delivery](mailto:support@avanseus.com) team for this. This is very specific for a given DB dump.\n - `<NAMESPACE>` : Namespace where the operator and application would run.\n - `<ROUTER_DEFAULT_HOSTNAME>` : Replace this with the Openshift cluster default router hostname.\n - `<MONGODB_SSL_ENABLED>` : `true` when MongoDB is enabled with SSL. `false` otherwise.\n - `<MONGODB_VERIFY_HOST>` : `true` when MongoDB host name needs to be verified with SSL certificate. `false` otherwise.\n - `<MONGODB_KEYSTORE_PASSWORD>` : Encrypted password of MongoDB keystore. The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_IP>` : Replace this with MongoDB IP/Host which is reachable from the pods. \n - `<MONGODB_PORT>` : Replace this with MongoDB Port which is reachable from the pods.\n - `<MONGODB_USERNAME>` : Replace this with MongoDB schema read/write username.\n - `<MONGODB_PASSWORD>` : Replace this with above username's password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_SCHEMA_NAME>` : Replace this with DB schema name.\n - `<MONGODB_ADMIN_USERNAME>` : Replace this with MongoDB admin username\n - `<MONGODB_ADMIN_PASSWORD>` : Replace this with MongoDB admin password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_ADMIN_SCHEMA_NAME>` : Replace this with the MongoDB admin schema name.\n - `<GOOGLE_MAP_KEY>` : Google map key.\n - `<LDAP_URL1>` : Replace this with LDAP URL 1. LDAP IP reachable from pods.\n - `<LDAP_URL2>` : Replace this with LDAP URL 2. Same as above if the customer does not provide failover LDAP URL.\n - `<LDAP_PORT1>` : Replace this with LDAP Port 1. LDAP port reachable from pods.\n - `<LDAP_PORT2>` : Replace this with LDAP Port 2. Same as above if the customer does not provide failover LDAP instance.\n - `<LDAP_PASSWORD>` : Replace this with LDAP password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<LDAP_ORG>` : Replace this with LDAP organisation. Customers usually provide this or contact Avanseus support team for this.\n - `<LDAP_DOMAIN>` : Replace this with LDAP domain. Customers usually provide this or contact Avanseus support team for this.\n - `<EMAIL_FROM_ID>` : Replace this with Email ID of sender.\n - `<EMAIL_SENDER_NAME>` : Replace this with Email sender's name.\n - `<EMAIL_SERVER>` : Replace this with Email server host or domain.\n - `<EMAIL_PORT>` : Replace this with Email server port.\n - `<EMAIL_PASSWORD>` : Replace this with Email sender's password.\n\nThe last 5 entries must be filled up with relevant SMTP server or relay server information which is reachable from the Openshift cluster.\n\nIf you would use the Default LDAP server coming with the operator, then the LDAP configuration section can be as follows:\n```sh\n#LDAP server configuration\navanseus.ldap.organisation=employee\navanseus.ldap.domain=avanseus\navanseus.ldap.url1=ldap://ldap:1389\navanseus.ldap.url2=ldap://ldap:1389\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=r7qs0Kobh5s+q0Wtlj1JZbtkdqGxBdx/\n\n```\nFinally create the ConfigMap as follows:\n\n```sh\noc create configmap canconfig --from-file=catalina.properties --from-file=config.properties --from-file=mongo.pkcs12\n```\n### Prediction controller config map (``controllerconfig``)\nMentioned below is the ConfigMap entry Prediction controller application needs & hence create the file mentioned below:\n#### ``application.properties`` - Application configuration\n```sh\nserver.port=5052\nlogging.level.root = INFO\nspring.application.name=PredictionControllerApplication\npredictionworker.endpoint=http://avanseusworkernode:5050/PredictionWorker/\n#predictionworker.endpoint=http://localhost:5050/\n# Max file size.\nspring.servlet.multipart.max-file-size=40MB\n# Max request size.\nspring.servlet.multipart.max-request-size=50MB\n\n```\nFinally create the ConfigMap as follows:\n```sh\noc create configmap controllerconfig --from-file=application.properties\n```\n\n\n## Installation\nCAN Operator is available in the OperatorHub section. Mentioned below is a link to the video which shows how to install the CAN operator.\n\n[CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n## Post installation\nAfter installation, CAN application would be available on following URL:\n```sh\nhttps://can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>/CAN/\n```\nIf CAN tool was integrated with LDAP on customer premise, then the user credentials would be known. If CAN tool was integrated with Avanseus's default LDAP, then request the [Avanseus delivery](mailto:support@avanseus.com) team for credentials.\n",
      "csv_display_name": "can-operator",
      "csv_metadata_description": "Avanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens. CAN operator bundles CAN & VBI application.",
      "csv_name": "can-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:50:21.216000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "can-operator",
      "provided_apis": [
        {
          "group": "can.avanseus.com",
          "kind": "CAN",
          "version": "v1alpha1"
        }
      ],
      "provider": "Avanseus Holdings Pte. Ltd.",
      "related_images": [
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "can-operator-a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719-annotation"
        },
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "manager"
        },
        {
          "digest": "sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "image": "registry.connect.redhat.com/can-avanseus/vbi@sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "name": "vbi"
        },
        {
          "digest": "sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "image": "registry.connect.redhat.com/can-avanseus/ldap@sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "name": "ldap"
        },
        {
          "digest": "sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "image": "registry.connect.redhat.com/can-avanseus/canapp@sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "name": "can"
        },
        {
          "digest": "sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "image": "registry.connect.redhat.com/can-avanseus/casapp@sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "name": "cas"
        },
        {
          "digest": "sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "image": "registry.connect.redhat.com/can-avanseus/predictioncontroller@sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "name": "can_controller"
        },
        {
          "digest": "sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "image": "registry.connect.redhat.com/can-avanseus/predictionworker@sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "name": "can_worker"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "615fe20d5cfcf7adc247ac08",
      "alm_examples": [
        {
          "api_version": "can.avanseus.com/v1alpha1",
          "kind": "CAN",
          "metadata": {
            "name": "can"
          },
          "spec": {
            "can": {
              "maxreplica": 4,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "4Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                }
              },
              "tomcatoptions": "export JAVA_OPTS=\"$JAVA_OPTS -Xms1024m -Xmx4096m -Dmail.smtp.ssl.protocols=TLSv1.2\""
            },
            "cas": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "2Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "imagepullpolicy": "Always",
            "ldap": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "memcached": {
              "resources": {
                "limits": {
                  "cpu": "500m",
                  "memory": "500Mi"
                },
                "requests": {
                  "cpu": "500m",
                  "memory": "500Mi"
                }
              }
            },
            "predictioncontroller": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "predictionworker": {
              "maxreplica": 3,
              "minreplica": 1,
              "resources": {
                "limits": {
                  "cpu": "2000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            },
            "serviceaccount": "avanseus",
            "vbi": {
              "resources": {
                "limits": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                },
                "requests": {
                  "cpu": "1000m",
                  "memory": "1Gi"
                }
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/can-avanseus/can@sha256:b820620865b4cac08e069406173e21bd95a881eadf9ba49253aa84ba286d1372",
      "bundle_path_digest": "sha256:b820620865b4cac08e069406173e21bd95a881eadf9ba49253aa84ba286d1372",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T06:15:41.751000+00:00",
      "csv_description": "# Overview\nThe Avanseus CAN operator deploys and manages the CAN (Cognitive assistant for networks)  predictive maintainence tool on any Kubernetes based cloud environment.\n\nAvanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens.  CAN operator bundles CAN, CAS, LDAP, VBI, Prediction controller & Prediction worker applications.\n\nSupporting links:\n- [CAN operator prerequisite & configuration](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_redhat_openshift_operator_installation.pdf): This is similar to the content mentioned from next section\n- [Password encryption](https://avanseuscandev.com/releases/CAN/5.5/redhat/CAN_password_encryption.pdf):  Utility guide for encrypting password texts\n- [CAN user manual](https://avanseuscandev.com/releases/CAN/5.5/Release/CAN_5.5_User_Manual.pdf)\n- [CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n# Operator installation\nMentioned below are the pre-requisites & configuration steps to be followed to install the CAN operator.\n### Before you start\n\n - A MongoDB instance must be available to connect to from the pods. This is usually provided by the \nenterprise customer. If not, then this has to be installed separately.\n - An initial MongoDB data dump needs to be loaded in the database. Please contact [Avanseus \ndelivery](mailto:support@avanseus.com).\n - In case, LDAP is not provided by the customer, [Avanseus delivery](mailto:support@avanseus.com) team can be requested to\n provide a LDAP image which is essential for Web dashboard authentication.\n - Binary files of applications does not come as part of the operator. These need to be requested from [Avanseus delivery](mailto:support@avanseus.com) team.\n - Create a project, service account & configure that service account using the below commands\n   \n   ```sh\n   \n   oc new-project <PROJECT_OR_NAMESPACE>\n   \n   oc create sa avanseus\n   \n   oc adm policy add-scc-to-user anyuid system:serviceaccount:<PROJECT_OR_NAMESPACE>:avanseus\n   \n   ```\n   \n   Replace `<PROJECT_OR_NAMESPACE>` with relevant namespace where the configurations provided in the `Configuration prerequisites` section below will be done & also where the operator would be installed.\n   \n   \n\nAvanseus delivery team can be contacted  at <support@avanseus.com>.\nMentioned below are the prerequisite configurations required for installing CAN operator. \n## Third party software pre-requisites\nTable shown below, specifies the supported versions of the third party software or protocol.\n<table><tr><th>Compatible software/protocol</th><th>Supported version</th></tr><tr><td>MongoDB</td><td>v4.4.5</td></tr><tr><td>LDAP protocol</td><td>Version-3</td></tr><tr><td>Memcached</td><td>1.5</td></tr></table>\n\n### Third party software availability\n- ***MongoDB with initial data***\n\n  For the CAN application to come up successfully, it needs some initial data in MongoDB.\n  However if it is not available, then [Avanseus delivery](mailto:support@avanseus.com) team needs \n  to be contacted for an initial data dump that needs to be imported to a MongoDB schema. MongoDB \n  can either be within the Openshift platform or outside. This MongoDB schema must be accessible from the \n  CAN operator pods preferably on port 27017. \n  \n- ***LDAP with initial user data***\n\n  For the CAN application, authentication is made possible using LDAP. Usually customers provide an LDAP connection for integration. However, if LDAP is not made available by the customer, then a LDAP\npod comes as part of operator installation by default with one initial user. [Avanseus delivery](mailto:support@avanseus.com) team needs to be requested to get the user access details. \n  If customer provides LDAP, then it can be outside Openshift or within the cluster. The LDAP Host and port details must be configured in a ConfigMap.\n  \n- ***Memcached***\n\n  Memcached is used by CAN to cache small data for fast retrieval. This is also used for tomcat session replication. This application comes by default with the operator.\n\n\n## Configuration prerequisites\n\n### PersistentVolumeClaim to copy WAR files\nBy default, the CAN operator does not come with CAN binary. [Avanseus delivery](mailto:support@avanseus.com) team must be requested to obtain the WAR files. Before deploying, the binaries in need to be obtained and put into a PersistentVolume. Mentioned below is a method to do this.\n\nThese binaries are:\n\n\n - CAN.war\n - CAS.war\n - PredictionController.war\n - universal\n\n\nCreate a PersistentVolumeClaim \"tmp-data\". Mentioned below is an example configuration YAML\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: tmp-data\nspec:\n accessModes:\n - ReadWriteOnce\n resources:\n  requests:\n   storage: 1G\n\n```\nCreate a dummy application (Apache server) and mount the created PersistentVolumeClaim. Mentioned below is the YAML content\n```sh\napiVersion: v1\nkind: Pod\nmetadata:\n name: pod-httpd\n labels:\n  app: apache_webserver\nspec:\n containers:\n - name: cntr-httpd\n   image: httpd:latest\n   ports:\n   - containerPort: 80\n   volumeMounts:\n   - mountPath: /mnt\n     name: tmp-data\n volumes:\n - name: tmp-data\n   persistentVolumeClaim:\n    claimName: tmp-data\n\n```\nChange directory to the place where WAR files are available. Copy the WAR files provided by Avanseus into the mount point \"/mnt\" using the rsync command.\n```sh\noc rsync . pod-httpd:/mnt\n```\nOnce this is done, the dummy application pod can be stopped. Remember that \"tmp-data\" PersistentVolume must not be deleted as this is used by Operator components to pull the binaries.\n### PersistentVolumeClaim for CAN application\nCreate a PersistentVolumeClaim named \"candatapvc\" & \"canlogpvc\". This is needed for the CAN application to write files.  YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: candatapvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n---\n\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: canlogpvc\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n### PesistentVolumeClaim for LDAP application\nCreate a PersistentVolumeClaim named \"ldap-storage\". This is needed for LDAP module to store the user DB data in a persistent location. YAML configuration is given below.\n```sh\nkind: PersistentVolumeClaim\napiVersion: v1\nmetadata:\n name: ldap-storage\nspec:\n accessModes:\n - ReadWriteOnce\nresources:\n requests:\n  storage: 5G\n\n```\n\n### Config Maps\nPods within the operator need configurations to startup the application. These configurations have to be stored in Config maps on Openshift platform.\nCAN operator comes with 5 applications which would run in 5 different pods:\n - CAN (Needs config map)\n - LDAP\n - VBI\n - Prediction controller (Needs config map)\n - Prediction worker\n\n### CAN config map (``canconfig``)\n\nMentioned below are the ConfigMap entries CAN application needs & hence create 3 files mentioned below:\n#### ``catalina.properties`` - Catalina file for tomcat:\n```sh\n# Licensed to the Apache Software Foundation (ASF) under one or more\n# contributor license agreements.  See the NOTICE file distributed with\n# this work for additional information regarding copyright ownership.\n# The ASF licenses this file to You under the Apache License, Version 2.0\n# (the \"License\"); you may not use this file except in compliance with\n# the License.  You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageAccess unless the\n# corresponding RuntimePermission (\"accessClassInPackage.\"+package) has\n# been granted.\npackage.access=sun.,org.apache.catalina.,org.apache.coyote.,org.apache.jasper.,org.apache.tomcat.\n#\n# List of comma-separated packages that start with or equal this string\n# will cause a security exception to be thrown when\n# passed to checkPackageDefinition unless the\n# corresponding RuntimePermission (\"defineClassInPackage.\"+package) has\n# been granted.\n#\n# by default, no packages are restricted for definition, and none of\n# the class loaders supplied with the JDK call checkPackageDefinition.\n#\npackage.definition=sun.,java.,org.apache.catalina.,org.apache.coyote.,\\\norg.apache.jasper.,org.apache.naming.,org.apache.tomcat.\n\n\n#\n#\n# List of comma-separated paths defining the contents of the \"common\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank,the JVM system loader will be used as Catalina's \"common\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values are enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\ncommon.loader=\"${catalina.base}/lib\",\"${catalina.base}/lib/*.jar\",\"${catalina.home}/lib\",\"${catalina.home}/lib/*.jar\"\n\n\n#\n# List of comma-separated paths defining the contents of the \"server\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_HOME or CATALINA_BASE path or absolute.\n# If left as blank, the \"common\" loader will be used as Catalina's \"server\"\n# loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nserver.loader=\n\n\n#\n# List of comma-separated paths defining the contents of the \"shared\"\n# classloader. Prefixes should be used to define what is the repository type.\n# Path may be relative to the CATALINA_BASE path or absolute. If left as blank,\n# the \"common\" loader will be used as Catalina's \"shared\" loader.\n# Examples:\n#     \"foo\": Add this folder as a class repository\n#     \"foo/*.jar\": Add all the JARs of the specified folder as class\n#                  repositories\n#     \"foo/bar.jar\": Add bar.jar as a class repository\n# Please note that for single jars, e.g. bar.jar, you need the URL form\n# starting with file:.\n#\n# Note: Values may be enclosed in double quotes (\"...\") in case either the\n#       ${catalina.base} path or the ${catalina.home} path contains a comma.\n#       Because double quotes are used for quoting, the double quote character\n#       may not appear in a path.\nshared.loader=\n\n\n# Default list of JAR files that should not be scanned using the JarScanner\n# functionality. This is typically used to scan JARs for configuration\n# information. JARs that do not contain such information may be excluded from\n# the scan to speed up the scanning process. This is the default list. JARs on\n# this list are excluded from all scans. The list must be a comma separated list\n# of JAR file names.\n# The list of JARs to skip may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\n# The JARs listed below include:\n# - Tomcat Bootstrap JARs\n# - Tomcat API JARs\n# - Catalina JARs\n# - Jasper JARs\n# - Tomcat JARs\n# - Common non-Tomcat JARs\n# - Test JARs (JUnit, Cobertura and dependencies)\ntomcat.util.scan.StandardJarScanFilter.jarsToSkip=\\\nannotations-api.jar,\\\nant-junit*.jar,\\\nant-launcher.jar,\\\nant.jar,\\\nasm-*.jar,\\\naspectj*.jar,\\\nbootstrap.jar,\\\ncatalina-ant.jar,\\\ncatalina-ha.jar,\\\ncatalina-jmx-remote.jar,\\\ncatalina-storeconfig.jar,\\\ncatalina-tribes.jar,\\\ncatalina-ws.jar,\\\ncatalina.jar,\\\ncglib-*.jar,\\\ncobertura-*.jar,\\\ncommons-beanutils*.jar,\\\ncommons-codec*.jar,\\\ncommons-collections*.jar,\\\ncommons-daemon.jar,\\\ncommons-dbcp*.jar,\\\ncommons-digester*.jar,\\\ncommons-fileupload*.jar,\\\ncommons-httpclient*.jar,\\\ncommons-io*.jar,\\\ncommons-lang*.jar,\\\ncommons-logging*.jar,\\\ncommons-math*.jar,\\\ncommons-pool*.jar,\\\ndom4j-*.jar,\\\neasymock-*.jar,\\\necj-*.jar,\\\nel-api.jar,\\\ngeronimo-spec-jaxrpc*.jar,\\\nh2*.jar,\\\nhamcrest-*.jar,\\\nhibernate*.jar,\\\nhttpclient*.jar,\\\nicu4j-*.jar,\\\njasper-el.jar,\\\njasper.jar,\\\njaspic-api.jar,\\\njaxb-*.jar,\\\njaxen-*.jar,\\\njdom-*.jar,\\\njetty-*.jar,\\\njmx-tools.jar,\\\njmx.jar,\\\njsp-api.jar,\\\njstl.jar,\\\njta*.jar,\\\njunit-*.jar,\\\njunit.jar,\\\nlog4j*.jar,\\\nmail*.jar,\\\nobjenesis-*.jar,\\\noraclepki.jar,\\\noro-*.jar,\\\nservlet-api-*.jar,\\\nservlet-api.jar,\\\nslf4j*.jar,\\\ntaglibs-standard-spec-*.jar,\\\ntagsoup-*.jar,\\\ntomcat-api.jar,\\\ntomcat-coyote.jar,\\\ntomcat-dbcp.jar,\\\ntomcat-i18n-*.jar,\\\ntomcat-jdbc.jar,\\\ntomcat-jni.jar,\\\ntomcat-juli-adapters.jar,\\\ntomcat-juli.jar,\\\ntomcat-util-scan.jar,\\\ntomcat-util.jar,\\\ntomcat-websocket.jar,\\\ntools.jar,\\\nwebsocket-api.jar,\\\nwsdl4j*.jar,\\\nxercesImpl.jar,\\\nxml-apis.jar,\\\nxmlParserAPIs-*.jar,\\\nxmlParserAPIs.jar,\\\nxom-*.jar\n\n\n# Default list of JAR files that should be scanned that overrides the default\n# jarsToSkip list above. This is typically used to include a specific JAR that\n# has been excluded by a broad file name pattern in the jarsToSkip list.\n# The list of JARs to scan may be over-ridden at a Context level for individual\n# scan types by configuring a JarScanner with a nested JarScanFilter.\ntomcat.util.scan.StandardJarScanFilter.jarsToScan=\\\nlog4j-taglib*.jar,\\\nlog4j-web*.jar,\\\nlog4javascript*.jar,\\\nslf4j-taglib*.jar\n\n# String cache configuration.\ntomcat.util.buf.StringCache.byte.enabled=true\n#tomcat.util.buf.StringCache.char.enabled=true\n#tomcat.util.buf.StringCache.trainThreshold=500000\n#tomcat.util.buf.StringCache.cacheSize=5000\n\n\n# This system property is deprecated. Use the relaxedPathChars relaxedQueryChars\n# attributes of the Connector instead. These attributes permit a wider range of\n# characters to be configured as valid.\n# Allow for changes to HTTP request validation\n# WARNING: Using this option may expose the server to CVE-2016-6816\n#tomcat.util.http.parser.HttpParser.requestTargetAllow=|\nPASSWORD_KEY=<AVANSEUS_PASSWORD_KEY>    \n\n```\n#### ``config.properties`` - Application configuration\n```sh\n#Domain details\navanseus.app.cas.domain=cas-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\navanseus.app.can.domain=can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>\n\n\navanseus.vbi.ip=vbi\navanseus.vbi.port=12001\n\n\n#Domain protocol\navanseus.protocol=https\n\n\n#Host details\navanseus.app.cas.host=canapp:2003\navanseus.app.can.host=canapp:2000\n\n\n#Memcached configuration\navanseus.memcached.url=memcached:11211\n\n\n#MongoDb configuration\navanseus.mongodb.ssl.enabled=<MONGODB_SSL_ENABLED>\navanseus.mongodb.validHostName=<MONGODB_VERIFY_HOST>\navanseus.mongodb.keystore.path=/data/workspace/pemfile/mongo.pkcs12\navanseus.mongodb.keystore.password=<MONGODB_KEYSTORE_PASSWORD>\navanseus.mongodb.ip=<MONGODB_IP_HOST>\navanseus.mongodb.port=<MONGODB_PORT>\navanseus.mongodb.username=<MONGODB_USERNAME>\navanseus.mongodb.password=<MONGODB_PASSWORD>\navanseus.mongodb.dbName=<MONGODB_SCHEMA_NAME>\n\n\navanseus.mongodb.admin.username=<MONGODB_ADMIN_USERNAME>\navanseus.mongodb.admin.password=<MONGODB_ADMIN_PASSWORD>\navanseus.mongodb.admin.dbName=<MONGODB_ADMIN_SCHEMA_NAME>\n\n\n#log configuration\navanseus.log.path=/data/workspace/logs/\navanseus.log.thread.poolsize=20\n\n\n#LDAP server configuration\navanseus.ldap.organisation=<LDAP_ORG>\navanseus.ldap.domain=<LDAP_DOMAIN>\navanseus.ldap.url1=ldap://<LDAP_URL1>:<LDAP_PORT1>\navanseus.ldap.url2=ldap://<LDAP_URL2>:<LDAP_PORT2>\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=<LDAP_PASSWORD>\n\n\navanseus.app.googleKey=<GOOGLE_MAP_KEY>\n#NAS path\navanseus.app.nas.path=/data/workspace/nasmount/\n\n\n#Email Config\navanseus.email.fromId=<EMAIL_FROM_ID>\navanseus.email.pwd=<EMAIL_PASSWORD>\navanseus.email.host=<EMAIL_SERVER>\navanseus.email.fromName=<EMAIL_SENDER_NAME>\navanseus.email.port=<EMAIL_PORT>\n\n\n#Cluster node configuration\navanseus.predictionNode.name=nodeA    \n```\n#### ``mongo.pkcs12`` - Use a valid key file if provided or create an empty file\n\nIn the above mentioned files, replace the text enclosed in `<>` with necessary information. Mentioned below are their details:\n\n - `<AVANSEUS_PASSWORD_KEY>` : Replace this with the password key to be used. Request the [Avanseus delivery](mailto:support@avanseus.com) team for this. This is very specific for a given DB dump.\n - `<NAMESPACE>` : Namespace where the operator and application would run.\n - `<ROUTER_DEFAULT_HOSTNAME>` : Replace this with the Openshift cluster default router hostname.\n - `<MONGODB_SSL_ENABLED>` : `true` when MongoDB is enabled with SSL. `false` otherwise.\n - `<MONGODB_VERIFY_HOST>` : `true` when MongoDB host name needs to be verified with SSL certificate. `false` otherwise.\n - `<MONGODB_KEYSTORE_PASSWORD>` : Encrypted password of MongoDB keystore. The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_IP>` : Replace this with MongoDB IP/Host which is reachable from the pods. \n - `<MONGODB_PORT>` : Replace this with MongoDB Port which is reachable from the pods.\n - `<MONGODB_USERNAME>` : Replace this with MongoDB schema read/write username.\n - `<MONGODB_PASSWORD>` : Replace this with above username's password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_SCHEMA_NAME>` : Replace this with DB schema name.\n - `<MONGODB_ADMIN_USERNAME>` : Replace this with MongoDB admin username\n - `<MONGODB_ADMIN_PASSWORD>` : Replace this with MongoDB admin password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<MONGODB_ADMIN_SCHEMA_NAME>` : Replace this with the MongoDB admin schema name.\n - `<GOOGLE_MAP_KEY>` : Google map key.\n - `<LDAP_URL1>` : Replace this with LDAP URL 1. LDAP IP reachable from pods.\n - `<LDAP_URL2>` : Replace this with LDAP URL 2. Same as above if the customer does not provide failover LDAP URL.\n - `<LDAP_PORT1>` : Replace this with LDAP Port 1. LDAP port reachable from pods.\n - `<LDAP_PORT2>` : Replace this with LDAP Port 2. Same as above if the customer does not provide failover LDAP instance.\n - `<LDAP_PASSWORD>` : Replace this with LDAP password (Encrypted). The encryption technique is defined [here](https://avanseuscandev.com/releases/CAN/5.0/redhat/CAN_password_encryption.pdf)\n - `<LDAP_ORG>` : Replace this with LDAP organisation. Customers usually provide this or contact Avanseus support team for this.\n - `<LDAP_DOMAIN>` : Replace this with LDAP domain. Customers usually provide this or contact Avanseus support team for this.\n - `<EMAIL_FROM_ID>` : Replace this with Email ID of sender.\n - `<EMAIL_SENDER_NAME>` : Replace this with Email sender's name.\n - `<EMAIL_SERVER>` : Replace this with Email server host or domain.\n - `<EMAIL_PORT>` : Replace this with Email server port.\n - `<EMAIL_PASSWORD>` : Replace this with Email sender's password.\n\nThe last 5 entries must be filled up with relevant SMTP server or relay server information which is reachable from the Openshift cluster.\n\nIf you would use the Default LDAP server coming with the operator, then the LDAP configuration section can be as follows:\n```sh\n#LDAP server configuration\navanseus.ldap.organisation=employee\navanseus.ldap.domain=avanseus\navanseus.ldap.url1=ldap://ldap:1389\navanseus.ldap.url2=ldap://ldap:1389\navanseus.ldap.userDn=cn=Directory Manager\navanseus.ldap.password=r7qs0Kobh5s+q0Wtlj1JZbtkdqGxBdx/\n\n```\nFinally create the ConfigMap as follows:\n\n```sh\noc create configmap canconfig --from-file=catalina.properties --from-file=config.properties --from-file=mongo.pkcs12\n```\n### Prediction controller config map (``controllerconfig``)\nMentioned below is the ConfigMap entry Prediction controller application needs & hence create the file mentioned below:\n#### ``application.properties`` - Application configuration\n```sh\nserver.port=5052\nlogging.level.root = INFO\nspring.application.name=PredictionControllerApplication\npredictionworker.endpoint=http://avanseusworkernode:5050/PredictionWorker/\n#predictionworker.endpoint=http://localhost:5050/\n# Max file size.\nspring.servlet.multipart.max-file-size=40MB\n# Max request size.\nspring.servlet.multipart.max-request-size=50MB\n\n```\nFinally create the ConfigMap as follows:\n```sh\noc create configmap controllerconfig --from-file=application.properties\n```\n\n\n## Installation\nCAN Operator is available in the OperatorHub section. Mentioned below is a link to the video which shows how to install the CAN operator.\n\n[CAN operator installation video](https://avanseuscandev.com/releases/CAN/5.5/Videos/can-operator-openshift-installation-guide.mp4)\n\n## Post installation\nAfter installation, CAN application would be available on following URL:\n```sh\nhttps://can-<NAMESPACE>.<ROUTER_DEFAULT_HOSTNAME>/CAN/\n```\nIf CAN tool was integrated with LDAP on customer premise, then the user credentials would be known. If CAN tool was integrated with Avanseus's default LDAP, then request the [Avanseus delivery](mailto:support@avanseus.com) team for credentials.\n",
      "csv_display_name": "can-operator",
      "csv_metadata_description": "Avanseus Cognitive Assistant for Networks (CAN), applies AI and machine learning to predict where a network is likely to fail next, and what to do before it happens. CAN operator bundles CAN & VBI application.",
      "csv_name": "can-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:33:11.318000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "can-operator",
      "provided_apis": [
        {
          "group": "can.avanseus.com",
          "kind": "CAN",
          "version": "v1alpha1"
        }
      ],
      "provider": "Avanseus Holdings Pte. Ltd.",
      "related_images": [
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "can-operator-a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719-annotation"
        },
        {
          "digest": "sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "image": "registry.connect.redhat.com/can-avanseus/can-operator@sha256:a2b42a998226427ba8c0c6b8579c5d57b71ae88e40c2e1a489014debe5615719",
          "name": "manager"
        },
        {
          "digest": "sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "image": "registry.connect.redhat.com/can-avanseus/vbi@sha256:bb9a0e72305c82b876245ac9ce4f63bdb7dceaab0ea9d944cc4fdc13268578c3",
          "name": "vbi"
        },
        {
          "digest": "sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "image": "registry.connect.redhat.com/can-avanseus/ldap@sha256:f74ff460fc7da4e2de483ccfaad4bba8a9dd5bf4eda2817989d116c096a77e43",
          "name": "ldap"
        },
        {
          "digest": "sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "image": "registry.connect.redhat.com/can-avanseus/canapp@sha256:4d324f8f950f384a9031313d57ed5f7ac65468ad3a1887b7760268fd1b0b8243",
          "name": "can"
        },
        {
          "digest": "sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "image": "registry.connect.redhat.com/can-avanseus/casapp@sha256:d09dbe842cae508e8ddf721c202f302b1a8ec0167ca308edc04ad314b2245803",
          "name": "cas"
        },
        {
          "digest": "sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "image": "registry.connect.redhat.com/can-avanseus/predictioncontroller@sha256:b9586a285245c2f3969041881c0f17dfb3504ca651a93cf42dc0c9917b9255e0",
          "name": "can_controller"
        },
        {
          "digest": "sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "image": "registry.connect.redhat.com/can-avanseus/predictionworker@sha256:1c844e63803b91522fdea55638e6280d3a4ed663ef6f45993f9979d3a98ad534",
          "name": "can_worker"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "6160268e5ac6c1250490202e",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "bundle_path_digest": "sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T11:07:58.170000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:56:57.411000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "0.0.20",
      "version_original": "0.0.20"
    },
    {
      "_id": "616026bf5cfcf7adc247ac18",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "bundle_path_digest": "sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T11:08:47.209000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:08.541000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.20",
      "version_original": "0.0.20"
    },
    {
      "_id": "6160273890fb938ecf6009b2",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "bundle_path_digest": "sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T11:10:48.403000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:48:32.585000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.0.20",
      "version_original": "0.0.20"
    },
    {
      "_id": "616027f890fb938ecf6009b3",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "bundle_path_digest": "sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T11:14:00.746000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:56:35.250000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "0.0.20",
      "version_original": "0.0.20"
    },
    {
      "_id": "6160281f90fb938ecf6009b4",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "bundle_path_digest": "sha256:b0e763b8e865c832348cc4a883a99af0be4b657f0b44b4419ca4d6066a3c7bed",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T11:14:39.893000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.20",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:15:11.180000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:dffc105b4cf03f0b4f15c90786505ba5d660bf703bf11e19e80c90d93fece559",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.20",
      "version_original": "0.0.20"
    },
    {
      "_id": "616033a804fd1c67039dbce2",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "global": {
              "storage": {
                "class": ""
              },
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:fc454db9bb953b3a39aacabbf7ba34719f85bd5e959f01ed001bbbd16b5a9b34",
      "bundle_path_digest": "sha256:fc454db9bb953b3a39aacabbf7ba34719f85bd5e959f01ed001bbbd16b5a9b34",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T12:03:52.064000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS, ACE/IIB and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100202.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:47:12.679000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "navigator-operator-95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "name": "domain"
        },
        {
          "digest": "sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "name": "cm"
        },
        {
          "digest": "sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "name": "wgs"
        },
        {
          "digest": "sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "name": "navigator"
        },
        {
          "digest": "sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100202.3",
      "version_original": "1.100202.3"
    },
    {
      "_id": "616034bd04fd1c67039dbce4",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "global": {
              "storage": {
                "class": ""
              },
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:fc454db9bb953b3a39aacabbf7ba34719f85bd5e959f01ed001bbbd16b5a9b34",
      "bundle_path_digest": "sha256:fc454db9bb953b3a39aacabbf7ba34719f85bd5e959f01ed001bbbd16b5a9b34",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T12:08:29.363000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS, ACE/IIB and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100202.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:45:34.219000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "navigator-operator-95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "name": "domain"
        },
        {
          "digest": "sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "name": "cm"
        },
        {
          "digest": "sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "name": "wgs"
        },
        {
          "digest": "sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "name": "navigator"
        },
        {
          "digest": "sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100202.3",
      "version_original": "1.100202.3"
    },
    {
      "_id": "616035625cfcf7adc247ac22",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "global": {
              "storage": {
                "class": ""
              },
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:fc454db9bb953b3a39aacabbf7ba34719f85bd5e959f01ed001bbbd16b5a9b34",
      "bundle_path_digest": "sha256:fc454db9bb953b3a39aacabbf7ba34719f85bd5e959f01ed001bbbd16b5a9b34",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T12:11:14.726000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS, ACE/IIB and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100202.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:57:48.624000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "navigator-operator-95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "name": "domain"
        },
        {
          "digest": "sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "name": "cm"
        },
        {
          "digest": "sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "name": "wgs"
        },
        {
          "digest": "sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "name": "navigator"
        },
        {
          "digest": "sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.100202.3",
      "version_original": "1.100202.3"
    },
    {
      "_id": "616035f104fd1c67039dbce5",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "global": {
              "storage": {
                "class": ""
              },
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:fc454db9bb953b3a39aacabbf7ba34719f85bd5e959f01ed001bbbd16b5a9b34",
      "bundle_path_digest": "sha256:fc454db9bb953b3a39aacabbf7ba34719f85bd5e959f01ed001bbbd16b5a9b34",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T12:13:37.019000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS, ACE/IIB and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100202.3",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:28:06.776000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "navigator-operator-95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "name": "domain"
        },
        {
          "digest": "sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "name": "cm"
        },
        {
          "digest": "sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "name": "wgs"
        },
        {
          "digest": "sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "name": "navigator"
        },
        {
          "digest": "sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.100202.3",
      "version_original": "1.100202.3"
    },
    {
      "_id": "6160587890fb938ecf6009d0",
      "alm_examples": [
        {
          "api_version": "apps.gitlab.com/v1beta2",
          "kind": "Runner",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "gitlabUrl": "https://gitlab.com",
            "imagePullPolicy": "Always",
            "tags": "openshift, test",
            "token": "gitlab-dev-runner-secret"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/gitlab/gitlab-runner-operator-bundle@sha256:a983d27fdb8e3c63bdbf40efe22a2ab62016c3ca75040c2f1a4b429278d72731",
      "bundle_path_digest": "sha256:a983d27fdb8e3c63bdbf40efe22a2ab62016c3ca75040c2f1a4b429278d72731",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "stable",
      "creation_date": "2021-10-08T14:40:56.855000+00:00",
      "csv_description": "GitLab Runner is the lightweight, highly-scalable agent that runs your build jobs and sends the results back to a GitLab instance. GitLab Runner works in conjunction with GitLab CI/CD, the open-source continuous integration service included with GitLab.\n\nThe GitLab Runner operator manages the lifecycle of GitLab Runner in Kubernetes or Openshift clusters. The operator aims to automate the tasks needed to run your CI/CD jobs in your container orchestration platform.\n\n## Usage\n\n To link a GitLab Runner instance to a self-hosted GitLab instance or the hosted [GitLab](https://gitlab.com), you first need to:\n\n 1. create a secret containing the `runner-registration-token` from your GitLab project.\n\n   ```\n  cat > gitlab-runner-secret.yml << EOF\n  apiVersion: v1\n  kind: Secret\n  metadata:\n    name: gitlab-runner-secret\n  type: Opaque\n  stringData:\n    runner-registration-token: REPLACE_ME # your project runner secret\n  EOF\n  ```\n\n  ```\n  oc apply -f gitlab-runner-secret.yml\n  ```\n\n 2. Create the Custom Resource Definition (CRD) file and include the following information. The tags value must be openshift for the job to run.\n\n   ```\n   cat > gitlab-runner.yml << EOF\n   apiVersion: apps.gitlab.com/v1beta2\n   kind: Runner\n   metadata:\n     name: gitlab-runner\n   spec:\n     gitlabUrl: https://gitlab.example.com\n     buildImage: alpine\n     token: gitlab-runner-secret\n     tags: openshift\n   EOF\n   ```\n\n  ```\n  oc apply -f gitlab-runner.yml\n  ```\n\n## Full documentation\n\nVisit [Install GitLab Runner on Red Hat OpenShift](https://docs.gitlab.com/runner/install/openshift.html)\n",
      "csv_display_name": "GitLab Runner",
      "csv_metadata_description": "GitLab Runner operator manages lifecycle of GitLab Runner instances",
      "csv_name": "gitlab-runner-operator.v1.4.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:51:59.096000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "gitlab-runner-operator",
      "provided_apis": [],
      "provider": "GitLab, Inc.",
      "related_images": [
        {
          "digest": "sha256:4cd860f02a5c22208cebfdae751fdc27069a4c14442a9020024c576c700f0634",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner@sha256:4cd860f02a5c22208cebfdae751fdc27069a4c14442a9020024c576c700f0634",
          "name": "gitlab-runner"
        },
        {
          "digest": "sha256:272c50ca9ef77c92deac0ca302df9e0127d5c54609c35230f96cf1d91de5fe97",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-helper@sha256:272c50ca9ef77c92deac0ca302df9e0127d5c54609c35230f96cf1d91de5fe97",
          "name": "gitlab-runner-helper"
        },
        {
          "digest": "sha256:c6572cb1c20713f2f582f8b436307e80c23dcac08c1d7bde37833fd266ef9618",
          "image": "registry.connect.redhat.com/gitlab/gitlab-runner-operator@sha256:c6572cb1c20713f2f582f8b436307e80c23dcac08c1d7bde37833fd266ef9618",
          "name": "gitlab-runner-operator"
        },
        {
          "digest": "sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:dc0f91e256c86c3f7cb930d0e4d48eb68576425bc4bd288fb76decb0577c7e9e",
          "name": "kube-rbac-proxy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.4.0",
      "version_original": "1.4.0"
    },
    {
      "_id": "61605de55ac6c1250490205e",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:e9c4bc78961e0aaf931c9899e5046f1541f05aa0ca1351409b7125d26e8ceaf9",
      "bundle_path_digest": "sha256:e9c4bc78961e0aaf931c9899e5046f1541f05aa0ca1351409b7125d26e8ceaf9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T15:04:05.979000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.330.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:50:33.857000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "name": "xray-operator-85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:fd4f6d9dac97fac4e5e53689ea3e7e174d692eda6afff271d3e7e7e4b78a5f68",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:fd4f6d9dac97fac4e5e53689ea3e7e174d692eda6afff271d3e7e7e4b78a5f68",
          "name": "domain"
        },
        {
          "digest": "sha256:854f8433c6138c829757a866273d8f18eef7bf61fcb95d04725f23721c24f022",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:854f8433c6138c829757a866273d8f18eef7bf61fcb95d04725f23721c24f022",
          "name": "cep"
        },
        {
          "digest": "sha256:ddcfc764de7e9cfdecd255126fcf69775586c4d7c79c978bb44184a534c7c89a",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:ddcfc764de7e9cfdecd255126fcf69775586c4d7c79c978bb44184a534c7c89a",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:81b6e6b2dbbfc7a71c5d71c571a477950263c7debffbf006a0fd4d96517ac6a4",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:81b6e6b2dbbfc7a71c5d71c571a477950263c7debffbf006a0fd4d96517ac6a4",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "name": "ml"
        },
        {
          "digest": "sha256:063de804be70b905000b18c635af6b5c6edff74654d44cff99515ee35e8c4f05",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:063de804be70b905000b18c635af6b5c6edff74654d44cff99515ee35e8c4f05",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:f743d6dbcfda7346b1a20f865511b7d6e0cd7407e8d15ab1fb5d8fe16472a982",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:f743d6dbcfda7346b1a20f865511b7d6e0cd7407e8d15ab1fb5d8fe16472a982",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.330.0",
      "version_original": "1.330.0"
    },
    {
      "_id": "61605e0690fb938ecf6009e1",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:e9c4bc78961e0aaf931c9899e5046f1541f05aa0ca1351409b7125d26e8ceaf9",
      "bundle_path_digest": "sha256:e9c4bc78961e0aaf931c9899e5046f1541f05aa0ca1351409b7125d26e8ceaf9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T15:04:38.244000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.330.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:22.087000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "name": "xray-operator-85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:fd4f6d9dac97fac4e5e53689ea3e7e174d692eda6afff271d3e7e7e4b78a5f68",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:fd4f6d9dac97fac4e5e53689ea3e7e174d692eda6afff271d3e7e7e4b78a5f68",
          "name": "domain"
        },
        {
          "digest": "sha256:854f8433c6138c829757a866273d8f18eef7bf61fcb95d04725f23721c24f022",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:854f8433c6138c829757a866273d8f18eef7bf61fcb95d04725f23721c24f022",
          "name": "cep"
        },
        {
          "digest": "sha256:ddcfc764de7e9cfdecd255126fcf69775586c4d7c79c978bb44184a534c7c89a",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:ddcfc764de7e9cfdecd255126fcf69775586c4d7c79c978bb44184a534c7c89a",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:81b6e6b2dbbfc7a71c5d71c571a477950263c7debffbf006a0fd4d96517ac6a4",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:81b6e6b2dbbfc7a71c5d71c571a477950263c7debffbf006a0fd4d96517ac6a4",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "name": "ml"
        },
        {
          "digest": "sha256:063de804be70b905000b18c635af6b5c6edff74654d44cff99515ee35e8c4f05",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:063de804be70b905000b18c635af6b5c6edff74654d44cff99515ee35e8c4f05",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:f743d6dbcfda7346b1a20f865511b7d6e0cd7407e8d15ab1fb5d8fe16472a982",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:f743d6dbcfda7346b1a20f865511b7d6e0cd7407e8d15ab1fb5d8fe16472a982",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.330.0",
      "version_original": "1.330.0"
    },
    {
      "_id": "6160600b90fb938ecf6009ee",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:e9c4bc78961e0aaf931c9899e5046f1541f05aa0ca1351409b7125d26e8ceaf9",
      "bundle_path_digest": "sha256:e9c4bc78961e0aaf931c9899e5046f1541f05aa0ca1351409b7125d26e8ceaf9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T15:13:15.435000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.330.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:41:55.563000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "name": "xray-operator-85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:fd4f6d9dac97fac4e5e53689ea3e7e174d692eda6afff271d3e7e7e4b78a5f68",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:fd4f6d9dac97fac4e5e53689ea3e7e174d692eda6afff271d3e7e7e4b78a5f68",
          "name": "domain"
        },
        {
          "digest": "sha256:854f8433c6138c829757a866273d8f18eef7bf61fcb95d04725f23721c24f022",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:854f8433c6138c829757a866273d8f18eef7bf61fcb95d04725f23721c24f022",
          "name": "cep"
        },
        {
          "digest": "sha256:ddcfc764de7e9cfdecd255126fcf69775586c4d7c79c978bb44184a534c7c89a",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:ddcfc764de7e9cfdecd255126fcf69775586c4d7c79c978bb44184a534c7c89a",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:81b6e6b2dbbfc7a71c5d71c571a477950263c7debffbf006a0fd4d96517ac6a4",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:81b6e6b2dbbfc7a71c5d71c571a477950263c7debffbf006a0fd4d96517ac6a4",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "name": "ml"
        },
        {
          "digest": "sha256:063de804be70b905000b18c635af6b5c6edff74654d44cff99515ee35e8c4f05",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:063de804be70b905000b18c635af6b5c6edff74654d44cff99515ee35e8c4f05",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:f743d6dbcfda7346b1a20f865511b7d6e0cd7407e8d15ab1fb5d8fe16472a982",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:f743d6dbcfda7346b1a20f865511b7d6e0cd7407e8d15ab1fb5d8fe16472a982",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.330.0",
      "version_original": "1.330.0"
    },
    {
      "_id": "6160606990fb938ecf6009ef",
      "alm_examples": [
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRay",
          "metadata": {
            "name": "nastelxray"
          },
          "spec": {
            "active-mq": {
              "image": "registry.connect.redhat.com/nastel/nastel-activemq",
              "replicaCount": 1,
              "resources": {
                "limits": {
                  "cpu": "400m",
                  "memory": "1000Mi"
                },
                "requests": {
                  "cpu": "200m",
                  "memory": "500Mi"
                }
              },
              "service": {
                "amqpPort": 5672,
                "httpPort": 8161,
                "ingress": {
                  "enabled": true
                },
                "mqttPort": 1883,
                "servicePort": 61616,
                "stopmPort": 61613,
                "type": "ClusterIP",
                "wsPort": 61614
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "ap-domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-ap-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 5440,
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "solr-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "solr-node": {
              "affinity": {},
              "exporter": {
                "configFile": "/opt/solr/contrib/prometheus-exporter/conf/solr-exporter-config.xml",
                "enabled": false,
                "livenessProbe": {
                  "initialDelaySeconds": 20,
                  "periodSeconds": 10
                },
                "podAnnotations": {},
                "port": 9983,
                "readinessProbe": {
                  "initialDelaySeconds": 15,
                  "periodSeconds": 5
                },
                "resources": {},
                "service": {
                  "annotations": {},
                  "type": "ClusterIP"
                },
                "threads": 7,
                "updateStrategy": {}
              },
              "image": {
                "pullPolicy": "Always",
                "repository": "registry.connect.redhat.com/nastel/nastel-solr"
              },
              "javaMem": "-Xms2g -Xmx3g",
              "livenessProbe": {
                "initialDelaySeconds": 20,
                "periodSeconds": 10
              },
              "logLevel": "INFO",
              "podAnnotations": {},
              "podDisruptionBudget": {
                "maxUnavailable": 1
              },
              "port": 8983,
              "readinessProbe": {
                "initialDelaySeconds": 15,
                "periodSeconds": 5
              },
              "replicaCount": 4,
              "resources": {},
              "service": {
                "annotations": {},
                "ingress": {
                  "enabled": true
                },
                "type": "ClusterIP"
              },
              "terminationGracePeriodSeconds": 180,
              "tls": {
                "caSecret": {
                  "bundlePath": "",
                  "name": ""
                },
                "certSecret": {
                  "certPath": "tls.crt",
                  "keyPath": "tls.key",
                  "name": ""
                },
                "checkPeerName": "false",
                "enabled": false,
                "importKubernetesCA": "false",
                "keystorePassword": "changeit",
                "needClientAuth": "false",
                "wantClientAuth": "false"
              },
              "updateStrategy": {
                "type": "OnDelete"
              },
              "volumeClaimTemplates": {
                "accessModes": [
                  "ReadWriteOnce"
                ],
                "storageClassName": "ibmc-block-gold",
                "storageSize": "20Gi"
              },
              "zookeeper": {
                "replicaCount": 1
              }
            },
            "xray": {
              "image": "registry.connect.redhat.com/nastel/xray-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "node": {},
                "type": "LoadBalancer"
              }
            },
            "xray-cep": {
              "image": "registry.connect.redhat.com/nastel/xray-cep",
              "init": {
                "dbapi-solr": {
                  "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr"
                },
                "kafka": {
                  "image": "registry.redhat.io/openshift4/ose-cli"
                }
              },
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "LoadBalancer",
                "xRayDataPort": 6580
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-ml-persistance": {
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-file-silver-gid"
              }
            },
            "xray-ml-queries": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            },
            "xray-ml-train": {
              "image": "registry.connect.redhat.com/nastel/xray-ml",
              "replicaCount": 1,
              "resources": {}
            }
          }
        },
        {
          "api_version": "xray.nastel.com/v1alpha3",
          "kind": "NastelXRayTopology",
          "metadata": {
            "name": "nastelxraytopology"
          },
          "spec": {
            "global": {
              "kafkaCluster": "xray-cluster",
              "kafkaHost": "xray-cluster-kafka-bootstrap",
              "kafkaPort": 9092,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "storm": {
              "enabled": true,
              "fullnameOverride": "storm",
              "name": "storm",
              "nameOverride": "storm",
              "nimbus": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "nimbus",
                  "port": 6627,
                  "type": "ClusterIP"
                }
              },
              "supervisor": {
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "replicaCount": 3,
                "resources": {},
                "service": {
                  "name": "supervisor",
                  "port": 6700
                }
              },
              "ui": {
                "enabled": true,
                "image": {
                  "pullPolicy": "Always",
                  "repository": "registry.connect.redhat.com/nastel/nastel-storm"
                },
                "ingress": {
                  "annotations": {},
                  "enabled": true,
                  "tls": []
                },
                "replicaCount": 1,
                "resources": {},
                "service": {
                  "name": "ui",
                  "port": 8080,
                  "type": "ClusterIP"
                }
              },
              "zookeeper": {
                "enabled": false,
                "fullnameOverride": "storm-keeper",
                "port": 2181,
                "replicaCount": 1,
                "servers": [
                  "storm-keeper"
                ]
              }
            },
            "storm-keeper": {
              "image": "registry.connect.redhat.com/nastel/nastel-zookeeper",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "clientPort": 2181,
                "electionPort": 3888,
                "serverPort": 2888,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "xray-cep": {
              "service": {
                "cepServerPort": 3005,
                "xRayDataPort": 6580
              }
            },
            "xray-storm-topologies": {
              "image": "registry.connect.redhat.com/nastel/xray-storm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "httpPort": 8080,
                "thriftPort": 6627
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/xray-operator-bundle@sha256:e9c4bc78961e0aaf931c9899e5046f1541f05aa0ca1351409b7125d26e8ceaf9",
      "bundle_path_digest": "sha256:e9c4bc78961e0aaf931c9899e5046f1541f05aa0ca1351409b7125d26e8ceaf9",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T15:14:49.216000+00:00",
      "csv_description": "The operator deploys Nastel XRay component containers:\n  * Nastel Domain Server\n  * XRay Complex Event Processing (CEP)\n  * Solr indexing service\n  * Machine Learning (ML)\n  * XRay WebApp\n  * Storm Topologies (optional)\n\nin one go.\n\n[Nastel XRay](https://www.nastel.com/nastel-xray/) allows you to Track & Trace Transaction and Message Flows, Analyze, Visualize and Report your Big Data.\n",
      "csv_display_name": "Nastel XRay Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel XRay",
      "csv_name": "nastel-xray-operator.v1.330.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:39:37.472000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-xray-operator",
      "provided_apis": [
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRay",
          "plural": "nastelxrays",
          "version": "v1alpha3"
        },
        {
          "group": "xray.nastel.com",
          "kind": "NastelXRayTopology",
          "plural": "nastelxraytopologies",
          "version": "v1alpha3"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "name": "xray-operator-85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "image": "registry.connect.redhat.com/nastel/xray-operator@sha256:85d7775b529003877529f26ff1247433ab373a56595f05f2b169a90c550a78d0",
          "name": "nastel-xray-operator"
        },
        {
          "digest": "sha256:fd4f6d9dac97fac4e5e53689ea3e7e174d692eda6afff271d3e7e7e4b78a5f68",
          "image": "registry.connect.redhat.com/nastel/nastel-ap-domain@sha256:fd4f6d9dac97fac4e5e53689ea3e7e174d692eda6afff271d3e7e7e4b78a5f68",
          "name": "domain"
        },
        {
          "digest": "sha256:854f8433c6138c829757a866273d8f18eef7bf61fcb95d04725f23721c24f022",
          "image": "registry.connect.redhat.com/nastel/xray-cep@sha256:854f8433c6138c829757a866273d8f18eef7bf61fcb95d04725f23721c24f022",
          "name": "cep"
        },
        {
          "digest": "sha256:ddcfc764de7e9cfdecd255126fcf69775586c4d7c79c978bb44184a534c7c89a",
          "image": "registry.redhat.io/openshift4/ose-cli@sha256:ddcfc764de7e9cfdecd255126fcf69775586c4d7c79c978bb44184a534c7c89a",
          "name": "ose_cli"
        },
        {
          "digest": "sha256:81b6e6b2dbbfc7a71c5d71c571a477950263c7debffbf006a0fd4d96517ac6a4",
          "image": "registry.connect.redhat.com/nastel/xray-dbapi-solr@sha256:81b6e6b2dbbfc7a71c5d71c571a477950263c7debffbf006a0fd4d96517ac6a4",
          "name": "solr_dbapi"
        },
        {
          "digest": "sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "image": "registry.connect.redhat.com/nastel/xray-ml@sha256:2fdcab2efa8627b33ae9148b0d14f22171dbbd64ccdf00e0a65e234e3e09d2ae",
          "name": "ml"
        },
        {
          "digest": "sha256:063de804be70b905000b18c635af6b5c6edff74654d44cff99515ee35e8c4f05",
          "image": "registry.connect.redhat.com/nastel/xray-ui@sha256:063de804be70b905000b18c635af6b5c6edff74654d44cff99515ee35e8c4f05",
          "name": "xray"
        },
        {
          "digest": "sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "image": "registry.connect.redhat.com/nastel/nastel-activemq@sha256:fd8168d697ae40c5a3e1b7b5d0a23494381178929820de7d1cebb0e4d69cf9ec",
          "name": "active_mq"
        },
        {
          "digest": "sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "image": "registry.connect.redhat.com/nastel/nastel-zookeeper@sha256:8e956cc9e631397128ef01b0a305a7c5b5fe3571b2077949c4e0849b1826188d",
          "name": "zookeeper"
        },
        {
          "digest": "sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "image": "registry.connect.redhat.com/nastel/nastel-solr@sha256:ec36c53f0a8ef88dfa357e3d4406032f6404ca6754ed874ba162436284d3e11c",
          "name": "solr"
        },
        {
          "digest": "sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "image": "registry.connect.redhat.com/nastel/nastel-storm@sha256:79b7ee65b9fd7e6ebe6c62e6a6c373ea54a745d09844972dcc61ae051d526a26",
          "name": "storm"
        },
        {
          "digest": "sha256:f743d6dbcfda7346b1a20f865511b7d6e0cd7407e8d15ab1fb5d8fe16472a982",
          "image": "registry.connect.redhat.com/nastel/xray-storm@sha256:f743d6dbcfda7346b1a20f865511b7d6e0cd7407e8d15ab1fb5d8fe16472a982",
          "name": "storm_topology"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.330.0",
      "version_original": "1.330.0"
    },
    {
      "_id": "61607a9990fb938ecf600a04",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "global": {
              "storage": {
                "class": ""
              },
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:dfd122582a10637e833f10c14b06a059e1ae07dbdfb5e3b933aff0e7a8e63d45",
      "bundle_path_digest": "sha256:dfd122582a10637e833f10c14b06a059e1ae07dbdfb5e3b933aff0e7a8e63d45",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T17:06:33.137000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS, ACE/IIB and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100202.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:01:43.846000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "navigator-operator-95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "name": "domain"
        },
        {
          "digest": "sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "name": "cm"
        },
        {
          "digest": "sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "name": "wgs"
        },
        {
          "digest": "sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "name": "navigator"
        },
        {
          "digest": "sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.100202.4",
      "version_original": "1.100202.4"
    },
    {
      "_id": "61607b795ac6c1250490207a",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "global": {
              "storage": {
                "class": ""
              },
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:dfd122582a10637e833f10c14b06a059e1ae07dbdfb5e3b933aff0e7a8e63d45",
      "bundle_path_digest": "sha256:dfd122582a10637e833f10c14b06a059e1ae07dbdfb5e3b933aff0e7a8e63d45",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T17:10:17.234000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS, ACE/IIB and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100202.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:47:38.343000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "navigator-operator-95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "name": "domain"
        },
        {
          "digest": "sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "name": "cm"
        },
        {
          "digest": "sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "name": "wgs"
        },
        {
          "digest": "sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "name": "navigator"
        },
        {
          "digest": "sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100202.4",
      "version_original": "1.100202.4"
    },
    {
      "_id": "61607bbb5cfcf7adc247ac51",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "global": {
              "storage": {
                "class": ""
              },
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:dfd122582a10637e833f10c14b06a059e1ae07dbdfb5e3b933aff0e7a8e63d45",
      "bundle_path_digest": "sha256:dfd122582a10637e833f10c14b06a059e1ae07dbdfb5e3b933aff0e7a8e63d45",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T17:11:23.878000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS, ACE/IIB and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100202.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:44:52.538000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "navigator-operator-95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "name": "domain"
        },
        {
          "digest": "sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "name": "cm"
        },
        {
          "digest": "sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "name": "wgs"
        },
        {
          "digest": "sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "name": "navigator"
        },
        {
          "digest": "sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.100202.4",
      "version_original": "1.100202.4"
    },
    {
      "_id": "61607c8490fb938ecf600a0a",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "image": "registry.connect.redhat.com/nastel/navigator-wgs",
              "licenseName": "AutoPilotWMQ_MQM.lic",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cepServerPort": 3005,
                "node": {},
                "type": "NodePort",
                "wgsPort": 4010
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "domain": {
              "image": "registry.connect.redhat.com/nastel/nastel-domain",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "node": {},
                "serverPort": 2323,
                "type": "NodePort",
                "userPort": 3000
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            },
            "global": {
              "storage": {
                "class": ""
              },
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud"
            },
            "navigator": {
              "image": "registry.connect.redhat.com/nastel/navigator-ui",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "debugPort": 8000,
                "node": {},
                "type": "LoadBalancer",
                "webPort": 8080
              }
            },
            "nsqcm": {
              "image": "registry.connect.redhat.com/nastel/navigator-cm",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "cmAcePort": 5577,
                "cmEmsPort": 5012,
                "cmKafkaPort": 5024,
                "cmPort": 5015,
                "mqPort": 1414,
                "node": {},
                "type": "NodePort"
              }
            },
            "wgs-mysql": {
              "image": "registry.redhat.io/rhel8/mariadb-103",
              "replicaCount": 1,
              "resources": {},
              "service": {
                "dbPort": 3306,
                "type": "ClusterIP"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:dfd122582a10637e833f10c14b06a059e1ae07dbdfb5e3b933aff0e7a8e63d45",
      "bundle_path_digest": "sha256:dfd122582a10637e833f10c14b06a059e1ae07dbdfb5e3b933aff0e7a8e63d45",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T17:14:44.208000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS, ACE/IIB and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100202.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:41:18.198000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": "Nastel",
      "related_images": [
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "navigator-operator-95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:95d2e70292377d19adf94e97a30794cf834e498e36cf4130afdd92cccf94f6f7",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:68af5064ccd561f3384ebd1be7615f95c5b00d1cda86d97534bae58747b01337",
          "name": "domain"
        },
        {
          "digest": "sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:369d4f87bc3abf49924f51f27b1f7fb4fcdf084cad845cab4fdfb1c73d0ce934",
          "name": "cm"
        },
        {
          "digest": "sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:a55195ee8b93a81fbcbee0f131a5e0d4c235043f7b13f0b16c1ba3f41cc65020",
          "name": "wgs"
        },
        {
          "digest": "sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:e5d89a40eae7902fd4cbedf14d544c530c29a97e4fa4894af48821dc2c64fa57",
          "name": "navigator"
        },
        {
          "digest": "sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:bfb7a648078244982e5ab1549bf016b08219c210b4853e97ba94c2ec7184ac32",
          "name": "mysql"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.100202.4",
      "version_original": "1.100202.4"
    },
    {
      "_id": "616080e85cfcf7adc247ac56",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "bundle_path_digest": "sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T17:33:28.853000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:55:22.276000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "operator-bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2-annotation"
        },
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.20.4",
      "version_original": "1.20.4"
    },
    {
      "_id": "6160824b5ac6c12504902082",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "bundle_path_digest": "sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T17:39:23.625000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:55:53.965000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "operator-bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2-annotation"
        },
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.20.4",
      "version_original": "1.20.4"
    },
    {
      "_id": "616083595ac6c12504902083",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "bundle_path_digest": "sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T17:43:53.069000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:06:43.710000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "operator-bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2-annotation"
        },
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.20.4",
      "version_original": "1.20.4"
    },
    {
      "_id": "616084f15cfcf7adc247ac5a",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "bundle_path_digest": "sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T17:50:41.665000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:43:42.455000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "operator-bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2-annotation"
        },
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.20.4",
      "version_original": "1.20.4"
    },
    {
      "_id": "6160887190fb938ecf600a10",
      "alm_examples": [
        {
          "api_version": "operator.tigera.io/v1",
          "kind": "Installation",
          "metadata": {
            "name": "default"
          },
          "spec": {
            "variant": "Calico"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/tigera/operator@sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "bundle_path_digest": "sha256:4d0d814fcfeb628aae8a05cb7a0a416ae85395197950085c907b6cdcf2fb4317",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "release-v1.20",
      "creation_date": "2021-10-08T18:05:37.277000+00:00",
      "csv_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift. Its goal is to make installation, upgrades, and ongoing lifecycle management of Calico and Calico Enterprise as simple and reliable as possible. **Important**: this operator should only be installed if the cluster was already provisioned with Calico.",
      "csv_display_name": "Tigera Operator",
      "csv_metadata_description": "An operator which manages the lifecycle of a Calico or Calico Enterprise installation on Kubernetes or OpenShift.",
      "csv_name": "tigera-operator.v1.20.4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:12:57.562000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "tigera-operator",
      "provided_apis": [
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMConfig",
          "plural": "ipamconfigs",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "ImageSet",
          "plural": "imagesets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPConfiguration",
          "plural": "bgpconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMBlock",
          "plural": "ipamblocks",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkPolicy",
          "plural": "networkpolicies",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "Installation",
          "plural": "installations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkPolicy",
          "plural": "globalnetworkpolicies",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "GlobalNetworkSet",
          "plural": "globalnetworksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BlockAffinity",
          "plural": "blockaffinities",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "KubeControllersConfiguration",
          "plural": "kubecontrollersconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPAMHandle",
          "plural": "ipamhandles",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "FelixConfiguration",
          "plural": "felixconfigurations",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "BGPPeer",
          "plural": "bgppeers",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "NetworkSet",
          "plural": "networksets",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "IPPool",
          "plural": "ippools",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "ClusterInformation",
          "plural": "clusterinformations",
          "version": "v1"
        },
        {
          "group": "operator.tigera.io",
          "kind": "TigeraStatus",
          "plural": "tigerastatuses",
          "version": "v1"
        },
        {
          "group": "crd.projectcalico.org",
          "kind": "HostEndpoint",
          "plural": "hostendpoints",
          "version": "v1"
        }
      ],
      "provider": "Tigera",
      "related_images": [
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "operator-bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2-annotation"
        },
        {
          "digest": "sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "image": "quay.io/tigera/operator@sha256:bd93e66be5cfbc123fe4e8c3f6e8ddf7654217bf26136f06dcf23f28b53063d2",
          "name": "tigera-operator"
        }
      ],
      "replaces": null,
      "skip_range": "<1.20.4",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.20.4",
      "version_original": "1.20.4"
    },
    {
      "_id": "61608f7f04fd1c67039dbd2e",
      "alm_examples": [
        {
          "api_version": "game.marketplace.redhat.com/v1",
          "kind": "Arcade",
          "metadata": {
            "name": "arcade-sample"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhm-labs/arcade-operator-bundle@sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "bundle_path_digest": "sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T18:35:43.361000+00:00",
      "csv_description": "RHM Arcade Operator - a simple operator used to showcase how to build an operator around an existing web application that can can run on Openshift, Vanilla k8s, or on-boarded to Red Hat Marketplace.",
      "csv_display_name": "Arcade Operator",
      "csv_metadata_description": "",
      "csv_name": "marketplace-games-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:56:04.326000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "marketplace-games-operator",
      "provided_apis": [
        {
          "group": "game.marketplace.redhat.com",
          "kind": "Arcade",
          "plural": "arcades",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "image": "registry.connect.redhat.com/rhm-labs/arcade-operator@sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "61608fd25cfcf7adc247ac64",
      "alm_examples": [
        {
          "api_version": "game.marketplace.redhat.com/v1",
          "kind": "Arcade",
          "metadata": {
            "name": "arcade-sample"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhm-labs/arcade-operator-bundle@sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "bundle_path_digest": "sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T18:37:06.175000+00:00",
      "csv_description": "RHM Arcade Operator - a simple operator used to showcase how to build an operator around an existing web application that can can run on Openshift, Vanilla k8s, or on-boarded to Red Hat Marketplace.",
      "csv_display_name": "Arcade Operator",
      "csv_metadata_description": "",
      "csv_name": "marketplace-games-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:22:10.439000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "marketplace-games-operator",
      "provided_apis": [
        {
          "group": "game.marketplace.redhat.com",
          "kind": "Arcade",
          "plural": "arcades",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "image": "registry.connect.redhat.com/rhm-labs/arcade-operator@sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "616091005ac6c1250490208d",
      "alm_examples": [
        {
          "api_version": "game.marketplace.redhat.com/v1",
          "kind": "Arcade",
          "metadata": {
            "name": "arcade-sample"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhm-labs/arcade-operator-bundle@sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "bundle_path_digest": "sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T18:42:08.139000+00:00",
      "csv_description": "RHM Arcade Operator - a simple operator used to showcase how to build an operator around an existing web application that can can run on Openshift, Vanilla k8s, or on-boarded to Red Hat Marketplace.",
      "csv_display_name": "Arcade Operator",
      "csv_metadata_description": "",
      "csv_name": "marketplace-games-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:02:49.278000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "marketplace-games-operator",
      "provided_apis": [
        {
          "group": "game.marketplace.redhat.com",
          "kind": "Arcade",
          "plural": "arcades",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "image": "registry.connect.redhat.com/rhm-labs/arcade-operator@sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6160918190fb938ecf600a15",
      "alm_examples": [
        {
          "api_version": "game.marketplace.redhat.com/v1",
          "kind": "Arcade",
          "metadata": {
            "name": "arcade-sample"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/rhm-labs/arcade-operator-bundle@sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "bundle_path_digest": "sha256:f5f025c7f56643fab9148bb5de8ee34a84d02b78a6abb4b5592306cf54296654",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T18:44:17.213000+00:00",
      "csv_description": "RHM Arcade Operator - a simple operator used to showcase how to build an operator around an existing web application that can can run on Openshift, Vanilla k8s, or on-boarded to Red Hat Marketplace.",
      "csv_display_name": "Arcade Operator",
      "csv_metadata_description": "",
      "csv_name": "marketplace-games-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:03:44.410000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "marketplace-games-operator",
      "provided_apis": [
        {
          "group": "game.marketplace.redhat.com",
          "kind": "Arcade",
          "plural": "arcades",
          "version": "v1"
        }
      ],
      "provider": "Red Hat Marketplace",
      "related_images": [
        {
          "digest": "sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:e10d1d982dd653db74ca87a1d1ad017bc5ef1aeb651bdea089debf16485b080b",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "image": "registry.connect.redhat.com/rhm-labs/arcade-operator@sha256:d6959be6693728d2dc4cd38b69251551d23c5002cb52db2684df31a0a8f7b0ab",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6160c7bf04fd1c67039dbd3a",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "As400rpc",
          "metadata": {
            "name": "as400rpc-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/as400-nocode@sha256:fc77255388a2e23c963c7cad91d0e845b080769e258bd50afb702a1225026d33",
      "bundle_path_digest": "sha256:fc77255388a2e23c963c7cad91d0e845b080769e258bd50afb702a1225026d33",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T22:35:43.508000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to AS/400 systems.",
      "csv_display_name": "OpenLegacy NoCode Integration with IBM i",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to AS/400 systems.",
      "csv_name": "as400rpc-operator.v1.1.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:42:11.093000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "as400rpc-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "As400rpc",
          "plural": "as400rpcs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Openlegacy",
      "related_images": [
        {
          "digest": "sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "image": "registry.connect.redhat.com/openlegacy-corp/as400rpc-operator@sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "name": "as400rpc-operator-ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "image": "registry.connect.redhat.com/openlegacy-corp/as400rpc-operator@sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "name": "as400rpc-operator"
        },
        {
          "digest": "sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "name": "as400rpc"
        },
        {
          "digest": "sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "name": "nocode-66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.1.16",
      "version_original": "1.1.16"
    },
    {
      "_id": "6160ca065cfcf7adc247ac70",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "As400rpc",
          "metadata": {
            "name": "as400rpc-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/as400-nocode@sha256:fc77255388a2e23c963c7cad91d0e845b080769e258bd50afb702a1225026d33",
      "bundle_path_digest": "sha256:fc77255388a2e23c963c7cad91d0e845b080769e258bd50afb702a1225026d33",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T22:45:26.338000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to AS/400 systems.",
      "csv_display_name": "OpenLegacy NoCode Integration with IBM i",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to AS/400 systems.",
      "csv_name": "as400rpc-operator.v1.1.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:02:03.755000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "as400rpc-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "As400rpc",
          "plural": "as400rpcs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Openlegacy",
      "related_images": [
        {
          "digest": "sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "image": "registry.connect.redhat.com/openlegacy-corp/as400rpc-operator@sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "name": "as400rpc-operator-ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "image": "registry.connect.redhat.com/openlegacy-corp/as400rpc-operator@sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "name": "as400rpc-operator"
        },
        {
          "digest": "sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "name": "as400rpc"
        },
        {
          "digest": "sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "name": "nocode-66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.16",
      "version_original": "1.1.16"
    },
    {
      "_id": "6160cfaf90fb938ecf600a28",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "As400rpc",
          "metadata": {
            "name": "as400rpc-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/as400-nocode@sha256:fc77255388a2e23c963c7cad91d0e845b080769e258bd50afb702a1225026d33",
      "bundle_path_digest": "sha256:fc77255388a2e23c963c7cad91d0e845b080769e258bd50afb702a1225026d33",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T23:09:35.025000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to AS/400 systems.",
      "csv_display_name": "OpenLegacy NoCode Integration with IBM i",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to AS/400 systems.",
      "csv_name": "as400rpc-operator.v1.1.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:21:48.250000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "as400rpc-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "As400rpc",
          "plural": "as400rpcs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Openlegacy",
      "related_images": [
        {
          "digest": "sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "image": "registry.connect.redhat.com/openlegacy-corp/as400rpc-operator@sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "name": "as400rpc-operator-ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "image": "registry.connect.redhat.com/openlegacy-corp/as400rpc-operator@sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "name": "as400rpc-operator"
        },
        {
          "digest": "sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "name": "as400rpc"
        },
        {
          "digest": "sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "name": "nocode-66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.1.16",
      "version_original": "1.1.16"
    },
    {
      "_id": "6160cfd55cfcf7adc247ac71",
      "alm_examples": [
        {
          "api_version": "openlegacy.com/v1alpha1",
          "kind": "As400rpc",
          "metadata": {
            "name": "as400rpc-sample"
          },
          "spec": {
            "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
            "replicaCount": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/openlegacy-corp/as400-nocode@sha256:fc77255388a2e23c963c7cad91d0e845b080769e258bd50afb702a1225026d33",
      "bundle_path_digest": "sha256:fc77255388a2e23c963c7cad91d0e845b080769e258bd50afb702a1225026d33",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-10-08T23:10:13.344000+00:00",
      "csv_description": "no-code application that allows simple configuration-based integration to AS/400 systems.",
      "csv_display_name": "OpenLegacy NoCode Integration with IBM i",
      "csv_metadata_description": "This image contains an OpenLegacy no-code application that allows simple configuration-based integration to AS/400 systems.",
      "csv_name": "as400rpc-operator.v1.1.16",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:05:22.288000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "as400rpc-operator",
      "provided_apis": [
        {
          "group": "openlegacy.com",
          "kind": "As400rpc",
          "plural": "as400rpcs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Openlegacy",
      "related_images": [
        {
          "digest": "sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "image": "registry.connect.redhat.com/openlegacy-corp/as400rpc-operator@sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "name": "as400rpc-operator-ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f-annotation"
        },
        {
          "digest": "sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:71527b0033776ac8a68e9c52937cbdac5909a56058105bcb6489c4a0cb9e4f4d",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "image": "registry.connect.redhat.com/openlegacy-corp/as400rpc-operator@sha256:ad879b2c6e3ea3e95b96136efce7399aa9ae49c9e1e120dc8e6484299602364f",
          "name": "as400rpc-operator"
        },
        {
          "digest": "sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "name": "as400rpc"
        },
        {
          "digest": "sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "image": "registry.connect.redhat.com/openlegacy-corp/nocode@sha256:66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159",
          "name": "nocode-66649323574f631ff9c66edfa9f976ab215497a8aa79e0db843be738dd8a7159-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.1.16",
      "version_original": "1.1.16"
    },
    {
      "_id": "6161b6745cfcf7adc247ac93",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "bundle_path_digest": "sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-10-09T15:34:12.329000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.9 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:57.815000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.5",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "ubi8-910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.5",
      "version": "1.2.9",
      "version_original": "1.2.9"
    },
    {
      "_id": "6161b83b5cfcf7adc247ac94",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "bundle_path_digest": "sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-10-09T15:41:47.560000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.9 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:09:00.989000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "ubi8-910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.9",
      "version_original": "1.2.9"
    },
    {
      "_id": "6161b8c004fd1c67039dbd59",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "bundle_path_digest": "sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-10-09T15:44:00.419000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.9 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:14:42.294000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "ubi8-910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.2.9",
      "version_original": "1.2.9"
    },
    {
      "_id": "6161bddb04fd1c67039dbd5a",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "bundle_path_digest": "sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-10-09T16:05:47.581000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.9 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:03:37.586000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "ubi8-910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.2.9",
      "version_original": "1.2.9"
    },
    {
      "_id": "6161be9a90fb938ecf600a53",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "bottlerocket": {
              "enabled": false,
              "runtimePath": "/run/dockershim.sock"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {
                "annotations": {},
                "route": {
                  "enabled": false,
                  "host": "",
                  "termination": "passthrough"
                },
                "type": ""
              },
              "azureFileShare": {
                "enabled": false,
                "secretName": "",
                "shareName": ""
              },
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "configmap": {
                "data": "",
                "enabled": false
              },
              "disruptionbudget": 0,
              "enabled": true,
              "federation": {
                "managedsvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                },
                "mastersvc": {
                  "ingress": {
                    "annotations": {
                      "ingress.kubernetes.io/protocol": "https"
                    },
                    "enabled": false,
                    "host": "",
                    "path": "/",
                    "secretName": "",
                    "tls": false
                  },
                  "route": {
                    "enabled": false,
                    "host": "",
                    "termination": "passthrough"
                  },
                  "type": ""
                }
              },
              "image": "registry.connect.redhat.com/neuvector/controller",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "capacity": "",
                "enabled": false,
                "storageClass": ""
              },
              "replicas": 3,
              "resources": {},
              "schedulerName": "",
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "enabled": true,
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
                "priorityClassName": "",
                "replicas": 3,
                "resources": {},
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
                "priorityClassName": "",
                "schedule": "0 0 * * *",
                "secure": false
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer",
              "priorityClassName": "",
              "resources": {},
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "k3s": {
              "enabled": false,
              "runtimePath": "/run/k3s/containerd/containerd.sock"
            },
            "manager": {
              "certificate": {
                "keyFile": "tls.key",
                "pemFile": "tls.pem",
                "secret": ""
              },
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "host": "",
                "path": "/",
                "secretName": "",
                "tls": false
              },
              "priorityClassName": "",
              "resources": {},
              "route": {
                "enabled": true,
                "host": "",
                "termination": "passthrough"
              },
              "svc": {
                "annotations": {},
                "loadBalancerIP": "",
                "type": "NodePort"
              }
            },
            "openshift": true,
            "psp": false,
            "resources": {},
            "serviceAccount": "default"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "bundle_path_digest": "sha256:29996196f2eba8f7662bdf1efeaac3a0ccf56bdfb2e522b340d9a239f7ca51e4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-10-09T16:08:58.454000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [github link](https://github.com/neuvector/neuvector-helm/tree/master/charts/core) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart.  NeuVector Operator versions are tied to NeuVector product versions. Version 1.2.9 of the NeuVector Certified Operator deploys version 4.3.1 of NeuVector.\n\n**Complete below steps to Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\nIn OpenShift 4.6+ use the following to check:\n\n         oc get rolebinding system:openshift:scc:privileged -n neuvector -o wide\n         NAME                              ROLE                                          AGE     USERS   GROUPS   SERVICEACCOUNTS\n         system:openshift:scc:privileged   ClusterRole/system:openshift:scc:privileged   9m22s                    neuvector/default\n\n\n**Add NeuVector license from NeuVector WebUI->setting**\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "NeuVector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.9",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:42:41.258000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": "NeuVector",
      "related_images": [
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator-487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1-annotation"
        },
        {
          "digest": "sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:487e2d6e817b7e006fb90cf1d5da2964de665424acada7bc63b4fa7b642b64f1",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:55b3d9873846d0a8670b58e8a8a76c426d3aba74d4e5c4fca43d05c1dd296f10",
          "name": "controller"
        },
        {
          "digest": "sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:fdd66288454dd01f4f618c8cf04c7da501d4362773266ec6f448d63e26e3a35c",
          "name": "enforcer"
        },
        {
          "digest": "sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:73445c18ea18f131b6fa630a97623a3043d05758205ef93fc02fa920abbedaa6",
          "name": "manager"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "updater"
        },
        {
          "digest": "sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06",
          "name": "scanner-a802c012eee80444d9deea8c4402a1d977cf57d7b2b2044f90c9acc0e7ca3e06-annotation"
        },
        {
          "digest": "sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "image": "registry.access.redhat.com/ubi8@sha256:910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7",
          "name": "ubi8-910f6bc0b5ae9b555eb91b88d28d568099b060088616eba2867b07ab6ea457c7-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.2.9",
      "version_original": "1.2.9"
    }
  ],
  "page": 15,
  "page_size": 100,
  "total": 4801
}

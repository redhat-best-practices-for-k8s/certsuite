{
  "data": [
    {
      "_id": "6262af1584481d5f52299b64",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/jetstack/cert-manager-operator-bundle@sha256:e0898bd5df18e2dccbe2d648cc4533e064e584166675e02260cb856817ece844",
      "bundle_path_digest": "sha256:e0898bd5df18e2dccbe2d648cc4533e064e584166675e02260cb856817ece844",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2022-04-22T13:35:17.288000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cert-manager-operator.v0.15.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:59:09.656000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cert-manager-operator",
      "provided_apis": [
        {
          "group": "operator.cert-manager.io",
          "kind": "CertManager",
          "plural": "certmanagers",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.15.2",
      "version_original": "0.15.2"
    },
    {
      "_id": "6262af22cde83e2b177c22fc",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:2ff2df4e61105cb9cc1905f504ed0e74907fcd43f85d200f729e464e824e928f",
      "bundle_path_digest": "sha256:2ff2df4e61105cb9cc1905f504ed0e74907fcd43f85d200f729e464e824e928f",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2022-04-22T13:35:30.502000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-certifai-operator.v1.3.2",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:21:42.756000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.2",
      "version_original": "1.3.2"
    },
    {
      "_id": "6262af2dcde83e2b177c22fd",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudark/kubeplus-operator-bundle@sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "bundle_path_digest": "sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-04-22T13:35:41.715000+00:00",
      "csv_description": "SaaS Multi-tenancy Manager",
      "csv_display_name": "KubePlus",
      "csv_metadata_description": "SaaS Operator - Create SaaS from Helm charts",
      "csv_name": "kubeplus.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:26:56.088000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "kubeplus",
      "provided_apis": [
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceComposition",
          "plural": "resourcecompositions",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceEvent",
          "plural": "resourceevents",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceMonitor",
          "plural": "resourcemonitors",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourcePolicy",
          "plural": "resourcepolicies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "kubeplus-platform-operator-9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97-annotation"
        },
        {
          "digest": "sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook@sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "name": "crd-hook"
        },
        {
          "digest": "sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook-helper@sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "name": "mutating-webhook-helper"
        },
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "platform-operator"
        },
        {
          "digest": "sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-helmer1@sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "name": "helmer"
        },
        {
          "digest": "sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-webhook-cert-setup@sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "name": "webhook-cert-setup"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "6262af30cde83e2b177c2300",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memsql/operator-bundle@sha256:12cf4fdab07a4a3d97489de54b80231af171494de7cd686d1b792a3643c15142",
      "bundle_path_digest": "sha256:12cf4fdab07a4a3d97489de54b80231af171494de7cd686d1b792a3643c15142",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2022-04-22T13:35:44.645000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "memsql-operator.v1.1.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:27:37.149000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "memql-certified",
      "provided_apis": [
        {
          "group": "memsql.com",
          "kind": "MemsqlCluster",
          "plural": "memsqlclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.1.1",
      "version_original": "1.1.1"
    },
    {
      "_id": "6262af37834f257293b611cd",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:5ec5a5cbaf6e667e761d3a6273c44f5facf29dabe2ffe502f08fe345536c8dc8",
      "bundle_path_digest": "sha256:5ec5a5cbaf6e667e761d3a6273c44f5facf29dabe2ffe502f08fe345536c8dc8",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2022-04-22T13:35:51.055000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.5.1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:02:39.648000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.5.1",
      "version_original": "1.5.1"
    },
    {
      "_id": "6262af5f173a0d36cf5d6b97",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:50d76299c5a36c9b3ab17d37b6999b9472c56a8f462ce0b92254970de64d16cc",
      "bundle_path_digest": "sha256:50d76299c5a36c9b3ab17d37b6999b9472c56a8f462ce0b92254970de64d16cc",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2022-04-22T13:36:31.060000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "nastel-navigator-operator.v1.100105.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:55:22.195000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.100105.0",
      "version_original": "1.100105.0"
    },
    {
      "_id": "6262af69173a0d36cf5d6b9d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.6",
      "creation_date": "2022-04-22T13:36:41.389000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:28:00.561000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6262af7684481d5f52299b86",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/iomesh/iomesh@sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "bundle_path_digest": "sha256:27c5d91d62371f3cf0dea4d50044d8a6e0a6015a453c4216a030683ea2474c64",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-04-22T13:36:54.493000+00:00",
      "csv_description": "IOMesh (https://www.iomesh.com/) is a cloud-native storage product specifically designed and developed for Kubernetes. It takes ZBS as its core, a \u201cproduction-ready\u201d distributed storage system developed independently by SmartX, to provide production-level high performance and reliable persistent storage for business-critical applications such as MySQL, Cassandra, MongoDB, etc., contributing to the containerized transformation of stateful applications.      \n## Pre-Requisites\n* According to https://docs.iomesh.com/deploy/prerequisites, make sure that your openshift cluster meets the \"Installation Requirements\" and set up the worker nodes correctly according to the \"Setup Worker Node\" chapter.\n* Run IOMesh Operator pre-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install the dependencies of IOMesh Operator and specific IOMesh settings for the openshift cluster:\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-pre-install-openshift.sh | sh -\n```\n## Install IOMesh Operator and IOMesh Cluster\n* Click install button on the current web page to install IOMesh Operator\n* On the **Installed Operators** -> **IOMesh Operator** -> **Create instance** -> **YAML view**, fill in an IOMesh Custom Resources according https://iomesh.run/iomesh.yaml, change the `spec.*.dataCIDR` to your own data network CIDR:\n## Post Install\n* Run IOMesh Operator post-installation script in an environment where oc or kubectl can be used to access the openshift cluster, the script will install IOMesh CSI Driver\n```shell\ncurl -sSL https://iomesh.run/iomesh-operator-post-install-openshift.sh | sh -\n```\n## Getting Started\n* Try to quickstart setup and use IOMesh: https://docs.iomesh.com/deploy/setup-iomesh\n",
      "csv_display_name": "IOMesh Operator",
      "csv_metadata_description": "",
      "csv_name": "iomesh-operator.0.10.1-rc4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:01:10.214000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "iomesh-operator",
      "provided_apis": [
        {
          "group": "iomesh.com",
          "kind": "IOMeshCluster",
          "plural": "iomeshclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator-52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3-annotation"
        },
        {
          "digest": "sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "image": "iomesh/operator@sha256:52b8718ce46fa764f802f7709f2ca39ebc78cf25e4af78a4c8011e4c0ff1d8f3",
          "name": "operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.10.1-rc4",
      "version_original": "0.10.1-rc4"
    },
    {
      "_id": "6262af82173a0d36cf5d6ba5",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3a70920f1aca227ebe5b1db44125c4370bad00379a941f0bac301d61ee112ba2",
      "bundle_path_digest": "sha256:3a70920f1aca227ebe5b1db44125c4370bad00379a941f0bac301d61ee112ba2",
      "capabilities": [
        ""
      ],
      "channel_name": "stable",
      "creation_date": "2022-04-22T13:37:06.439000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "gpu-operator-certified.v1.3.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:14:31.208000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.0",
      "version_original": "1.3.0"
    },
    {
      "_id": "6262af9a84481d5f52299b98",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/c12e/cortex-certifai-operator-bundle@sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "bundle_path_digest": "sha256:26199886640c352804df4a634f5ea3e45c3c4d4e41f241e9ef36cd4b3536be57",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2022-04-22T13:37:30.494000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "cortex-certifai-operator.v1.3.3",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T00:58:46.376000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "cortex-certifai-operator",
      "provided_apis": [
        {
          "group": "cortex.cognitivescale.com",
          "kind": "Certifai",
          "version": "v1"
        },
        {
          "group": "cortex.cognitivescale.com",
          "kind": "CertifaiScan",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.3.3",
      "version_original": "1.3.3"
    },
    {
      "_id": "6262af9ccde83e2b177c2324",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:30cc380829d5185e535c6ce2862fdfbe725694e638edade24d1d2ead76f063ca",
      "bundle_path_digest": "sha256:30cc380829d5185e535c6ce2862fdfbe725694e638edade24d1d2ead76f063ca",
      "capabilities": [
        ""
      ],
      "channel_name": "beta",
      "creation_date": "2022-04-22T13:37:32.561000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "instana-agent-operator.v0.3.4",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:04:20.884000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "0.3.4",
      "version_original": "0.3.4"
    },
    {
      "_id": "6262afa9cde83e2b177c232d",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/ibm-edge/growth-stack-operator-bundle@sha256:04327840791db3cd6e2ffa48084a515dc763f2119ca678f9d63cf7a11b2f4c82",
      "bundle_path_digest": "sha256:04327840791db3cd6e2ffa48084a515dc763f2119ca678f9d63cf7a11b2f4c82",
      "capabilities": [
        ""
      ],
      "channel_name": "alpha",
      "creation_date": "2022-04-22T13:37:45.419000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "growth-stack-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:53:50.196000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "growth-stack-operator-certified",
      "provided_apis": [
        {
          "group": "growth-stack.operator.com",
          "kind": "GenerateKey",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "GrowthStackSuite",
          "plural": "growthstacksuites",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "StoreForwardMetric",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "AirgappedDeployment",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "AnalyticsProxy",
          "version": "v1alpha1"
        },
        {
          "group": "growth-stack.operator.com",
          "kind": "DeleteCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6262afc7834f257293b61211",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.0.8",
      "creation_date": "2022-04-22T13:38:15.745000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:07:42.915000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "6262b00984481d5f52299bcd",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/runai/runai-operator@sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "bundle_path_digest": "sha256:c9379256b0ce19b686f999ec2f0cfac1e8c69c8fbb47d574d8ccf485cc5f920a",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "fast",
      "creation_date": "2022-04-22T13:39:21.639000+00:00",
      "csv_description": "Run:AI is a cloud-native compute management platform for the AI era. Run:AI gives data scientists access to all of the pooled compute power they need to accelerate AI development and deployment - whether on-premises or in the cloud. The platform provides IT and MLOps with real-time visibility and control over scheduling and dynamic provisioning of GPUs to deliver more than 2X gains in utilization of existing GPU infrastructure. Built on Kubernetes, Run:AI enables seamless integration with existing IT and data science workflows. More at www.run.ai.",
      "csv_display_name": "Run:AI",
      "csv_metadata_description": "",
      "csv_name": "installkit-customer.v2.0.15",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:05:15.871000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "installkit-customer",
      "provided_apis": [],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "image": "gcr.io/runai-openshift/operator@sha256:75d3eaaa698a72b25fae2ebd414e1a49339517f3a75f752bb76704f673edeb08",
          "name": "operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.5",
      "version_original": "2.1.5"
    },
    {
      "_id": "6262b19384481d5f52299c24",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cloudark/kubeplus-operator-bundle@sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "bundle_path_digest": "sha256:a1944c0e06d995361c72f03b8a975a646dd25935a0312c5209a03cb1a1732256",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-04-22T13:45:55.023000+00:00",
      "csv_description": "SaaS Multi-tenancy Manager",
      "csv_display_name": "KubePlus",
      "csv_metadata_description": "SaaS Operator - Create SaaS from Helm charts",
      "csv_name": "kubeplus.v1.0.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:11:05.153000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "kubeplus",
      "provided_apis": [
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceComposition",
          "plural": "resourcecompositions",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceEvent",
          "plural": "resourceevents",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourceMonitor",
          "plural": "resourcemonitors",
          "version": "v1alpha1"
        },
        {
          "group": "workflows.kubeplus",
          "kind": "ResourcePolicy",
          "plural": "resourcepolicies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "kubeplus-platform-operator-9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97-annotation"
        },
        {
          "digest": "sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook@sha256:08a76ff2c5644872a68bb333162d86c57c79cd7d4e1201dda894902914896e7b",
          "name": "crd-hook"
        },
        {
          "digest": "sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-mutating-webhook-helper@sha256:fb180d9b3b0ce6c2141fe5280a405636eeba1ebbad54310ee83cdb412d210150",
          "name": "mutating-webhook-helper"
        },
        {
          "digest": "sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-platform-operator@sha256:9de09c08e692625e42e9d2cf096b2fc746c6b5a0ea4833f471a3b705db8c2b97",
          "name": "platform-operator"
        },
        {
          "digest": "sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-helmer1@sha256:d7861164cb1555c673d157c182852b00bd783f9d66cabb2eca4970a3f1a68eb8",
          "name": "helmer"
        },
        {
          "digest": "sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "image": "registry.connect.redhat.com/cloudark/kubeplus-webhook-cert-setup@sha256:c60295e9c86607e1c06aa63d027b7824c3255852e869b98ad57cb3a68a987f9c",
          "name": "webhook-cert-setup"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "1.0.5",
      "version_original": "1.0.5"
    },
    {
      "_id": "627bcfe93e0ff4d601b6e26c",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-11T15:02:01.971000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:00:49.361000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627bcfefb2139e17bacb6921",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-11T15:02:07.264000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:54.432000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627bdf8a4be4723d90ee614f",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-11T16:08:42.635000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:58:49.316000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627bdf8d4be4723d90ee6152",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-11T16:08:44.999000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:58:56.320000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627be1304be4723d90ee616b",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-11T16:15:44.011000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:57:58.406000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627be13db2139e17bacb7504",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-11T16:15:57.080000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:11:12.955000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627be48d4be4723d90ee61c0",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-11T16:30:05.534000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:43:59.448000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627be4d63e0ff4d601b6ee8c",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-11T16:31:18.711000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:27:30.622000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627be62fb2139e17bacb7568",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-11T16:37:03.566000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:38:38.992000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627be6594be4723d90ee61ed",
      "alm_examples": [
        {
          "api_version": "helm.infinidat.com/v1alpha1",
          "kind": "InfiniboxCsiDriver",
          "metadata": {
            "name": "infiniboxcsidriver-sample"
          },
          "spec": {
            "Infinibox_Cred": {
              "SecretName": "infinibox-creds",
              "hostname": "my-infinibox-hostname",
              "inbound_secret": "0.0000000000000",
              "inbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonout",
              "outbound_secret": "0.0000000000000",
              "outbound_user": "iqn.2020-06.com.csi-driver-iscsi.infinidat:commonin",
              "password": "my-infinibox-password",
              "username": "my-infinibox-username"
            },
            "csiDriverName": "infinibox-csi-driver",
            "csiDriverVersion": "v2.1.2",
            "images": {
              "attachersidecar": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
              "attachersidecar_pull_policy": "IfNotPresent",
              "csidriver": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
              "csidriver_pull_policy": "Always",
              "imagePullSecret": "private-docker-reg-secret",
              "provisionersidecar": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
              "provisionersidecar_pull_policy": "IfNotPresent",
              "registrarsidecar": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
              "registrarsidecar_pull_policy": "IfNotPresent",
              "resizersidecar": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
              "resizersidecar_pull_policy": "IfNotPresent",
              "snapshottersidecar": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
              "snapshottersidecar_pull_policy": "IfNotPresent"
            },
            "instanceCount": 1,
            "logLevel": "debug",
            "replicaCount": 1,
            "volumeNamePrefix": "csi"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/infinidat/infinibox-operator-certified-bundle@sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "bundle_path_digest": "sha256:1a84ae49568109a00190cfd9dcfc1ed8aef23f14f5c93152e0a8fb3619191f67",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-11T16:37:45.278000+00:00",
      "csv_description": "Infinidat InfiniBox Container Storage Interface (CSI) Driver is a CNCF-compliant Kubernetes integration for InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift.\n \n## Features and Benefits\n  \n* **Multi-protocol flexibility** - manage Kubernetes Persistent Volumes attached via block and file protocols, including Fibre Channel, iSCSI, and NFS, with all Kubernetes PV access modes\n* **Multi-petabyte scalability** - support hundreds of thousands of PVs per InfiniBox system and control multiple InfiniBox arrays within a single Kubernetes cluster  \n* **Advanced enterprise features** - manage native InfiniBox snapshots and clones, including restoring from snapshots, and import PVs created outside of InfiniBox CSI Driver\n  \n## Required Parameters\n  \n* `hostname` - IP address or hostname of the InfiniBox management interface\n* `username` / `password` - InfiniBox credentials\n* `SecretName` - secret name, to be used in the StorageClass to define a specific InfiniBox for persistent volumes\n\n## Optional Parameters\n* `inbound_user` / `inbound_secret` / `outbound_user` / `outbound_secret` - credentials for iSCSI CHAP authentication\n",
      "csv_display_name": "InfiniBox CSI Driver - Operator",
      "csv_metadata_description": "CNCF-compliant Kubernetes integration for Infinidat InfiniBox storage systems, offering advanced enterprise functionality for petabyte-scale Kubernetes deployments including Red Hat OpenShift Platform.",
      "csv_name": "infinibox-operator.v2.1.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:00:45.086000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "infinibox-operator-certified",
      "provided_apis": [
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotContent",
          "plural": "volumesnapshotcontents",
          "version": "v1beta1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshot",
          "plural": "volumesnapshots",
          "version": "v1beta1"
        },
        {
          "group": "helm.infinidat.com",
          "kind": "InfiniboxCsiDriver",
          "plural": "infiniboxcsidrivers",
          "version": "v1alpha1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1"
        },
        {
          "group": "snapshot.storage.k8s.io",
          "kind": "VolumeSnapshotClass",
          "plural": "volumesnapshotclasses",
          "version": "v1beta1"
        }
      ],
      "provider": "Infinidat",
      "related_images": [
        {
          "digest": "sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "image": "registry.connect.redhat.com/infinidat/infinibox-csidriver-certified@sha256:5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921",
          "name": "infinibox-csidriver-certified-5a8f8dc3e2ec2c022dfd756f47ae6db1695ea5f3e4ed279476b5535bf01aa921-annotation"
        },
        {
          "digest": "sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12c1619c65183cec6cf2b228fc327cecc73e343ffb15c99b9ca6dc01f7346e7c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "image": "registry.connect.redhat.com/infinidat/infinibox-operator-certified@sha256:5f2e1133319195ec5a2028da0f064240dba72500d1105535ad40fd3ab794fe43",
          "name": "manager"
        },
        {
          "digest": "sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "image": "k8s.gcr.io/sig-storage/csi-snapshotter@sha256:89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709",
          "name": "csi-snapshotter-89e900a160a986a1a7a4eba7f5259e510398fa87ca9b8a729e7dec59e04c7709-annotation"
        },
        {
          "digest": "sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "image": "k8s.gcr.io/sig-storage/csi-resizer@sha256:9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4",
          "name": "csi-resizer-9ebbf9f023e7b41ccee3d52afe39a89e3ddacdbb69269d583abfc25847cfd9e4-annotation"
        },
        {
          "digest": "sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "image": "k8s.gcr.io/sig-storage/csi-node-driver-registrar@sha256:4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6",
          "name": "csi-node-driver-registrar-4fd21f36075b44d1a423dfb262ad79202ce54e95f5cbc4622a6c1c38ab287ad6-annotation"
        },
        {
          "digest": "sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "image": "k8s.gcr.io/sig-storage/csi-provisioner@sha256:122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119",
          "name": "csi-provisioner-122bfb8c1edabb3c0edd63f06523e6940d958d19b3957dc7b1d6f81e9f1f6119-annotation"
        },
        {
          "digest": "sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "image": "k8s.gcr.io/sig-storage/csi-attacher@sha256:8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b",
          "name": "csi-attacher-8b9c313c05f54fb04f8d430896f5f5904b6cb157df261501b29adc04d2b2dc7b-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<2.1.2",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "2.1.2",
      "version_original": "2.1.2"
    },
    {
      "_id": "627c09969b28cbab99bd051b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-11T19:08:06.105000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T16:22:47.421000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c099c9b28cbab99bd051e",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-05-11T19:08:12.182000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:20:59.698000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.11",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.11",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c10753e0ff4d601b6f07d",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-11T19:37:25.715000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-07T13:11:45.017000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c107a9b28cbab99bd055b",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-05-11T19:37:30.993000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:08:55.746000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c14b59b28cbab99bd05fc",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-05-11T19:55:33.971000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:40:00.885000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c14d43e0ff4d601b6f127",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-11T19:56:04.178000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-07T13:12:14.567000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.8",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.8",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c16c54be4723d90ee6487",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-11T20:04:21.626000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-07T13:03:04.418000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c16cb9b28cbab99bd064a",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-05-11T20:04:27.383000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:10:15.384000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c173c3e0ff4d601b6f176",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-05-11T20:06:20.526000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:58:52.545000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c177c3e0ff4d601b6f181",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-11T20:07:24.591000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-07T13:12:15.458000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c1927228d5769c56920e2",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-11T20:14:31.567000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-06T22:29:27.738000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c19324be4723d90ee64c1",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "production",
      "creation_date": "2022-05-11T20:14:42.214000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:24:00.084000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.6",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "version": "v1alpha1"
        }
      ],
      "provider": "Redis",
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.6",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c69d74be4723d90ee6b56",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "5.4.14-31.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "size": 3,
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "bundle_path_digest": "sha256:16da0c69f0e2585be8e44abe6e269dd35176771f5a1ecda3111c8a2f52c790a0",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-05-12T01:58:47.690000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data tructures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-inclass exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n* For service broker - a k8s distribution that supports service catalog (see also: service-catalog)\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project withh the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v5.4.14-7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T01:58:47.690000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "redislabs/operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "operator-062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217-annotation"
        },
        {
          "digest": "sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:062b478e4d49e263a99a87140a56919d204a00583113fcc2e9da00fe4dfb8217",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.4.14-7",
      "version_original": "5.4.14-7"
    },
    {
      "_id": "627c6a03228d5769c56927a1",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "aesmd": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/aesmd-dcap",
                "tag": "latest"
              },
              "ccmNodeAgent": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/ccm-node-agent-ubi7",
                "tag": "latest"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "multiPlatformRegistration": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/multi-platform-registration-ubi8",
                "tag": "latest"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-dcap-operator-bundle@sha256:545724c273dfd6a1fa923d468b2d054f39ec3186d01586a8b3fe494c0f22f8dd",
      "bundle_path_digest": "sha256:545724c273dfd6a1fa923d468b2d054f39ec3186d01586a8b3fe494c0f22f8dd",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T01:59:31.429000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities, in-kernel driver installed and fsgsbase support.\n\n## Installation\n * Choose a namespace to install the Operator. \n Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent DCAP Operator",
      "csv_metadata_description": "",
      "csv_name": "ccm-node-agent-dcap-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:50:34.656000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "ccm-node-agent-dcap-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "version": "v1"
        }
      ],
      "provider": "Fortanix Inc.",
      "related_images": [
        {
          "digest": "sha256:62575404000cb77fa8d2284c87b31e39e667a55b0fb47821263b23b3d1135a7e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62575404000cb77fa8d2284c87b31e39e667a55b0fb47821263b23b3d1135a7e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4fd28bea26aee461eb9c1800cdf5f041b64ae3ea6652203f8ad9feb680aaefee",
          "image": "docker.io/fortanix/ccm-node-agent-dcap-operator@sha256:4fd28bea26aee461eb9c1800cdf5f041b64ae3ea6652203f8ad9feb680aaefee",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "627c6a0c4be4723d90ee6b66",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "ccmNodeAgent": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/ccm-node-agent-ubi7",
                "tag": "latest"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "sgxSoftwareInstaller": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/sgx-software-installer-ubi7",
                "tag": "latest"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-operator-bundle@sha256:12746020eefd383963e08a86e3542608aed1999b4e520435e366a307a6a9eebc",
      "bundle_path_digest": "sha256:12746020eefd383963e08a86e3542608aed1999b4e520435e366a307a6a9eebc",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T01:59:39.997000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities.\n\n## Installation\n* Choose a namespace to install the Operator. Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent Operator",
      "csv_metadata_description": "",
      "csv_name": "ccm-node-agent-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:50:38.920000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "ccm-node-agent-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "version": "v1"
        }
      ],
      "provider": "Fortanix Inc.",
      "related_images": [
        {
          "digest": "sha256:62575404000cb77fa8d2284c87b31e39e667a55b0fb47821263b23b3d1135a7e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62575404000cb77fa8d2284c87b31e39e667a55b0fb47821263b23b3d1135a7e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e2a3d52551198102ddbe7f4ebd9621edc357c57ddeff47b7ed9f2cf56a1bed39",
          "image": "docker.io/fortanix/ccm-node-agent-operator@sha256:e2a3d52551198102ddbe7f4ebd9621edc357c57ddeff47b7ed9f2cf56a1bed39",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "627c6a194be4723d90ee6b6c",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:a20d66bf3efda232b27631304f86eb54f0363a9435771c374d4e1357387be2af",
      "bundle_path_digest": "sha256:a20d66bf3efda232b27631304f86eb54f0363a9435771c374d4e1357387be2af",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "1.10",
      "creation_date": "2022-05-12T01:59:53.869000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.10-x6adc6ff",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-07T13:11:45.692000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:83bfc1052543e8b1e31f06fa2b5bbd2bd41cc79f264010241fc1994e35281616",
          "image": "quay.io/cilium/cilium@sha256:83bfc1052543e8b1e31f06fa2b5bbd2bd41cc79f264010241fc1994e35281616",
          "name": "cilium"
        },
        {
          "digest": "sha256:a0769e44299bba301dee08d489f4e2d3b3924916bed985346dcf9fcf10861c8a",
          "image": "quay.io/cilium/hubble-relay@sha256:a0769e44299bba301dee08d489f4e2d3b3924916bed985346dcf9fcf10861c8a",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:8a317287b6ac8fe0ba4999342c9627dc913e0c1591552164f96d0aadf5d1a740",
          "image": "quay.io/cilium/operator-generic@sha256:8a317287b6ac8fe0ba4999342c9627dc913e0c1591552164f96d0aadf5d1a740",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:83bfc1052543e8b1e31f06fa2b5bbd2bd41cc79f264010241fc1994e35281616",
          "image": "quay.io/cilium/cilium@sha256:83bfc1052543e8b1e31f06fa2b5bbd2bd41cc79f264010241fc1994e35281616",
          "name": "preflight"
        },
        {
          "digest": "sha256:e13d41db3f5ee93d8b3abcaa10cc4005522bc797be3d69fc96ac5e03b60c7b11",
          "image": "quay.io/cilium/clustermesh-apiserver@sha256:e13d41db3f5ee93d8b3abcaa10cc4005522bc797be3d69fc96ac5e03b60c7b11",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble-ui-proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:4245ae5650f075cea29ebce2c2eb7dc59c223cb6cae50a0ab2efe6004ef2363f",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:4245ae5650f075cea29ebce2c2eb7dc59c223cb6cae50a0ab2efe6004ef2363f",
          "name": "operator"
        },
        {
          "digest": "sha256:a0769e44299bba301dee08d489f4e2d3b3924916bed985346dcf9fcf10861c8a",
          "image": "quay.io/cilium/hubble-relay@sha256:a0769e44299bba301dee08d489f4e2d3b3924916bed985346dcf9fcf10861c8a",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:8a317287b6ac8fe0ba4999342c9627dc913e0c1591552164f96d0aadf5d1a740",
          "image": "quay.io/cilium/operator-generic@sha256:8a317287b6ac8fe0ba4999342c9627dc913e0c1591552164f96d0aadf5d1a740",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble_ui_proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.10+x6adc6ff",
      "version_original": "1.10.10+x6adc6ff"
    },
    {
      "_id": "627c6a1f228d5769c56927a8",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-05-12T01:59:59.595000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T01:59:59.595000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "627c6a28228d5769c56927ab",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:ee80fbc119a6fa70f1657b8a72614bd8221eff20a2e2fcac2b7c209f244e1f85",
      "bundle_path_digest": "sha256:ee80fbc119a6fa70f1657b8a72614bd8221eff20a2e2fcac2b7c209f244e1f85",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:00:08.647000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.11.3-xe1ecfe7",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:50:59.805000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Isovalent",
      "related_images": [
        {
          "digest": "sha256:cb6aac121e348abd61a692c435a90a6e2ad3f25baa9915346be7b333de8a767f",
          "image": "quay.io/cilium/cilium@sha256:cb6aac121e348abd61a692c435a90a6e2ad3f25baa9915346be7b333de8a767f",
          "name": "cilium"
        },
        {
          "digest": "sha256:7256ec111259a79b4f0e0f80ba4256ea23bd472e1fc3f0865975c2ed113ccb97",
          "image": "quay.io/cilium/hubble-relay@sha256:7256ec111259a79b4f0e0f80ba4256ea23bd472e1fc3f0865975c2ed113ccb97",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:5b81db7a32cb7e2d00bb3cf332277ec2b3be239d9e94a8d979915f4e6648c787",
          "image": "quay.io/cilium/operator-generic@sha256:5b81db7a32cb7e2d00bb3cf332277ec2b3be239d9e94a8d979915f4e6648c787",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:cb6aac121e348abd61a692c435a90a6e2ad3f25baa9915346be7b333de8a767f",
          "image": "quay.io/cilium/cilium@sha256:cb6aac121e348abd61a692c435a90a6e2ad3f25baa9915346be7b333de8a767f",
          "name": "preflight"
        },
        {
          "digest": "sha256:75c03de7756bb77ea7ac8aed8449a2fc9204a1c3384157d8cf41336976e6825d",
          "image": "quay.io/cilium/clustermesh-apiserver@sha256:75c03de7756bb77ea7ac8aed8449a2fc9204a1c3384157d8cf41336976e6825d",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble-ui-proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:25086881203511c40afbda91762bcbac023a5a2ca8a722cfea0dd119fa3546d4",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:25086881203511c40afbda91762bcbac023a5a2ca8a722cfea0dd119fa3546d4",
          "name": "operator"
        },
        {
          "digest": "sha256:7256ec111259a79b4f0e0f80ba4256ea23bd472e1fc3f0865975c2ed113ccb97",
          "image": "quay.io/cilium/hubble-relay@sha256:7256ec111259a79b4f0e0f80ba4256ea23bd472e1fc3f0865975c2ed113ccb97",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:5b81db7a32cb7e2d00bb3cf332277ec2b3be239d9e94a8d979915f4e6648c787",
          "image": "quay.io/cilium/operator-generic@sha256:5b81db7a32cb7e2d00bb3cf332277ec2b3be239d9e94a8d979915f4e6648c787",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble_ui_proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.11.3+xe1ecfe7",
      "version_original": "1.11.3+xe1ecfe7"
    },
    {
      "_id": "627c6a359b28cbab99bd0d11",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:3f69a124f9c31ebc0c78f249872a69b1289622bf4f5aad4c739f6e8caf9cb85b",
      "bundle_path_digest": "sha256:3f69a124f9c31ebc0c78f249872a69b1289622bf4f5aad4c739f6e8caf9cb85b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "1.9",
      "creation_date": "2022-05-12T02:00:21.535000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.9.14-x70dc065",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-07T13:11:45.335000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2c6ce93fa7e625979043a387eb998c17ad57df8768d89facb9b715da42a4c51c",
          "image": "quay.io/cilium/cilium@sha256:2c6ce93fa7e625979043a387eb998c17ad57df8768d89facb9b715da42a4c51c",
          "name": "cilium"
        },
        {
          "digest": "sha256:fd6ab1aea260abc5f64eca26c1b1e7009983e4aaa8e5d098e8d442f7659603fb",
          "image": "quay.io/cilium/hubble-relay@sha256:fd6ab1aea260abc5f64eca26c1b1e7009983e4aaa8e5d098e8d442f7659603fb",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:bdcfd2eade99933f2fda55ef79ea697ddfad3512f65b15bcd0ba7702518c1ba3",
          "image": "quay.io/cilium/operator-generic@sha256:bdcfd2eade99933f2fda55ef79ea697ddfad3512f65b15bcd0ba7702518c1ba3",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:2c6ce93fa7e625979043a387eb998c17ad57df8768d89facb9b715da42a4c51c",
          "image": "quay.io/cilium/cilium@sha256:2c6ce93fa7e625979043a387eb998c17ad57df8768d89facb9b715da42a4c51c",
          "name": "preflight"
        },
        {
          "digest": "sha256:a0da5edf0372899647da51de1b277f0bab8e676d694aee7f939cddfdd3172010",
          "image": "quay.io/cilium/clustermesh-apiserver@sha256:a0da5edf0372899647da51de1b277f0bab8e676d694aee7f939cddfdd3172010",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble-ui-proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:3a9ca9a4c2f78109f265c4758f5f693d01865f2d0e31bc5f1ecbc065e878628b",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:3a9ca9a4c2f78109f265c4758f5f693d01865f2d0e31bc5f1ecbc065e878628b",
          "name": "operator"
        },
        {
          "digest": "sha256:fd6ab1aea260abc5f64eca26c1b1e7009983e4aaa8e5d098e8d442f7659603fb",
          "image": "quay.io/cilium/hubble-relay@sha256:fd6ab1aea260abc5f64eca26c1b1e7009983e4aaa8e5d098e8d442f7659603fb",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:bdcfd2eade99933f2fda55ef79ea697ddfad3512f65b15bcd0ba7702518c1ba3",
          "image": "quay.io/cilium/operator-generic@sha256:bdcfd2eade99933f2fda55ef79ea697ddfad3512f65b15bcd0ba7702518c1ba3",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble_ui_proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.9.14+x70dc065",
      "version_original": "1.9.14+x70dc065"
    },
    {
      "_id": "627c6a51228d5769c56927b4",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "bundle_path_digest": "sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:00:49.403000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:30:17.807000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "8.5.1",
      "version_original": "8.5.1"
    },
    {
      "_id": "627c6aa84be4723d90ee6b8d",
      "alm_examples": [
        {
          "api_version": "crdb.cockroachlabs.com/v1alpha1",
          "kind": "CrdbCluster",
          "metadata": {
            "name": "crdb-tls-example",
            "namespace": "placeholder"
          },
          "spec": {
            "cockroachDBVersion": "v21.2.8",
            "dataStore": {
              "pvc": {
                "spec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "10Gi"
                    }
                  },
                  "volumeMode": "Filesystem"
                }
              }
            },
            "nodes": 3,
            "tlsEnabled": true
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator-bundle@sha256:1d2acb999ac3e8b1a664ddd4de8bec2db072cb5575f61c15eb5a31e575c051ac",
      "bundle_path_digest": "sha256:1d2acb999ac3e8b1a664ddd4de8bec2db072cb5575f61c15eb5a31e575c051ac",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:02:16.476000+00:00",
      "csv_description": "This operator launches and manages a 3+ node cluster of CockroachDB.",
      "csv_display_name": "CockroachDB Operator",
      "csv_metadata_description": "CockroachDB Operator",
      "csv_name": "cockroach-operator.v2.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:52:57.179000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "cockroachdb-certified",
      "provided_apis": [
        {
          "group": "crdb.cockroachlabs.com",
          "kind": "CrdbCluster",
          "version": "v1alpha1"
        }
      ],
      "provider": "Cockroach Labs",
      "related_images": [
        {
          "digest": "sha256:288ae92ebdfc848540ff80ef682b74e50809e9742cafce22b028112326d66b65",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:288ae92ebdfc848540ff80ef682b74e50809e9742cafce22b028112326d66b65",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_4"
        },
        {
          "digest": "sha256:87dcdbdc07904b217880e70484582c9d87dde7e4071e01cf9e2e6da43111190e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:87dcdbdc07904b217880e70484582c9d87dde7e4071e01cf9e2e6da43111190e",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_5"
        },
        {
          "digest": "sha256:6667919a41d304d5d4ade3ded4f11b42d722a995a4283e11e15320529f7f9abf",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:6667919a41d304d5d4ade3ded4f11b42d722a995a4283e11e15320529f7f9abf",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_8"
        },
        {
          "digest": "sha256:cdab9fc62e07dd349703ae394adb48ab3d2281610df35e081f4b76e208b38c8e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:cdab9fc62e07dd349703ae394adb48ab3d2281610df35e081f4b76e208b38c8e",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_11"
        },
        {
          "digest": "sha256:c1a07a8686bbadcb8c68ffba4e40e1285e581e24d43e5811f38a22d57fb9cc56",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:c1a07a8686bbadcb8c68ffba4e40e1285e581e24d43e5811f38a22d57fb9cc56",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_12"
        },
        {
          "digest": "sha256:b02549e5c3673b8154441990afa05a478d1ecc2bd0a70af64fd693cb6b469cb0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:b02549e5c3673b8154441990afa05a478d1ecc2bd0a70af64fd693cb6b469cb0",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_13"
        },
        {
          "digest": "sha256:25791b76b0d4b7220dadab3a405b3fdc330ba264ef6c9fbfdfb924c154c4bb5e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:25791b76b0d4b7220dadab3a405b3fdc330ba264ef6c9fbfdfb924c154c4bb5e",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_15"
        },
        {
          "digest": "sha256:49421968126f9c98499bc0cf0c65729370ab566da3fbd1588c100b20052b972e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:49421968126f9c98499bc0cf0c65729370ab566da3fbd1588c100b20052b972e",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_16"
        },
        {
          "digest": "sha256:e39bce1d9b08a7d62eb05d53e29fabc668bf6a4e4ae3eb9994eebf5b642ff6cf",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:e39bce1d9b08a7d62eb05d53e29fabc668bf6a4e4ae3eb9994eebf5b642ff6cf",
          "name": "RELATED_IMAGE_COCKROACH_v20_1_17"
        },
        {
          "digest": "sha256:e67299fc0e79cff5b6caf9c0df154180dbaedc57b84f072acf68b7b2c958668d",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:e67299fc0e79cff5b6caf9c0df154180dbaedc57b84f072acf68b7b2c958668d",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_0"
        },
        {
          "digest": "sha256:fec6b0f56f2b94f141c8553a63b2e08b9494d4e6c5dc109d73268621ca445c56",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:fec6b0f56f2b94f141c8553a63b2e08b9494d4e6c5dc109d73268621ca445c56",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_1"
        },
        {
          "digest": "sha256:3edda46eccce8350440a0ea78dad2e41a3eaa0838fe57945ad5318739e968516",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:3edda46eccce8350440a0ea78dad2e41a3eaa0838fe57945ad5318739e968516",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_2"
        },
        {
          "digest": "sha256:ba9da9aa9d662c0fa9fd16a40551eedf100869b008cf9c0c09cbb87a09fda697",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:ba9da9aa9d662c0fa9fd16a40551eedf100869b008cf9c0c09cbb87a09fda697",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_3"
        },
        {
          "digest": "sha256:a5414e54c4c513c7877f925b09eadc4c28eb592d3e120bcf9c65ab10e07cd607",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:a5414e54c4c513c7877f925b09eadc4c28eb592d3e120bcf9c65ab10e07cd607",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_4"
        },
        {
          "digest": "sha256:2664d78fbe88c368927ddbf80704f430e6ca2ce1f72cb4b7e1906dfe72be7cd0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:2664d78fbe88c368927ddbf80704f430e6ca2ce1f72cb4b7e1906dfe72be7cd0",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_5"
        },
        {
          "digest": "sha256:867c46bb4d8ca3f2fb8dc94063facc99758344c7b9d04f10e50932023ef5d262",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:867c46bb4d8ca3f2fb8dc94063facc99758344c7b9d04f10e50932023ef5d262",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_6"
        },
        {
          "digest": "sha256:fe0c615b4d1ef4ec6e089e85deae2b6bd85410be8ed525e2317c759669417f47",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:fe0c615b4d1ef4ec6e089e85deae2b6bd85410be8ed525e2317c759669417f47",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_8"
        },
        {
          "digest": "sha256:ec1672ce8091b677689a31cf09dbde5d1697f4caddae0151040b0fb156722e9d",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:ec1672ce8091b677689a31cf09dbde5d1697f4caddae0151040b0fb156722e9d",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_9"
        },
        {
          "digest": "sha256:de94036e9cc8618e0493313512d880ae145e94d3bff54ed51b0de66a88da1319",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:de94036e9cc8618e0493313512d880ae145e94d3bff54ed51b0de66a88da1319",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_10"
        },
        {
          "digest": "sha256:98b76cf63aabc39d026317905d6ba72eec3f0d35c0f770ebb8b789c3fa0709ee",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:98b76cf63aabc39d026317905d6ba72eec3f0d35c0f770ebb8b789c3fa0709ee",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_11"
        },
        {
          "digest": "sha256:1ed18af1d3ffc65c24946c817d7d04d5f01025d3fb6c9eb78940e343b989bed0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:1ed18af1d3ffc65c24946c817d7d04d5f01025d3fb6c9eb78940e343b989bed0",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_12"
        },
        {
          "digest": "sha256:bcf3f976437c4ee52e922aa5d7e382a86a031d780b711c08c6c158dbf2d26cfa",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:bcf3f976437c4ee52e922aa5d7e382a86a031d780b711c08c6c158dbf2d26cfa",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_13"
        },
        {
          "digest": "sha256:c56f980b87a066d1e65ac8cff3d75040af9bd13093494cf4b4d30b5234d56edc",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:c56f980b87a066d1e65ac8cff3d75040af9bd13093494cf4b4d30b5234d56edc",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_14"
        },
        {
          "digest": "sha256:d290099496d070f135b5cc1e6bd59607512524d399df81698f11cfa09b8dca4a",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:d290099496d070f135b5cc1e6bd59607512524d399df81698f11cfa09b8dca4a",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_15"
        },
        {
          "digest": "sha256:d9a756df2ed2536b938d7c24fbf3de149cd1a0f44a3a1a0cc5d042fe8980362e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:d9a756df2ed2536b938d7c24fbf3de149cd1a0f44a3a1a0cc5d042fe8980362e",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_16"
        },
        {
          "digest": "sha256:de4abe26a8c7c1a7e668bda0c462bee7cfc65bb826d8ffedebdf51fa00892719",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:de4abe26a8c7c1a7e668bda0c462bee7cfc65bb826d8ffedebdf51fa00892719",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_17"
        },
        {
          "digest": "sha256:3eba3d1781879cac726cda2435fbf1965dcdb7f1d73c78824d9666bc4ec4d8d3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:3eba3d1781879cac726cda2435fbf1965dcdb7f1d73c78824d9666bc4ec4d8d3",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_18"
        },
        {
          "digest": "sha256:bbe57aa4d8d5c9e162f9fcef4bd25f954ad81c0d79546033d202a1fc10a591ec",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:bbe57aa4d8d5c9e162f9fcef4bd25f954ad81c0d79546033d202a1fc10a591ec",
          "name": "RELATED_IMAGE_COCKROACH_v20_2_19"
        },
        {
          "digest": "sha256:0ef0234b6fd42977b8a9eda2c59ca8194cc1c8cf6425b99d7bf8fde8feb826c5",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:0ef0234b6fd42977b8a9eda2c59ca8194cc1c8cf6425b99d7bf8fde8feb826c5",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_0"
        },
        {
          "digest": "sha256:162a356cc8b423926634f83a1372b6321104d8de7a2c5b9b7b2681c769a88cc7",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:162a356cc8b423926634f83a1372b6321104d8de7a2c5b9b7b2681c769a88cc7",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_1"
        },
        {
          "digest": "sha256:27ef61d9f320a52ee9617f2ab8a1d1a1eacc576a0add2d85d99f9413912b651f",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:27ef61d9f320a52ee9617f2ab8a1d1a1eacc576a0add2d85d99f9413912b651f",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_2"
        },
        {
          "digest": "sha256:5eb59093ee81f8115d82ec6a8a1c35eefad055cbb3a175978cef7afe9196e6a0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:5eb59093ee81f8115d82ec6a8a1c35eefad055cbb3a175978cef7afe9196e6a0",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_3"
        },
        {
          "digest": "sha256:38e940144e34b69dfb7d1cf31456e7a0016c5dd40d5626baa346446c7678ceb0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:38e940144e34b69dfb7d1cf31456e7a0016c5dd40d5626baa346446c7678ceb0",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_4"
        },
        {
          "digest": "sha256:0bd22d69db5ac570f30d3379afc67f6c2e46fc5b027c8aab42c3f562085d4672",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:0bd22d69db5ac570f30d3379afc67f6c2e46fc5b027c8aab42c3f562085d4672",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_5"
        },
        {
          "digest": "sha256:9f5dfcde260804cd2d6976a6b3544ddabdd899365be2104210dc78ba13755ec3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:9f5dfcde260804cd2d6976a6b3544ddabdd899365be2104210dc78ba13755ec3",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_6"
        },
        {
          "digest": "sha256:ab47ddd22328e0a1564814f049616c3e3569d24c0a290abee9308392c6a0de23",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:ab47ddd22328e0a1564814f049616c3e3569d24c0a290abee9308392c6a0de23",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_7"
        },
        {
          "digest": "sha256:1b56420753eac1126039b8ad4be82ddb59c89a4ec72fb7b6198cea88a10f3a91",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:1b56420753eac1126039b8ad4be82ddb59c89a4ec72fb7b6198cea88a10f3a91",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_9"
        },
        {
          "digest": "sha256:1cea12847a0d236437f7fc28fba476fe512c343cd020d21bb50316e50da6ffd6",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:1cea12847a0d236437f7fc28fba476fe512c343cd020d21bb50316e50da6ffd6",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_10"
        },
        {
          "digest": "sha256:42f5bed89af3b6922f7f0350af30674315a62ed161b507b927844cefd4735ecb",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:42f5bed89af3b6922f7f0350af30674315a62ed161b507b927844cefd4735ecb",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_11"
        },
        {
          "digest": "sha256:93fb606e63afa594a0de378f58e5d4bcd4790d00bff656c613f6f83a7c872821",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:93fb606e63afa594a0de378f58e5d4bcd4790d00bff656c613f6f83a7c872821",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_12"
        },
        {
          "digest": "sha256:401b850906b83968c053a1c304307673bfb4dcdac1dd1c1aa5a202d3800a4cc1",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:401b850906b83968c053a1c304307673bfb4dcdac1dd1c1aa5a202d3800a4cc1",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_13"
        },
        {
          "digest": "sha256:51a3e1b10e1db50540a751297450e2b03470d4034cf35fd3ac025f98295ffbd6",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:51a3e1b10e1db50540a751297450e2b03470d4034cf35fd3ac025f98295ffbd6",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_14"
        },
        {
          "digest": "sha256:96aea5ba06d60beb664664e3ce63bb4a672c647e601ef89104f0b86e09e431e7",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:96aea5ba06d60beb664664e3ce63bb4a672c647e601ef89104f0b86e09e431e7",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_15"
        },
        {
          "digest": "sha256:e8d4ba274b20a8b6e07b0de2e48855a68fe0113c4d1d53b985761edfcdb88743",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:e8d4ba274b20a8b6e07b0de2e48855a68fe0113c4d1d53b985761edfcdb88743",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_16"
        },
        {
          "digest": "sha256:0f66894081dbf518fc8819286dc0bbfe0c92ed6cb8206c939ca9e25e4ce88d11",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:0f66894081dbf518fc8819286dc0bbfe0c92ed6cb8206c939ca9e25e4ce88d11",
          "name": "RELATED_IMAGE_COCKROACH_v21_1_17"
        },
        {
          "digest": "sha256:e5814748c5ab229a1dea5662a007063c0df06fbbfcfe041fd9a6df9ef67e07cc",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:e5814748c5ab229a1dea5662a007063c0df06fbbfcfe041fd9a6df9ef67e07cc",
          "name": "RELATED_IMAGE_COCKROACH_v21_2_0"
        },
        {
          "digest": "sha256:7bf36dab9b3257a4bba24d986f1451fc51a3a37023fbb988281f1941fd3faedd",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:7bf36dab9b3257a4bba24d986f1451fc51a3a37023fbb988281f1941fd3faedd",
          "name": "RELATED_IMAGE_COCKROACH_v21_2_1"
        },
        {
          "digest": "sha256:5b3de46526d169fcd1318354545b3a18861843fa2022a23ed04d795493825287",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:5b3de46526d169fcd1318354545b3a18861843fa2022a23ed04d795493825287",
          "name": "RELATED_IMAGE_COCKROACH_v21_2_2"
        },
        {
          "digest": "sha256:50393ad005fed19618d04f0716c6d55e2f1afce651e785c396638e852cac83b3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:50393ad005fed19618d04f0716c6d55e2f1afce651e785c396638e852cac83b3",
          "name": "RELATED_IMAGE_COCKROACH_v21_2_3"
        },
        {
          "digest": "sha256:d978678b3c254abd52f69f226b0aacc4b02c2aaca328c54ef10f6f9bb453582d",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:d978678b3c254abd52f69f226b0aacc4b02c2aaca328c54ef10f6f9bb453582d",
          "name": "RELATED_IMAGE_COCKROACH_v21_2_4"
        },
        {
          "digest": "sha256:9b5a2e0c006eb4be8e1444734a98743551f278a24e81c20bebc96f0f3b631eb0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:9b5a2e0c006eb4be8e1444734a98743551f278a24e81c20bebc96f0f3b631eb0",
          "name": "RELATED_IMAGE_COCKROACH_v21_2_5"
        },
        {
          "digest": "sha256:6ca927f137be28481e3a226e6c6bcb7c5ac27664984f17ffc6c1419cd7d08eb7",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:6ca927f137be28481e3a226e6c6bcb7c5ac27664984f17ffc6c1419cd7d08eb7",
          "name": "RELATED_IMAGE_COCKROACH_v21_2_7"
        },
        {
          "digest": "sha256:32fdca575c334822e4356aab36a7ed97b685c065925fe85f1b8ba8425c57159b",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:32fdca575c334822e4356aab36a7ed97b685c065925fe85f1b8ba8425c57159b",
          "name": "RELATED_IMAGE_COCKROACH_v21_2_8"
        },
        {
          "digest": "sha256:c1f39b8f4df5065f948d38d434ad699d518d22aa121935fcc57e0733bd57abc8",
          "image": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator@sha256:c1f39b8f4df5065f948d38d434ad699d518d22aa121935fcc57e0733bd57abc8",
          "name": "cockroachdb-operator-c1f39b8f4df5065f948d38d434ad699d518d22aa121935fcc57e0733bd57abc8-annotation"
        },
        {
          "digest": "sha256:c1f39b8f4df5065f948d38d434ad699d518d22aa121935fcc57e0733bd57abc8",
          "image": "registry.connect.redhat.com/cockroachdb/cockroachdb-operator@sha256:c1f39b8f4df5065f948d38d434ad699d518d22aa121935fcc57e0733bd57abc8",
          "name": "cockroach-operator"
        },
        {
          "digest": "sha256:288ae92ebdfc848540ff80ef682b74e50809e9742cafce22b028112326d66b65",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:288ae92ebdfc848540ff80ef682b74e50809e9742cafce22b028112326d66b65",
          "name": "cockroach_v20_1_4"
        },
        {
          "digest": "sha256:87dcdbdc07904b217880e70484582c9d87dde7e4071e01cf9e2e6da43111190e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:87dcdbdc07904b217880e70484582c9d87dde7e4071e01cf9e2e6da43111190e",
          "name": "cockroach_v20_1_5"
        },
        {
          "digest": "sha256:6667919a41d304d5d4ade3ded4f11b42d722a995a4283e11e15320529f7f9abf",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:6667919a41d304d5d4ade3ded4f11b42d722a995a4283e11e15320529f7f9abf",
          "name": "cockroach_v20_1_8"
        },
        {
          "digest": "sha256:cdab9fc62e07dd349703ae394adb48ab3d2281610df35e081f4b76e208b38c8e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:cdab9fc62e07dd349703ae394adb48ab3d2281610df35e081f4b76e208b38c8e",
          "name": "cockroach_v20_1_11"
        },
        {
          "digest": "sha256:c1a07a8686bbadcb8c68ffba4e40e1285e581e24d43e5811f38a22d57fb9cc56",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:c1a07a8686bbadcb8c68ffba4e40e1285e581e24d43e5811f38a22d57fb9cc56",
          "name": "cockroach_v20_1_12"
        },
        {
          "digest": "sha256:b02549e5c3673b8154441990afa05a478d1ecc2bd0a70af64fd693cb6b469cb0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:b02549e5c3673b8154441990afa05a478d1ecc2bd0a70af64fd693cb6b469cb0",
          "name": "cockroach_v20_1_13"
        },
        {
          "digest": "sha256:25791b76b0d4b7220dadab3a405b3fdc330ba264ef6c9fbfdfb924c154c4bb5e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:25791b76b0d4b7220dadab3a405b3fdc330ba264ef6c9fbfdfb924c154c4bb5e",
          "name": "cockroach_v20_1_15"
        },
        {
          "digest": "sha256:49421968126f9c98499bc0cf0c65729370ab566da3fbd1588c100b20052b972e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:49421968126f9c98499bc0cf0c65729370ab566da3fbd1588c100b20052b972e",
          "name": "cockroach_v20_1_16"
        },
        {
          "digest": "sha256:e39bce1d9b08a7d62eb05d53e29fabc668bf6a4e4ae3eb9994eebf5b642ff6cf",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:e39bce1d9b08a7d62eb05d53e29fabc668bf6a4e4ae3eb9994eebf5b642ff6cf",
          "name": "cockroach_v20_1_17"
        },
        {
          "digest": "sha256:e67299fc0e79cff5b6caf9c0df154180dbaedc57b84f072acf68b7b2c958668d",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:e67299fc0e79cff5b6caf9c0df154180dbaedc57b84f072acf68b7b2c958668d",
          "name": "cockroach_v20_2_0"
        },
        {
          "digest": "sha256:fec6b0f56f2b94f141c8553a63b2e08b9494d4e6c5dc109d73268621ca445c56",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:fec6b0f56f2b94f141c8553a63b2e08b9494d4e6c5dc109d73268621ca445c56",
          "name": "cockroach_v20_2_1"
        },
        {
          "digest": "sha256:3edda46eccce8350440a0ea78dad2e41a3eaa0838fe57945ad5318739e968516",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:3edda46eccce8350440a0ea78dad2e41a3eaa0838fe57945ad5318739e968516",
          "name": "cockroach_v20_2_2"
        },
        {
          "digest": "sha256:ba9da9aa9d662c0fa9fd16a40551eedf100869b008cf9c0c09cbb87a09fda697",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:ba9da9aa9d662c0fa9fd16a40551eedf100869b008cf9c0c09cbb87a09fda697",
          "name": "cockroach_v20_2_3"
        },
        {
          "digest": "sha256:a5414e54c4c513c7877f925b09eadc4c28eb592d3e120bcf9c65ab10e07cd607",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:a5414e54c4c513c7877f925b09eadc4c28eb592d3e120bcf9c65ab10e07cd607",
          "name": "cockroach_v20_2_4"
        },
        {
          "digest": "sha256:2664d78fbe88c368927ddbf80704f430e6ca2ce1f72cb4b7e1906dfe72be7cd0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:2664d78fbe88c368927ddbf80704f430e6ca2ce1f72cb4b7e1906dfe72be7cd0",
          "name": "cockroach_v20_2_5"
        },
        {
          "digest": "sha256:867c46bb4d8ca3f2fb8dc94063facc99758344c7b9d04f10e50932023ef5d262",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:867c46bb4d8ca3f2fb8dc94063facc99758344c7b9d04f10e50932023ef5d262",
          "name": "cockroach_v20_2_6"
        },
        {
          "digest": "sha256:fe0c615b4d1ef4ec6e089e85deae2b6bd85410be8ed525e2317c759669417f47",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:fe0c615b4d1ef4ec6e089e85deae2b6bd85410be8ed525e2317c759669417f47",
          "name": "cockroach_v20_2_8"
        },
        {
          "digest": "sha256:ec1672ce8091b677689a31cf09dbde5d1697f4caddae0151040b0fb156722e9d",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:ec1672ce8091b677689a31cf09dbde5d1697f4caddae0151040b0fb156722e9d",
          "name": "cockroach_v20_2_9"
        },
        {
          "digest": "sha256:de94036e9cc8618e0493313512d880ae145e94d3bff54ed51b0de66a88da1319",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:de94036e9cc8618e0493313512d880ae145e94d3bff54ed51b0de66a88da1319",
          "name": "cockroach_v20_2_10"
        },
        {
          "digest": "sha256:98b76cf63aabc39d026317905d6ba72eec3f0d35c0f770ebb8b789c3fa0709ee",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:98b76cf63aabc39d026317905d6ba72eec3f0d35c0f770ebb8b789c3fa0709ee",
          "name": "cockroach_v20_2_11"
        },
        {
          "digest": "sha256:1ed18af1d3ffc65c24946c817d7d04d5f01025d3fb6c9eb78940e343b989bed0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:1ed18af1d3ffc65c24946c817d7d04d5f01025d3fb6c9eb78940e343b989bed0",
          "name": "cockroach_v20_2_12"
        },
        {
          "digest": "sha256:bcf3f976437c4ee52e922aa5d7e382a86a031d780b711c08c6c158dbf2d26cfa",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:bcf3f976437c4ee52e922aa5d7e382a86a031d780b711c08c6c158dbf2d26cfa",
          "name": "cockroach_v20_2_13"
        },
        {
          "digest": "sha256:c56f980b87a066d1e65ac8cff3d75040af9bd13093494cf4b4d30b5234d56edc",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:c56f980b87a066d1e65ac8cff3d75040af9bd13093494cf4b4d30b5234d56edc",
          "name": "cockroach_v20_2_14"
        },
        {
          "digest": "sha256:d290099496d070f135b5cc1e6bd59607512524d399df81698f11cfa09b8dca4a",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:d290099496d070f135b5cc1e6bd59607512524d399df81698f11cfa09b8dca4a",
          "name": "cockroach_v20_2_15"
        },
        {
          "digest": "sha256:d9a756df2ed2536b938d7c24fbf3de149cd1a0f44a3a1a0cc5d042fe8980362e",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:d9a756df2ed2536b938d7c24fbf3de149cd1a0f44a3a1a0cc5d042fe8980362e",
          "name": "cockroach_v20_2_16"
        },
        {
          "digest": "sha256:de4abe26a8c7c1a7e668bda0c462bee7cfc65bb826d8ffedebdf51fa00892719",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:de4abe26a8c7c1a7e668bda0c462bee7cfc65bb826d8ffedebdf51fa00892719",
          "name": "cockroach_v20_2_17"
        },
        {
          "digest": "sha256:3eba3d1781879cac726cda2435fbf1965dcdb7f1d73c78824d9666bc4ec4d8d3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:3eba3d1781879cac726cda2435fbf1965dcdb7f1d73c78824d9666bc4ec4d8d3",
          "name": "cockroach_v20_2_18"
        },
        {
          "digest": "sha256:bbe57aa4d8d5c9e162f9fcef4bd25f954ad81c0d79546033d202a1fc10a591ec",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:bbe57aa4d8d5c9e162f9fcef4bd25f954ad81c0d79546033d202a1fc10a591ec",
          "name": "cockroach_v20_2_19"
        },
        {
          "digest": "sha256:0ef0234b6fd42977b8a9eda2c59ca8194cc1c8cf6425b99d7bf8fde8feb826c5",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:0ef0234b6fd42977b8a9eda2c59ca8194cc1c8cf6425b99d7bf8fde8feb826c5",
          "name": "cockroach_v21_1_0"
        },
        {
          "digest": "sha256:162a356cc8b423926634f83a1372b6321104d8de7a2c5b9b7b2681c769a88cc7",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:162a356cc8b423926634f83a1372b6321104d8de7a2c5b9b7b2681c769a88cc7",
          "name": "cockroach_v21_1_1"
        },
        {
          "digest": "sha256:27ef61d9f320a52ee9617f2ab8a1d1a1eacc576a0add2d85d99f9413912b651f",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:27ef61d9f320a52ee9617f2ab8a1d1a1eacc576a0add2d85d99f9413912b651f",
          "name": "cockroach_v21_1_2"
        },
        {
          "digest": "sha256:5eb59093ee81f8115d82ec6a8a1c35eefad055cbb3a175978cef7afe9196e6a0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:5eb59093ee81f8115d82ec6a8a1c35eefad055cbb3a175978cef7afe9196e6a0",
          "name": "cockroach_v21_1_3"
        },
        {
          "digest": "sha256:38e940144e34b69dfb7d1cf31456e7a0016c5dd40d5626baa346446c7678ceb0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:38e940144e34b69dfb7d1cf31456e7a0016c5dd40d5626baa346446c7678ceb0",
          "name": "cockroach_v21_1_4"
        },
        {
          "digest": "sha256:0bd22d69db5ac570f30d3379afc67f6c2e46fc5b027c8aab42c3f562085d4672",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:0bd22d69db5ac570f30d3379afc67f6c2e46fc5b027c8aab42c3f562085d4672",
          "name": "cockroach_v21_1_5"
        },
        {
          "digest": "sha256:9f5dfcde260804cd2d6976a6b3544ddabdd899365be2104210dc78ba13755ec3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:9f5dfcde260804cd2d6976a6b3544ddabdd899365be2104210dc78ba13755ec3",
          "name": "cockroach_v21_1_6"
        },
        {
          "digest": "sha256:ab47ddd22328e0a1564814f049616c3e3569d24c0a290abee9308392c6a0de23",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:ab47ddd22328e0a1564814f049616c3e3569d24c0a290abee9308392c6a0de23",
          "name": "cockroach_v21_1_7"
        },
        {
          "digest": "sha256:1b56420753eac1126039b8ad4be82ddb59c89a4ec72fb7b6198cea88a10f3a91",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:1b56420753eac1126039b8ad4be82ddb59c89a4ec72fb7b6198cea88a10f3a91",
          "name": "cockroach_v21_1_9"
        },
        {
          "digest": "sha256:1cea12847a0d236437f7fc28fba476fe512c343cd020d21bb50316e50da6ffd6",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:1cea12847a0d236437f7fc28fba476fe512c343cd020d21bb50316e50da6ffd6",
          "name": "cockroach_v21_1_10"
        },
        {
          "digest": "sha256:42f5bed89af3b6922f7f0350af30674315a62ed161b507b927844cefd4735ecb",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:42f5bed89af3b6922f7f0350af30674315a62ed161b507b927844cefd4735ecb",
          "name": "cockroach_v21_1_11"
        },
        {
          "digest": "sha256:93fb606e63afa594a0de378f58e5d4bcd4790d00bff656c613f6f83a7c872821",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:93fb606e63afa594a0de378f58e5d4bcd4790d00bff656c613f6f83a7c872821",
          "name": "cockroach_v21_1_12"
        },
        {
          "digest": "sha256:401b850906b83968c053a1c304307673bfb4dcdac1dd1c1aa5a202d3800a4cc1",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:401b850906b83968c053a1c304307673bfb4dcdac1dd1c1aa5a202d3800a4cc1",
          "name": "cockroach_v21_1_13"
        },
        {
          "digest": "sha256:51a3e1b10e1db50540a751297450e2b03470d4034cf35fd3ac025f98295ffbd6",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:51a3e1b10e1db50540a751297450e2b03470d4034cf35fd3ac025f98295ffbd6",
          "name": "cockroach_v21_1_14"
        },
        {
          "digest": "sha256:96aea5ba06d60beb664664e3ce63bb4a672c647e601ef89104f0b86e09e431e7",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:96aea5ba06d60beb664664e3ce63bb4a672c647e601ef89104f0b86e09e431e7",
          "name": "cockroach_v21_1_15"
        },
        {
          "digest": "sha256:e8d4ba274b20a8b6e07b0de2e48855a68fe0113c4d1d53b985761edfcdb88743",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:e8d4ba274b20a8b6e07b0de2e48855a68fe0113c4d1d53b985761edfcdb88743",
          "name": "cockroach_v21_1_16"
        },
        {
          "digest": "sha256:0f66894081dbf518fc8819286dc0bbfe0c92ed6cb8206c939ca9e25e4ce88d11",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:0f66894081dbf518fc8819286dc0bbfe0c92ed6cb8206c939ca9e25e4ce88d11",
          "name": "cockroach_v21_1_17"
        },
        {
          "digest": "sha256:e5814748c5ab229a1dea5662a007063c0df06fbbfcfe041fd9a6df9ef67e07cc",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:e5814748c5ab229a1dea5662a007063c0df06fbbfcfe041fd9a6df9ef67e07cc",
          "name": "cockroach_v21_2_0"
        },
        {
          "digest": "sha256:7bf36dab9b3257a4bba24d986f1451fc51a3a37023fbb988281f1941fd3faedd",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:7bf36dab9b3257a4bba24d986f1451fc51a3a37023fbb988281f1941fd3faedd",
          "name": "cockroach_v21_2_1"
        },
        {
          "digest": "sha256:5b3de46526d169fcd1318354545b3a18861843fa2022a23ed04d795493825287",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:5b3de46526d169fcd1318354545b3a18861843fa2022a23ed04d795493825287",
          "name": "cockroach_v21_2_2"
        },
        {
          "digest": "sha256:50393ad005fed19618d04f0716c6d55e2f1afce651e785c396638e852cac83b3",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:50393ad005fed19618d04f0716c6d55e2f1afce651e785c396638e852cac83b3",
          "name": "cockroach_v21_2_3"
        },
        {
          "digest": "sha256:d978678b3c254abd52f69f226b0aacc4b02c2aaca328c54ef10f6f9bb453582d",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:d978678b3c254abd52f69f226b0aacc4b02c2aaca328c54ef10f6f9bb453582d",
          "name": "cockroach_v21_2_4"
        },
        {
          "digest": "sha256:9b5a2e0c006eb4be8e1444734a98743551f278a24e81c20bebc96f0f3b631eb0",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:9b5a2e0c006eb4be8e1444734a98743551f278a24e81c20bebc96f0f3b631eb0",
          "name": "cockroach_v21_2_5"
        },
        {
          "digest": "sha256:6ca927f137be28481e3a226e6c6bcb7c5ac27664984f17ffc6c1419cd7d08eb7",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:6ca927f137be28481e3a226e6c6bcb7c5ac27664984f17ffc6c1419cd7d08eb7",
          "name": "cockroach_v21_2_7"
        },
        {
          "digest": "sha256:32fdca575c334822e4356aab36a7ed97b685c065925fe85f1b8ba8425c57159b",
          "image": "registry.connect.redhat.com/cockroachdb/cockroach@sha256:32fdca575c334822e4356aab36a7ed97b685c065925fe85f1b8ba8425c57159b",
          "name": "cockroach_v21_2_8"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.6.0",
      "version_original": "2.6.0"
    },
    {
      "_id": "627c6aad4be4723d90ee6b90",
      "alm_examples": [
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Zookeeper",
          "metadata": {
            "name": "zookeeper"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-zookeeper@sha256:254266ab0730cdacc49a57b7e98b23865942aa251c676c15297d70a3003b45e1",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "logVolumeCapacity": "10Gi",
            "replicas": 3
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Kafka",
          "metadata": {
            "name": "kafka"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-server@sha256:a590245bf3269c05a88e99d56a1e869c07f7d3fb76fa76370b8faaa673b0c8b1",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "metricReporter": {
              "enabled": true
            },
            "replicas": 3
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "KafkaRestProxy",
          "metadata": {
            "name": "kafkarestproxy"
          },
          "spec": {
            "image": {
              "application": "confluentinc/cp-kafka-rest@sha256:80a3d41cc8a6989e556a0283e4ae31f7c80880f97bd235db4929f4df40dabb8f",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "metricReporter": {
              "enabled": true
            },
            "replicas": 3
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "Connect",
          "metadata": {
            "name": "connect"
          },
          "spec": {
            "dependencies": {
              "kafka": {
                "bootstrapEndpoint": "kafka:9071"
              }
            },
            "image": {
              "application": "confluentinc/cp-server-connect@sha256:bb847350302c636fb499509c29f355f77a6299c2b1d31a445882a74e0292463c",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "KsqlDB",
          "metadata": {
            "name": "ksqldb"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "image": {
              "application": "confluentinc/cp-ksqldb-server@sha256:20b6ac87de3b00ff77f590118cbc9877d97c54d270a4846b60d165cdde2b0427",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "ControlCenter",
          "metadata": {
            "name": "controlcenter"
          },
          "spec": {
            "dataVolumeCapacity": "10Gi",
            "dependencies": {
              "connect": [
                {
                  "name": "connect",
                  "url": "http://connect.confluent.svc.cluster.local:8083"
                }
              ],
              "ksqldb": [
                {
                  "name": "ksqldb",
                  "url": "http://ksqldb.confluent.svc.cluster.local:8088"
                }
              ],
              "schemaRegistry": {
                "url": "http://schemaregistry.confluent.svc.cluster.local:8081"
              }
            },
            "image": {
              "application": "confluentinc/cp-enterprise-control-center@sha256:eb2e977d41585dc3c6474d71af2bfb76fe885b4a6eb5a02cb3a18a5485db8d6a",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "replicas": 1
          }
        },
        {
          "api_version": "platform.confluent.io/v1beta1",
          "kind": "SchemaRegistry",
          "metadata": {
            "name": "schemaregistry"
          },
          "spec": {
            "image": {
              "application": "confluentinc/cp-schema-registry@sha256:c9c2528585d192f68e268521074964d37c14fca16f3bab568c57c68aca01b978",
              "init": "confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d"
            },
            "replicas": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": [
          "Confluent Platform License"
        ]
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/confluentinc/confluent-for-kubernetes-v2@sha256:6fe6c0d639e1b0c2a6c701bedecb3cef0b30702fb9bc38544338bb73a287c5d2",
      "bundle_path_digest": "sha256:6fe6c0d639e1b0c2a6c701bedecb3cef0b30702fb9bc38544338bb73a287c5d2",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "2.1",
      "creation_date": "2022-05-12T02:02:21.973000+00:00",
      "csv_description": "Confluent for Kubernetes (CFK) is a cloud-native control plane for deploying and managing Confluent in your private cloud environment. It provides standard and simple interface to customize, deploy, and manage Confluent Platform through declarative API.\nConfluent for Kubernetes runs on Kubernetes, the runtime for private cloud architectures.",
      "csv_display_name": "Confluent for Kubernetes",
      "csv_metadata_description": "",
      "csv_name": "confluent-for-kubernetes.v2.1.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:02:21.973000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "confluent-for-kubernetes",
      "provided_apis": [
        {
          "group": "platform.confluent.io",
          "kind": "KafkaRestProxy",
          "plural": "kafkarestproxies",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Kafka",
          "plural": "kafkas",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Zookeeper",
          "plural": "zookeepers",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Connector",
          "plural": "connectors",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Connect",
          "plural": "connects",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KafkaTopic",
          "plural": "kafkatopics",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "Schema",
          "plural": "schemas",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "ControlCenter",
          "plural": "controlcenters",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KsqlDB",
          "plural": "ksqldbs",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "ConfluentRolebinding",
          "plural": "confluentrolebindings",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "MigrationJob",
          "plural": "migrationjobs",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "KafkaRestClass",
          "plural": "kafkarestclasses",
          "version": "v1beta1"
        },
        {
          "group": "platform.confluent.io",
          "kind": "SchemaRegistry",
          "plural": "schemaregistries",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f",
          "image": "docker.io/confluentinc/confluent-operator@sha256:633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f",
          "name": "confluent-operator"
        },
        {
          "digest": "sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d",
          "image": "docker.io/confluentinc/confluent-init-container@sha256:a7978b1796f4b7f01ea6ccc56615a2195190de6eaf41a4e538e325dd2406f26d",
          "name": "confluent-init-container"
        },
        {
          "digest": "sha256:254266ab0730cdacc49a57b7e98b23865942aa251c676c15297d70a3003b45e1",
          "image": "docker.io/confluentinc/cp-zookeeper@sha256:254266ab0730cdacc49a57b7e98b23865942aa251c676c15297d70a3003b45e1",
          "name": "cp-zookeeper"
        },
        {
          "digest": "sha256:a590245bf3269c05a88e99d56a1e869c07f7d3fb76fa76370b8faaa673b0c8b1",
          "image": "docker.io/confluentinc/cp-server@sha256:a590245bf3269c05a88e99d56a1e869c07f7d3fb76fa76370b8faaa673b0c8b1",
          "name": "cp-server"
        },
        {
          "digest": "sha256:80a3d41cc8a6989e556a0283e4ae31f7c80880f97bd235db4929f4df40dabb8f",
          "image": "docker.io/confluentinc/cp-kafka-rest@sha256:80a3d41cc8a6989e556a0283e4ae31f7c80880f97bd235db4929f4df40dabb8f",
          "name": "cp-kafka-rest"
        },
        {
          "digest": "sha256:20b6ac87de3b00ff77f590118cbc9877d97c54d270a4846b60d165cdde2b0427",
          "image": "docker.io/confluentinc/cp-ksqldb-server@sha256:20b6ac87de3b00ff77f590118cbc9877d97c54d270a4846b60d165cdde2b0427",
          "name": "cp-ksqldb-server"
        },
        {
          "digest": "sha256:c9c2528585d192f68e268521074964d37c14fca16f3bab568c57c68aca01b978",
          "image": "docker.io/confluentinc/cp-schema-registry@sha256:c9c2528585d192f68e268521074964d37c14fca16f3bab568c57c68aca01b978",
          "name": "cp-schema-registry"
        },
        {
          "digest": "sha256:bb847350302c636fb499509c29f355f77a6299c2b1d31a445882a74e0292463c",
          "image": "docker.io/confluentinc/cp-server-connect@sha256:bb847350302c636fb499509c29f355f77a6299c2b1d31a445882a74e0292463c",
          "name": "cp-server-connect"
        },
        {
          "digest": "sha256:eb2e977d41585dc3c6474d71af2bfb76fe885b4a6eb5a02cb3a18a5485db8d6a",
          "image": "docker.io/confluentinc/cp-enterprise-control-center@sha256:eb2e977d41585dc3c6474d71af2bfb76fe885b4a6eb5a02cb3a18a5485db8d6a",
          "name": "cp-enterprise-control-center"
        },
        {
          "digest": "sha256:633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f",
          "image": "docker.io/confluentinc/confluent-operator@sha256:633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f",
          "name": "confluent-operator-633dc1b217c2cfbb216781f5fa9b40a4170145273e89df85a27a7f0206090f5f-annotation"
        }
      ],
      "replaces": "",
      "skip_range": ">=2.0.3 <2.1.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "2.1.1",
      "version_original": "2.1.1"
    },
    {
      "_id": "627c6aed4be4723d90ee6ba3",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "redislabs/redis",
              "versionTag": "6.0.12-57.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "bundle_path_digest": "sha256:292bef653614d21a7d7a8d7df2507978eafcf66910f978b1edf6469a42302874",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-12T02:03:25.622000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis Labs. Redis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running a command to grant permissions to the pods:\n\n\n> *oc adm policy add-scc-to-group redis-enterprise-scc\nsystem:serviceaccounts:my-project*\n\n\nReplace my-project with the actual name of the project/namespace.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.12-5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:03:25.622000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator-b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f-annotation"
        },
        {
          "digest": "sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:b85c098fc85c2c3a3a9bef5fa227f45fcd2ad14150bba111793c7ed5df45643f",
          "name": "redis-enterprise-operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.12-5",
      "version_original": "6.0.12-5"
    },
    {
      "_id": "627c6af54be4723d90ee6ba7",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-12T02:03:33.229000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:03:33.229000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c6b594be4723d90ee6bc5",
      "alm_examples": [
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "Console",
          "metadata": {
            "name": "pcc-console",
            "namespace": "twistlock"
          },
          "spec": {
            "consoleConfig": {
              "serviceType": "ClusterIP"
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        },
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "ConsoleDefender",
          "metadata": {
            "name": "pcc-consoledefender",
            "namespace": "twistlock"
          },
          "spec": {
            "consoleConfig": {
              "serviceType": "ClusterIP"
            },
            "defenderConfig": {
              "docker": false
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        },
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "Defender",
          "metadata": {
            "name": "pcc-defender",
            "namespace": "twistlock"
          },
          "spec": {
            "defenderConfig": {
              "clusterAddress": "twistlock-console.example.com",
              "consoleAddress": "https://twistlock-console.example.com:8083",
              "docker": false
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/paloalto/pcc-operator@sha256:cd2291126f3c56ed2001e6ca9157ac4c752ff0a1f6de2c0e920e06f83c84d17b",
      "bundle_path_digest": "sha256:cd2291126f3c56ed2001e6ca9157ac4c752ff0a1f6de2c0e920e06f83c84d17b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:05:13.789000+00:00",
      "csv_description": "## Features\n- Deploy Console\n    - Create initial local administrator user\n    - Add license\n- Deploy Defenders\n- Support for offline deployments\n- Upgrade Console\n- Upgrade Defenders\n\n## Installation\nSee the [Prisma Cloud Compute Operator documentation](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator) for installation guides.\n\n## Support\nThis operator is available \"as is,\" and should be seen as community-supported; however, Palo Alto Networks will continue contributing whenever possible.\nPalo Alto Networks does not provide technical support or help with using or troubleshooting the operator through normal support channels.\nWe encourage you to open GitHub [issues](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator/issues) and [pull requests](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator/pulls) to track bugs and feature requests.\n\n## Other links\n[Prisma Cloud Compute product documentation](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin-compute.html)\n\n[Prisma Cloud Compute API documentation](https://prisma.pan.dev/api/cloud/cwpp)\n",
      "csv_display_name": "Prisma Cloud Compute Operator",
      "csv_metadata_description": "Deploy Prisma Cloud Compute for cloud-native security in your clusters",
      "csv_name": "pcc-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:45:32.976000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "pcc-operator",
      "provided_apis": [
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "Defender",
          "version": "v1alpha1"
        },
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "ConsoleDefender",
          "version": "v1alpha1"
        },
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "Console",
          "version": "v1alpha1"
        }
      ],
      "provider": "Palo Alto Networks",
      "related_images": [
        {
          "digest": "sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "image": "quay.io/prismacloud/pcc-operator@sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "name": "pcc-operator-91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec-annotation"
        },
        {
          "digest": "sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "image": "quay.io/prismacloud/pcc-operator@sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "627c6b973e0ff4d601b6f8e6",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:1a7445f65072dc48009b174bc8bd66de5c2d18d98c235c1fa9b3af2dda6de6ce",
      "bundle_path_digest": "sha256:1a7445f65072dc48009b174bc8bd66de5c2d18d98c235c1fa9b3af2dda6de6ce",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:06:15.039000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.27",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:42:48.941000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:73f7a5500e2af1c40506fb43d7150988c665fab8f1d0df8cc75b5d7c0b325007",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:73f7a5500e2af1c40506fb43d7150988c665fab8f1d0df8cc75b5d7c0b325007",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.0.27",
      "version_original": "0.0.27"
    },
    {
      "_id": "627c6bad3e0ff4d601b6f8f8",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "aesmd": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/aesmd-dcap",
                "tag": "latest"
              },
              "ccmNodeAgent": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/ccm-node-agent-ubi7",
                "tag": "latest"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "multiPlatformRegistration": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/multi-platform-registration-ubi8",
                "tag": "latest"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-dcap-operator-bundle@sha256:545724c273dfd6a1fa923d468b2d054f39ec3186d01586a8b3fe494c0f22f8dd",
      "bundle_path_digest": "sha256:545724c273dfd6a1fa923d468b2d054f39ec3186d01586a8b3fe494c0f22f8dd",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:06:37.791000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities, in-kernel driver installed and fsgsbase support.\n\n## Installation\n * Choose a namespace to install the Operator. \n Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent DCAP Operator",
      "csv_metadata_description": "",
      "csv_name": "ccm-node-agent-dcap-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:54:16.568000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "ccm-node-agent-dcap-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "version": "v1"
        }
      ],
      "provider": "Fortanix Inc.",
      "related_images": [
        {
          "digest": "sha256:62575404000cb77fa8d2284c87b31e39e667a55b0fb47821263b23b3d1135a7e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62575404000cb77fa8d2284c87b31e39e667a55b0fb47821263b23b3d1135a7e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:4fd28bea26aee461eb9c1800cdf5f041b64ae3ea6652203f8ad9feb680aaefee",
          "image": "docker.io/fortanix/ccm-node-agent-dcap-operator@sha256:4fd28bea26aee461eb9c1800cdf5f041b64ae3ea6652203f8ad9feb680aaefee",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "627c6bb33e0ff4d601b6f8fa",
      "alm_examples": [
        {
          "api_version": "charts.operatorhub.io/v1",
          "kind": "CcmNodeAgent",
          "metadata": {
            "name": "ccmnodeagent-sample"
          },
          "spec": {
            "ccmJoinToken": {
              "secretName": "ccm-join-token",
              "token": ""
            },
            "fullnameOverride": "",
            "image": {
              "ccmNodeAgent": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/ccm-node-agent-ubi7",
                "tag": "latest"
              },
              "ccmNodeAgentInit": {
                "pullPolicy": "IfNotPresent",
                "repository": "busybox",
                "tag": "latest"
              },
              "sgxSoftwareInstaller": {
                "pullPolicy": "IfNotPresent",
                "repository": "docker.io/fortanix/sgx-software-installer-ubi7",
                "tag": "latest"
              }
            },
            "log": {
              "debug": false
            },
            "nameOverride": "",
            "podAnnotations": {},
            "ports": {
              "containerPort": 9092,
              "hostPort": 9092
            },
            "replicaCount": 1,
            "resources": {
              "limits": {
                "cpu": "100m",
                "memory": "128Mi"
              },
              "requests": {
                "cpu": "100m",
                "memory": "128Mi"
              }
            },
            "serviceAccount": {
              "annotations": {},
              "create": true,
              "name": ""
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/fortanix/ccm-node-agent-operator-bundle@sha256:12746020eefd383963e08a86e3542608aed1999b4e520435e366a307a6a9eebc",
      "bundle_path_digest": "sha256:12746020eefd383963e08a86e3542608aed1999b4e520435e366a307a6a9eebc",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:06:43.382000+00:00",
      "csv_description": "CCM Node Agent software enables registration of the compute nodes to Fortanix CCM when installed in the Openshift Cluster Nodes\u200b. \nIt also assists with application attestation and visibility for Fortanix CCM.\n\n## About this Operator\nThis Operator is based on a Helm chart for CCM Node Agent. It enrolls all the nodes in the openshift cluster to a particular CCM account. You have to provide the base64 encode of join token of CCM account while creating CcmNodeAgent resource.\n\n## Prerequisites\nAll the worker nodes in the cluster must have SGX capabilities.\n\n## Installation\n* Choose a namespace to install the Operator. Operator will be available in all namespaces.\n* Select Approval Strategy: Available options are Automatic or Manual. Automatic approval will automatically upgrade the running instance of your Operator without human intervention when a new version is available. In case of Manual approval, when a new version is available, OLM will create an update request. You must manually approve the request to update the Operator to a new version.\n* Generate your CCM Account Join Token: Please log in to https://ccm.fortanix.com, and in the Management Console tab, click the + ENROLL NODE button. In the ENROLL NODE screen, a Join Token will be generated in the text box for \"Get a join token to register an SGX compute node\". This Join Token is used by the compute node to authenticate itself.\n* Base64 encode the Join Token:\n```shell\necho -n <join-token> | openssl base64 -A\n```\n* Create an instance of CcmNodeAgent by setting the `spec.ccmJoinToken.Token` to the base64 encoded CCM account join token.\n* After CcmNodeAgent resource is installed successfully you should be able to see all the worker nodes of the cluster in your CCM account under Compute Node Tab.\n\n## Getting Started\nNow to run your application inside SGX enclaves on your cluster follow the [documentation](https://support.fortanix.com/hc/en-us/articles/360043527431-User-s-Guide-Add-and-Edit-an-Application).\n",
      "csv_display_name": "CCM Node Agent Operator",
      "csv_metadata_description": "",
      "csv_name": "ccm-node-agent-operator.v0.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:54:20.252000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "ccm-node-agent-operator",
      "provided_apis": [
        {
          "group": "charts.operatorhub.io",
          "kind": "CcmNodeAgent",
          "version": "v1"
        }
      ],
      "provider": "Fortanix Inc.",
      "related_images": [
        {
          "digest": "sha256:62575404000cb77fa8d2284c87b31e39e667a55b0fb47821263b23b3d1135a7e",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:62575404000cb77fa8d2284c87b31e39e667a55b0fb47821263b23b3d1135a7e",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:e2a3d52551198102ddbe7f4ebd9621edc357c57ddeff47b7ed9f2cf56a1bed39",
          "image": "docker.io/fortanix/ccm-node-agent-operator@sha256:e2a3d52551198102ddbe7f4ebd9621edc357c57ddeff47b7ed9f2cf56a1bed39",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.2",
      "version_original": "0.0.2"
    },
    {
      "_id": "627c6bc04be4723d90ee6beb",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:a20d66bf3efda232b27631304f86eb54f0363a9435771c374d4e1357387be2af",
      "bundle_path_digest": "sha256:a20d66bf3efda232b27631304f86eb54f0363a9435771c374d4e1357387be2af",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "1.10",
      "creation_date": "2022-05-12T02:06:56.906000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.10.10-x6adc6ff",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-07-07T13:03:04.833000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:83bfc1052543e8b1e31f06fa2b5bbd2bd41cc79f264010241fc1994e35281616",
          "image": "quay.io/cilium/cilium@sha256:83bfc1052543e8b1e31f06fa2b5bbd2bd41cc79f264010241fc1994e35281616",
          "name": "cilium"
        },
        {
          "digest": "sha256:a0769e44299bba301dee08d489f4e2d3b3924916bed985346dcf9fcf10861c8a",
          "image": "quay.io/cilium/hubble-relay@sha256:a0769e44299bba301dee08d489f4e2d3b3924916bed985346dcf9fcf10861c8a",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:8a317287b6ac8fe0ba4999342c9627dc913e0c1591552164f96d0aadf5d1a740",
          "image": "quay.io/cilium/operator-generic@sha256:8a317287b6ac8fe0ba4999342c9627dc913e0c1591552164f96d0aadf5d1a740",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:83bfc1052543e8b1e31f06fa2b5bbd2bd41cc79f264010241fc1994e35281616",
          "image": "quay.io/cilium/cilium@sha256:83bfc1052543e8b1e31f06fa2b5bbd2bd41cc79f264010241fc1994e35281616",
          "name": "preflight"
        },
        {
          "digest": "sha256:e13d41db3f5ee93d8b3abcaa10cc4005522bc797be3d69fc96ac5e03b60c7b11",
          "image": "quay.io/cilium/clustermesh-apiserver@sha256:e13d41db3f5ee93d8b3abcaa10cc4005522bc797be3d69fc96ac5e03b60c7b11",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble-ui-proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:4245ae5650f075cea29ebce2c2eb7dc59c223cb6cae50a0ab2efe6004ef2363f",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:4245ae5650f075cea29ebce2c2eb7dc59c223cb6cae50a0ab2efe6004ef2363f",
          "name": "operator"
        },
        {
          "digest": "sha256:a0769e44299bba301dee08d489f4e2d3b3924916bed985346dcf9fcf10861c8a",
          "image": "quay.io/cilium/hubble-relay@sha256:a0769e44299bba301dee08d489f4e2d3b3924916bed985346dcf9fcf10861c8a",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:8a317287b6ac8fe0ba4999342c9627dc913e0c1591552164f96d0aadf5d1a740",
          "image": "quay.io/cilium/operator-generic@sha256:8a317287b6ac8fe0ba4999342c9627dc913e0c1591552164f96d0aadf5d1a740",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble_ui_proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.10+x6adc6ff",
      "version_original": "1.10.10+x6adc6ff"
    },
    {
      "_id": "627c6bd03e0ff4d601b6f90a",
      "alm_examples": [
        {
          "api_version": "cilium.io/v1alpha1",
          "kind": "CiliumConfig",
          "metadata": {
            "name": "cilium-openshift-default",
            "namespace": "placeholder"
          },
          "spec": {
            "cni": {
              "binPath": "/var/lib/cni/bin",
              "confPath": "/var/run/multus/cni/net.d"
            },
            "endpointRoutes": {
              "enabled": true
            },
            "hubble": {
              "tls": {
                "enabled": false
              }
            },
            "ipam": {
              "mode": "cluster-pool",
              "operator": {
                "clusterPoolIPv4MaskSize": "23",
                "clusterPoolIPv4PodCIDR": "10.128.0.0/14"
              }
            },
            "kubeProxyReplacement": "probe",
            "nativeRoutingCIDR": "10.128.0.0/14",
            "prometheus": {
              "serviceMonitor": {
                "enabled": false
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/isovalent/cilium-olm-metadata@sha256:3f69a124f9c31ebc0c78f249872a69b1289622bf4f5aad4c739f6e8caf9cb85b",
      "bundle_path_digest": "sha256:3f69a124f9c31ebc0c78f249872a69b1289622bf4f5aad4c739f6e8caf9cb85b",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "1.9",
      "creation_date": "2022-05-12T02:07:12.706000+00:00",
      "csv_description": "Cilium - eBPF-based Networking, Security, and Observability",
      "csv_display_name": "Cilium",
      "csv_metadata_description": "",
      "csv_name": "cilium.v1.9.14-x70dc065",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-07-07T13:03:04.630000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "cilium",
      "provided_apis": [
        {
          "group": "cilium.io",
          "kind": "CiliumConfig",
          "plural": "ciliumconfigs",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:2c6ce93fa7e625979043a387eb998c17ad57df8768d89facb9b715da42a4c51c",
          "image": "quay.io/cilium/cilium@sha256:2c6ce93fa7e625979043a387eb998c17ad57df8768d89facb9b715da42a4c51c",
          "name": "cilium"
        },
        {
          "digest": "sha256:fd6ab1aea260abc5f64eca26c1b1e7009983e4aaa8e5d098e8d442f7659603fb",
          "image": "quay.io/cilium/hubble-relay@sha256:fd6ab1aea260abc5f64eca26c1b1e7009983e4aaa8e5d098e8d442f7659603fb",
          "name": "hubble-relay"
        },
        {
          "digest": "sha256:bdcfd2eade99933f2fda55ef79ea697ddfad3512f65b15bcd0ba7702518c1ba3",
          "image": "quay.io/cilium/operator-generic@sha256:bdcfd2eade99933f2fda55ef79ea697ddfad3512f65b15bcd0ba7702518c1ba3",
          "name": "cilium-operator"
        },
        {
          "digest": "sha256:2c6ce93fa7e625979043a387eb998c17ad57df8768d89facb9b715da42a4c51c",
          "image": "quay.io/cilium/cilium@sha256:2c6ce93fa7e625979043a387eb998c17ad57df8768d89facb9b715da42a4c51c",
          "name": "preflight"
        },
        {
          "digest": "sha256:a0da5edf0372899647da51de1b277f0bab8e676d694aee7f939cddfdd3172010",
          "image": "quay.io/cilium/clustermesh-apiserver@sha256:a0da5edf0372899647da51de1b277f0bab8e676d694aee7f939cddfdd3172010",
          "name": "clustermesh"
        },
        {
          "digest": "sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "image": "quay.io/cilium/certgen@sha256:0c2b71bb3469990e7990e7e26243617aa344b5a69a4ce465740b8577f9d48ab9",
          "name": "certgen"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble-ui-backend"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble-ui-frontend"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble-ui-proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd-operator"
        },
        {
          "digest": "sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "image": "quay.io/cilium/startup-script@sha256:1daf817f34000399fcb5da9a94cb299e2810d2c7a52e51de22ba0d4783b6ce84",
          "name": "nodeinit"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh-etcd"
        },
        {
          "digest": "sha256:3a9ca9a4c2f78109f265c4758f5f693d01865f2d0e31bc5f1ecbc065e878628b",
          "image": "registry.connect.redhat.com/isovalent/cilium-olm@sha256:3a9ca9a4c2f78109f265c4758f5f693d01865f2d0e31bc5f1ecbc065e878628b",
          "name": "operator"
        },
        {
          "digest": "sha256:fd6ab1aea260abc5f64eca26c1b1e7009983e4aaa8e5d098e8d442f7659603fb",
          "image": "quay.io/cilium/hubble-relay@sha256:fd6ab1aea260abc5f64eca26c1b1e7009983e4aaa8e5d098e8d442f7659603fb",
          "name": "hubble_relay"
        },
        {
          "digest": "sha256:bdcfd2eade99933f2fda55ef79ea697ddfad3512f65b15bcd0ba7702518c1ba3",
          "image": "quay.io/cilium/operator-generic@sha256:bdcfd2eade99933f2fda55ef79ea697ddfad3512f65b15bcd0ba7702518c1ba3",
          "name": "cilium_operator"
        },
        {
          "digest": "sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "image": "quay.io/cilium/hubble-ui-backend@sha256:2cf1c7b1fde6161f575f3147c2ef885739e60b8c59a1ed444fe74edbdf22c7c1",
          "name": "hubble_ui_be"
        },
        {
          "digest": "sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "image": "quay.io/cilium/hubble-ui@sha256:c267219946b84f79a5fd2849f5cc71f39453e29d93039e57b9cef2b5802e9c50",
          "name": "hubble_ui_fe"
        },
        {
          "digest": "sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "image": "docker.io/envoyproxy/envoy@sha256:55a141c0b8e39497b32074cb758b4e5dc2384bd6d9926144969a4452eaa611fd",
          "name": "hubble_ui_proxy"
        },
        {
          "digest": "sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "image": "quay.io/cilium/cilium-etcd-operator@sha256:04b8327f7f992693c2cb483b999041ed8f92efc8e14f2a5f3ab95574a65ea2dc",
          "name": "etcd_operator"
        },
        {
          "digest": "sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "image": "quay.io/coreos/etcd@sha256:04833b601fa130512450afa45c4fe484fee1293634f34c7ddc231bd193c74017",
          "name": "clustermesh_etcd"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.9.14+x70dc065",
      "version_original": "1.9.14+x70dc065"
    },
    {
      "_id": "627c6bd89b28cbab99bd0da3",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:c7e05dd5e2886f5dd28ee115bbf3e4ff5758d79249ab7bdc90763d2bf5d3b288",
      "bundle_path_digest": "sha256:c7e05dd5e2886f5dd28ee115bbf3e4ff5758d79249ab7bdc90763d2bf5d3b288",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:07:20.863000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.135.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:16:07.186000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "name": "nxiq-operator-certified-b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f-annotation"
        },
        {
          "digest": "sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "name": "iq"
        },
        {
          "digest": "sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "name": "nexus-iq-server-0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.135.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.135.0-1",
      "version_original": "1.135.0-1"
    },
    {
      "_id": "627c6c163e0ff4d601b6f925",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "bundle_path_digest": "sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:08:22.372000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:56:13.239000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "image": "nvcr.io/nvidia/driver@sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "image": "nvcr.io/nvidia/cuda@sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a-annotation"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.10.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "627c6c1d3e0ff4d601b6f92b",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "bundle_path_digest": "sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.10",
      "creation_date": "2022-05-12T02:08:29.499000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:56:17.675000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "image": "nvcr.io/nvidia/driver@sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "image": "nvcr.io/nvidia/cuda@sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a-annotation"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.10.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "627c6c374be4723d90ee6c1e",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v4",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "volumesnapshotclass",
                  "parameters": {
                    "IsiPath": "/ifs/data/csi"
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-isilon.dellemc.com/1.1.1.1",
                          "values": [
                            "csi-isilon.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_ARRAYS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v1.5.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v4",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2,
              "snapshotClass": [
                {
                  "name": "powermax-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": false,
                  "default": false,
                  "name": "bronze",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "Immediate"
                },
                {
                  "allowVolumeExpansion": false,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powermax.dellemc.com/000000000001",
                          "values": [
                            "csi-powermax.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "bronze-topology",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powermax.dellemc.com/000000000001",
                          "values": [
                            "csi-powermax.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "bronze-topology-resize",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "dellemc/csipowermax-reverseproxy:v1.1.0.000R",
            "imagePullPolicy": "Always",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENDPOINT",
                    "value": "https://127.0.0.1/api/rest"
                  },
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": "ISCSI"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2,
              "snapshotClass": [
                {
                  "name": "powerstore-snapshot"
                }
              ],
              "storageClass": [
                {
                  "default": true,
                  "name": "powerstore",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "ext4"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-xfs",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "xfs"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-powerstore.dellemc.com/127.0.0.1-nfs",
                          "values": [
                            "true"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "powerstore-nfs",
                  "parameters": {
                    "csi.storage.k8s.io/fstype": "nfs",
                    "nasName": "nas-server"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ],
              "snapshotClass": [
                {
                  "name": "test-snap",
                  "parameters": {
                    "retentionDuration": ""
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-nfs",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "hostIoSize": "8192",
                    "nasServer": "nas_1",
                    "protocol": "NFS",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-unity.dellemc.com/virt2017****-iscsi",
                          "values": [
                            "true"
                          ]
                        }
                      ]
                    }
                  ],
                  "name": "virt2017****-iscsi-topology",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete",
                  "volumeBindingMode": "WaitForFirstConsumer"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.1"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.xx.xx.xx,10.xx.xx.xx"
                    }
                  ],
                  "image": "dellemc/sdc:3.5.1.1",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "vxflexos-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:36a685117aa33ae94e6e768a10e24f6a65b2cc6f14cdd778948108e613ae5abc",
      "bundle_path_digest": "sha256:36a685117aa33ae94e6e768a10e24f6a65b2cc6f14cdd778948108e613ae5abc",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:08:55.052000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.2.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:56:53.097000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        }
      ],
      "provider": "Dell EMC",
      "related_images": [
        {
          "digest": "sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "image": "dellemc/dell-csi-operator@sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "name": "dell-csi-operator-126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6-annotation"
        },
        {
          "digest": "sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:126790cbea5d21fa49e927791742c1a4a108ad7931c08247f822bb4d416b98a6",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "image": "docker.io/busybox@sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "name": "config-copy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.2.0",
      "version_original": "1.2.0"
    },
    {
      "_id": "627c6c3f3e0ff4d601b6f934",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-isilon:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "dellemc/csipowermax-reverseproxy:v1.4.0",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "dellemc/csi-unity:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v2.0.0",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.0.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "dellemc/sdc:3.6",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:5beda9cc9f2eb457e127b281b8c45280baa13d02720ac6886bb3655e21641d28",
      "bundle_path_digest": "sha256:5beda9cc9f2eb457e127b281b8c45280baa13d02720ac6886bb3655e21641d28",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:09:03.119000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:56:58.732000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        }
      ],
      "provider": "Dell EMC",
      "related_images": [
        {
          "digest": "sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "image": "dellemc/dell-csi-operator@sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "name": "dell-csi-operator-b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05-annotation"
        },
        {
          "digest": "sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "image": "dellemc/dell-csi-operator@sha256:b71a24658dc8dadbcb1613812c8cc3f92c24ed9130a85536efc90ff91982dd05",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "image": "docker.io/busybox@sha256:bde48e1751173b709090c2539fdf12d6ba64e88ec7a4301591227ce925f3c678",
          "name": "config-copy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.5.0",
      "version_original": "1.5.0"
    },
    {
      "_id": "627c6c45228d5769c569284e",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISI_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_SKIP_CERTIFICATE_VALIDATION",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_CUSTOM_TOPOLOGY_ENABLED",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-isilon@sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  },
                  {
                    "name": "X_CSI_ISI_VOLUME_PATH_PERMISSIONS",
                    "value": "0777"
                  }
                ]
              },
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_MAX_VOLUMES_PER_NODE",
                    "value": "0"
                  },
                  {
                    "name": "X_CSI_ALLOWED_NETWORKS",
                    "value": ""
                  }
                ]
              },
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_MANAGED_ARRAYS",
                    "value": "000000000000,000000000001"
                  },
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "docker.io/dellemc/csi-powermax@sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
            "imagePullPolicy": "IfNotPresent",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "docker.io/dellemc/csi-powerstore@sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENABLE_CHAP",
                    "value": "true"
                  }
                ]
              },
              "replicas": 2
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "image": "docker.io/dellemc/csi-unity@sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "replicas": 2,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity",
                    "--default-fstype=ext4"
                  ],
                  "name": "provisioner"
                },
                {
                  "args": [
                    "--snapshot-name-prefix=csiunitysnap"
                  ],
                  "name": "snapshotter"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ALLOW_RWO_MULTI_POD_ACCESS",
                    "value": "false"
                  }
                ],
                "image": "docker.io/dellemc/csi-vxflexos@sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2.1.0",
              "dnsPolicy": "ClusterFirstWithHostNet",
              "forceUpdate": false,
              "initContainers": [
                {
                  "envs": [
                    {
                      "name": "MDM",
                      "value": "10.x.x.x,10.x.x.x"
                    }
                  ],
                  "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
                  "imagePullPolicy": "IfNotPresent",
                  "name": "sdc"
                }
              ],
              "replicas": 1,
              "sideCars": [
                {
                  "envs": [
                    {
                      "name": "HOST_PID",
                      "value": "1"
                    },
                    {
                      "name": "MDM",
                      "value": ""
                    }
                  ],
                  "name": "sdc-monitor"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:a7a86c4466741edd5aa2358edff6dcb00600dd294867c173c228c7abd6338c2b",
      "bundle_path_digest": "sha256:a7a86c4466741edd5aa2358edff6dcb00600dd294867c173c228c7abd6338c2b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:09:09.435000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "",
      "csv_name": "dell-csi-operator-certified.v1.6.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:57:04.037000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        }
      ],
      "provider": "Dell EMC",
      "related_images": [
        {
          "digest": "sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "name": "dell-csi-operator-92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849-annotation"
        },
        {
          "digest": "sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "image": "docker.io/dellemc/dell-csi-operator@sha256:92cad581e2e8aee7bffbe780401d9aa61cb3ff1304569bf315b17607e17ae849",
          "name": "dell-csi-operator-controller"
        },
        {
          "digest": "sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "image": "docker.io/busybox@sha256:31a54a0cf86d7354788a8265f60ae6acb4b348a67efbcf7c1007dd3cf7af05ab",
          "name": "config-copy"
        },
        {
          "digest": "sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "image": "docker.io/dellemc/sdc@sha256:784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272",
          "name": "sdc-784b3ad7c0d5fbea8267e7e0be1830383f31d6bb57e4626c55cf5d0de344a272-annotation"
        },
        {
          "digest": "sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
          "image": "docker.io/dellemc/csi-vxflexos@sha256:9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1",
          "name": "csi-vxflexos-9e320ce871033e6f326da1195c895caea7e0b4cdfe492f46cbe905efc62be3c1-annotation"
        },
        {
          "digest": "sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
          "image": "docker.io/dellemc/csi-unity@sha256:55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad",
          "name": "csi-unity-55c2d9e5eba9d00acec956b1a19106e61c6a116aaa765d96ef1e0e3a9ec557ad-annotation"
        },
        {
          "digest": "sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
          "image": "docker.io/dellemc/csi-powerstore@sha256:c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a",
          "name": "csi-powerstore-c3dd54f0da5eec198d0f4f3ddfa93882371b8cd2e45c3b49e1aec14d0669888a-annotation"
        },
        {
          "digest": "sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "image": "docker.io/dellemc/csipowermax-reverseproxy@sha256:c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7",
          "name": "csipowermax-reverseproxy-c236cb87d5799ef239b3e5df956761e1c042f3d5686c8e5728c06edfef3095b7-annotation"
        },
        {
          "digest": "sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
          "image": "docker.io/dellemc/csi-powermax@sha256:58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4",
          "name": "csi-powermax-58489d23b52d1599820425da8a45ede7a0348f7e6c23e95e85ad124c647b94a4-annotation"
        },
        {
          "digest": "sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
          "image": "docker.io/dellemc/csi-isilon@sha256:5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2",
          "name": "csi-isilon-5cf558cf80b6cbc9b5ff7a1766bb902663774b5461dc43ca590215edcef148e2-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.6.0",
      "version_original": "1.6.0"
    },
    {
      "_id": "627c6c4c228d5769c5692854",
      "alm_examples": [
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "false"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "volumesnapshotclass",
                  "parameters": {
                    "IsiPath": "/ifs/data/csi"
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMaxRevProxy",
          "metadata": {
            "name": "powermax-reverseproxy",
            "namespace": "test-powermax"
          },
          "spec": {
            "config": {
              "linkConfig": {
                "backup": {
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                },
                "primary": {
                  "certSecret": "",
                  "skipCertificateValidation": true,
                  "url": "https://0.0.0.0:8443"
                }
              },
              "mode": "Linked"
            },
            "image": "dellemc/csipowermax-reverseproxy:v1.0.0.000R",
            "imagePullPolicy": "Always",
            "tlsSecret": "csirevproxy-tls-secret"
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_ARRAYS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "storageClass": [
                {
                  "allowVolumeExpansion": false,
                  "default": true,
                  "name": "bronze",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "bronze-resize",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerMax",
          "metadata": {
            "name": "test-powermax",
            "namespace": "test-powermax"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ENDPOINT",
                    "value": "https://0.0.0.0:8443/"
                  },
                  {
                    "name": "X_CSI_K8S_CLUSTER_PREFIX",
                    "value": "XYZ"
                  },
                  {
                    "name": "X_CSI_POWERMAX_PORTGROUPS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_ARRAYS",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_POWERMAX_PROXY_SERVICE_NAME",
                    "value": ""
                  },
                  {
                    "name": "X_CSI_GRPC_MAX_THREADS",
                    "value": "4"
                  }
                ],
                "image": "dellemc/csi-powermax:v1.4.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_POWERMAX_ISCSI_ENABLE_CHAP",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "powermax-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": false,
                  "default": true,
                  "name": "bronze",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "bronze-resize",
                  "parameters": {
                    "SRP": "DEFAULT_SRP",
                    "SYMID": "000000000001",
                    "ServiceLevel": "Bronze"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENDPOINT",
                    "value": "https://127.0.0.1/api/rest"
                  },
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": "ISCSI"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v1.1.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v1",
              "forceUpdate": false,
              "replicas": 1,
              "storageClass": [
                {
                  "default": true,
                  "name": "powerstore",
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-xfs",
                  "parameters": {
                    "FsType": "xfs"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-nfs",
                  "parameters": {
                    "FsType": "nfs",
                    "nasName": "nas-server"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIPowerStore",
          "metadata": {
            "name": "test-powerstore",
            "namespace": "test-powerstore"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_POWERSTORE_ENDPOINT",
                    "value": "https://127.0.0.1/api/rest"
                  },
                  {
                    "name": "X_CSI_POWERSTORE_NODE_NAME_PREFIX",
                    "value": "csi"
                  },
                  {
                    "name": "X_CSI_TRANSPORT_PROTOCOL",
                    "value": "ISCSI"
                  },
                  {
                    "name": "X_CSI_FC_PORTS_FILTER_FILE_PATH",
                    "value": "/etc/fc-ports-filter"
                  }
                ],
                "image": "dellemc/csi-powerstore:v1.1.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v1",
              "forceUpdate": false,
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "powerstore-snapshot"
                }
              ],
              "storageClass": [
                {
                  "default": true,
                  "name": "powerstore",
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-xfs",
                  "parameters": {
                    "FsType": "xfs"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "name": "powerstore-nfs",
                  "parameters": {
                    "FsType": "nfs",
                    "nasName": "nas-server"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "test-snap",
                  "parameters": {
                    "retentionDuration": ""
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.0"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "replicas": 1,
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool2"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.0"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "vxflexos-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool2"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIIsilon",
          "metadata": {
            "name": "isilon",
            "namespace": "test-isilon"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VERBOSE",
                    "value": "1"
                  },
                  {
                    "name": "X_CSI_ISI_ENDPOINT",
                    "value": "1.1.1.1"
                  },
                  {
                    "name": "X_CSI_ISI_PORT",
                    "value": "8080"
                  },
                  {
                    "name": "X_CSI_ISI_PATH",
                    "value": "/ifs/data/csi"
                  },
                  {
                    "name": "X_CSI_ISILON_NO_PROBE_ON_START",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_ISI_AUTOPROBE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_INSECURE",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-isilon:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v3",
              "controller": {
                "envs": [
                  {
                    "name": "X_CSI_ISI_QUOTA_ENABLED",
                    "value": "true"
                  },
                  {
                    "name": "X_CSI_ISI_ACCESS_ZONE",
                    "value": "System"
                  }
                ]
              },
              "forceUpdate": false,
              "node": {
                "envs": [
                  {
                    "name": "X_CSI_ISILON_NFS_V3",
                    "value": "false"
                  }
                ]
              },
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csipscale"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "volumesnapshotclass",
                  "parameters": {
                    "IsiPath": "/ifs/data/csi"
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "storageclass",
                  "parameters": {
                    "AccessZone": "System",
                    "AzServiceIP": "1.1.1.1",
                    "IsiPath": "/ifs/data/csi",
                    "RootClientEnabled": "false"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIUnity",
          "metadata": {
            "name": "test-unity",
            "namespace": "test-unity"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_UNITY_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-unity:v1.3.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "replicas": 1,
              "sideCars": [
                {
                  "args": [
                    "--volume-name-prefix=csiunity"
                  ],
                  "name": "provisioner"
                }
              ],
              "snapshotClass": [
                {
                  "name": "test-snap",
                  "parameters": {
                    "retentionDuration": ""
                  }
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "default": true,
                  "name": "virt2016****-fc",
                  "parameters": {
                    "arrayId": "VIRT2016****",
                    "protocol": "FC",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-iscsi",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "protocol": "iSCSI",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "name": "virt2017****-nfs",
                  "parameters": {
                    "arrayId": "VIRT2017****",
                    "hostIoSize": "8192",
                    "nasServer": "nas_1",
                    "protocol": "NFS",
                    "storagePool": "pool_1"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        },
        {
          "api_version": "storage.dell.com/v1",
          "kind": "CSIVXFlexOS",
          "metadata": {
            "name": "test-vxflexos",
            "namespace": "test-vxflexos"
          },
          "spec": {
            "driver": {
              "common": {
                "envs": [
                  {
                    "name": "X_CSI_VXFLEXOS_SYSTEMNAME",
                    "value": "systemname"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENDPOINT",
                    "value": "https://127.0.0.1"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLELISTVOLUMESNAPSHOT",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_VXFLEXOS_ENABLESNAPSHOTCGDELETE",
                    "value": "false"
                  },
                  {
                    "name": "X_CSI_DEBUG",
                    "value": "true"
                  }
                ],
                "image": "dellemc/csi-vxflexos:v1.2.0.000R",
                "imagePullPolicy": "IfNotPresent"
              },
              "configVersion": "v2",
              "forceUpdate": false,
              "replicas": 1,
              "snapshotClass": [
                {
                  "name": "vxflexos-snapclass"
                }
              ],
              "storageClass": [
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": true,
                  "name": "vxflexos",
                  "parameters": {
                    "storagepool": "pool1"
                  },
                  "reclaimPolicy": "Delete"
                },
                {
                  "allowVolumeExpansion": true,
                  "allowedTopologies": [
                    {
                      "matchLabelExpressions": [
                        {
                          "key": "csi-vxflexos.dellemc.com/X_CSI_VXFLEXOS_SYSTEMNAME",
                          "values": [
                            "csi-vxflexos.dellemc.com"
                          ]
                        }
                      ]
                    }
                  ],
                  "default": false,
                  "name": "vxflexos-xfs",
                  "parameters": {
                    "FsType": "xfs",
                    "storagepool": "pool2"
                  },
                  "reclaimPolicy": "Delete"
                }
              ]
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dell-emc/dell-csiop-bundle-110@sha256:0fe8dd27ddc36df73517195b9d4983a4c54e3036683c83952a9514f335ac557d",
      "bundle_path_digest": "sha256:0fe8dd27ddc36df73517195b9d4983a4c54e3036683c83952a9514f335ac557d",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:09:16.174000+00:00",
      "csv_description": "Dell CSI Operator for Dell EMC CSI Drivers\nDell CSI Operator is an operator which can be used to install and manage various CSI Drivers provided by Dell EMC for different storage arrays.",
      "csv_display_name": "Dell CSI Operator",
      "csv_metadata_description": "An operator for installing and managing CSI Drivers provided by Dell EMC",
      "csv_name": "dell-csi-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:57:20.291000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "dell-csi-operator-certified",
      "provided_apis": [
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMaxRevProxy",
          "plural": "csipowermaxrevproxies",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerStore",
          "plural": "csipowerstores",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIUnity",
          "plural": "csiunities",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIVXFlexOS",
          "plural": "csivxflexoses",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIIsilon",
          "plural": "csiisilons",
          "version": "v1"
        },
        {
          "group": "storage.dell.com",
          "kind": "CSIPowerMax",
          "plural": "csipowermaxes",
          "version": "v1"
        }
      ],
      "provider": "Dell EMC",
      "related_images": [
        {
          "digest": "sha256:113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f",
          "image": "dellemc/dell-csi-operator@sha256:113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f",
          "name": "dell-csi-operator-113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f-annotation"
        },
        {
          "digest": "sha256:113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f",
          "image": "dellemc/dell-csi-operator@sha256:113435c9d0d805a2d7f4e6b5bdd6d21a3e489cb0278a9e81b2bc142c0fd5eb0f",
          "name": "dell-csi-operator"
        },
        {
          "digest": "sha256:a9286defaba7b3a519d585ba0e37d0b2cbee74ebfe590960b0b1d6a5e97d1e1d",
          "image": "busybox@sha256:a9286defaba7b3a519d585ba0e37d0b2cbee74ebfe590960b0b1d6a5e97d1e1d",
          "name": "config-copy"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "627c6cd3228d5769c569288d",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "bundle_path_digest": "sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:11:31.065000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:59:07.342000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "image": "nvcr.io/nvidia/driver@sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "image": "nvcr.io/nvidia/cuda@sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a-annotation"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.10.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "627c6cd93e0ff4d601b6f974",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "daemonsets": {},
            "dcgm": {
              "enabled": true
            },
            "dcgmExporter": {
              "config": {
                "name": ""
              }
            },
            "devicePlugin": {},
            "driver": {
              "certConfig": {
                "name": ""
              },
              "enabled": true,
              "kernelModuleConfig": {
                "name": ""
              },
              "licensingConfig": {
                "configMapName": "",
                "nlsEnabled": false
              },
              "repoConfig": {
                "configMapName": ""
              },
              "use_ocp_driver_toolkit": true,
              "virtualTopology": {
                "config": ""
              }
            },
            "gfd": {},
            "mig": {
              "strategy": "single"
            },
            "migManager": {
              "enabled": true
            },
            "nodeStatusExporter": {
              "enabled": true
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "initContainer": {}
            },
            "toolkit": {
              "enabled": true
            },
            "validator": {
              "plugin": {
                "env": [
                  {
                    "name": "WITH_WORKLOAD",
                    "value": "true"
                  }
                ]
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "bundle_path_digest": "sha256:60b1d25ebb3aada94985e359bb059d4491bf0148ac75d51b68a461670659e429",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.10",
      "creation_date": "2022-05-12T02:11:37.141000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/cloud-native/gpu-operator/openshift/contents.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.10.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T12:59:12.621000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": "NVIDIA Corporation",
      "related_images": [
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:67c48a8370c34f68b46eb57339e87d01c04198368a0423553fab7565c862c4df",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "image": "nvcr.io/nvidia/cloud-native/dcgm@sha256:ac13256c295126b854a07421c45de0721e7a57974b38b3e66eb1fdc3a4e29f2e",
          "name": "dcgm-image"
        },
        {
          "digest": "sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:9abb063e6b74085728fead5ed5bbe3bd7b3f57de60e87f6b964bba2d46f1bc67",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "image": "nvcr.io/nvidia/driver@sha256:f99b66855e92451a59a722355dd52bf97eb985cc8a647172273de8178aeaa93c",
          "name": "driver-image"
        },
        {
          "digest": "sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:aa95c16106280e36a5e32d2fe4c66e8b70f5a114860c6f4ed5b1a4085c63601b",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:c2e3d0fe41a0d227dbb70caec03c780cc76317515e5ab3875f31d50c63f41c66",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "image": "nvcr.io/nvidia/cloud-native/k8s-mig-manager@sha256:e8f06ce53415e8572f633b2169289d973993cb1e49d4dcc686ac134194d88f33",
          "name": "mig-manager-image"
        },
        {
          "digest": "sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "image": "nvcr.io/nvidia/cuda@sha256:7f0f7dc8c993a86865d4d9f9b0e36d113ea15603d5d5279d2879fa2bc21c8236",
          "name": "init-container-image"
        },
        {
          "digest": "sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "image": "nvcr.io/nvidia/cloud-native/gpu-operator-validator@sha256:24d804e8f005d7aeca8343aa13e5f92295d8642a4c47cb24e3ac86a22543bc37",
          "name": "gpu-operator-validator-image"
        },
        {
          "digest": "sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "image": "nvcr.io/nvidia/cloud-native/k8s-driver-manager@sha256:5b16056257acc51b517d9cdb1da3218693cefc214af93789e6e214fd2b4cacf1",
          "name": "k8s-driver-manager-image"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator-c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a-annotation"
        },
        {
          "digest": "sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:c7f9074c1a7f58947c807f23f2eece3a8b04e11175127919156f8e864821d45a",
          "name": "gpu-operator"
        }
      ],
      "replaces": null,
      "skip_range": ">=v1.9.0 <v1.10.1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.10.1",
      "version_original": "1.10.1"
    },
    {
      "_id": "627c6d45228d5769c56928d9",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:e95e296f6633c6154f21dfabd0caf27fd0db871fe4ed987b5415f6f9b62ac230",
      "bundle_path_digest": "sha256:e95e296f6633c6154f21dfabd0caf27fd0db871fe4ed987b5415f6f9b62ac230",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:13:25.123000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.26",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:39.090000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:46a5da986ccec2377cf27b6d7220dade459b534c69030162dbbd544a560a2c5e",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:46a5da986ccec2377cf27b6d7220dade459b534c69030162dbbd544a560a2c5e",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.26",
      "version_original": "0.0.26"
    },
    {
      "_id": "627c6d4c3e0ff4d601b6f9bd",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:1a7445f65072dc48009b174bc8bd66de5c2d18d98c235c1fa9b3af2dda6de6ce",
      "bundle_path_digest": "sha256:1a7445f65072dc48009b174bc8bd66de5c2d18d98c235c1fa9b3af2dda6de6ce",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:13:32.365000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.27",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:44.474000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:73f7a5500e2af1c40506fb43d7150988c665fab8f1d0df8cc75b5d7c0b325007",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:73f7a5500e2af1c40506fb43d7150988c665fab8f1d0df8cc75b5d7c0b325007",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.27",
      "version_original": "0.0.27"
    },
    {
      "_id": "627c6d52228d5769c56928e2",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:96ff4c7c501f2d937bb1e95f19e3145ed60f2b41c2224e678f3389b6144c3466",
      "bundle_path_digest": "sha256:96ff4c7c501f2d937bb1e95f19e3145ed60f2b41c2224e678f3389b6144c3466",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:13:38.117000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:00:50.819000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:5a28e178e7d69c05b1f4bec354c940b4467214a16a2b7cafc2709304fddc9fcf",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:5a28e178e7d69c05b1f4bec354c940b4467214a16a2b7cafc2709304fddc9fcf",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.28",
      "version_original": "0.0.28"
    },
    {
      "_id": "627c6d533e0ff4d601b6f9c4",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:96ff4c7c501f2d937bb1e95f19e3145ed60f2b41c2224e678f3389b6144c3466",
      "bundle_path_digest": "sha256:96ff4c7c501f2d937bb1e95f19e3145ed60f2b41c2224e678f3389b6144c3466",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:13:39.482000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:53:43.469000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:5a28e178e7d69c05b1f4bec354c940b4467214a16a2b7cafc2709304fddc9fcf",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:5a28e178e7d69c05b1f4bec354c940b4467214a16a2b7cafc2709304fddc9fcf",
          "name": "joget"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.28",
      "version_original": "0.0.28"
    },
    {
      "_id": "627c6d82228d5769c569290c",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "bundle_path_digest": "sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:14:26.963000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:01:47.824000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.5.1",
      "version_original": "8.5.1"
    },
    {
      "_id": "627c6d844be4723d90ee6ced",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "bundle_path_digest": "sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:14:28.427000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:54:39.254000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "name": "kubeturbo"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "8.5.1",
      "version_original": "8.5.1"
    },
    {
      "_id": "627c6d924be4723d90ee6cfd",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:e95e296f6633c6154f21dfabd0caf27fd0db871fe4ed987b5415f6f9b62ac230",
      "bundle_path_digest": "sha256:e95e296f6633c6154f21dfabd0caf27fd0db871fe4ed987b5415f6f9b62ac230",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:14:42.051000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.26",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:02:30.662000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:46a5da986ccec2377cf27b6d7220dade459b534c69030162dbbd544a560a2c5e",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:46a5da986ccec2377cf27b6d7220dade459b534c69030162dbbd544a560a2c5e",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.26",
      "version_original": "0.0.26"
    },
    {
      "_id": "627c6d973e0ff4d601b6f9ff",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:1a7445f65072dc48009b174bc8bd66de5c2d18d98c235c1fa9b3af2dda6de6ce",
      "bundle_path_digest": "sha256:1a7445f65072dc48009b174bc8bd66de5c2d18d98c235c1fa9b3af2dda6de6ce",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:14:47.622000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.27",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:02:35.035000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:73f7a5500e2af1c40506fb43d7150988c665fab8f1d0df8cc75b5d7c0b325007",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:73f7a5500e2af1c40506fb43d7150988c665fab8f1d0df8cc75b5d7c0b325007",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.27",
      "version_original": "0.0.27"
    },
    {
      "_id": "627c6d9c9b28cbab99bd0e9a",
      "alm_examples": [
        {
          "api_version": "app.joget.com/v1alpha1",
          "kind": "JogetDX",
          "metadata": {
            "name": "example-joget"
          },
          "spec": {
            "size": 1
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/joget/joget-dx-operator-bundle@sha256:96ff4c7c501f2d937bb1e95f19e3145ed60f2b41c2224e678f3389b6144c3466",
      "bundle_path_digest": "sha256:96ff4c7c501f2d937bb1e95f19e3145ed60f2b41c2224e678f3389b6144c3466",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:14:52.145000+00:00",
      "csv_description": "Joget DX is the next generation open source no-code / low-code application platform that combines the best of Rapid Application Development, Business Process Automation and Workflow Management. \nJoget DX empowers business users, non-coders or coders with a single platform to easily build, deliver, monitor and maintain enterprise applications.\n\nThis operator installs a Joget DX cluster running on JBoss EAP 7.\n\n### Features\n* Build full-fledged apps e.g. CRM, HR, Healthcare, etc\n* Drag and drop forms, lists, UI\n* Add workflow to automate processes\n* Extend via plugins\n* Apps are mobile optimized and cloud ready\n* Download ready-made apps from the Joget Marketplace\n\n### Before You Start\nDeploy a [MySQL](https://docs.openshift.com/online/pro/using_images/db_images/mysql.html) or [MariaDB](https://docs.openshift.com/online/pro/using_images/db_images/mariadb.html) database.\n\n### Post Deployment\nAccess the service URL and complete the one-time [Database Setup](https://dev.joget.org/community/display/DX7/Setting+Up+Database)\n\n### More Information\nMore information about Joget DX on JBoss EAP 7 is available in the [Joget Knowledge Base](https://dev.joget.org/community/display/DX7/Automated+Deployment+on+Red+Hat+OpenShift+with+the+Joget+Operator)\n",
      "csv_display_name": "Joget DX Operator",
      "csv_metadata_description": "No-code/low-code application platform to visually build, run and maintain apps",
      "csv_name": "joget-dx-openshift-operator.v0.0.28",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:02:40.526000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "joget-dx-operator",
      "provided_apis": [
        {
          "group": "app.joget.com",
          "kind": "JogetDX",
          "plural": "jogetdx",
          "version": "v1alpha1"
        }
      ],
      "provider": "Joget, Inc",
      "related_images": [
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "joget-dx-operator-79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749-annotation"
        },
        {
          "digest": "sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "image": "registry.connect.redhat.com/joget/joget-dx-operator@sha256:79856e88008da33fc0323e197819fec39fbd6b6bf2b03a0bf799b517bcf8e749",
          "name": "operator"
        },
        {
          "digest": "sha256:5a28e178e7d69c05b1f4bec354c940b4467214a16a2b7cafc2709304fddc9fcf",
          "image": "registry.connect.redhat.com/joget/joget-dx7-eap7@sha256:5a28e178e7d69c05b1f4bec354c940b4467214a16a2b7cafc2709304fddc9fcf",
          "name": "joget"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.28",
      "version_original": "0.0.28"
    },
    {
      "_id": "627c6da53e0ff4d601b6fa15",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-90.rhel7-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "bundle_path_digest": "sha256:95644b2ccc560118c16350bcd4380db7c08d97258bf1034387e96a9b1814fef5",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-12T02:15:01.689000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\nChanging the name of the Redis Enterprise Cluster in the spec from the\ndefault requires running commands to grant permissions to the pods:\n\nOperator service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\nRedis Enterprise Cluster service account:\n> *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\nReplace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-4",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:15:01.689000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator-97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31-annotation"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:97ffbde86f27810b1a5e6fee7ec53683f49b650cc33c327696be66d04e10bf31",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.2.10-4",
      "version_original": "6.2.10-4"
    },
    {
      "_id": "627c6db39b28cbab99bd0ec1",
      "alm_examples": [
        {
          "api_version": "mm.memverge.com/v1alpha1",
          "kind": "MemoryMachine",
          "metadata": {
            "name": "memorymachine-sample",
            "namespace": "test"
          },
          "spec": {
            "controlVersion": "latest",
            "enableSnapshot": true,
            "imageRepository": "ghcr.io/memverge",
            "mmVersion": "latest",
            "mvsvcdConfig": {
              "LogTrace": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memverge/memory-machine-operator@sha256:273d253c08d375eab4622e6d2d4937e571bd5cdf4368b08a85ff52ad85b042c1",
      "bundle_path_digest": "sha256:273d253c08d375eab4622e6d2d4937e571bd5cdf4368b08a85ff52ad85b042c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:15:15.536000+00:00",
      "csv_description": "## Overview\n\n**Memory Machine Operator** will Deploy and configure **Memory Machine\u2122**, which works together with Intel\u00ae Optane\u2122 Persistent Memory to form Big Memory solutions delivering lower server memory cost and higher performance, productivity, and availability.\n\n## Installation\nPlease follow the installation guide by clicking on the **install** button at top right of the page.\n\n## Documents\nDetails about installation and configuration of Memory Machine Operator can be found in our [github repository](https://github.com/MemVerge/memory-machine-operator)\n",
      "csv_display_name": "Memory Machine Operator",
      "csv_metadata_description": "Deploy and Configure Memory Machine\u2122",
      "csv_name": "memory-machine-operator.v0.0.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:02:58.644000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "memory-machine-operator",
      "provided_apis": [
        {
          "group": "mm.memverge.com",
          "kind": "MemoryMachine",
          "version": "v1alpha1"
        }
      ],
      "provider": "MemVerge, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6efb63e434ec33a5f76fb9ba89041deeb6e52edc46550515a609eca5b27bcc8",
          "image": "registry.connect.redhat.com/memverge/memory-machine-operator-image@sha256:f6efb63e434ec33a5f76fb9ba89041deeb6e52edc46550515a609eca5b27bcc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.0.10",
      "version_original": "0.0.10"
    },
    {
      "_id": "627c6db44be4723d90ee6d25",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Kubeturbo",
          "metadata": {
            "name": "kubeturbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            },
            "targetConfig": {
              "targetName": "Cluster_Name"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/kubeturbo-operator-bundle@sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "bundle_path_digest": "sha256:e5bf556da7ffdcd3e2e9c6e543d8ef7f1844216774e703dfec53e466e609d854",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:15:16.406000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 KubeTurbo \u2014 that runs in your Kubernetes or Red Hat OpenShift cluster to discover and monitor your environment.\nKubeTurbo runs together with the default scheduler and sends this data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Kubeturbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "kubeturbo-operator.v8.5.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:03:28.548000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "kubeturbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1alpha1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Kubeturbo",
          "plural": "kubeturbos",
          "version": "v1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator-e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47-annotation"
        },
        {
          "digest": "sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo-operator@sha256:e5cdbdeeaf639afe9782fceb9bf32c5e06e2b6ed4ded41e06abe8f49bda7ac47",
          "name": "kubeturbo-operator"
        },
        {
          "digest": "sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "image": "registry.connect.redhat.com/turbonomic/kubeturbo@sha256:f78525afc39849d143c7fbe8992b95a26cb0d3443bc6a8fe7fbe49145887c8d7",
          "name": "kubeturbo"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.5.1",
      "version_original": "8.5.1"
    },
    {
      "_id": "627c6dba3e0ff4d601b6fa2f",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.8",
      "creation_date": "2022-05-12T02:15:22.538000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:15:22.538000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "627c6dbf9b28cbab99bd0ed2",
      "alm_examples": [
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaCsp",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "db-password",
                "name": "aqua-database-password"
              },
              "dbDiskSize": 10
            },
            "database": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "gateway": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "infra": {
              "namespace": "aqua",
              "requirements": true,
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "route": true,
            "server": {
              "replicas": 1,
              "service": "LoadBalancer"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaDatabase",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "diskSize": 10,
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "gateway": {
              "host": "aqua-gateway",
              "port": 8443
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "token": "<<your-token>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaKubeEnforcer",
          "metadata": {
            "name": "aqua"
          },
          "spec": {
            "config": {
              "cluster_name": "aqua-secure",
              "gateway_address": "aqua-gateway.aqua:8443"
            },
            "token": "<<KUBE_ENFORCER_GROUP_TOKEN>>"
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaGateway",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "ClusterIP"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaScanner",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "deploy": {
              "replicas": 1
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            },
            "login": {
              "host": "http://aqua-server:8080",
              "password": "<<YOUR AQUA USER PASSWORD>>",
              "username": "<<YOUR AQUA USER NAME>>"
            }
          }
        },
        {
          "api_version": "operator.aquasec.com/v1alpha1",
          "kind": "AquaServer",
          "metadata": {
            "name": "aqua",
            "namespace": "aqua"
          },
          "spec": {
            "common": {
              "databaseSecret": {
                "key": "<<EXTERNAL DB PASSWORD SECRET KEY>>",
                "name": "<<EXTERNAL DB PASSWORD SECRET NAME>>"
              },
              "splitDB": false
            },
            "deploy": {
              "replicas": 1,
              "service": "LoadBalancer"
            },
            "externalDb": {
              "host": "<<EXTERNAL DB IP OR DNS>>",
              "password": "<<EXTERNAL DB PASSWORD (if secret does not exist)>>",
              "port": "<<EXTERNAL DB PORT>>",
              "username": "<<EXTERNAL DB USERNAME>>"
            },
            "infra": {
              "serviceAccount": "aqua-sa",
              "version": "5.3"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/aquasec/aquasec-operator-bundle@sha256:c367a6e2000ff5eb18363b3008930e86623a1ef74d0236cdb9423b63468fdfc2",
      "bundle_path_digest": "sha256:c367a6e2000ff5eb18363b3008930e86623a1ef74d0236cdb9423b63468fdfc2",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "5.3",
      "creation_date": "2022-05-12T02:15:27.176000+00:00",
      "csv_description": "The Aqua Security Operator is used to deploy and manage the Aqua Cloud Native Security Platform (CSP) and its components:\n* Server (aka \"console\")\n* Database (optional; you can map an external database as well)\n* Gateway\n* Enforcer\n* KubeEnforcer\n* Scanner\n\nUse the Aqua Operator to:\n* Deploy Aqua CSP on OpenShift\n* Scale up Aqua Security components with extra replicas\n* Assign metadata tags to Aqua CSP components\n* Automatically scale the number of Aqua scanners based on the number of images in the scan queue\n\nThe Aqua Operator provides a few [Custom Resources](https://github.com/aquasecurity/aqua-operator/tree/master/deploy/crds) for managing the Aqua CSP platform.\n\n## Prerequisites\n\nThere are only 3 prerequisites:\n1. Make sure you have a license and to obtain one, please contact Aqua Security at [Contact Us](mailto:cloudsales@aquasec.com).\n2. Create a new project for aqua\n\n    ```oc new-project aqua```\n3. Create the secret for Aqua Database password\n\n    ```oc create secret generic aqua-database-password --from-literal=db-password=<password>```\n    \nPlease note that for the certified operator, the Docker registry secret is NOT needed. For the Red Hat certified operator, the Aqua application images are stored in the Red Hat Connect registry and will be automatically pulled by the Aqua operator.\n\n## Choosing the right channel\n\nChannels are a flexible publishing mechanism that offers you three different Aqua versions to deploy, at any point. These channels map to their respective Aqua versions, describing the maturity based on where they are in their lifecycle:\n* latest: This maps to the Aqua version 4.6.0\n* alpha: This maps to the Aqua version 5.0.0\n* 5.3: This is the latest and greatest version of Aqua (default)\n\n## Deploying the Aqua Operator\n\nAqua Operator follows an easy push button deployment that installs the operator in its own aqua namespace.\nPlease refer to the instructions [here](https://github.com/aquasecurity/aqua-operator/blob/5.3.0/docs/DeployOpenShiftOperator.md).\n\n## Configuring the Aqua Operator\n\nOperators leverage CRDs as a configuration mechanism for the application. Aqua offers a number of CRDs that can be tweaked and configured as per your needs. Please refer to this [link](https://github.com/aquasecurity/aqua-operator/blob/5.3.0/docs/DeployOpenShiftOperator.md#aquacsp-crds) for Custom Resource examples for popular scenarios.\n\n## Support\n\nFor support please contact support@aquasec.com.",
      "csv_display_name": "Aqua Security Operator",
      "csv_metadata_description": "The Aqua Security Operator runs within a Openshift cluster and provides a means to deploy and manage Aqua Security cluster and components.",
      "csv_name": "aqua-operator.v5.3.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:15:27.176000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "aqua-operator-certified",
      "provided_apis": [
        {
          "group": "operator.aquasec.com",
          "kind": "AquaKubeEnforcer",
          "plural": "aquakubeenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaScanner",
          "plural": "aquascanners",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaServer",
          "plural": "aquaservers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaCsp",
          "plural": "aquacsps",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaDatabase",
          "plural": "aquadatabases",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaEnforcer",
          "plural": "aquaenforcers",
          "version": "v1alpha1"
        },
        {
          "group": "operator.aquasec.com",
          "kind": "AquaGateway",
          "plural": "aquagateways",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "name": "aquasec-5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17-annotation"
        },
        {
          "digest": "sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "image": "registry.connect.redhat.com/aquasec/aquasec@sha256:5232320700d92814955daee9588845b6d57ff499d24406e34c86cb2264df7e17",
          "name": "aqua-operator"
        },
        {
          "digest": "sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "image": "registry.connect.redhat.com/aquasec/database@sha256:2cb83939d45d32560b3499299c46f98d542a1f67f5378774e60c95d255a03768",
          "name": "database"
        },
        {
          "digest": "sha256:5e3f0ceb3805eb556a270ff6dd24f38b7363af635be67a07537537fdcea91a59",
          "image": "registry.connect.redhat.com/aquasec/gateway@sha256:5e3f0ceb3805eb556a270ff6dd24f38b7363af635be67a07537537fdcea91a59",
          "name": "gateway"
        },
        {
          "digest": "sha256:736ebc8d15add4f82999d0d4cd95f0d7ddf4d4459496718c1482716841750dd9",
          "image": "registry.connect.redhat.com/aquasec/console@sha256:736ebc8d15add4f82999d0d4cd95f0d7ddf4d4459496718c1482716841750dd9",
          "name": "server"
        },
        {
          "digest": "sha256:03669814dfa811b54116ce9c7481c6594f44058593ab50f8549beeef9ed0e54c",
          "image": "registry.connect.redhat.com/aquasec/scanner@sha256:03669814dfa811b54116ce9c7481c6594f44058593ab50f8549beeef9ed0e54c",
          "name": "scanner"
        },
        {
          "digest": "sha256:6617cc185815d883ef25d40d0ba02e00bd39224c9431d36ecbf2254690206230",
          "image": "registry.connect.redhat.com/aquasec/enforcer@sha256:6617cc185815d883ef25d40d0ba02e00bd39224c9431d36ecbf2254690206230",
          "name": "enforcer"
        },
        {
          "digest": "sha256:a132492d9678275c250aaddcdf9af4fea551e79d6aaf95682f457edf8f92af50",
          "image": "registry.connect.redhat.com/aquasec/kube-enforcer@sha256:a132492d9678275c250aaddcdf9af4fea551e79d6aaf95682f457edf8f92af50",
          "name": "kube_enforcer"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.3.0",
      "version_original": "5.3.0"
    },
    {
      "_id": "627c6dd24be4723d90ee6d4b",
      "alm_examples": [
        {
          "api_version": "mm.memverge.com/v1alpha1",
          "kind": "MemoryMachine",
          "metadata": {
            "name": "memorymachine-sample",
            "namespace": "test"
          },
          "spec": {
            "controlVersion": "latest",
            "enableSnapshot": true,
            "imageRepository": "ghcr.io/memverge",
            "mmVersion": "latest",
            "mvsvcdConfig": {
              "LogTrace": false
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/memverge/memory-machine-operator@sha256:273d253c08d375eab4622e6d2d4937e571bd5cdf4368b08a85ff52ad85b042c1",
      "bundle_path_digest": "sha256:273d253c08d375eab4622e6d2d4937e571bd5cdf4368b08a85ff52ad85b042c1",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:15:46.140000+00:00",
      "csv_description": "## Overview\n\n**Memory Machine Operator** will Deploy and configure **Memory Machine\u2122**, which works together with Intel\u00ae Optane\u2122 Persistent Memory to form Big Memory solutions delivering lower server memory cost and higher performance, productivity, and availability.\n\n## Installation\nPlease follow the installation guide by clicking on the **install** button at top right of the page.\n\n## Documents\nDetails about installation and configuration of Memory Machine Operator can be found in our [github repository](https://github.com/MemVerge/memory-machine-operator)\n",
      "csv_display_name": "Memory Machine Operator",
      "csv_metadata_description": "Deploy and Configure Memory Machine\u2122",
      "csv_name": "memory-machine-operator.v0.0.10",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:04:26.037000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "memory-machine-operator",
      "provided_apis": [
        {
          "group": "mm.memverge.com",
          "kind": "MemoryMachine",
          "version": "v1alpha1"
        }
      ],
      "provider": "MemVerge, Inc.",
      "related_images": [
        {
          "digest": "sha256:f6efb63e434ec33a5f76fb9ba89041deeb6e52edc46550515a609eca5b27bcc8",
          "image": "registry.connect.redhat.com/memverge/memory-machine-operator-image@sha256:f6efb63e434ec33a5f76fb9ba89041deeb6e52edc46550515a609eca5b27bcc8",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.0.10",
      "version_original": "0.0.10"
    },
    {
      "_id": "627c6e1e228d5769c56929e5",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:c7e05dd5e2886f5dd28ee115bbf3e4ff5758d79249ab7bdc90763d2bf5d3b288",
      "bundle_path_digest": "sha256:c7e05dd5e2886f5dd28ee115bbf3e4ff5758d79249ab7bdc90763d2bf5d3b288",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:17:02.708000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.135.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:24.920000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "plural": "nexusiqs",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "name": "nxiq-operator-certified-b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f-annotation"
        },
        {
          "digest": "sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "name": "iq"
        },
        {
          "digest": "sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "name": "nexus-iq-server-0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.135.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.135.0-1",
      "version_original": "1.135.0-1"
    },
    {
      "_id": "627c6e22228d5769c56929ef",
      "alm_examples": [
        {
          "api_version": "mellanox.com/v1alpha1",
          "kind": "HostDeviceNetwork",
          "metadata": {
            "name": "hostdevicenetwork-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "mellanox.com/v1alpha1",
          "kind": "MacvlanNetwork",
          "metadata": {
            "name": "macvlannetwork-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "mellanox.com/v1alpha1",
          "kind": "NicClusterPolicy",
          "metadata": {
            "name": "nicclusterpolicy-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:2367829886a0f8aaa3705ec0d98118fb53e21c56f02b3e58f8ec312b337dd9c6",
      "bundle_path_digest": "sha256:2367829886a0f8aaa3705ec0d98118fb53e21c56f02b3e58f8ec312b337dd9c6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "1.1.0",
      "creation_date": "2022-05-12T02:17:06.277000+00:00",
      "csv_description": "## NVIDIA Network Operator\nThe NVIDIA Network Operator simplifies the provisioning and management of NVIDIA networking resources  in a Kubernetes cluster. The operator automatically installs the required host networking software - bringing together all the needed components to provide high-speed network connectivity. These components include the NVIDIA networking driver, Kubernetes device plugin, CNI plugins, IP address management (IPAM) plugin and others.\nThe NVIDIA Network Operator works in conjunction with the NVIDIA GPU Operator to deliver high-throughput, low-latency networking for scale-out, GPU computing clusters.\nThe Network Operator is open-source. For more information on contributions and release artifacts, see the [GitHub repo](https://github.com/Mellanox/network-operator/)\n",
      "csv_display_name": "NVIDIA Network Operator",
      "csv_metadata_description": "Deploy and manage NVIDIA networking resources in Kubernetes",
      "csv_name": "nvidia-network-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-12T02:17:06.277000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nvidia-network-operator",
      "provided_apis": [
        {
          "group": "mellanox.com",
          "kind": "NicClusterPolicy",
          "plural": "nicclusterpolicies",
          "version": "v1alpha1"
        },
        {
          "group": "k8s.cni.cncf.io",
          "kind": "NetworkAttachmentDefinition",
          "plural": "network-attachment-definitions",
          "version": "v1"
        },
        {
          "group": "mellanox.com",
          "kind": "HostDeviceNetwork",
          "plural": "hostdevicenetworks",
          "version": "v1alpha1"
        },
        {
          "group": "mellanox.com",
          "kind": "MacvlanNetwork",
          "plural": "macvlannetworks",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:17afa53f1cf3733c8d0cd282c565975ed5de3124dfc2b7c485ad12c97e51c251",
          "image": "nvcr.io/nvidia/cloud-native/network-operator@sha256:17afa53f1cf3733c8d0cd282c565975ed5de3124dfc2b7c485ad12c97e51c251",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "627c6e22228d5769c56929f2",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {},
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "INSTALL4J_ADD_VM_PARAMS",
                  "value": "-Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:fe836dd88b556e5d7d03a030e6584f546ee708bc6ecf4e1a796337ccbe1f454c",
      "bundle_path_digest": "sha256:fe836dd88b556e5d7d03a030e6584f546ee708bc6ecf4e1a796337ccbe1f454c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:17:06.719000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\nThis operator will be released on a quarterly basis.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy`                        | Deployment Strategy     |  `rollingUpdate` |\n| `nexus.env`                                 | Nexus environment variables         | `See example.` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.38.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:31.884000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "plural": "nexusrepos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460",
          "name": "nxrm-operator-certified-f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460-annotation"
        },
        {
          "digest": "sha256:f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
          "name": "nexus"
        },
        {
          "digest": "sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
          "name": "nexus-repository-manager-bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<3.38.1-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "3.38.1-1",
      "version_original": "3.38.1-1"
    },
    {
      "_id": "627c6e249b28cbab99bd0f86",
      "alm_examples": [
        {
          "api_version": "mellanox.com/v1alpha1",
          "kind": "HostDeviceNetwork",
          "metadata": {
            "name": "hostdevicenetwork-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "mellanox.com/v1alpha1",
          "kind": "MacvlanNetwork",
          "metadata": {
            "name": "macvlannetwork-sample"
          },
          "spec": {
            "foo": "bar"
          }
        },
        {
          "api_version": "mellanox.com/v1alpha1",
          "kind": "NicClusterPolicy",
          "metadata": {
            "name": "nicclusterpolicy-sample"
          },
          "spec": {
            "foo": "bar"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia-network-operator/nvidia-network-operator@sha256:2367829886a0f8aaa3705ec0d98118fb53e21c56f02b3e58f8ec312b337dd9c6",
      "bundle_path_digest": "sha256:2367829886a0f8aaa3705ec0d98118fb53e21c56f02b3e58f8ec312b337dd9c6",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "1.1.0",
      "creation_date": "2022-05-12T02:17:08.241000+00:00",
      "csv_description": "## NVIDIA Network Operator\nThe NVIDIA Network Operator simplifies the provisioning and management of NVIDIA networking resources  in a Kubernetes cluster. The operator automatically installs the required host networking software - bringing together all the needed components to provide high-speed network connectivity. These components include the NVIDIA networking driver, Kubernetes device plugin, CNI plugins, IP address management (IPAM) plugin and others.\nThe NVIDIA Network Operator works in conjunction with the NVIDIA GPU Operator to deliver high-throughput, low-latency networking for scale-out, GPU computing clusters.\nThe Network Operator is open-source. For more information on contributions and release artifacts, see the [GitHub repo](https://github.com/Mellanox/network-operator/)\n",
      "csv_display_name": "NVIDIA Network Operator",
      "csv_metadata_description": "Deploy and manage NVIDIA networking resources in Kubernetes",
      "csv_name": "nvidia-network-operator.v1.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-05-12T02:17:08.241000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nvidia-network-operator",
      "provided_apis": [
        {
          "group": "mellanox.com",
          "kind": "NicClusterPolicy",
          "plural": "nicclusterpolicies",
          "version": "v1alpha1"
        },
        {
          "group": "k8s.cni.cncf.io",
          "kind": "NetworkAttachmentDefinition",
          "plural": "network-attachment-definitions",
          "version": "v1"
        },
        {
          "group": "mellanox.com",
          "kind": "HostDeviceNetwork",
          "plural": "hostdevicenetworks",
          "version": "v1alpha1"
        },
        {
          "group": "mellanox.com",
          "kind": "MacvlanNetwork",
          "plural": "macvlannetworks",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "image": "gcr.io/kubebuilder/kube-rbac-proxy@sha256:db06cc4c084dd0253134f156dddaaf53ef1c3fb3cc809e5d81711baa4029ea4c",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:17afa53f1cf3733c8d0cd282c565975ed5de3124dfc2b7c485ad12c97e51c251",
          "image": "nvcr.io/nvidia/cloud-native/network-operator@sha256:17afa53f1cf3733c8d0cd282c565975ed5de3124dfc2b7c485ad12c97e51c251",
          "name": "manager"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.1.0",
      "version_original": "1.1.0"
    },
    {
      "_id": "627c6e264be4723d90ee6de2",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:c7e05dd5e2886f5dd28ee115bbf3e4ff5758d79249ab7bdc90763d2bf5d3b288",
      "bundle_path_digest": "sha256:c7e05dd5e2886f5dd28ee115bbf3e4ff5758d79249ab7bdc90763d2bf5d3b288",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:17:10.918000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.135.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:04:45.030000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "name": "nxiq-operator-certified-b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f-annotation"
        },
        {
          "digest": "sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "name": "iq"
        },
        {
          "digest": "sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "name": "nexus-iq-server-0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<1.135.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.135.0-1",
      "version_original": "1.135.0-1"
    },
    {
      "_id": "627c6e299b28cbab99bd0f8e",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusIQ",
          "metadata": {
            "name": "example-nexusiq"
          },
          "spec": {
            "deployment": {
              "postStart": {},
              "preStart": {}
            },
            "fullnameOverride": "",
            "imagePullSecrets": [],
            "ingress": {
              "annotations": {},
              "enabled": false,
              "hosts": [],
              "path": "/",
              "tls": []
            },
            "iq": {
              "adminPort": 8071,
              "applicationPort": 8070,
              "configYaml": {
                "createSampleData": true,
                "logging": {
                  "appenders": [
                    {
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "INFO",
                      "type": "console"
                    },
                    {
                      "archivedFileCount": 50,
                      "archivedLogFilenamePattern": "/var/log/nexus-iq-server/clm-server-%d.log.gz",
                      "currentLogFilename": "/var/log/nexus-iq-server/clm-server.log",
                      "logFormat": "%d{'yyyy-MM-dd HH:mm:ss,SSSZ'} %level [%thread] %X{username} %logger - %msg%n",
                      "threshold": "ALL",
                      "type": "file"
                    }
                  ],
                  "level": "DEBUG",
                  "loggers": {
                    "com.sonatype.insight.audit": {
                      "appenders": [
                        {
                          "archivedFileCount": 50,
                          "archivedLogFilenamePattern": "/var/log/nexus-iq-server/audit-%d.log.gz",
                          "currentLogFilename": "/var/log/nexus-iq-server/audit.log",
                          "type": "file"
                        }
                      ]
                    },
                    "com.sonatype.insight.policy.violation": {
                      "appenders": [
                        {
                          "threshold": "INFO",
                          "type": "console"
                        }
                      ]
                    },
                    "com.sonatype.insight.scan": "INFO",
                    "eu.medsea.mimeutil.MimeUtil2": "INFO",
                    "org.apache.http": "INFO",
                    "org.apache.http.wire": "ERROR",
                    "org.apache.shiro.web.filter.authc.BasicHttpAuthenticationFilter": "INFO",
                    "org.eclipse.birt.report.engine.layout.pdf.font.FontConfigReader": "WARN",
                    "org.eclipse.jetty": "INFO"
                  }
                },
                "server": {
                  "adminConnectors": [
                    {
                      "port": 8071,
                      "type": "http"
                    }
                  ],
                  "applicationConnectors": [
                    {
                      "port": 8070,
                      "type": "http"
                    }
                  ],
                  "requestLog": {
                    "appenders": [
                      {
                        "archivedFileCount": 50,
                        "archivedLogFilenamePattern": "/var/log/nexus-iq-server/request-%d.log.gz",
                        "currentLogFilename": "/var/log/nexus-iq-server/request.log",
                        "logFormat": "%clientHost %l %user [%date] \"%requestURL\" %statusCode %bytesSent %elapsedTime \"%header{User-Agent}\"",
                        "type": "file"
                      }
                    ]
                  }
                },
                "sonatypeWork": "/sonatype-work"
              },
              "env": [
                {
                  "name": "JAVA_OPTS",
                  "value": "-Djava.util.prefs.userRoot=$(SONATYPE_WORK)/javaprefs"
                }
              ],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "licenseSecret": "",
              "memory": "1Gi",
              "name": "nxiq"
            },
            "nameOverride": "",
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "storageSize": "1Gi"
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "serviceAccount": {
              "create": true
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxiq-operator-bundle@sha256:c7e05dd5e2886f5dd28ee115bbf3e4ff5758d79249ab7bdc90763d2bf5d3b288",
      "bundle_path_digest": "sha256:c7e05dd5e2886f5dd28ee115bbf3e4ff5758d79249ab7bdc90763d2bf5d3b288",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:17:13.075000+00:00",
      "csv_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.\nDevelopers leveraging open source require a solution that helps them make safer choices\nwhile still delivering at DevOps speed.\nNexus Lifecycle empowers developers and security teams to choose the best components\nand govern open source usage, ensuring organizations continue to innovate with less risk.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Generate a precise software bill of materials for all applications\n  to identify open source components and gather contextual direct\n  and transitive dependency information for faster action.\n* **One-Click Remediation**:\n  Upgrade to the best components and versions based on real-time intelligence.\n  Available in your preferred IDE or a GitHub pull request.\n* **Automated Open Source Policy Enforcement**:\n  Create custom security, license, and architectural policies based\n  on application type or organization and contextually enforce those policies\n  across every stage of the SDLC.\n* **Continuous Monitoring**:\n  Real-time notifications of newly discovered defects,\n  as well as vulnerabilities based on component,\n  risk level or application/container affected.\n\n## Extras\n\n* IDE Integrations: Eclipse, IntelliJ, and Visual Studio\n* Source Control Integrations: GitHub, GitLab, and Bitbucket\n* Chrome Browser Extension\n* Red Hat Clair for Container Scanning\n\n## Limitations\n\nThis operator will be released on a quarterly basis.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to the new service for iq.applicationPort (8070).\n2. Visit the URL provided by the Route, login, and set new credentials.\n  The default credentials are `admin`/`admin123`.\n\nThe Nexus IQ Server can be further configured via the NexusIQ custom resource definition:\n\n| Parameter            | Description                                                  | Default           |\n| -------------------- | ------------------------------------------------------------ | ----------------- |\n| `iq.applicationPort` | Port of the application connector. Must match the value in the `configYaml` property | `8070`            |\n| `iq.adminPort`       | Port of the application connector. Must match the value in the `configYaml` property | `8071`            |\n| `iq.memory`          | The amount of RAM to allocate                                | `1Gi`             |\n| `iq.env`             | Customize the server environment, including `JAVA_OPTS`      | See example YAML show when ceating a NexusIQ. |\n| `iq.licenseSecret`   | The base-64 encoded license file to be installed at startup  | `\"\"`              |\n| `iq.configYaml`      | A YAML block which will be used as a configuration block for IQ Server. | See example YAML shown when creating a NexusIQ. |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `deployment.preStart.command`               | Command to run before starting the IQ Server container  | `nil`                   |\n| `deployment.postStart.command`              | Command to run after starting the IQ Server container  | `nil`                    |\n| `deployment.terminationGracePeriodSeconds` | Time to allow for clean shutdown                        | 120                      |\n| `persistence.storageClass` | The provisioner class                        | `-` (disables dynamic provisioning)            |\n| `persistence.storageSize` | The amount of drive space to allocate                        | `1Gi`             |\n| `persistence.accessMode` | Default access mode                        | `ReadWriteOnce`             |\n| `persistence.volumeConfiguration` | A YAML block to configure the persistent volume type. Defaults to `hostPath` which should not be used in production | `hostPath`             |\n\n## Configuring IQ Server\n\nYou can define the `config.yml` for IQ Server in your CRD on startup.\nIt is the `iq.configYaml` property. For more details, see the [Configuring IQ Server](https://help.sonatype.com/iqserver/configuring) help page.\n\n\n## Installing the License\n\nThe license file can be installed via the UI when IQ server is running, or it can be done as a part of the deploy.\nIf you leave the `licenseFile` field empty/commented, IQ Server will start and prompt you to manually install the license\nwhen you first enter the GUI.\n\n### Installing the License Automatically\nTo do it automatically, first encode your `.lic` file in Base 64 with no line breaks, eg:\n\n```bash\nbase64 --wrap=0 mylicense.lic > lic.base64\n```\n\nThen add this value to your CRD file as `iq.licenseSecret`, eg:\n\n```yaml\niq:\n  licenseSecret: bXkgc2FtcGxlIGxpY2Vuc2U=\n```\n\nSpecify the `licenseFile` path in `iq.configYaml` as:\n\n```yaml\niq:\n  configYaml:\n    sonatypeWork: /sonatype-work\n    createSampleData: true\n    # add this line and the `licenseSecret` above to autoconfigure licensing\n    licenseFile: /etc/nexus-iq-license/license_lic\n    server:\n      applicationConnectors:\n        - type: http\n          port: 8070\n      adminConnectors:\n        - type: http\n          port: 8071\n```",
      "csv_display_name": "Nexus IQ Operator",
      "csv_metadata_description": "Nexus Lifecycle is an open source governance platform that continuously identifies risk,\nautomatically enforces policy, and provides visibility throughout the entire SDLC.",
      "csv_name": "nxiq-operator-certified.v1.135.0-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T00:57:05.346000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nxiq-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusIQ",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "name": "nxiq-operator-certified-b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f-annotation"
        },
        {
          "digest": "sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "image": "registry.connect.redhat.com/sonatype/nxiq-operator-certified@sha256:b887878ceb78d38e97421e733c5a53b122f854ed335339a8be6da5ec8567cf2f",
          "name": "nxiq-operator-certified"
        },
        {
          "digest": "sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "name": "iq"
        },
        {
          "digest": "sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "image": "registry.connect.redhat.com/sonatype/nexus-iq-server@sha256:0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011",
          "name": "nexus-iq-server-0217a5c5ea55dd31e4cd467ac4858f0cce0bc84790c3d0caad30ad069b0d5011-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "<1.135.0-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.135.0-1",
      "version_original": "1.135.0-1"
    },
    {
      "_id": "627c6e2b4be4723d90ee6de9",
      "alm_examples": [
        {
          "api_version": "sonatype.com/v1alpha1",
          "kind": "NexusRepo",
          "metadata": {
            "name": "example-nexusrepo"
          },
          "spec": {
            "config": {
              "enabled": false,
              "mountPath": "/sonatype-nexus-conf"
            },
            "deployment": {
              "annotations": {},
              "postStart": {},
              "preStart": {},
              "terminationGracePeriodSeconds": 120
            },
            "deploymentStrategy": {},
            "ingress": {
              "annotations": {},
              "enabled": false,
              "path": "/",
              "tls": {
                "enabled": true,
                "secretName": "nexus-tls"
              }
            },
            "nexus": {
              "dockerPort": 5003,
              "env": [
                {
                  "name": "INSTALL4J_ADD_VM_PARAMS",
                  "value": "-Xms2703M -Xmx2703M -XX:MaxDirectMemorySize=2703M -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
                },
                {
                  "name": "NEXUS_SECURITY_RANDOMPASSWORD",
                  "value": "false"
                }
              ],
              "hostAliases": [],
              "imageName": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
              "imagePullPolicy": "IfNotPresent",
              "imagePullSecret": "",
              "livenessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "nexusPort": 8081,
              "podAnnotations": {},
              "readinessProbe": {
                "failureThreshold": 6,
                "initialDelaySeconds": 30,
                "path": "/",
                "periodSeconds": 30
              },
              "resources": {},
              "securityContext": {},
              "service": {
                "type": "NodePort"
              }
            },
            "nexusProxyRoute": {
              "enabled": false
            },
            "persistence": {
              "accessMode": "ReadWriteOnce",
              "enabled": true,
              "storageSize": "8Gi"
            },
            "replicaCount": 1,
            "route": {
              "enabled": false,
              "name": "docker",
              "portName": "docker"
            },
            "secret": {
              "enabled": false,
              "mountPath": "/etc/secret-volume",
              "readOnly": true
            },
            "service": {
              "annotations": {},
              "enabled": false,
              "labels": {},
              "ports": [
                {
                  "name": "nexus-service",
                  "port": 80,
                  "targetPort": 80
                }
              ]
            },
            "statefulset": {
              "enabled": false
            },
            "tolerations": []
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/sonatype/nxrm-operator-bundle@sha256:fe836dd88b556e5d7d03a030e6584f546ee708bc6ecf4e1a796337ccbe1f454c",
      "bundle_path_digest": "sha256:fe836dd88b556e5d7d03a030e6584f546ee708bc6ecf4e1a796337ccbe1f454c",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:17:15.484000+00:00",
      "csv_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.\nThe flow of open source and third-party components into and through an organization\ncreates a complex software supply chain.\nNexus Repository delivers speed, efficiency, and quality to the governance\nand management of all dependencies, libraries, and applications for your DevOps teams.\n\n## Core Capabilities\n\n* **Dependency Management**:\n  Improves reliability with repeatable, fast access to secure dependencies\n* **Developer Productivity**:\n  Streamline developer workflows by enabling the sharing of components and applications across teams\n* **Supply Chain Performance**:\n  Improve speed-to-market and reduced build times with release advanced staging and component tagging\n* **CI/CD Integrations**:\n  Increase DevOps scalability with integrations to the most popular build and deployment tools\n\nVersion control systems and package registries do not scale when managing proprietary,\nopen source, and third-party components.\nOrganizations need a central binary and build artifact repository to manage dependencies\nacross the entire software supply chain.\n\n## Limitations\n\nHigh Availability Clustering (HA-C) is not supported for Nexus Repository Pro for OpenShift.\n\nThis operator will be released on a quarterly basis.\n\n## Usage\n\nOnce the server instance is created by the operator and running,\nyou'll want to expose the service as you see fit:\n1. Create a Route to that service for nexus.port (8081).\n\nBy default, the Nexus Repository starts up in OSS mode until a license is installed.\n\nThe Nexus Repository can be further configured via the NexusRepo custom resource definition:\n\n| Parameter                                   | Description                         | Default                                 |\n| ------------------------------------------  | ----------------------------------  | ----------------------------------------|\n| `statefulset.enabled`                       | Use statefulset instead of deployment | `false` |\n| `deploymentStrategy`                        | Deployment Strategy     |  `rollingUpdate` |\n| `nexus.env`                                 | Nexus environment variables         | `See example.` |\n| `nexus.resources`                           | Nexus resource requests and limits  | `{}`                                    |\n| `nexus.dockerPort`                          | Port to access docker               | `5003`                                  |\n| `nexus.nexusPort`                           | Internal port for Nexus service     | `8081`                                  |\n| `nexus.service.type`                        | Service for Nexus                   |`NodePort`                                |\n| `nexus.service.clusterIp`                   | Specific cluster IP when service type is cluster IP. Use None for headless service |`nil`   |\n| `nexus.securityContext`                     | Security Context |\n| `nexus.labels`                              | Service labels                      | `{}`                                    |\n| `nexus.podAnnotations`                      | Pod Annotations                     | `{}`\n| `nexus.livenessProbe.initialDelaySeconds`   | LivenessProbe initial delay         | 30                                      |\n| `nexus.livenessProbe.periodSeconds`         | Seconds between polls               | 30                                      |\n| `nexus.livenessProbe.failureThreshold`      | Number of attempts before failure   | 6                                       |\n| `nexus.livenessProbe.timeoutSeconds`        | Time in seconds after liveness probe times out    | `nil`                     |\n| `nexus.livenessProbe.path`                  | Path for LivenessProbe              | /                                       |\n| `nexus.readinessProbe.initialDelaySeconds`  | ReadinessProbe initial delay        | 30                                      |\n| `nexus.readinessProbe.periodSeconds`        | Seconds between polls               | 30                                      |\n| `nexus.readinessProbe.failureThreshold`     | Number of attempts before failure   | 6                                       |\n| `nexus.readinessProbe.timeoutSeconds`       | Time in seconds after readiness probe times out    | `nil`                    |\n| `nexus.readinessProbe.path`                 | Path for ReadinessProbe             | /                                       |\n| `nexus.hostAliases`                         | Aliases for IPs in /etc/hosts       | []                                      |\n| `ingress.enabled`                           | Create an ingress for Nexus         | `true`                                  |\n| `ingress.annotations`                       | Annotations to enhance ingress configuration  | `{}`                          |\n| `ingress.tls.enabled`                       | Enable TLS                          | `true`                                 |\n| `ingress.tls.secretName`                    | Name of the secret storing TLS cert, `false` to use the Ingress' default certificate | `nexus-tls`                             |\n| `ingress.path`                              | Path for ingress rules. GCP users should set to `/*` | `/`                    |\n| `tolerations`                               | tolerations list                    | `[]`                                    |\n| `config.enabled`                            | Enable configmap                    | `false`                                 |\n| `config.mountPath`                          | Path to mount the config            | `/sonatype-nexus-conf`                  |\n| `config.data`                               | Configmap data                      | `nil`                                   |\n| `deployment.terminationGracePeriodSeconds`  | Time to allow for clean shutdown    | 120                                     |\n| `deployment.annotations`                    | Annotations to enhance deployment configuration  | `{}`                       |\n| `deployment.initContainers`                 | Init containers to run before main containers  | `nil`                        |\n| `deployment.postStart.command`              | Command to run after starting the nexus container  | `nil`                    |\n| `deployment.preStart.command`               | Command to run before starting the nexus container  | `nil`                   |\n| `deployment.additionalContainers`           | Add additional Container         | `nil`                                      |\n| `deployment.additionalVolumes`              | Add additional Volumes           | `nil`                                      |\n| `deployment.additionalVolumeMounts`         | Add additional Volume mounts     | `nil`                                      |\n| `secret.enabled`                            | Enable secret                    | `false`                                    |\n| `secret.mountPath`                          | Path to mount the secret         | `/etc/secret-volume`                       |\n| `secret.readOnly`                           | Secret readonly state            | `true`                                     |\n| `secret.data`                               | Secret data                      | `nil`                                      |\n| `service.enabled`                           | Enable additional service        | `nil`                                      |\n| `service.name`                              | Service name                     | `nil`                                      |\n| `service.portName`                          | Service port name                | `nil`                                      |\n| `service.labels`                            | Service labels                   | `nil`                                      |\n| `service.annotations`                       | Service annotations              | `nil`                                      |\n| `service.loadBalancerSourceRanges`          | Service LoadBalancer source IP whitelist | `nil`                              |\n| `service.targetPort`                        | Service port                     | `nil`                                      |\n| `service.port`                              | Port for exposing service        | `nil`                                      |\n| `route.enabled`         | Set to true to create route for additional service | `false` |\n| `route.name`            | Name of route                                      | `docker` |\n| `route.portName`        | Target port name of service                        | `docker` |\n| `route.labels`          | Labels to be added to route                        | `{}` |\n| `route.annotations`     | Annotations to be added to route                   | `{}` |\n| `route.path`            | Host name of Route e.g jenkins.example.com         | nil |",
      "csv_display_name": "Nexus Repository Operator",
      "csv_metadata_description": "Nexus Repository is the central source of control to efficiently manage all binaries\nand build artifacts across your DevOps pipeline.",
      "csv_name": "nxrm-operator-certified.v3.38.1-1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:04:50.512000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "nxrm-operator-certified",
      "provided_apis": [
        {
          "group": "sonatype.com",
          "kind": "NexusRepo",
          "plural": "nexusrepos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Sonatype",
      "related_images": [
        {
          "digest": "sha256:f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460",
          "name": "nxrm-operator-certified-f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460-annotation"
        },
        {
          "digest": "sha256:f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460",
          "image": "registry.connect.redhat.com/sonatype/nxrm-operator-certified@sha256:f2f8665e08394609f55f1f7bc20e106218a1e61bbd9b0a203bd400eadf0f5460",
          "name": "nxrm-operator-certified"
        },
        {
          "digest": "sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
          "name": "nexus"
        },
        {
          "digest": "sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
          "image": "registry.connect.redhat.com/sonatype/nexus-repository-manager@sha256:bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598",
          "name": "nexus-repository-manager-bf4200653ad59c50b87788265b2f12c9da6942413e2487c24e4d5407c44ad598-annotation"
        }
      ],
      "replaces": null,
      "skip_range": "<3.38.1-1",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "3.38.1-1",
      "version_original": "3.38.1-1"
    },
    {
      "_id": "627c6e34228d5769c5692a17",
      "alm_examples": [
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "ModelServer",
          "metadata": {
            "name": "model-server-sample"
          },
          "spec": {
            "deployment_parameters": {
              "replicas": 1
            },
            "image_name": "registry.connect.redhat.com/intel/openvino-model-server@sha256:f670aa3dc014b8786e554b8a3bb7e2e8475744d588e5e72d554660b74430a8c5",
            "models_repository": {
              "aws_access_key_id": "",
              "aws_region": "",
              "aws_secret_access_key": "",
              "azure_storage_connection_string": "",
              "gcp_creds_secret_name": "",
              "http_proxy": "",
              "https_proxy": "",
              "models_host_path": "",
              "models_volume_claim": "",
              "s3_compat_api_endpoint": "",
              "storage_type": "google"
            },
            "models_settings": {
              "batch#": "",
              "config_configmap_name": "",
              "idle_sequence_cleanup": false,
              "is_stateful": false,
              "layout": "",
              "low_latency_transformation": true,
              "max_sequence_number": 0,
              "model_config": "",
              "model_name": "resnet",
              "model_path": "gs://ovms-public-eu/resnet50-tf",
              "model_version_policy": "{\"latest\": { \"num_versions\":1 }}",
              "nireq": 0,
              "plugin_config": "{\"CPU_THROUGHPUT_STREAMS\":1}",
              "shape": "",
              "single_model_mode": true,
              "target_device": "CPU"
            },
            "server_settings": {
              "file_system_poll_wait_seconds": 0,
              "grpc_workers": 1,
              "log_level": "INFO",
              "rest_workers": 0,
              "sequence_cleaner_poll_wait_minutes": 0
            },
            "service_parameters": {
              "grpc_port": 8080,
              "rest_port": 8081
            }
          }
        },
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "Notebook",
          "metadata": {
            "name": "v2022.1"
          },
          "spec": {
            "auto_update_image": false,
            "git_ref": "main"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/ovms-operator-bundle@sha256:8b45235b78b31202a3938dfba688216fb4c577efe404cb84b1034a8977cd7d25",
      "bundle_path_digest": "sha256:8b45235b78b31202a3938dfba688216fb4c577efe404cb84b1034a8977cd7d25",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:17:24.785000+00:00",
      "csv_description": "OpenVINO Toolkit Operator manages OpenVINO components in OpenShift.\n\nCurrently there available components are ModelServer and Notebook.\n\n# Model Server\n[OpenVINO\u2122 Model Server](https://github.com/openvinotoolkit/model_server) (OVMS) is a scalable, high-performance solution for serving machine learning models optimized for Intel\u00ae architectures. The server provides an inference service via gRPC or REST API for any models trained in a framework that is supported by [OpenVINO](https://software.intel.com/en-us/openvino-toolki://docs.openvino.ai/latest/index.html).\nModel Server configuration parameters is explained [here](https://github.com/openvinotoolkit/operator/blob/main/docs/modelserver_params.md).\n## Using the cluster\nOpenVINO Model Server can be consumed as a `Service`. It is called like with `ModelServer` resource with `-ovms` suffix.\nThe suffix is ommited when `ovms` phrase is included in the name.\nThe service exposes gRPC and REST API interfaces to run inference requests.\n```\noc get pods\nNAME                                        READY   STATUS    RESTARTS   AGE\nmodel-server-sample-ovms-586f6f76df-dpps4   1/1     Running   0          8h\n\noc get services\nNAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE\nmodel-server-sample-ovms   ClusterIP   172.25.199.210   <none>        8080/TCP,8081/TCP   8h\n```\n\n# Notebook\nThe Notebook resource integrates JupyterHub from OpenShift Data Science or Open Data Hub with a container image that includes [developer\ntools](https://github.com/openvinotoolkit/openvino/blob/master/docs/install_guides/pypi-openvino-dev.md)\nfrom the OpenVINO toolkit and a set of Jupyter notebook tutorials. It enables selecting a defined image `OpenVINO\u2122 Toolkit` from\nthe Jupyter Spawner choice list.\n\nCreate the `Notebook` resource in the same project with JupyterHub and RedHat OpenShift Data Science operator as seen in [documentation](https://github.com/openvinotoolkit/operator/blob/main/docs/notebook_in_rhods.md).\nIt builds the image in the cluster based on Dockerfile from [openvino_notebooks](https://github.com/openvinotoolkit/openvino_notebooks).\n\n## References\nOpenVINO Model Server on [Github](https://github.com/openvinotoolkit/model_server)\n\nOpenVINO Model Server Operator on [Github](https://github.com/openvinotoolkit/operator)\n",
      "csv_display_name": "OpenVINO Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "openvino-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:49.875000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "ovms-operator",
      "provided_apis": [
        {
          "group": "intel.com",
          "kind": "ModelServer",
          "version": "v1alpha1"
        },
        {
          "group": "intel.com",
          "kind": "Notebook",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:12f0c23da8a11e77c4aa58bd38143ab34858405c66936296aaebf21b4e61fd92",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12f0c23da8a11e77c4aa58bd38143ab34858405c66936296aaebf21b4e61fd92",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8987017369fd8deadcd459b2a1758b389b8ef51e93b3894bdbbeccf9ed6e4c23",
          "image": "registry.connect.redhat.com/intel/ovms-operator@sha256:8987017369fd8deadcd459b2a1758b389b8ef51e93b3894bdbbeccf9ed6e4c23",
          "name": "manager"
        },
        {
          "digest": "sha256:f670aa3dc014b8786e554b8a3bb7e2e8475744d588e5e72d554660b74430a8c5",
          "image": "registry.connect.redhat.com/intel/openvino-model-server@sha256:f670aa3dc014b8786e554b8a3bb7e2e8475744d588e5e72d554660b74430a8c5",
          "name": "openvino-model-server-f670aa3dc014b8786e554b8a3bb7e2e8475744d588e5e72d554660b74430a8c5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "627c6e399b28cbab99bd0fa4",
      "alm_examples": [
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "ModelServer",
          "metadata": {
            "name": "model-server-sample"
          },
          "spec": {
            "deployment_parameters": {
              "replicas": 1
            },
            "image_name": "registry.connect.redhat.com/intel/openvino-model-server@sha256:f670aa3dc014b8786e554b8a3bb7e2e8475744d588e5e72d554660b74430a8c5",
            "models_repository": {
              "aws_access_key_id": "",
              "aws_region": "",
              "aws_secret_access_key": "",
              "azure_storage_connection_string": "",
              "gcp_creds_secret_name": "",
              "http_proxy": "",
              "https_proxy": "",
              "models_host_path": "",
              "models_volume_claim": "",
              "s3_compat_api_endpoint": "",
              "storage_type": "google"
            },
            "models_settings": {
              "batch#": "",
              "config_configmap_name": "",
              "idle_sequence_cleanup": false,
              "is_stateful": false,
              "layout": "",
              "low_latency_transformation": true,
              "max_sequence_number": 0,
              "model_config": "",
              "model_name": "resnet",
              "model_path": "gs://ovms-public-eu/resnet50-tf",
              "model_version_policy": "{\"latest\": { \"num_versions\":1 }}",
              "nireq": 0,
              "plugin_config": "{\"CPU_THROUGHPUT_STREAMS\":1}",
              "shape": "",
              "single_model_mode": true,
              "target_device": "CPU"
            },
            "server_settings": {
              "file_system_poll_wait_seconds": 0,
              "grpc_workers": 1,
              "log_level": "INFO",
              "rest_workers": 0,
              "sequence_cleaner_poll_wait_minutes": 0
            },
            "service_parameters": {
              "grpc_port": 8080,
              "rest_port": 8081
            }
          }
        },
        {
          "api_version": "intel.com/v1alpha1",
          "kind": "Notebook",
          "metadata": {
            "name": "v2022.1"
          },
          "spec": {
            "auto_update_image": false,
            "git_ref": "main"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/intel/ovms-operator-bundle@sha256:8b45235b78b31202a3938dfba688216fb4c577efe404cb84b1034a8977cd7d25",
      "bundle_path_digest": "sha256:8b45235b78b31202a3938dfba688216fb4c577efe404cb84b1034a8977cd7d25",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:17:29.335000+00:00",
      "csv_description": "OpenVINO Toolkit Operator manages OpenVINO components in OpenShift.\n\nCurrently there available components are ModelServer and Notebook.\n\n# Model Server\n[OpenVINO\u2122 Model Server](https://github.com/openvinotoolkit/model_server) (OVMS) is a scalable, high-performance solution for serving machine learning models optimized for Intel\u00ae architectures. The server provides an inference service via gRPC or REST API for any models trained in a framework that is supported by [OpenVINO](https://software.intel.com/en-us/openvino-toolki://docs.openvino.ai/latest/index.html).\nModel Server configuration parameters is explained [here](https://github.com/openvinotoolkit/operator/blob/main/docs/modelserver_params.md).\n## Using the cluster\nOpenVINO Model Server can be consumed as a `Service`. It is called like with `ModelServer` resource with `-ovms` suffix.\nThe suffix is ommited when `ovms` phrase is included in the name.\nThe service exposes gRPC and REST API interfaces to run inference requests.\n```\noc get pods\nNAME                                        READY   STATUS    RESTARTS   AGE\nmodel-server-sample-ovms-586f6f76df-dpps4   1/1     Running   0          8h\n\noc get services\nNAME                       TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)             AGE\nmodel-server-sample-ovms   ClusterIP   172.25.199.210   <none>        8080/TCP,8081/TCP   8h\n```\n\n# Notebook\nThe Notebook resource integrates JupyterHub from OpenShift Data Science or Open Data Hub with a container image that includes [developer\ntools](https://github.com/openvinotoolkit/openvino/blob/master/docs/install_guides/pypi-openvino-dev.md)\nfrom the OpenVINO toolkit and a set of Jupyter notebook tutorials. It enables selecting a defined image `OpenVINO\u2122 Toolkit` from\nthe Jupyter Spawner choice list.\n\nCreate the `Notebook` resource in the same project with JupyterHub and RedHat OpenShift Data Science operator as seen in [documentation](https://github.com/openvinotoolkit/operator/blob/main/docs/notebook_in_rhods.md).\nIt builds the image in the cluster based on Dockerfile from [openvino_notebooks](https://github.com/openvinotoolkit/openvino_notebooks).\n\n## References\nOpenVINO Model Server on [Github](https://github.com/openvinotoolkit/model_server)\n\nOpenVINO Model Server Operator on [Github](https://github.com/openvinotoolkit/operator)\n",
      "csv_display_name": "OpenVINO Toolkit Operator",
      "csv_metadata_description": "",
      "csv_name": "openvino-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:05:09.429000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "ovms-operator",
      "provided_apis": [
        {
          "group": "intel.com",
          "kind": "Notebook",
          "version": "v1alpha1"
        },
        {
          "group": "intel.com",
          "kind": "ModelServer",
          "version": "v1alpha1"
        }
      ],
      "provider": "Intel",
      "related_images": [
        {
          "digest": "sha256:12f0c23da8a11e77c4aa58bd38143ab34858405c66936296aaebf21b4e61fd92",
          "image": "registry.redhat.io/openshift4/ose-kube-rbac-proxy@sha256:12f0c23da8a11e77c4aa58bd38143ab34858405c66936296aaebf21b4e61fd92",
          "name": "kube-rbac-proxy"
        },
        {
          "digest": "sha256:8987017369fd8deadcd459b2a1758b389b8ef51e93b3894bdbbeccf9ed6e4c23",
          "image": "registry.connect.redhat.com/intel/ovms-operator@sha256:8987017369fd8deadcd459b2a1758b389b8ef51e93b3894bdbbeccf9ed6e4c23",
          "name": "manager"
        },
        {
          "digest": "sha256:f670aa3dc014b8786e554b8a3bb7e2e8475744d588e5e72d554660b74430a8c5",
          "image": "registry.connect.redhat.com/intel/openvino-model-server@sha256:f670aa3dc014b8786e554b8a3bb7e2e8475744d588e5e72d554660b74430a8c5",
          "name": "openvino-model-server-f670aa3dc014b8786e554b8a3bb7e2e8475744d588e5e72d554660b74430a8c5-annotation"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "627c6e429b28cbab99bd0fb9",
      "alm_examples": [
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "Console",
          "metadata": {
            "name": "pcc-console",
            "namespace": "twistlock"
          },
          "spec": {
            "consoleConfig": {
              "serviceType": "ClusterIP"
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        },
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "ConsoleDefender",
          "metadata": {
            "name": "pcc-consoledefender",
            "namespace": "twistlock"
          },
          "spec": {
            "consoleConfig": {
              "serviceType": "ClusterIP"
            },
            "defenderConfig": {
              "docker": false
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        },
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "Defender",
          "metadata": {
            "name": "pcc-defender",
            "namespace": "twistlock"
          },
          "spec": {
            "defenderConfig": {
              "clusterAddress": "twistlock-console.example.com",
              "consoleAddress": "https://twistlock-console.example.com:8083",
              "docker": false
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/paloalto/pcc-operator@sha256:cd2291126f3c56ed2001e6ca9157ac4c752ff0a1f6de2c0e920e06f83c84d17b",
      "bundle_path_digest": "sha256:cd2291126f3c56ed2001e6ca9157ac4c752ff0a1f6de2c0e920e06f83c84d17b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:17:38.077000+00:00",
      "csv_description": "## Features\n- Deploy Console\n    - Create initial local administrator user\n    - Add license\n- Deploy Defenders\n- Support for offline deployments\n- Upgrade Console\n- Upgrade Defenders\n\n## Installation\nSee the [Prisma Cloud Compute Operator documentation](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator) for installation guides.\n\n## Support\nThis operator is available \"as is,\" and should be seen as community-supported; however, Palo Alto Networks will continue contributing whenever possible.\nPalo Alto Networks does not provide technical support or help with using or troubleshooting the operator through normal support channels.\nWe encourage you to open GitHub [issues](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator/issues) and [pull requests](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator/pulls) to track bugs and feature requests.\n\n## Other links\n[Prisma Cloud Compute product documentation](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin-compute.html)\n\n[Prisma Cloud Compute API documentation](https://prisma.pan.dev/api/cloud/cwpp)\n",
      "csv_display_name": "Prisma Cloud Compute Operator",
      "csv_metadata_description": "Deploy Prisma Cloud Compute for cloud-native security in your clusters",
      "csv_name": "pcc-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:07:06.675000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "pcc-operator",
      "provided_apis": [
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "Console",
          "version": "v1alpha1"
        },
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "Defender",
          "version": "v1alpha1"
        },
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "ConsoleDefender",
          "version": "v1alpha1"
        }
      ],
      "provider": "Palo Alto Networks",
      "related_images": [
        {
          "digest": "sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "image": "quay.io/prismacloud/pcc-operator@sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "name": "pcc-operator-91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec-annotation"
        },
        {
          "digest": "sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "image": "quay.io/prismacloud/pcc-operator@sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "627c6e49228d5769c5692a44",
      "alm_examples": [
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "Console",
          "metadata": {
            "name": "pcc-console",
            "namespace": "twistlock"
          },
          "spec": {
            "consoleConfig": {
              "serviceType": "ClusterIP"
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        },
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "ConsoleDefender",
          "metadata": {
            "name": "pcc-consoledefender",
            "namespace": "twistlock"
          },
          "spec": {
            "consoleConfig": {
              "serviceType": "ClusterIP"
            },
            "defenderConfig": {
              "docker": false
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        },
        {
          "api_version": "pcc.paloaltonetworks.com/v1alpha1",
          "kind": "Defender",
          "metadata": {
            "name": "pcc-defender",
            "namespace": "twistlock"
          },
          "spec": {
            "defenderConfig": {
              "clusterAddress": "twistlock-console.example.com",
              "consoleAddress": "https://twistlock-console.example.com:8083",
              "docker": false
            },
            "namespace": "twistlock",
            "version": "21_08_520"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/paloalto/pcc-operator@sha256:cd2291126f3c56ed2001e6ca9157ac4c752ff0a1f6de2c0e920e06f83c84d17b",
      "bundle_path_digest": "sha256:cd2291126f3c56ed2001e6ca9157ac4c752ff0a1f6de2c0e920e06f83c84d17b",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:17:45.487000+00:00",
      "csv_description": "## Features\n- Deploy Console\n    - Create initial local administrator user\n    - Add license\n- Deploy Defenders\n- Support for offline deployments\n- Upgrade Console\n- Upgrade Defenders\n\n## Installation\nSee the [Prisma Cloud Compute Operator documentation](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator) for installation guides.\n\n## Support\nThis operator is available \"as is,\" and should be seen as community-supported; however, Palo Alto Networks will continue contributing whenever possible.\nPalo Alto Networks does not provide technical support or help with using or troubleshooting the operator through normal support channels.\nWe encourage you to open GitHub [issues](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator/issues) and [pull requests](https://github.com/PaloAltoNetworks/prisma-cloud-compute-operator/pulls) to track bugs and feature requests.\n\n## Other links\n[Prisma Cloud Compute product documentation](https://docs.paloaltonetworks.com/prisma/prisma-cloud/prisma-cloud-admin-compute.html)\n\n[Prisma Cloud Compute API documentation](https://prisma.pan.dev/api/cloud/cwpp)\n",
      "csv_display_name": "Prisma Cloud Compute Operator",
      "csv_metadata_description": "Deploy Prisma Cloud Compute for cloud-native security in your clusters",
      "csv_name": "pcc-operator.v0.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:05:34.467000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "pcc-operator",
      "provided_apis": [
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "ConsoleDefender",
          "version": "v1alpha1"
        },
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "Console",
          "version": "v1alpha1"
        },
        {
          "group": "pcc.paloaltonetworks.com",
          "kind": "Defender",
          "version": "v1alpha1"
        }
      ],
      "provider": "Palo Alto Networks",
      "related_images": [
        {
          "digest": "sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "image": "quay.io/prismacloud/pcc-operator@sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "name": "pcc-operator-91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec-annotation"
        },
        {
          "digest": "sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "image": "quay.io/prismacloud/pcc-operator@sha256:91469e90fb442d747a5dd462a3b8e80cea2c590881a685bc58c562f1382e2fec",
          "name": "manager"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "0.2.2",
      "version_original": "0.2.2"
    },
    {
      "_id": "627c6e4a228d5769c5692a46",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "bundle_path_digest": "sha256:350e0a49321d7a92b95803925f4bcfe97a95d07e1444f3b378fa80370f27087d",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-12T02:17:46.086000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.8-1",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:17:46.086000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.8-1",
      "version_original": "6.0.8-1"
    },
    {
      "_id": "627c6e549b28cbab99bd0fdb",
      "alm_examples": [],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "bundle_path_digest": "sha256:a16342d44039d3619f08f3fdd411e0074f7809442fbb486939b69f8c15451ecf",
      "capabilities": [
        ""
      ],
      "channel_name": "6.2.4",
      "creation_date": "2022-05-12T02:17:56.837000+00:00",
      "csv_description": "",
      "csv_display_name": "",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.0.6-11",
      "in_index_img": true,
      "install_modes": [],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:17:56.837000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "6.0.6-11",
      "version_original": "6.0.6-11"
    },
    {
      "_id": "627c6e5c228d5769c5692a72",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:bc659b3f5c0e2007af70d7a2ca3fa49cffe0af20c4f29d4d1bbad81522949ea0",
      "bundle_path_digest": "sha256:bc659b3f5c0e2007af70d7a2ca3fa49cffe0af20c4f29d4d1bbad81522949ea0",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-05-12T02:18:04.446000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T12:55:36.348000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:581cd941d9becbe7fb0c0b11167f2a35b536cd73f9b236c8449344eb2c77bac5",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:581cd941d9becbe7fb0c0b11167f2a35b536cd73f9b236c8449344eb2c77bac5",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:efe775d3208befb2b7f026ef5fee3b03b306a9ba773709ec5c4c3391880ee60b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:efe775d3208befb2b7f026ef5fee3b03b306a9ba773709ec5c4c3391880ee60b",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:7cced75b5a800104a469d09300100a8d8d777bf164054273c7cba5cfa2be1e26",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:7cced75b5a800104a469d09300100a8d8d777bf164054273c7cba5cfa2be1e26",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:dbcfeb1d49a4776ea4dc55dea9d7f3ad8ea95aebab8bca38a15942429adce49c",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:dbcfeb1d49a4776ea4dc55dea9d7f3ad8ea95aebab8bca38a15942429adce49c",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:6b570ee2922281eedc5c267c50ad30a895fbb4e8a132c3e2c3a38e29fe3d6f6a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:6b570ee2922281eedc5c267c50ad30a895fbb4e8a132c3e2c3a38e29fe3d6f6a",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:5553680d6923f7517ab84181f073c92bb2b5a7acca8056f05ac61954b43b04d3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:5553680d6923f7517ab84181f073c92bb2b5a7acca8056f05ac61954b43b04d3",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:13bc18c31086037c159a7f4b661c12655193073824fc8a7dc2891e3d39d45fe9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:13bc18c31086037c159a7f4b661c12655193073824fc8a7dc2891e3d39d45fe9",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:f45e90e38f555cfce208bbace97a2abc473058839ffdd638c024432afafde8b2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:f45e90e38f555cfce208bbace97a2abc473058839ffdd638c024432afafde8b2",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:e996679a8821f0fa537a579125664854256a94c73ff7cc2cface3edb85737920",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:e996679a8821f0fa537a579125664854256a94c73ff7cc2cface3edb85737920",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "name": "postgres-operator-440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1-annotation"
        },
        {
          "digest": "sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "name": "operator"
        },
        {
          "digest": "sha256:581cd941d9becbe7fb0c0b11167f2a35b536cd73f9b236c8449344eb2c77bac5",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:581cd941d9becbe7fb0c0b11167f2a35b536cd73f9b236c8449344eb2c77bac5",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:efe775d3208befb2b7f026ef5fee3b03b306a9ba773709ec5c4c3391880ee60b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:efe775d3208befb2b7f026ef5fee3b03b306a9ba773709ec5c4c3391880ee60b",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:7cced75b5a800104a469d09300100a8d8d777bf164054273c7cba5cfa2be1e26",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:7cced75b5a800104a469d09300100a8d8d777bf164054273c7cba5cfa2be1e26",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:dbcfeb1d49a4776ea4dc55dea9d7f3ad8ea95aebab8bca38a15942429adce49c",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:dbcfeb1d49a4776ea4dc55dea9d7f3ad8ea95aebab8bca38a15942429adce49c",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:6b570ee2922281eedc5c267c50ad30a895fbb4e8a132c3e2c3a38e29fe3d6f6a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:6b570ee2922281eedc5c267c50ad30a895fbb4e8a132c3e2c3a38e29fe3d6f6a",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:5553680d6923f7517ab84181f073c92bb2b5a7acca8056f05ac61954b43b04d3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:5553680d6923f7517ab84181f073c92bb2b5a7acca8056f05ac61954b43b04d3",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:13bc18c31086037c159a7f4b661c12655193073824fc8a7dc2891e3d39d45fe9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:13bc18c31086037c159a7f4b661c12655193073824fc8a7dc2891e3d39d45fe9",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:f45e90e38f555cfce208bbace97a2abc473058839ffdd638c024432afafde8b2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:f45e90e38f555cfce208bbace97a2abc473058839ffdd638c024432afafde8b2",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:e996679a8821f0fa537a579125664854256a94c73ff7cc2cface3edb85737920",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:e996679a8821f0fa537a579125664854256a94c73ff7cc2cface3edb85737920",
          "name": "postgres_14_gis_3.1"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "5.1.0",
      "version_original": "5.1.0"
    },
    {
      "_id": "627c6e63228d5769c5692a7e",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:b2c3acedb686c82ba2fd2ea828a841639e063b8f9a054411f4e75b9eaf70a11b",
      "bundle_path_digest": "sha256:b2c3acedb686c82ba2fd2ea828a841639e063b8f9a054411f4e75b9eaf70a11b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:18:11.596000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:08:02.806000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "name": "openstorage-operator-f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a-annotation"
        },
        {
          "digest": "sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "627c6e654be4723d90ee6e68",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:b2c3acedb686c82ba2fd2ea828a841639e063b8f9a054411f4e75b9eaf70a11b",
      "bundle_path_digest": "sha256:b2c3acedb686c82ba2fd2ea828a841639e063b8f9a054411f4e75b9eaf70a11b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:18:13.788000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:08:08.725000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "name": "openstorage-operator-f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a-annotation"
        },
        {
          "digest": "sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "627c6e683e0ff4d601b6fb6d",
      "alm_examples": [
        {
          "api_version": "postgres-operator.crunchydata.com/v1beta1",
          "kind": "PostgresCluster",
          "metadata": {
            "name": "example"
          },
          "spec": {
            "instances": [
              {
                "dataVolumeClaimSpec": {
                  "accessModes": [
                    "ReadWriteOnce"
                  ],
                  "resources": {
                    "requests": {
                      "storage": "1Gi"
                    }
                  }
                },
                "replicas": 1
              }
            ],
            "postgresVersion": 13
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/crunchydata/postgres-operator-bundle@sha256:bc659b3f5c0e2007af70d7a2ca3fa49cffe0af20c4f29d4d1bbad81522949ea0",
      "bundle_path_digest": "sha256:bc659b3f5c0e2007af70d7a2ca3fa49cffe0af20c4f29d4d1bbad81522949ea0",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "v5",
      "creation_date": "2022-05-12T02:18:16.763000+00:00",
      "csv_description": "[PGO](https://github.com/CrunchyData/postgres-operator), the\n[Postgres Operator](https://github.com/CrunchyData/postgres-operator) from\n[Crunchy Data](https://www.crunchydata.com), gives you a **declarative Postgres** solution that\nautomatically manages your [PostgreSQL](https://www.postgresql.org) clusters.\n\nDesigned for your GitOps workflows, it is [easy to get started](https://access.crunchydata.com/documentation/postgres-operator/v5/quickstart/)\nwith Postgres on Kubernetes with PGO. Within a few moments, you can have a production grade Postgres\ncluster complete with high availability, disaster recovery, and monitoring, all over secure TLS communications.\nEven better, PGO lets you easily customize your Postgres cluster to tailor it to your workload!\n\nWith conveniences like cloning Postgres clusters to using rolling updates to roll out disruptive\nchanges with minimal downtime, PGO is ready to support your Postgres data at every stage of your\nrelease pipeline. Built for resiliency and uptime, PGO will keep your desired Postgres in a desired\nstate so you do not need to worry about it.\n\nPGO is developed with many years of production experience in automating Postgres management on\nKubernetes, providing a seamless cloud native Postgres solution to keep your data always available.\n\n- **PostgreSQL Cluster Provisioning**: [Create, Scale, & Delete PostgreSQL clusters with ease][provisioning],\n  while fully customizing your Pods and PostgreSQL configuration!\n- **High-Availability**: Safe, automated failover backed by a [distributed consensus based high-availability solution][high-availability].\n  Uses [Pod Anti-Affinity][k8s-anti-affinity] to help resiliency; you can configure how aggressive this can be!\n  Failed primaries automatically heal, allowing for faster recovery time. You can even create regularly scheduled\n  backups as well and set your backup retention policy\n- **Disaster Recovery**: [Backups][backups] and [restores][disaster-recovery] leverage the open source [pgBackRest][] utility and\n  [includes support for full, incremental, and differential backups as well as efficient delta restores][backups].\n  Set how long you want your backups retained for. Works great with very large databases!\n- **Monitoring**: [Track the health of your PostgreSQL clusters][monitoring] using the open source [pgMonitor][] library.\n- **Clone**: [Create new clusters from your existing clusters or backups][clone] with efficient data cloning.\n- **TLS**: All connections are over [TLS][tls]. You can also [bring your own TLS infrastructure][tls] if you do not want to use the provided defaults.\n- **Connection Pooling**: Advanced [connection pooling][pool] support using [pgBouncer][].\n- **Affinity and Tolerations**: Have your PostgreSQL clusters deployed to [Kubernetes Nodes][k8s-nodes] of your preference.\n  Set your [pod anti-affinity][k8s-anti-affinity], node affinity, Pod tolerations and more rules to customize your deployment topology!\n- **Full Customizability**: Crunchy PostgreSQL for Kubernetes makes it easy to get your own PostgreSQL-as-a-Service up and running\n  and fully customize your deployments, including:\n    - Choose the resources for your Postgres cluster: [container resources and storage size][resize-cluster]. [Resize at any time][resize-cluster] with minimal disruption.\n    - Use your own container image repository, including support `imagePullSecrets` and private repositories\n    - [Customize your PostgreSQL configuration][customize-cluster]\n\nand much more!\n\n[backups]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/backups/\n[clone]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/#clone-a-postgres-cluster\n[customize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/\n[disaster-recovery]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/disaster-recovery/\n[high-availability]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/high-availability/\n[monitoring]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/monitoring/\n[pool]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[provisioning]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/create-cluster/\n[resize-cluster]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/resize-cluster/\n[tls]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/customize-cluster/#customize-tls\n\n[k8s-anti-affinity]: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#inter-pod-affinity-and-anti-affinity\n[k8s-nodes]: https://kubernetes.io/docs/concepts/architecture/nodes/\n\n[pgBackRest]: https://www.pgbackrest.org\n[pgBouncer]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial/connection-pooling/\n[pgMonitor]: https://github.com/CrunchyData/pgmonitor\n\n\n## Post-Installation\n\n### Tutorial\n\nWant to [learn more about the PostgreSQL Operator][tutorial]? Browse through the [tutorial][] to learn more about what you can do!\n\n[tutorial]: https://access.crunchydata.com/documentation/postgres-operator/v5/tutorial",
      "csv_display_name": "Crunchy Postgres for Kubernetes",
      "csv_metadata_description": "Production Postgres Made Easy",
      "csv_name": "postgresoperator.v5.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:08:47.381000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "crunchy-postgres-operator",
      "provided_apis": [
        {
          "group": "postgres-operator.crunchydata.com",
          "kind": "PostgresCluster",
          "plural": "postgresclusters",
          "version": "v1beta1"
        }
      ],
      "provider": "Crunchy Data",
      "related_images": [
        {
          "digest": "sha256:581cd941d9becbe7fb0c0b11167f2a35b536cd73f9b236c8449344eb2c77bac5",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:581cd941d9becbe7fb0c0b11167f2a35b536cd73f9b236c8449344eb2c77bac5",
          "name": "PGADMIN"
        },
        {
          "digest": "sha256:efe775d3208befb2b7f026ef5fee3b03b306a9ba773709ec5c4c3391880ee60b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:efe775d3208befb2b7f026ef5fee3b03b306a9ba773709ec5c4c3391880ee60b",
          "name": "PGBACKREST"
        },
        {
          "digest": "sha256:7cced75b5a800104a469d09300100a8d8d777bf164054273c7cba5cfa2be1e26",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:7cced75b5a800104a469d09300100a8d8d777bf164054273c7cba5cfa2be1e26",
          "name": "PGBOUNCER"
        },
        {
          "digest": "sha256:dbcfeb1d49a4776ea4dc55dea9d7f3ad8ea95aebab8bca38a15942429adce49c",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:dbcfeb1d49a4776ea4dc55dea9d7f3ad8ea95aebab8bca38a15942429adce49c",
          "name": "PGEXPORTER"
        },
        {
          "digest": "sha256:6b570ee2922281eedc5c267c50ad30a895fbb4e8a132c3e2c3a38e29fe3d6f6a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:6b570ee2922281eedc5c267c50ad30a895fbb4e8a132c3e2c3a38e29fe3d6f6a",
          "name": "POSTGRES_13"
        },
        {
          "digest": "sha256:5553680d6923f7517ab84181f073c92bb2b5a7acca8056f05ac61954b43b04d3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:5553680d6923f7517ab84181f073c92bb2b5a7acca8056f05ac61954b43b04d3",
          "name": "POSTGRES_14"
        },
        {
          "digest": "sha256:13bc18c31086037c159a7f4b661c12655193073824fc8a7dc2891e3d39d45fe9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:13bc18c31086037c159a7f4b661c12655193073824fc8a7dc2891e3d39d45fe9",
          "name": "POSTGRES_13_GIS_3.0"
        },
        {
          "digest": "sha256:f45e90e38f555cfce208bbace97a2abc473058839ffdd638c024432afafde8b2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:f45e90e38f555cfce208bbace97a2abc473058839ffdd638c024432afafde8b2",
          "name": "POSTGRES_13_GIS_3.1"
        },
        {
          "digest": "sha256:e996679a8821f0fa537a579125664854256a94c73ff7cc2cface3edb85737920",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:e996679a8821f0fa537a579125664854256a94c73ff7cc2cface3edb85737920",
          "name": "POSTGRES_14_GIS_3.1"
        },
        {
          "digest": "sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "name": "postgres-operator"
        },
        {
          "digest": "sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "name": "postgres-operator-440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1-annotation"
        },
        {
          "digest": "sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "image": "registry.connect.redhat.com/crunchydata/postgres-operator@sha256:440375bdcb9a41807682336d593ad9231ba5b12ebda83db2d0d6b510f88195f1",
          "name": "operator"
        },
        {
          "digest": "sha256:581cd941d9becbe7fb0c0b11167f2a35b536cd73f9b236c8449344eb2c77bac5",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgadmin4@sha256:581cd941d9becbe7fb0c0b11167f2a35b536cd73f9b236c8449344eb2c77bac5",
          "name": "pgadmin"
        },
        {
          "digest": "sha256:efe775d3208befb2b7f026ef5fee3b03b306a9ba773709ec5c4c3391880ee60b",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbackrest@sha256:efe775d3208befb2b7f026ef5fee3b03b306a9ba773709ec5c4c3391880ee60b",
          "name": "pgbackrest"
        },
        {
          "digest": "sha256:7cced75b5a800104a469d09300100a8d8d777bf164054273c7cba5cfa2be1e26",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-pgbouncer@sha256:7cced75b5a800104a469d09300100a8d8d777bf164054273c7cba5cfa2be1e26",
          "name": "pgbouncer"
        },
        {
          "digest": "sha256:dbcfeb1d49a4776ea4dc55dea9d7f3ad8ea95aebab8bca38a15942429adce49c",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-exporter@sha256:dbcfeb1d49a4776ea4dc55dea9d7f3ad8ea95aebab8bca38a15942429adce49c",
          "name": "pgexporter"
        },
        {
          "digest": "sha256:6b570ee2922281eedc5c267c50ad30a895fbb4e8a132c3e2c3a38e29fe3d6f6a",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:6b570ee2922281eedc5c267c50ad30a895fbb4e8a132c3e2c3a38e29fe3d6f6a",
          "name": "postgres_13"
        },
        {
          "digest": "sha256:5553680d6923f7517ab84181f073c92bb2b5a7acca8056f05ac61954b43b04d3",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres@sha256:5553680d6923f7517ab84181f073c92bb2b5a7acca8056f05ac61954b43b04d3",
          "name": "postgres_14"
        },
        {
          "digest": "sha256:13bc18c31086037c159a7f4b661c12655193073824fc8a7dc2891e3d39d45fe9",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:13bc18c31086037c159a7f4b661c12655193073824fc8a7dc2891e3d39d45fe9",
          "name": "postgres_13_gis_3.0"
        },
        {
          "digest": "sha256:f45e90e38f555cfce208bbace97a2abc473058839ffdd638c024432afafde8b2",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:f45e90e38f555cfce208bbace97a2abc473058839ffdd638c024432afafde8b2",
          "name": "postgres_13_gis_3.1"
        },
        {
          "digest": "sha256:e996679a8821f0fa537a579125664854256a94c73ff7cc2cface3edb85737920",
          "image": "registry.connect.redhat.com/crunchydata/crunchy-postgres-gis@sha256:e996679a8821f0fa537a579125664854256a94c73ff7cc2cface3edb85737920",
          "name": "postgres_14_gis_3.1"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "5.1.0",
      "version_original": "5.1.0"
    },
    {
      "_id": "627c6e6e3e0ff4d601b6fb7d",
      "alm_examples": [
        {
          "api_version": "charts.helm.k8s.io/v1",
          "kind": "Prometurbo",
          "metadata": {
            "name": "prometurbo-release"
          },
          "spec": {
            "serverMeta": {
              "turboServer": "https://Turbo_server_URL"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/turbonomic/prometurbo-operator-bundle@sha256:7c4c96013c3541dbe92d1fa6b26c14e80a8b5b5987c5fddb80b8eab0f86209c0",
      "bundle_path_digest": "sha256:7c4c96013c3541dbe92d1fa6b26c14e80a8b5b5987c5fddb80b8eab0f86209c0",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:18:22.774000+00:00",
      "csv_description": "### Application Resource Management for Kubernetes\nTurbonomic AI-powered Application Resource Management simultaneously optimizes performance, compliance, and cost in real time.\nSoftware manages the complete application stack, automatically. Applications are continually resourced to perform while satisfying business constraints.\n\nTurbonomic makes workloads smart \u2014 enabling them to self-manage and determines the specific actions that will drive continuous health:\n\n* Continuous placement for Pods (rescheduling)\n* Continuous scaling for applications and  the underlying cluster.\n\nIt assures application performance by giving workloads the resources they need when they need them.\n\n### How does it work?\nTurbonomic uses a container \u2014 PromeTurbo \u2014 that runs next to your Prometheus sever, which monitors your environment.\nPromeTurbo sends application and infrastructure monitoring data back to the Turbonomic analytics engine.\nTurbonomic determines the right actions that drive continuous health, including continuous placement for Pods and continuous scaling for applications and the underlying cluster.",
      "csv_display_name": "Prometurbo Operator",
      "csv_metadata_description": "Turbonomic Workload Automation for Multicloud simultaneously optimizes performance, compliance, and cost in real-time. Workloads are precisely resourced, automatically, to perform while satisfying business constraints.",
      "csv_name": "prometurbo-operator.v8.5.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:09:05.926000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "prometurbo-certified",
      "provided_apis": [
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1"
        },
        {
          "group": "charts.helm.k8s.io",
          "kind": "Prometurbo",
          "plural": "prometurbos",
          "version": "v1alpha1"
        }
      ],
      "provider": "Turbonomic, Inc.",
      "related_images": [
        {
          "digest": "sha256:e18b019309edfa73a6975be007f634b55979877757c08ae1b7326210e0992e15",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:e18b019309edfa73a6975be007f634b55979877757c08ae1b7326210e0992e15",
          "name": "prometurbo-operator-e18b019309edfa73a6975be007f634b55979877757c08ae1b7326210e0992e15-annotation"
        },
        {
          "digest": "sha256:e18b019309edfa73a6975be007f634b55979877757c08ae1b7326210e0992e15",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo-operator@sha256:e18b019309edfa73a6975be007f634b55979877757c08ae1b7326210e0992e15",
          "name": "prometurbo-operator"
        },
        {
          "digest": "sha256:a0710012974c53e798afe1e6acee44e1c516fc1809538cddd13d5051cd50c662",
          "image": "registry.connect.redhat.com/turbonomic/prometurbo@sha256:a0710012974c53e798afe1e6acee44e1c516fc1809538cddd13d5051cd50c662",
          "name": "prometurbo"
        },
        {
          "digest": "sha256:73ebc150427af91870f2fa93231ab6c79fe646167612a2c57be237c869c618cf",
          "image": "registry.connect.redhat.com/turbonomic/turbodif@sha256:73ebc150427af91870f2fa93231ab6c79fe646167612a2c57be237c869c618cf",
          "name": "turbodif"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "8.5.0",
      "version_original": "8.5.0"
    },
    {
      "_id": "627c6e7e4be4723d90ee6e8c",
      "alm_examples": [
        {
          "api_version": "app.redislabs.com/v1",
          "kind": "RedisEnterpriseCluster",
          "metadata": {
            "name": "rec"
          },
          "spec": {
            "bootstrapperImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise-operator"
            },
            "nodes": 3,
            "persistentSpec": {
              "enabled": true
            },
            "redisEnterpriseImageSpec": {
              "imagePullPolicy": "IfNotPresent",
              "repository": "registry.connect.redhat.com/redislabs/redis-enterprise",
              "versionTag": "6.2.10-107.rhel8-openshift"
            },
            "redisEnterpriseNodeResources": {
              "limits": {
                "cpu": "4000m",
                "memory": "4Gi"
              },
              "requests": {
                "cpu": "4000m",
                "memory": "4Gi"
              }
            },
            "redisEnterpriseServicesRiggerImageSpec": {
              "repository": "registry.connect.redhat.com/redislabs/services-manager"
            },
            "uiServiceType": "ClusterIP",
            "username": "demo@redislabs.com"
          }
        },
        {
          "api_version": "app.redislabs.com/v1alpha1",
          "kind": "RedisEnterpriseDatabase",
          "metadata": {
            "name": "redb"
          },
          "spec": {
            "redisEnterpriseCluster": {
              "name": "rec"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/redislabs/redis-enterprise-operator-bundle@sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "bundle_path_digest": "sha256:a6a5a8925abe7ed7899b1c0cbfa7808223ad5a641adf6d537dbc197be3eb6c16",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "6.2.10",
      "creation_date": "2022-05-12T02:18:38.162000+00:00",
      "csv_description": "Redis Enterprise Software is enterprise grade, distributed, in-memory NoSQL database server, fully compatible with open source Redis by Redis.\nRedis Enterprise Software extends open source Redis and delivers stable high performance, zero-downtime linear scaling and high availability, with significant operational savings.\nRedis Enterprise provides a flexible and cost-effective data platform so developers can focus on rapid, high-quality development for sophisticated use cases that meet the needs of a modern digital enterprise. With Redis Enterprise, you can:\n* Enjoy high performance and record-setting low latencies with minimal operational overhead\n* Develop highly scalable microservices-based and Kubernetes-orchestrated applications\n* Use versatile data structures for a variety of use cases, such as high-speed transactions, user session management, real-time analytics, caching and many more\n* Leverage enterprise-grade operational controls for high availability, security and seamless scale\n* Automate operational best practices for deploying and managing the Redis Enterprise data platform with built-in Kubernetes Operator support\n* Deploy, manage and move applications to and from any cloud for seamless portability\n\n### Core capabilities\n* **Speed application development and time to market** - Unburden developers from the complexity of infrastructure operations and empower them to manage data with maximum flexibility. This helps them build modern applications quickly, make changes rapidly and support a variety of different data structures, models, relationships and use cases.\n* **Ensure business continuity with always-on data service** - Maintain service uptime and ensure failsafe high availability, instant failover and automatic recovery to protect your applications against unplanned downtime, outages and data loss.\n* **Design for performance and unmatched user experience** - Deliver the highest level of responsiveness and interactive customer experiences with best-in-class exceptional linear scaling high performance through a shared-nothing architecture and in-memory processing.\n* **Simplify operations with automated lifecycle management and layered orchestration** - Automate database provisioning, management and maintenance, and abstract away the complexities of high availability, seamless scale and zero-downtime upgrades with built-in support for Kubernetes and Operators.\n* **Enjoy multi-level robust security** - Provide granular control to meet self-imposed and regulatory compliance regulations and standards with built-in finegrained security controls and data encryption.\n* **Gain platform independence with flexible deployment options** - Ensure portability with multiple deployment options across any cloud of choice for multicloud and hybrid deployments and on-premises.\n* **Ensure success** - Leverage 24x7 enterprise-grade support backed by expertise in managing and scaling hundreds of thousands of Redis databases for thousands of enterprise customers worldwide.\n* **Future proof investments** - Use the most popular database amongst developers, built on open source innovation and entrenched firmly in the application landscape with over 1B downloads on Docker. Redis preserves your investment for years with easy extensibility and versatility through its Modules and support for over 50 different programming languages\n\n#### Prerequisites\nA minimum of 3 nodes which support the following requirements:\n* RAM - At least 3GB with 4GB recommended\n* Persistent Storage - At least 10GB of free space with 20GB recommended.\n* A kubernetes version of 1.9 or higher\n\n#### Recommendations/known issues\n*  Changing the name of the Redis Enterprise Cluster in the spec from the\n  default requires running commands to grant permissions to the pods:\n\n  Operator service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:redis-enterprise-operator*<br>\n\n    Redis Enterprise Cluster service account:\n    > *oc adm policy add-scc-to-user redis-enterprise-scc system:serviceaccount:my-project:<name of Redis Enterprise Cluster>*\n\n    Replace my-project with the actual name of the project/namespace. Replace <name of Redis Enterprise Cluster> with the name of the Redis Enterprise Cluster.\n\n* When creating a Redis Enterprise Cluster without specifying in its spec a `persistentSpec` with explicit `storageClassName`,\nthe default Storage Class of the Kubernetes cluster will be used to dynamically provision storage for the Redis Enterprise Cluster's nodes.\nHowever, if the Kubernetes cluster doesn't have a default Storage Class configured\nand no specific Storage Class was specified in the Redis Enterprise Cluster Spec, the installation of the cluster could fail.\nTo avoid such scenario in cases where a specific Storage Class isn't specified, make sure the Kubernetes Cluster has a default Storage Cluster configured.\nThis can be done by running a `kubectl get storageclass` command and see if one of the Storage Classes' names contains a `(default)` mark.",
      "csv_display_name": "Redis Enterprise Operator",
      "csv_metadata_description": "",
      "csv_name": "redis-enterprise-operator.v6.2.10-34",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-05-12T02:18:38.162000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.10",
      "organization": "certified-operators",
      "package": "redis-enterprise-operator-cert",
      "provided_apis": [
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseDatabase",
          "plural": "redisenterprisedatabases",
          "version": "v1alpha1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1"
        },
        {
          "group": "app.redislabs.com",
          "kind": "RedisEnterpriseCluster",
          "plural": "redisenterpriseclusters",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator-53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb-annotation"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "redis-enterprise-operator"
        },
        {
          "digest": "sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "image": "registry.connect.redhat.com/redislabs/redis-enterprise-operator@sha256:53b008cecf3807d51f027f21029b63dc5ad8c002c5278554ce79c008f1b97bbb",
          "name": "admission"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.10",
      "version": "6.2.10-34",
      "version_original": "6.2.10-34"
    },
    {
      "_id": "627c6e81228d5769c5692aa7",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:b2c3acedb686c82ba2fd2ea828a841639e063b8f9a054411f4e75b9eaf70a11b",
      "bundle_path_digest": "sha256:b2c3acedb686c82ba2fd2ea828a841639e063b8f9a054411f4e75b9eaf70a11b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "alpha",
      "creation_date": "2022-05-12T02:18:41.443000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-08-15T13:06:40.712000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "name": "openstorage-operator-f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a-annotation"
        },
        {
          "digest": "sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.8.0",
      "version_original": "1.8.0"
    },
    {
      "_id": "627c6e864be4723d90ee6e9c",
      "alm_examples": [
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageCluster",
          "metadata": {
            "annotations": {
              "portworx.io/is-openshift": "true"
            },
            "name": "portworx",
            "namespace": "test-operator"
          },
          "spec": {}
        },
        {
          "api_version": "core.libopenstorage.org/v1",
          "kind": "StorageNode",
          "metadata": {
            "name": "example",
            "namespace": "test-operator"
          },
          "spec": {}
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/portworx/portworx-certified-bundle@sha256:b2c3acedb686c82ba2fd2ea828a841639e063b8f9a054411f4e75b9eaf70a11b",
      "bundle_path_digest": "sha256:b2c3acedb686c82ba2fd2ea828a841639e063b8f9a054411f4e75b9eaf70a11b",
      "capabilities": [
        "Auto Pilot"
      ],
      "channel_name": "stable",
      "creation_date": "2022-05-12T02:18:46.287000+00:00",
      "csv_description": "Portworx-Enterprise is the most widely-used and reliable cloud-native\nstorage solution for production workloads and provides high-availability,\ndata protection and security for containerized applications.\n\nPortworx Enterprise enables you to migrate entire applications, including\ndata, between clusters in a single data center or cloud, or between clouds,\nwith a single kubectl command.\n\nThe cloud native storage and data management platform that enterprises trust\nto manage data in containers now has an operator which simplifies the install,\nconfiguration, upgrades and manages the Portworx Enterprise cluster lifecycle.\n\nLearn more about the Portworx Enterprise\n[the data platform for Kubernetes](https://portworx.com/products/introduction)\n\nTo learn more about the platform features, please visit our\n[product features page](https://portworx.com/products/features)\n\n### About Portworx\n\nPortworx is the solution for running stateful containers in production,\ndesigned with DevOps in mind. With Portworx, users can manage any database\nor stateful service on any infrastructure using any container scheduler,\nincluding Kubernetes, Mesosphere DC/OS, and Docker Swarm. Portworx solves\nthe five most common problems DevOps teams encounter when running stateful\nservices in production: persistence, high availability, data automation,\nsecurity, and support for multiple data stores and infrastructure.\n\n### How to install StorageCluster\n\nTo customize your cluster's configuration (specification), use the\n[Spec Generator](https://central.portworx.com/) from PX-Central.\n\n### Prerequisite\n\nEnsure ports 17001-17020 on worker nodes are reachable from master and other worker nodes.\n\n### Tutorials\n\n* [Portworx Enterprise on Openshift](https://portworx.com/openshift)\n\n* [Stateful applications on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes/application-install-with-kubernetes)\n\n* [Portworx Enterprise on Kubernetes](https://docs.portworx.com/portworx-install-with-kubernetes)\n\n* [Kafka on Kubernetes](https://portworx.com/kafka-kubernetes)\n\n* [Elastisearch on Kubernetes](https://portworx.com/elasticsearch-kubernetes)\n\n* [PostgreSQL on Kubernetes](https://portworx.com/postgres-kubernetes/)\n\n* [MongoDB on Kubernetes](https://portworx.com/mongodb-kubernetes/)\n\n* [Cassandra on Kubernetes](https://portworx.com/cassandra-kubernetes/)\n\n* [Kubernetes backup and recovery](https://portworx.com/kubernetes-backup/)\n\n* [Disaster Recovery for Kubernetes](https://portworx.com/kubernetes-disaster-recovery/)\n\n### Uninstall\n\nDeleting the StorageCluster object for Portworx cluster does not stop Portworx\nservice running on the nodes, to avoid application downtime.\n\nTo uninstall Portworx completely without wiping the data, you should add the\nfollowing delete strategy to the StorageCluster spec:\n```\nspec:\n  deleteStrategy:\n    type: Uninstall\n```\n**Caution:** To uninstall Portworx and **wipe all the data**, you should use the following\ndelete strategy:\n```\nspec:\n  deleteStrategy:\n    type: UninstallAndWipe\n```\n",
      "csv_display_name": "Portworx Enterprise",
      "csv_metadata_description": "Cloud native storage solution for production workloads",
      "csv_name": "portworx-operator.v1.8.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-08-15T13:06:46.910000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.9",
      "organization": "certified-operators",
      "package": "portworx-certified",
      "provided_apis": [
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageCluster",
          "plural": "storageclusters",
          "version": "v1alpha1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1"
        },
        {
          "group": "core.libopenstorage.org",
          "kind": "StorageNode",
          "plural": "storagenodes",
          "version": "v1alpha1"
        }
      ],
      "provider": "Portworx",
      "related_images": [
        {
          "digest": "sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "name": "openstorage-operator-f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a-annotation"
        },
        {
          "digest": "sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "image": "registry.connect.redhat.com/portworx/openstorage-operator@sha256:f1772c36f53aef2748bde670b5aac7fd778a09d0d2b74e7c6287eb5e8fe2873a",
          "name": "portworx-operator"
        }
      ],
      "replaces": null,
      "skip_range": null,
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.9",
      "version": "1.8.0",
      "version_original": "1.8.0"
    }
  ],
  "page": 28,
  "page_size": 100,
  "total": 4801
}

{
  "data": [
    {
      "_id": "6034a53408f2098193f9118c",
      "alm_examples": [
        {
          "api_version": "densify.com/v1",
          "kind": "Densify",
          "metadata": {
            "name": "densify"
          },
          "spec": {
            "affinity": {},
            "config": {
              "cronJob": {
                "schedule": "0 * * * *"
              },
              "debug": false,
              "densify": {
                "epassword": "<encrypted densify user password>",
                "hostname": "<instance>.densify.com",
                "port": 443,
                "protocol": "https",
                "user": "<densify user>"
              },
              "prometheus": {
                "hostname": "<prometheus hostname>",
                "port": "<prometheus port>",
                "protocol": "http"
              },
              "zipEnabled": true,
              "zipname": "data/<zip name>"
            },
            "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
            "nodeSelector": {},
            "pullPolicy": "Always",
            "replicaCount": 1,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/densify/densify-operator-bundle@sha256:6c37c211385ffad721637ea1a6bcda46e4aa9aa46efdbeec6f75e9b9bd7ff75d",
      "bundle_path_digest": "sha256:6c37c211385ffad721637ea1a6bcda46e4aa9aa46efdbeec6f75e9b9bd7ff75d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "v1.0",
      "creation_date": "2021-02-23T06:48:20.199000+00:00",
      "csv_description": "The Densify-Operator deploys the Densify Container Data Collection utility, which collects data from a Prometheus server and sends it to a Densify instance for analysis. \n\n# Prerequisites\n\n- Densify account, which is provided with a Densify subscription or through a free trial (https://www.densify.com/service/signup)\n- Prometheus (https://prometheus.io/)\n- Kube-state-metrics (https://github.com/kubernetes/kube-state-metrics)\n\n# Installing\n\n## Basic Install\nThe instruction below deploys the basic Densify Container Data Collection with minimal configuration.\n1. update the Densify hostname, user and encrypted password, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      user: <densify user>\n      epassword: <encrypted densify user password>\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n\n## Install Using a Secret for User and Password\nThe instructions below deploy the Densify Container Data Collection using a secret to store the username and encrypted password.\n1. Create a secret that contains the username and epassword keys.\n```\noc -n \"<namespace deploying operator into>\" create secret generic densify-secret \\\n  --from-literal=username=\"<densify username>\" \\\n  --from-literal=epassword=\"<encrypted password>\" \\\n```\n2. Update the Densify hostname, Prometheus hostname and port, and zip filename:\n```\napiVersion: densify.com/v1\nkind: Densify\nmetadata:\n  name: densify\nspec:\n  config:\n    densify:\n      hostname: <instance>.densify.com\n      port: 443\n      protocol: https\n      UserSecretName: densify-secret\n    prometheus:\n      hostname: <prometheus hostname>\n      port: <prometheus port>\n      protocol: http\n    zipname: data/<zip name>\n```\n# Configuration\n \nThe configuration parameters are the same set as the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart:\n\n| Parameter        | Description           | Default |\n| ------------- |-------------|--------|\n| `config.densify.hostname` | Specify the Densify instance hostname. You may need to specify a fully qualified domain name. | `<instance>.densify.com` |\n| `config.densify.protocol` | Specify the Densify connection protocol: http or https. | `<http/https>` |\n| `config.densify.port` | Specify the Densify connection port number. | `443` |\n| `config.densify.user` | Specify the Densify user account. You must specify either a password or an epassword along with this parameter. This user must already exist in your Densify instance and have API access privileges. Alternatively, you can use config.densify.UserSecretName for authentication instead of user/(e)password combination (see UserSecretName below). | `nil` |\n| `config.densify.password` | Specify the password for the Densify user. Only specify a password or an encrypted password (not both). | `nil` |\n| `config.densify.epassword` | Specify the encrypted password for the Densify User. If you specify an encrypted password, then disable the config.densify.password paramter. | `nil` |\n| `config.densify.UserSecretName` | Specify the secret name used to store the Densify user and epassword (keys must contain username and epassword). If this parameter is used, then config.densify.username\\password\\epassword parameters must be disabled. | `nil` |\n| `config.prometheus.hostname` | Specify the Prometheus address. Using the internal service name is recommended (i.e. `<service name>.<namespace>.svc`). | `nil` |\n| `config.prometheus.protocol` | Specify the Prometheus connection protocol: http or https. | `<http/https>` |\n| `config.prometheus.port` | Specify the Prometheus service connection port. | `9090` |\n| `config.prometheus.clustername` | Specify the name to identify the cluster in the Densify UI. If this parameter is disabled, then the specified Prometheus hostname is used to identify the cluster in the Densify UI. | `nil` |\n| `config.zipname` | Specify the name of the zipfile to send to Densify. | `data/nil` |\n| `rbac.create` | This flag indicates if RBAC resources are created and used. This flag must be \"true\" for API access to Prometheus in a secured cluster. | `true` |\n| `serviceAccount.create` | Specify \"true\" to create a Service Account with the name specified by the serviceAccount.name parameter (see below). | `true` |\n| `serviceAccount.name` | Specify the name of the Service Account. If this parameter is disabled, then the Helm chart name is used as the Service Account name. You can specify an existing Service Account name to use, if serviceAccount.create == \"false\". | `nil` |\n\nRefer to the [Densify Forwarder](https://github.com/densify-dev/helm-charts/tree/master/charts/container-optimization-data-forwarder#configuration) helm chart for the full list of parameters.\n\n# Limitation\n* OS Support: Linux\n* Architecture: AMD64\n\n# Documentation\n* [Densify Feature Description and Reference Guide](https://www.densify.com/docs/Content/Welcome.htm)\n\n# License\nApache 2 Licensed. See [LICENSE](LICENSE) for full details.",
      "csv_display_name": "Densify Operator",
      "csv_metadata_description": "Densify Container Resource Management works to identify better supply (resource) allocations for your underlying containers based on key technical, business and cost criteria.  Any infrastructure changes recommended by Densify can be moderated through your existing ITSM framework / processes.",
      "csv_name": "densify-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:49:50.550000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "densify-operator",
      "provided_apis": [
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1"
        },
        {
          "group": "densify.com",
          "kind": "Densify",
          "plural": "densifies",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "name": "densify-operator-47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada-annotation"
        },
        {
          "digest": "sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "image": "registry.connect.redhat.com/densify/densify-operator@sha256:47582660364156ea36279dd9fdcc43bdad7092f07ab8d79101fd6eca7da73ada",
          "name": "densify-operator"
        },
        {
          "digest": "sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "name": "densify"
        },
        {
          "digest": "sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "image": "registry.connect.redhat.com/densify/container-data-collection-forwarder@sha256:d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a",
          "name": "container-data-collection-forwarder-d99a1bc9213554cdf70202fa73e135c68fdd77a4b4972f591997dd2b94fde50a-annotation"
        }
      ],
      "replaces": "",
      "skip_range": ">=0.0.2 <1.0.0",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6034a54108f2098193f9118d",
      "alm_examples": [
        {
          "api_version": "nvidia.com/v1",
          "kind": "ClusterPolicy",
          "metadata": {
            "name": "gpu-cluster-policy"
          },
          "spec": {
            "dcgmExporter": {
              "affinity": {},
              "image": "dcgm-exporter",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:85016e39f73749ef9769a083ceb849cae80c31c5a7f22485b3ba4aa590ec7b88"
            },
            "devicePlugin": {
              "affinity": {},
              "args": [
                "--mig-strategy=single",
                "--pass-device-specs=false",
                "--fail-on-init-error=true",
                "--device-list-strategy=envvar",
                "--nvidia-driver-root=/run/nvidia/driver"
              ],
              "image": "k8s-device-plugin",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:f7bf5955a689fee4c1c74dc7928220862627adc97e00a4b585f9c31965e79625"
            },
            "driver": {
              "affinity": {},
              "image": "driver",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repoConfig": {
                "configMapName": "",
                "destinationDir": ""
              },
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:324e9dc265dec320207206aa94226b0c8735fd93ce19b36a415478c95826d934"
            },
            "gfd": {
              "affinity": {},
              "image": "gpu-feature-discovery",
              "imagePullSecrets": [],
              "migStrategy": "single",
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia",
              "resources": {},
              "securityContext": {},
              "sleepInterval": "60s",
              "tolerations": [],
              "version": "sha256:8d068b7b2e3c0b00061bbff07f4207bd49be7d5bfbff51fdf247bc91e3f27a14"
            },
            "operator": {
              "defaultRuntime": "crio",
              "deployGFD": true,
              "validator": {
                "image": "cuda-sample",
                "imagePullSecrets": [],
                "repository": "nvcr.io/nvidia/k8s",
                "version": "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2"
              }
            },
            "toolkit": {
              "affinity": {},
              "image": "container-toolkit",
              "imagePullSecrets": [],
              "nodeSelector": {},
              "podSecurityContext": {},
              "repository": "nvcr.io/nvidia/k8s",
              "resources": {},
              "securityContext": {},
              "tolerations": [],
              "version": "sha256:81295a9eca36cbe5d94b80732210b8dc7276c6ef08d5a60d12e50479b9e542cd"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [
          "Disconnected"
        ],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nvidia/gpu-operator-bundle@sha256:3a944050b7ba261b5451e639165eb230f1afbc3be7624a7d6039f138b09cb19f",
      "bundle_path_digest": "sha256:3a944050b7ba261b5451e639165eb230f1afbc3be7624a7d6039f138b09cb19f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-02-23T06:48:33.418000+00:00",
      "csv_description": "Kubernetes provides access to special hardware resources such as NVIDIA GPUs, NICs, Infiniband adapters and other devices through the [device plugin framework](https://kubernetes.io/docs/concepts/extend-kubernetes/compute-storage-net/device-plugins/). However, configuring and managing nodes with these hardware resources requires configuration of multiple software components such as drivers, container runtimes or other libraries which are difficult and prone to errors.\nThe NVIDIA GPU Operator uses the [operator framework](https://coreos.com/blog/introducing-operator-framework) within Kubernetes to automate the management of all NVIDIA software components needed to provision and monitor GPUs. These components include the NVIDIA drivers (to enable CUDA), Kubernetes device plugin for GPUs, the NVIDIA Container Runtime, automatic node labelling and NVIDIA DCGM exporter.\nVisit the official site of the [GPU Operator](https://github.com/NVIDIA/gpu-operator) for more information. For getting started with using the GPU Operator with OpenShift, see the instructions [here](https://docs.nvidia.com/datacenter/kubernetes/openshift-on-gpu-install-guide/index.html).\n",
      "csv_display_name": "NVIDIA GPU Operator",
      "csv_metadata_description": "Automate the management and monitoring of NVIDIA GPUs.",
      "csv_name": "gpu-operator-certified.v1.5.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:06:13.746000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "gpu-operator-certified",
      "provided_apis": [
        {
          "group": "nvidia.com",
          "kind": "ClusterPolicy",
          "plural": "clusterpolicies",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:679fea62eb2c207d26354ac088fbe4625457a329dee080d90479a411603eb694",
          "image": "nvcr.io/nvidia/gpu-operator@sha256:679fea62eb2c207d26354ac088fbe4625457a329dee080d90479a411603eb694",
          "name": "gpu-operator-image"
        },
        {
          "digest": "sha256:85016e39f73749ef9769a083ceb849cae80c31c5a7f22485b3ba4aa590ec7b88",
          "image": "nvcr.io/nvidia/k8s/dcgm-exporter@sha256:85016e39f73749ef9769a083ceb849cae80c31c5a7f22485b3ba4aa590ec7b88",
          "name": "dcgm-exporter-image"
        },
        {
          "digest": "sha256:81295a9eca36cbe5d94b80732210b8dc7276c6ef08d5a60d12e50479b9e542cd",
          "image": "nvcr.io/nvidia/k8s/container-toolkit@sha256:81295a9eca36cbe5d94b80732210b8dc7276c6ef08d5a60d12e50479b9e542cd",
          "name": "container-toolkit-image"
        },
        {
          "digest": "sha256:324e9dc265dec320207206aa94226b0c8735fd93ce19b36a415478c95826d934",
          "image": "nvcr.io/nvidia/driver@sha256:324e9dc265dec320207206aa94226b0c8735fd93ce19b36a415478c95826d934",
          "name": "driver-image"
        },
        {
          "digest": "sha256:f7bf5955a689fee4c1c74dc7928220862627adc97e00a4b585f9c31965e79625",
          "image": "nvcr.io/nvidia/k8s-device-plugin@sha256:f7bf5955a689fee4c1c74dc7928220862627adc97e00a4b585f9c31965e79625",
          "name": "device-plugin-image"
        },
        {
          "digest": "sha256:8d068b7b2e3c0b00061bbff07f4207bd49be7d5bfbff51fdf247bc91e3f27a14",
          "image": "nvcr.io/nvidia/gpu-feature-discovery@sha256:8d068b7b2e3c0b00061bbff07f4207bd49be7d5bfbff51fdf247bc91e3f27a14",
          "name": "gpu-feature-discovery-image"
        },
        {
          "digest": "sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2",
          "image": "nvcr.io/nvidia/k8s/cuda-sample@sha256:2a30fe7e23067bc2c3f8f62a6867702a016af2b80b9f6ce861f3fea4dfd85bc2",
          "name": "cuda-sample-image"
        },
        {
          "digest": "sha256:ed723a1339cddd75eb9f2be2f3476edf497a1b189c10c9bf9eb8da4a16a51a59",
          "image": "nvcr.io/nvidia/cuda@sha256:ed723a1339cddd75eb9f2be2f3476edf497a1b189c10c9bf9eb8da4a16a51a59",
          "name": "dcgm-init-container-image"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.5.2",
      "version_original": "1.5.2"
    },
    {
      "_id": "6034a543aedf82a5c34e0fe5",
      "alm_examples": [
        {
          "api_version": "h2o.ai/v1beta",
          "kind": "H2O",
          "metadata": {
            "name": "h2o-test"
          },
          "spec": {
            "customImage": {
              "image": "registry.connect.redhat.com/h2oai/h2o@sha256:62500ca14adacd1164d7ef4f64ccc96c3d0ad90ddf29c3e02d1aa82bd42aa1a4"
            },
            "nodes": 1,
            "resources": {
              "cpu": 1,
              "memory": "256Mi",
              "memoryPercentage": 90
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/h2oai/h2o-operator-bundle@sha256:a31c191ab992b727ade63d560c284fe953ad8363a5387a88e3989c29b21e4b61",
      "bundle_path_digest": "sha256:a31c191ab992b727ade63d560c284fe953ad8363a5387a88e3989c29b21e4b61",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-02-23T06:48:35.933000+00:00",
      "csv_description": "## About the managed application\n[H2O](https://github.com/h2oai/h2o-3) is an in-memory platform for distributed, scalable machine learning. H2O uses familiar interfaces like R, Python, Scala, Java, JSON and the Flow notebook/web interface, and works seamlessly with big data technologies like Hadoop and Spark. H2O provides implementations of many popular algorithms such as Generalized Linear Models (GLM), Gradient Boosting Machines (including XGBoost), Random Forests, Deep Neural Networks, Stacked Ensembles, Naive Bayes, Generalized Additive Models (GAM), Cox Proportional Hazards, K-Means, PCA, Word2Vec, as well as a fully automatic machine learning algorithm (H2O AutoML).\n\nH2O is extensible so that developers can add data transformations and custom algorithms of their choice and access them through all of those clients. H2O models can be downloaded and loaded into H2O memory for scoring, or exported into POJO or MOJO format for extemely fast scoring in production. More information can be found in the H2O User Guide.\n## About this Operator\nOnce deployed to a Kubernetes cluster, a new custom resource named H2O is recognized by Kubernetes, making it easy to create H2O clusters inside Kubernetes cluster.\n## Prerequisites for enabling this Operator\nThere are no requirements. The Operator will attempt to create a proper version of H2O CustomResourceDefinition, if not found on the Kubernetes cluster.\n",
      "csv_display_name": "H2O Open Source Machine Learning Operator",
      "csv_metadata_description": "A Kubernetes operator for H2O  Open Source, Distributed, Fast & Scalable Machine Learning Platform.",
      "csv_name": "h2o-operator.v0.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:59:02.144000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "h2o-operator",
      "provided_apis": [
        {
          "group": "h2o.ai",
          "kind": "H2O",
          "plural": "h2os",
          "version": "v1beta"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d",
          "image": "registry.connect.redhat.com/h2oai/h2o-operator@sha256:5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d",
          "name": "h2o-operator-5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d-annotation"
        },
        {
          "digest": "sha256:5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d",
          "image": "registry.connect.redhat.com/h2oai/h2o-operator@sha256:5dca5476c060b49cfc3e1e13b2c3c92920ae8789a092169a2c8457211895298d",
          "name": "h2o-operator"
        },
        {
          "digest": "sha256:62500ca14adacd1164d7ef4f64ccc96c3d0ad90ddf29c3e02d1aa82bd42aa1a4",
          "image": "registry.connect.redhat.com/h2oai/h2o@sha256:62500ca14adacd1164d7ef4f64ccc96c3d0ad90ddf29c3e02d1aa82bd42aa1a4",
          "name": "h2o-62500ca14adacd1164d7ef4f64ccc96c3d0ad90ddf29c3e02d1aa82bd42aa1a4-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.1.0",
      "version_original": "0.1.0"
    },
    {
      "_id": "6034a54f422aa04d75802415",
      "alm_examples": [
        {
          "api_version": "csi.ibm.com/v1",
          "kind": "CSIScaleOperator",
          "metadata": {
            "labels": {
              "app.kubernetes.io/instance": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/managed-by": "ibm-spectrum-scale-csi-operator",
              "app.kubernetes.io/name": "ibm-spectrum-scale-csi-operator",
              "release": "ibm-spectrum-scale-csi-operator"
            },
            "name": "ibm-spectrum-scale-csi"
          },
          "spec": {
            "attacherNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "clusters": [
              {
                "id": "< Primary Cluster ID - WARNING - THIS IS A STRING NEEDS YAML QUOTES! >",
                "primary": {
                  "primaryFs": "< Primary Filesystem >"
                },
                "restApi": [
                  {
                    "guiHost": "< Primary cluster GUI IP/Hostname>"
                  }
                ],
                "secrets": "secret1",
                "secureSslMode": false
              }
            ],
            "pluginNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "provisionerNodeSelector": [
              {
                "key": "scale",
                "value": "true"
              }
            ],
            "scaleHostpath": "< GPFS FileSystem Path >"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [
        "amd64"
      ],
      "bundle_path": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator-bundle@sha256:26e507a96b0473964ab18c84ec899a51c05301e956c3968dae8a0243842f9b5f",
      "bundle_path_digest": "sha256:26e507a96b0473964ab18c84ec899a51c05301e956c3968dae8a0243842f9b5f",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "stable",
      "creation_date": "2021-02-23T06:48:47.966000+00:00",
      "csv_description": "\nThe IBM Spectrum Scale CSI Operator runs within a Kubernetes cluster providing a means to \ndeploy and manage the CSI plugin for spectrum scale. For more in depth documentation please refer\nto the [knowledge center](https://www.ibm.com/support/knowledgecenter/STXKQY_CSI_SHR).\n\nThis operator should be used to deploy the CSI plugin.\n\nThe configuration process is as follows:\n\n1. [Spectrum Scale GUI Setup](#spectrum-scale-gui-setup)\n2. [Custom Resource Configuration](#custom-resource-configuration)\n\nSpectrum Scale GUI Setup \n------------------------\n> **NOTE:** This step only needs to be preformed once per GUI.\n\n> **WARNING:** If your daemonset pods (driver pods) do not come up, generally this means you have a  secret that  has not been defined in the correct namespace.\n\n1. Ensure the Spectrum Scale GUI is running by pointing your browser to the IP hosting the GUI:\n\n \n    > If you do not see a login follow on screen instructions, or review the [GUI Documentation](https://www.ibm.com/support/knowledgecenter/en/STXKQY_5.0.5/com.ibm.spectrum.scale.v5r05.doc/bl1ins_quickrefforgui.htm)\n\n\n3. Create a CsiAdmin group account on in the GUI (currently requires a CLI call):\n\n   ```\n\n   export USERNAME=\"SomeUser\"\n   export PASSWORD=\"SomePassword\"\n   /usr/lpp/mmfs/gui/cli/mkuser ${USERNAME} -p ${PASSWORD} -g CsiAdmin\n\n   ```\n\n3. Create a Kubernetes secret for the `CsiAdmin` user:\n\n  ```\n\n  export USERNAME_B64=$(echo $USERNAME | base64)\n  export PASSWORD_B64=$(echo $PASSWORD | base64)\n  export OPERATOR_NAMESPACE=\"ibm-spectrum-scale-csi-driver\"  # Set this to the namespace you deploy the operator in.\n  \n\n  cat << EOF > /tmp/csisecret.yaml\n  apiVersion: v1\n  data:\n    password: ${PASSWORD_B64}\n    username: ${USERNAME_B64}\n  kind: Secret\n  type: Opaque\n  metadata:\n    name: csisecret    # This should be in your CSIScaleOperator definition\n    namespace: ${OPERATOR_NAMESPACE} \n    labels:\n      app.kubernetes.io/name: ibm-spectrum-scale-csi-operator # Used by the operator to detect changes, set on load of CR change if secret matches name in CR and namespace.\n  EOF\n  \n\n  kubectl create -f /tmp/csisecret.yaml\n  rm -f /tmp/csisecret.yaml\n  \n  ```\n\nCustom Resource Configuration\n-----------------------------\n\nThe bundled Custom Resource example represents the minimum settings needed to run the operator.\nIf your environment needs more advanced settings (e.g. remote clusters, node mapping, etc.) please\nrefer to the sample [Custom Resource](https://raw.githubusercontent.com/IBM/ibm-spectrum-scale-csi/v2.1.0/operator/deploy/crds/csiscaleoperators.csi.ibm.com_cr.yaml).\n\n\n",
      "csv_display_name": "IBM Spectrum Scale CSI Plugin Operator",
      "csv_metadata_description": "An operator for deploying and managing the IBM Spectrum Scale CSI Driver.",
      "csv_name": "ibm-spectrum-scale-csi-operator.v2.1.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:56:05.469000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "ibm-spectrum-scale-csi",
      "provided_apis": [
        {
          "group": "csi.ibm.com",
          "kind": "CSIScaleOperator",
          "plural": "csiscaleoperators",
          "version": "v1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "name": "ibm-spectrum-scale-csi-operator-46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc-annotation"
        },
        {
          "digest": "sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "image": "registry.connect.redhat.com/ibm/ibm-spectrum-scale-csi-operator@sha256:46a8ce82a1c68e44432136aa3f55dc52ca6201e1920dfa53de4c62d740ea62dc",
          "name": "operator"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.1.0",
      "version_original": "2.1.0"
    },
    {
      "_id": "6034a555aedf82a5c34e0fe8",
      "alm_examples": [
        {
          "api_version": "instana.io/v1beta1",
          "kind": "InstanaAgent",
          "metadata": {
            "name": "instana-agent",
            "namespace": "instana-agent"
          },
          "spec": {
            "agent.endpoint.host": "ingress-red-saas.instana.io",
            "agent.endpoint.port": 443,
            "agent.env": {
              "INSTANA_AGENT_TAGS": "example"
            },
            "agent.key": "replace-me",
            "agent.zone.name": "my-zone",
            "cluster.name": "replace-me",
            "config.files": {
              "configuration.yaml": "# You can leave this empty, or use this to configure your instana agent.\n# See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n"
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/instana/instana-agent-operator-bundle@sha256:62e44a3a7ad63ce183162ad49de72ddd587358251b91a890cfebdb72945c140d",
      "bundle_path_digest": "sha256:62e44a3a7ad63ce183162ad49de72ddd587358251b91a890cfebdb72945c140d",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-02-23T06:48:53.819000+00:00",
      "csv_description": "# Instana\n\nInstana is an [APM solution](https://www.instana.com/product-overview/) built for microservices that enables IT Ops to build applications faster and deliver higher quality services by automating monitoring, tracing and root cause analysis. The solution is optimized for [Kubernetes](https://www.instana.com/automatic-kubernetes-monitoring/) and [OpenShift](https://www.instana.com/blog/automatic-root-cause-analysis-for-openshift-applications/).\n\n## Instana Agent Operator\n\nThis is the Kubernetes Operator for installing the Instana Agent on Kubernetes or OpenShift.\n\n## Prerequisites for OpenShift\n\nBefore the agent will be able to run in OpenShift, you need to perform a couple of extra configuration steps.\n\nYou need to set up a project for the Instana Agent and configure it's permissions.\n\nThe project you create here needs to be the namespace where you create the Instana Agent custom resource that the operator will use to deploy the agent.\n\nFor example, create the `instana-agent` project:\n\n    oc new-project instana-agent\n\nThen, ensure the `instana-agent` service account is in the privileged security context:\n\n    oc adm policy add-scc-to-user privileged -z instana-agent\n\nThis service account will be created by the operator.\n\nNow you can proceed with installing the operator for the Instana agent.\n\n## Installation and Configuration\n\nFirst, install this operator from [OperatorHub.io](https://operatorhub.io/), [OpenShift Container Platform](https://www.openshift.com/), or [OKD](https://www.okd.io/).\n\nSecond, create the target namespace where the Instana agent should be installed. The agent does not need to run in the same namespace as the operator. Most users create a new namespace `instana-agent` for running the agents.\n\nThird, create a custom resource with the agent configuration in the target namespace. The operator will pick up the custom resource and install the Instana agent accordingly.\n\nThe following is a minimal template of the custom resource:\n\n```yaml\napiVersion: instana.io/v1beta1\nkind: InstanaAgent\nmetadata:\n  name: instana-agent\n  namespace: instana-agent\nspec:\n  agent.zone.name: my-zone # (optional) name of the zone of the host\n  agent.key: replace-me # replace with your Instana agent key\n  agent.endpoint.host: ingress-red-saas.instana.io # the monitoring ingress endpoint\n  agent.endpoint.port: 443 # the monitoring ingress endpoint port, wrapped in quotes\n  agent.env:\n    INSTANA_AGENT_TAGS: example\n  cluster.name: replace-me # replace with the name of your Kubernetes cluster\n  config.files:\n    configuration.yaml: |\n      # You can leave this empty, or use this to configure your instana agent.\n      # See https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/\n```\n\nSave the template in a file `instana-agent.yaml` and edit the following values:\n\n* If your target namespace is not `instana-agent`, replace the `namespace:` accordingly.\n* `agent.key` must be set with your Instana agent key.\n* `agent.endpoint` must be set with the monitoring ingress endpoint, generally either `saas-us-west-2.instana.io` or `saas-eu-west-1.instana.io`.\n* `agent.endpoint.port` must be set with the monitoring ingress port, generally \"443\" (wrapped in quotes).\n* `agent.zone.name` should be set with the name of the Kubernetes cluster that is be displayed in Instana.\n\nFor advanced configuration, you can edit the contents of the `configuration.yaml` file. View documentation [here](https://docs.instana.io/setup_and_manage/host_agent/on/kubernetes/).\n\nApply the custom resource with `kubectl apply -f instana-agent.yaml`. After some time, you should see `instana-agent` Pods being created on each node of your cluster, and your cluster should show on the infrastructure map on your Instana Web interface.\n\n## Uninstalling\n\nIn order to uninstall the Instana agent, simply remove the custom resource with `kubectl delete -f instana-agent.yaml`.\n\n## Source Code\n\nThe Instana agent operator is an open source project hosted on [https://github.com/instana/instana-agent-operator](https://github.com/instana/instana-agent-operator/).\n",
      "csv_display_name": "Instana Agent Operator",
      "csv_metadata_description": "Fully automated Application Performance Monitoring (APM) for microservices.",
      "csv_name": "instana-agent-operator.v1.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": true,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:49:54.438000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "instana-agent",
      "provided_apis": [
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1alpha1"
        },
        {
          "group": "instana.io",
          "kind": "InstanaAgent",
          "plural": "agents",
          "version": "v1beta1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "name": "instana-agent-operator-1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94-annotation"
        },
        {
          "digest": "sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "image": "registry.connect.redhat.com/instana/instana-agent-operator@sha256:1e31376496d3aa418a380d9087e2eb159567a7e486dbf46b4a4f20e7af5d5f94",
          "name": "instana-agent-operator"
        },
        {
          "digest": "sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "image": "registry.connect.redhat.com/instana/agent@sha256:dfd02a82d7414d644ab6e47c28fac98b8b60737b7922ce0468ebb72e24b989f0",
          "name": "instana_agent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.0.0",
      "version_original": "1.0.0"
    },
    {
      "_id": "6034a55baedf82a5c34e0fe9",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:4625d639ed8bc07b92b9231b67f67ed6c1866194cd194a02469e36ef7706da3f",
      "bundle_path_digest": "sha256:4625d639ed8bc07b92b9231b67f67ed6c1866194cd194a02469e36ef7706da3f",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "cluster",
      "creation_date": "2021-02-23T06:48:59.730000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T02:16:10.293000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:091e0d574067e7f9e5d7a4a0136c38d7aa8f369ce63c5c380ae65b2a21dfa49e",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:091e0d574067e7f9e5d7a4a0136c38d7aa8f369ce63c5c380ae65b2a21dfa49e",
          "name": "control-plane-091e0d574067e7f9e5d7a4a0136c38d7aa8f369ce63c5c380ae65b2a21dfa49e-annotation"
        },
        {
          "digest": "sha256:091e0d574067e7f9e5d7a4a0136c38d7aa8f369ce63c5c380ae65b2a21dfa49e",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:091e0d574067e7f9e5d7a4a0136c38d7aa8f369ce63c5c380ae65b2a21dfa49e",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:b3200367b4850874ae4c63299781bd0e36dd6e7516c73f5d58820f35ce13fd44",
          "image": "registry.connect.redhat.com/trilio/trilio-admission-webhook@sha256:b3200367b4850874ae4c63299781bd0e36dd6e7516c73f5d58820f35ce13fd44",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:0b1534147b5c6ed5fda33af74e5f9e1ffeda2e78346bea9977ee52038e619e2e",
          "image": "registry.connect.redhat.com/trilio/exporter@sha256:0b1534147b5c6ed5fda33af74e5f9e1ffeda2e78346bea9977ee52038e619e2e",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:e348157c36b046309f3ee750aebca130d1f37b273675a1abf23cc6d91ce66e63",
          "image": "registry.connect.redhat.com/trilio/web@sha256:e348157c36b046309f3ee750aebca130d1f37b273675a1abf23cc6d91ce66e63",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:d0131be621ee6dd3b02bba6d7ef79ffc60f49b647c5fa65d0ad7b0612810110e",
          "image": "registry.connect.redhat.com/trilio/web-backend@sha256:d0131be621ee6dd3b02bba6d7ef79ffc60f49b647c5fa65d0ad7b0612810110e",
          "name": "triliovault-backend"
        },
        {
          "digest": "sha256:c3aa8d60b55e787539b2dadb1a383d88486547def92e97d08bb5d06b7803020b",
          "image": "registry.connect.redhat.com/trilio/control-plane-init@sha256:c3aa8d60b55e787539b2dadb1a383d88486547def92e97d08bb5d06b7803020b",
          "name": "control-plane-init"
        },
        {
          "digest": "sha256:fa86bc7b8e18f71f66381db509e49c2b5d705789a884a18a96774c35cdc0baca",
          "image": "registry.connect.redhat.com/trilio/trilio-webhook-init@sha256:fa86bc7b8e18f71f66381db509e49c2b5d705789a884a18a96774c35cdc0baca",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:3dd716cd5a12cd839ada0fd4403f1617e2377a34466d65fbfb05e20da6d286e4",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:3dd716cd5a12cd839ada0fd4403f1617e2377a34466d65fbfb05e20da6d286e4",
          "name": "metamover"
        },
        {
          "digest": "sha256:680f5415f9219939a6e040fbf1c3f8ef71bca9242a62482d81f1f2c1315ba944",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:680f5415f9219939a6e040fbf1c3f8ef71bca9242a62482d81f1f2c1315ba944",
          "name": "datamover"
        },
        {
          "digest": "sha256:07c293ca84b92ff743ea48bd28862a32713df6fc94a50f62c6a9c01603c12136",
          "image": "registry.connect.redhat.com/trilio/datastore-attacher@sha256:07c293ca84b92ff743ea48bd28862a32713df6fc94a50f62c6a9c01603c12136",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:1371364abc1c21747779025d784f98b7366e1135d3d1e7716a6160f0910a44c3",
          "image": "registry.connect.redhat.com/trilio/backup-scheduler@sha256:1371364abc1c21747779025d784f98b7366e1135d3d1e7716a6160f0910a44c3",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:094fb3ad35907216946ff0b33c958e1902ec51d34e88160ee08215c4a97e5cd3",
          "image": "registry.connect.redhat.com/trilio/backup-cleaner@sha256:094fb3ad35907216946ff0b33c958e1902ec51d34e88160ee08215c4a97e5cd3",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:d7b510d4f3cefa50ec3464ae8fe99b160f53fa334ebcdc0616aca2f101c615aa",
          "image": "registry.connect.redhat.com/trilio/backup-retention@sha256:d7b510d4f3cefa50ec3464ae8fe99b160f53fa334ebcdc0616aca2f101c615aa",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:2ea5873e8d20e2b9d4ae66e180ceb450a3f04b13af8039b315a3d49a1316c67e",
          "image": "registry.connect.redhat.com/trilio/target-browser@sha256:2ea5873e8d20e2b9d4ae66e180ceb450a3f04b13af8039b315a3d49a1316c67e",
          "name": "target_browser"
        },
        {
          "digest": "sha256:ba038e0cd9755af245f3966000735619644d8097f9b6df043d16591c17f99e8e",
          "image": "registry.connect.redhat.com/trilio/hook-executor@sha256:ba038e0cd9755af245f3966000735619644d8097f9b6df043d16591c17f99e8e",
          "name": "hook"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.2",
      "version_original": "2.0.2"
    },
    {
      "_id": "6034c15daedf82a5c34e0ff0",
      "alm_examples": [
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "License",
          "metadata": {
            "name": "triliovault-license"
          },
          "spec": {
            "key": "xLkNDgwKD3jafZJNb8IwDIbv+RWRdo6Uj5a2SD1MwKRtjE0bsLOTuiISpFWaovHv145NQy3iPcb249d27j6xoE/tnkpJOZ/KaBrFVHLJycwjBFu5OQSk/8r7IOMJk5IsCttn0IHyB4+49hb2BEywR6SjjOBbJHtr0DW4Rd9cUnJJXsC6gA6cwcVXbf3pbKLvrRhPmersVYca3GlEfsdiB4Gs2oNG/1pumo5+EWaCfKA/on+cDysh5gWokjOjU8WEQGBaQMSM0DrDiTKTpCterOgV5d07+wXIm4Dleehh+3y9vd8s138MdduEqWq8YsLBAZsaDBbkudW4Gc1Ic56ITHMwrEwTwSIlY5bqLGGGx1kW6QQzUZKfncPotJfrf2u92UGDN37HDDorNgxPlAtOe3d0VRXYfAMj8ZzrMEYCIQCVaI/QJN+2M/QJWimd28dWOi/6o5s5I5+z30JrmzwGnQIhAKrSu8NeUIqXGEBTQvPKe3n2U0LNPht/ZAQIs5CZNeWlX02gk"
          }
        },
        {
          "api_version": "triliovault.trilio.io/v1",
          "kind": "Target",
          "metadata": {
            "labels": {
              "app": "triliovault"
            },
            "name": "triliovault-target"
          },
          "spec": {
            "nfsCredentials": {
              "nfsExport": "00.00.00.00:/src/nfs/kubedata",
              "nfsOptions": "nfsvers=4"
            },
            "type": "NFS",
            "vendor": "Other"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/trilio/r-3445381-bundle@sha256:3d08fbc3203b68e953d71cf21d2311e2fc6e4529870274535cf1bab1e6bb609f",
      "bundle_path_digest": "sha256:3d08fbc3203b68e953d71cf21d2311e2fc6e4529870274535cf1bab1e6bb609f",
      "capabilities": [
        "Full Lifecycle"
      ],
      "channel_name": "namespaced",
      "creation_date": "2021-02-23T08:48:29.909000+00:00",
      "csv_description": "TrilioVault for Kubernetes is an enterprise-grade, cloud-native platform purpose built for data protection and management of Kubernetes applications for IT managers, administrators and developers. TrilioVault supports upstream Kubernetes and OpenShift environments and offers the following features:\n  * Application-Centric - protects both data and metadata for Helm, Operator or custom Label based applications.\n  * Red Hat Certified - first backup and recovery solution with OpenShift Operator Certification.\n  * Native to Kubernetes & OpenShift: Packaged and deployed as an Operator, integrated via Kubernetes API and with all features that it provides.\n  * Infrastructure Agnostic: Compatible with any Storage (CSI, NFS, S3), or any Cloud (Private or Public).\n  * Application Deployment & Tooling: Helm, Operators, Labels, Prometheus, Fluentd.\n\nNote: The upgrade of TrilioVault for Kubernetes from version v1.1.1 to v2.0.0 is not supported due to the CRD scope change in operator. All the users of TrilioVault for Kubernetes v1.1.1 Cluster installation have to uninstall the TrilioVault for Kubernetes, delete the CRDs and reinstall the TrilioVault for Kubernetes v2.0.0\n\nTutorials\n------------\nPlease click the link below to access the TrilioVault for Kubernetes \"How-To\" series for deployment, best practice and use-case videos\n<a href=\"https://www.trilio.io/triliovault-for-kubernetes\">TrilioVault for Kubernetes - Tutorials and How-To </a>\u201d\nLicensing\n--------\nCustomers can download a 30-day Free Trial or a 10-node Basic Edition at no cost.  You can also connect with the Trilio team for an Enterprise Edition license with no limitations and Premium Support.\nFor more information on license plans please vist:\n<a href=\"www.trilio.io/plans\"> Trilio Vault for Kubernetes licensing and plans </a>\nAbout Trilio\n----------------\nTrilio is trusted by global cloud infrastructure operators to deliver data protection, application resiliency, infrastructure migration and infrastructure version management. Our TrilioVault technology supports Kubernetes, OpenStack and Virtualization environments to recover from disasters, migrate tenant workloads, move workloads to new infrastructures and migrate to new infrastructure software distributions. www.trilio.io and @triliodata on Twitter.",
      "csv_display_name": "TrilioVault for Kubernetes",
      "csv_metadata_description": "Cloud-Native Data Protection for Kubernetes",
      "csv_name": "k8s-triliovault-cluster.v2.0.0",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": false,
          "type": "OwnNamespace"
        },
        {
          "supported": false,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": false,
      "last_update_date": "2022-06-17T01:54:51.542000+00:00",
      "latest_in_channel": true,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "k8s-triliovault",
      "provided_apis": [
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Restore",
          "plural": "restores",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Target",
          "plural": "targets",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Backup",
          "plural": "backups",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Hook",
          "plural": "hooks",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "License",
          "plural": "licenses",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "Policy",
          "plural": "policies",
          "version": "v1alpha1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1"
        },
        {
          "group": "triliovault.trilio.io",
          "kind": "BackupPlan",
          "plural": "backupplans",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "name": "control-plane-d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a-annotation"
        },
        {
          "digest": "sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "image": "registry.connect.redhat.com/trilio/control-plane@sha256:d93508d9c7b516e1dadc0098422dbdebc66b377e81d7cbc7c0d9afcf86324b7a",
          "name": "k8s-triliovault-control-plane"
        },
        {
          "digest": "sha256:6c47a09c1ddc6a6f8fb79a6026603385a4fed7b5e62b501b14928fbe05b4faf6",
          "image": "registry.connect.redhat.com/trilio/trilio-admission-webhook@sha256:6c47a09c1ddc6a6f8fb79a6026603385a4fed7b5e62b501b14928fbe05b4faf6",
          "name": "triliovault-admission-webhook"
        },
        {
          "digest": "sha256:d4c343b387e4a1316a6fca6cfafebfa2a877c402b13898ddb3980cd85e858b01",
          "image": "registry.connect.redhat.com/trilio/exporter@sha256:d4c343b387e4a1316a6fca6cfafebfa2a877c402b13898ddb3980cd85e858b01",
          "name": "triliovault-exporter"
        },
        {
          "digest": "sha256:68753694b2ed6613ec6a4bf41258c54c0748d098e43ef09b366b89adb0784941",
          "image": "registry.connect.redhat.com/trilio/web@sha256:68753694b2ed6613ec6a4bf41258c54c0748d098e43ef09b366b89adb0784941",
          "name": "triliovault-web"
        },
        {
          "digest": "sha256:ca4dfd19e5e4c4e3e206ed1d8cd5f654f09a084531394d3c8262bfb40efdaf1b",
          "image": "registry.connect.redhat.com/trilio/web-backend@sha256:ca4dfd19e5e4c4e3e206ed1d8cd5f654f09a084531394d3c8262bfb40efdaf1b",
          "name": "triliovault-backend"
        },
        {
          "digest": "sha256:9d2aec99c0b9a79125ac9d8b20d92fed11c7efd37e77b4333679a4ffa158ed52",
          "image": "registry.connect.redhat.com/trilio/control-plane-init@sha256:9d2aec99c0b9a79125ac9d8b20d92fed11c7efd37e77b4333679a4ffa158ed52",
          "name": "control-plane-init"
        },
        {
          "digest": "sha256:9eb8416a7f708fcf46735c319a3a3644ac844b1ff22e898c821935eccef39444",
          "image": "registry.connect.redhat.com/trilio/trilio-webhook-init@sha256:9eb8416a7f708fcf46735c319a3a3644ac844b1ff22e898c821935eccef39444",
          "name": "webhook-init"
        },
        {
          "digest": "sha256:e47f100b857c9aaba14fc3eed50d61550a421a775b32ccb9a76d82e6c32d991e",
          "image": "registry.connect.redhat.com/trilio/metamover@sha256:e47f100b857c9aaba14fc3eed50d61550a421a775b32ccb9a76d82e6c32d991e",
          "name": "metamover"
        },
        {
          "digest": "sha256:d9397b598a8ea5a2901e32773bbdb2cb52f8fc106ed7d5dacb3239d7aeeae05d",
          "image": "registry.connect.redhat.com/trilio/datamover@sha256:d9397b598a8ea5a2901e32773bbdb2cb52f8fc106ed7d5dacb3239d7aeeae05d",
          "name": "datamover"
        },
        {
          "digest": "sha256:f5e113dd3097e69807f7fda898b527de31292eb4df08ec14b4c8df7a870ad414",
          "image": "registry.connect.redhat.com/trilio/datastore-attacher@sha256:f5e113dd3097e69807f7fda898b527de31292eb4df08ec14b4c8df7a870ad414",
          "name": "datastore_attacher"
        },
        {
          "digest": "sha256:702c9b18a998a59179d154efd4e36cf1e32fcc284fc7adc24c6f1b0fa069b449",
          "image": "registry.connect.redhat.com/trilio/backup-scheduler@sha256:702c9b18a998a59179d154efd4e36cf1e32fcc284fc7adc24c6f1b0fa069b449",
          "name": "backup_scheduler"
        },
        {
          "digest": "sha256:a4b077e0cae39b81b425157f57001605ff00a8ccdc029a56742dc1e2053d2058",
          "image": "registry.connect.redhat.com/trilio/backup-cleaner@sha256:a4b077e0cae39b81b425157f57001605ff00a8ccdc029a56742dc1e2053d2058",
          "name": "backup_cleaner"
        },
        {
          "digest": "sha256:31465a20a9237c661253009cbd9d22cec291fb7f73332039fcd0f6a7b065e75f",
          "image": "registry.connect.redhat.com/trilio/backup-retention@sha256:31465a20a9237c661253009cbd9d22cec291fb7f73332039fcd0f6a7b065e75f",
          "name": "backup_retention"
        },
        {
          "digest": "sha256:4d6d0568c70fe1a39f90391a23b19780b5586b053a3566d4223a238408d6888b",
          "image": "registry.connect.redhat.com/trilio/target-browser@sha256:4d6d0568c70fe1a39f90391a23b19780b5586b053a3566d4223a238408d6888b",
          "name": "target_browser"
        },
        {
          "digest": "sha256:b9c572e7e651f37b663222f5e8b376669b65bd18c41b17c32b6ef249ca031dbf",
          "image": "registry.connect.redhat.com/trilio/hook-executor@sha256:b9c572e7e651f37b663222f5e8b376669b65bd18c41b17c32b6ef249ca031dbf",
          "name": "hook"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "2.0.0",
      "version_original": "2.0.0"
    },
    {
      "_id": "6034c16f08f2098193f9119d",
      "alm_examples": [
        {
          "api_version": "navigator.nastel.com/v1alpha6",
          "kind": "NastelNavigator",
          "metadata": {
            "name": "nastelnavigator"
          },
          "spec": {
            "cep-wgs": {
              "replicaCount": 1,
              "resources": {},
              "service": {
                "licenseName": "AutoPilotWMQ_MQM.lic"
              },
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "domain": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            },
            "global": {
              "dbPort": 3306,
              "subDomain": "nastel-2-915b3b336cabec458a7c7ec2aa7c625f-0000.us-south.containers.appdomain.cloud",
              "type": "ClusterIP"
            },
            "navigator": {
              "replicaCount": 1,
              "resources": {}
            },
            "nsqcm": {
              "replicaCount": 1,
              "resources": {}
            },
            "wgs-mysql": {
              "replicaCount": 1,
              "resources": {},
              "storage": {
                "accessMode": "ReadWriteOnce",
                "capacity": "2Gi",
                "class": "ibmc-block-gold"
              }
            }
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/nastel/navigator-operator-bundle@sha256:17379d5697c673b059a79f9accf2ef897da7330a973448ff1e4c58ea00518dfa",
      "bundle_path_digest": "sha256:17379d5697c673b059a79f9accf2ef897da7330a973448ff1e4c58ea00518dfa",
      "capabilities": [
        "Seamless Upgrades"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-23T08:48:47.727000+00:00",
      "csv_description": "The operator deploys Nastel Navigator component containers:\n  * Nastel Domain Server\n  * Nastel Workgroup Server\n  * MySQL database (MariaDB) instance\n  * Connection Manager\n  * Navigator WebApp\n\nin one go.\n\n[Nastel Navigator](https://www.nastel.com/nastel-navigator/) allows you to manage, audit and administrate instances of IBM MQ, EMS and\nKafka middleware.\n",
      "csv_display_name": "Nastel Navigator Operator",
      "csv_metadata_description": "Operator to deploy and run Nastel Navigator",
      "csv_name": "nastel-navigator-operator.v1.100105.1",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:13:49.276000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "nastel-navigator-operator-certified",
      "provided_apis": [
        {
          "group": "navigator.nastel.com",
          "kind": "NastelNavigator",
          "plural": "nastelnavigators",
          "version": "v1alpha6"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "name": "navigator-operator-f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1-annotation"
        },
        {
          "digest": "sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "image": "registry.connect.redhat.com/nastel/navigator-operator@sha256:f0fb1ca066e36b5840f4384c0bfdfe9afccd3628783cad33913f749fa7a8c1b1",
          "name": "nastel-navigator-operator"
        },
        {
          "digest": "sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "image": "registry.connect.redhat.com/nastel/nastel-domain@sha256:1b261239a0e3ed7a179d77baaa5f5b0f495aa3a950265f49ce02117e23691377",
          "name": "domain"
        },
        {
          "digest": "sha256:96ec72e3bea96f8b392db44161a22115f9740dddbc294573a96fef46044eb5de",
          "image": "registry.connect.redhat.com/nastel/navigator-cm@sha256:96ec72e3bea96f8b392db44161a22115f9740dddbc294573a96fef46044eb5de",
          "name": "cm"
        },
        {
          "digest": "sha256:13ce4945a40b4cff7f1f32dfdac99edb4afe1ec5c14164d9bc073586fdc74b4f",
          "image": "registry.connect.redhat.com/nastel/navigator-wgs@sha256:13ce4945a40b4cff7f1f32dfdac99edb4afe1ec5c14164d9bc073586fdc74b4f",
          "name": "wgs"
        },
        {
          "digest": "sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "image": "registry.connect.redhat.com/nastel/navigator-ui@sha256:454dde4c410c26110e2b82138ef4834f8f3dd137b41c269cca0426827f0c7a1a",
          "name": "navigator"
        },
        {
          "digest": "sha256:08c0c76b4fad8e2defb0eacb15d53c19a3bcef2d72e862aeb4f0a7f166fd5727",
          "image": "registry.redhat.io/rhel8/mariadb-103@sha256:08c0c76b4fad8e2defb0eacb15d53c19a3bcef2d72e862aeb4f0a7f166fd5727",
          "name": "mysql"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.100105.1",
      "version_original": "1.100105.1"
    },
    {
      "_id": "6034c171a791d50a09cc6baf",
      "alm_examples": [
        {
          "api_version": "apm.neuvector.com/v1alpha1",
          "kind": "Neuvector",
          "metadata": {
            "name": "example-neuvector"
          },
          "spec": {
            "admissionwebhook": {
              "type": "ClusterIP"
            },
            "containerd": {
              "enabled": false,
              "path": "/var/run/containerd/containerd.sock"
            },
            "controller": {
              "apisvc": {},
              "azureFileShare": {
                "enabled": false
              },
              "configmap": {
                "enabled": false
              },
              "enabled": true,
              "federation": {
                "managedsvc": {},
                "mastersvc": {}
              },
              "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
              "ingress": {
                "annotations": {
                  "ingress.kubernetes.io/protocol": "https"
                },
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "pvc": {
                "accessModes": [
                  "ReadWriteMany"
                ],
                "enabled": false
              },
              "replicas": 3,
              "strategy": {
                "rollingUpdate": {
                  "maxSurge": 1,
                  "maxUnavailable": 0
                },
                "type": "RollingUpdate"
              }
            },
            "crdwebhook": {
              "type": "ClusterIP"
            },
            "crio": {
              "enabled": true,
              "path": "/var/run/crio/crio.sock"
            },
            "cve": {
              "scanner": {
                "dockerPath": "",
                "enabled": true,
                "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
                "replicas": 3,
                "strategy": {
                  "rollingUpdate": {
                    "maxSurge": 1,
                    "maxUnavailable": 0
                  },
                  "type": "RollingUpdate"
                }
              },
              "updater": {
                "enabled": true,
                "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
                "schedule": "0 0 * * *"
              }
            },
            "docker": {
              "enabled": false,
              "path": "/var/run/docker.sock"
            },
            "enforcer": {
              "enabled": true,
              "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
              "tolerations": [
                {
                  "effect": "NoSchedule",
                  "key": "node-role.kubernetes.io/master"
                }
              ]
            },
            "exporter": {
              "CTRL_PASSWORD": "admin",
              "CTRL_USERNAME": "admin",
              "enabled": false,
              "scrapping": true
            },
            "imagePullSecrets": "regsecret",
            "manager": {
              "enabled": true,
              "env": {
                "ssl": true
              },
              "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
              "ingress": {
                "annotations": {},
                "enabled": false,
                "path": "/",
                "tls": false
              },
              "svc": {
                "type": "NodePort"
              }
            },
            "openshift": true,
            "resources": {}
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/neuvector/neuvector-operator-bundle@sha256:c9a87ec0ec782af1bbd37851f1b15e639a36ff8e4b5a295b9886d7516fc7eba4",
      "bundle_path_digest": "sha256:c9a87ec0ec782af1bbd37851f1b15e639a36ff8e4b5a295b9886d7516fc7eba4",
      "capabilities": [
        "Basic Install"
      ],
      "channel_name": "beta",
      "creation_date": "2021-02-23T08:48:49.526000+00:00",
      "csv_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.\n\nThe NeuVector Operator runs  in the openshift container platform to deploy and manage the NeuVector Security cluster components. The NeuVector operator contains all necessary information to deploy NeuVector using helm charts. You simply need to install the NeuVector operator from the OpenShift embeded operator hub and create NeuVector instance. You can modify the NeuVector installation configuration by modifying yaml while creating the NeuVector instance such as imagePullSecrets, tag version, etc. Please refer to [NeuVector Helm Chart](https://github.com/neuvector/neuvector-helm) for the values that can be modifed during installation. To upgrade to a newer version of NeuVector, just reapply the NeuVector instance with desired tag , which in turn pulls the specified NeuVector image tags and upgrades as per upgrade plan configured on the helm chart. \n\n**Complete below steps to create secret for accessing Docker or similar registry and Grant Service Account Access to the Privileged SCC before installation.**\n\nCreate the NeuVector namespace\n\n         oc new-project  neuvector\nConfigure OpenShift to pull images from the private NeuVector registry on Docker Hub\n\n         oc create secret docker-registry regsecret -n neuvector --docker-server=https://index.docker.io/v1/ --docker-username=your-name --docker-password=your-pword --docker-email=your-email\n\t\t\t\t \n\nWhere \u2019your-name\u2019 is your Docker username, \u2019your-pword\u2019 is your Docker password, \u2019your-email\u2019 is your Docker email.\n\nLogin as system:admin account\n\n         oc login -u system:admin\n\nGrant Service Account Access to the Privileged SCC\n\n         oc -n neuvector adm policy add-scc-to-user privileged -z default\n\nThe following info will be added in the Privileged SCC users:\n\n         - system:serviceaccount:neuvector:default\n\n\n#Deploying the NeuVector Operator#\n\n\nPlease refer to the instructions [here](https://github.com/neuvector/neuvector-operator/blob/master/README.md)\n\n\n",
      "csv_display_name": "Neuvector Operator",
      "csv_metadata_description": "NeuVector delivers the only cloud-native Kubernetes security platform with uncompromising end-to-end protection from DevOps vulnerability protection to automated run-time security, and featuring a true Layer 7 container firewall.",
      "csv_name": "neuvector-operator.v1.2.2",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": true,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T01:58:27.370000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "neuvector-certified-operator",
      "provided_apis": [
        {
          "group": "apm.neuvector.com",
          "kind": "Neuvector",
          "plural": "neuvectors",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "name": "neuvector-operator-98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e-annotation"
        },
        {
          "digest": "sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "image": "registry.connect.redhat.com/neuvector/neuvector-operator@sha256:98cc0907736d3952984d72afb4e1039ac509218f8ab082f122129e5954904d6e",
          "name": "neuvector-operator"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner"
        },
        {
          "digest": "sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "name": "updater"
        },
        {
          "digest": "sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "image": "registry.connect.redhat.com/neuvector/manager@sha256:33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc",
          "name": "manager-33588d66bd7a778bc65af23864256fb683625a1a08f6c814762f7fffbca7c1bc-annotation"
        },
        {
          "digest": "sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "image": "registry.connect.redhat.com/neuvector/enforcer@sha256:7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0",
          "name": "enforcer-7d4788e2853ba23296bd06bdab92ba90c4d06f3a8a6de6e17d5becdec4c5f0a0-annotation"
        },
        {
          "digest": "sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "image": "registry.connect.redhat.com/neuvector/scanner@sha256:ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7",
          "name": "scanner-ef5b441635be35e03a31c392363d6c7fb5a82aa8450e0f197d8b7769599877f7-annotation"
        },
        {
          "digest": "sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "image": "registry.access.redhat.com/ubi8@sha256:82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e",
          "name": "ubi8-82e0fbbf1f3e223550aefbc28f44dc6b04967fe25788520eac910ac8281cec9e-annotation"
        },
        {
          "digest": "sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "image": "registry.connect.redhat.com/neuvector/controller@sha256:c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30",
          "name": "controller-c8d36c69c8e740d6cc9c1adc630d10b9b67639d45d5c103fdf8961151407af30-annotation"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "1.2.2",
      "version_original": "1.2.2"
    },
    {
      "_id": "6034c17b08f2098193f9119f",
      "alm_examples": [
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgent",
          "metadata": {
            "name": "oneagent",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api",
            "args": [
              "--set-app-log-content-access=true"
            ],
            "tolerations": [
              {
                "effect": "NoSchedule",
                "key": "node-role.kubernetes.io/master",
                "operator": "Exists"
              }
            ]
          }
        },
        {
          "api_version": "dynatrace.com/v1alpha1",
          "kind": "OneAgentAPM",
          "metadata": {
            "name": "oneagentapm",
            "namespace": "dynatrace"
          },
          "spec": {
            "apiUrl": "https://ENVIRONMENTID.live.dynatrace.com/api"
          }
        }
      ],
      "annotations": {
        "infrastructure_features": [],
        "valid_subscription": []
      },
      "architectures": [],
      "bundle_path": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator-bundle@sha256:fc750e6590bf2336144268bb09688a94e0baca2d5ebfb45b9f734b5cb5f68606",
      "bundle_path_digest": "sha256:fc750e6590bf2336144268bb09688a94e0baca2d5ebfb45b9f734b5cb5f68606",
      "capabilities": [
        "Deep Insights"
      ],
      "channel_name": "alpha",
      "creation_date": "2021-02-23T08:48:59.499000+00:00",
      "csv_description": "The Dynatrace OneAgent Operator allows users to easily deploy full-stack monitoring for [OpenShift clusters](https://www.dynatrace.com/technologies/openshift-monitoring/). The Dynatrace OneAgent automatically monitors the workload running in containers down to the code and request level.\n\n### Installing the OneAgent\nOnce you've installed the Operator, you can create OneAgent custom resources to monitor your environment.\n\nFirst, please add a Secret within the Project you've deployed the Dynatrace Operator to, which would contain your API and PaaS tokens. Create tokens of type *Dynatrace API* (`API_TOKEN`) and *Platform as a Service* (`PAAS_TOKEN`) and use their values in the following commands respectively.\n\nFor assistance please refer to [Create user-generated access tokens](https://www.dynatrace.com/support/help/shortlink/token#create-user-generated-access-tokens).\n\n``` $ oc -n <project> create secret generic oneagent --from-literal=\"apiToken=API_TOKEN\" --from-literal=\"paasToken=PAAS_TOKEN\" ```\n\nYou may update this Secret at any time to rotate the tokens.\n\nThen please add an OneAgent object in the Project where the Operator has been deployed, configured to your needs.\n\n### Required Parameters\n* `apiUrl` - provide the URL to the API of your Dynatrace environment. In Dynatrace SaaS it will look like `https://<ENVIRONMENTID>.live.dynatrace.com/api` . In Dynatrace Managed like `https://<YourDynatraceServerURL>/e/<ENVIRONMENTID>/api` .\n\n### Advanced Options\n* **Image Override** - use a copy of the OneAgent container image from a registry other than Docker's or Red Hat's\n* **NodeSelectors** - select a subset of your cluster's nodes to run the Dynatrace OneAgent on, based on labels\n* **Tolerations** - add specific tolerations to the agent so that it can monitor all of the nodes in your cluster; we include the default toleration so that Dynatrace OneAgent also monitors the master nodes\n* **Priority Class Name** - define the priorityClassName for OneAgent pods\n* **Environment variables** - define environment variables for the OneAgent container\n* **Disable Certificate Checking** - disable any certificate validation that may interact poorly with proxies with in your cluster\n* **Disable OneAgent Update** - disable the Operator's auto-update feature for OneAgent pods\n* **Enable Istio Auto-config** - automatically create Istio objects for egress communication to the Dynatrace environment from the OneAgent\n\nFor a complete list of supported parameters please consult the [Operator Deploy Guide](https://www.dynatrace.com/support/help/shortlink/openshift-deploy).\n\n### Help\nYou can find more about our instructions in our [documentation](https://www.dynatrace.com/support/help/shortlink/openshift-deploy#install-oneagent-operator).\n",
      "csv_display_name": "Dynatrace OneAgent",
      "csv_metadata_description": "Install full-stack monitoring of OpenShift clusters with the Dynatrace OneAgent.",
      "csv_name": "dynatrace-monitoring.v0.9.5",
      "in_index_img": true,
      "install_modes": [
        {
          "supported": true,
          "type": "OwnNamespace"
        },
        {
          "supported": true,
          "type": "SingleNamespace"
        },
        {
          "supported": false,
          "type": "MultiNamespace"
        },
        {
          "supported": false,
          "type": "AllNamespaces"
        }
      ],
      "is_default_channel": true,
      "last_update_date": "2022-06-17T02:08:00.911000+00:00",
      "latest_in_channel": false,
      "ocp_version": "4.7",
      "organization": "certified-operators",
      "package": "oneagent-certified",
      "provided_apis": [
        {
          "group": "dynatrace.com",
          "kind": "OneAgent",
          "plural": "oneagents",
          "version": "v1alpha1"
        },
        {
          "group": "dynatrace.com",
          "kind": "OneAgentAPM",
          "plural": "oneagentapms",
          "version": "v1alpha1"
        }
      ],
      "provider": null,
      "related_images": [
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "dynatrace-oneagent-operator-4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed-annotation"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "dynatrace-oneagent-operator"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "webhook"
        },
        {
          "digest": "sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "image": "registry.connect.redhat.com/dynatrace/dynatrace-oneagent-operator@sha256:4f626c6f83d93c7c6b6279fa48003ea5cf4ef972cc7831f1d2367f20f0c4afed",
          "name": "bootstrapper"
        },
        {
          "digest": "sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "image": "registry.connect.redhat.com/dynatrace/oneagent@sha256:7610615cb9b0855aa8dde0bff9a1ec2464e586f5bff13f607c5fd643abd890e0",
          "name": "dynatrace_oneagent"
        }
      ],
      "replaces": "",
      "skip_range": "",
      "skips": [],
      "source_index_container_path": "registry.redhat.io/redhat/certified-operator-index:v4.7",
      "version": "0.9.5",
      "version_original": "0.9.5"
    }
  ],
  "page": 40,
  "page_size": 10,
  "total": 4010
}
